|f33| = list_max([
  480;
  list_sum([
    499;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    495;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    481;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    477;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    485;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    481;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    492;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    488;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    474;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    470;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    450;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    483;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    479;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    465;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    461;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    469;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    465;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    476;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    472;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    458;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    454;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    434;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    326;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    495;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    491;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    477;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    473;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    481;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    477;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    488;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    484;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    470;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    466;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    446;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    479;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    475;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    461;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    457;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    465;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    461;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    472;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    468;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    454;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    450;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    430;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    322;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    438;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    434;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    420;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    416;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    424;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    420;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    431;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    427;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    413;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    409;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    389;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    422;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    418;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    404;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    400;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    408;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    404;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    415;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    411;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    397;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    393;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    373;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    265;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    419;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    415;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    401;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    397;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    405;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    401;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    412;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    408;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    394;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    390;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    370;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    247;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    246;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    168;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    472;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    468;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    454;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    450;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    458;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    454;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    465;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    461;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    447;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    443;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    423;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    456;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    452;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    438;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    434;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    442;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    438;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    449;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    445;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    431;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    427;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    407;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    299;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    468;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    464;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    450;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    446;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    454;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    450;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    461;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    457;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    443;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    439;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    419;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    452;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    448;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    434;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    430;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    438;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    434;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    445;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    441;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    427;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    423;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    403;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    295;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    411;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    407;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    393;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    389;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    397;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    393;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    404;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    400;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    386;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    382;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    362;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    395;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    391;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    377;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    373;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    381;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    377;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    388;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    384;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    370;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    366;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    346;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    238;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    392;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    388;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    374;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    370;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    378;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    374;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    385;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    381;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    367;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    363;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    343;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    220;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    219;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    495;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    491;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    477;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    473;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    481;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    477;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    488;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    484;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    470;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    466;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    446;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    479;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    475;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    461;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    457;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    465;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    461;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    472;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    468;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    454;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    450;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    430;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    322;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    491;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    487;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    473;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    469;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    477;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    473;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    484;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1
  ]);
  list_sum([
    466;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1
  ]);
  list_sum([
    475;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    471;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    457;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    453;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    461;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    457;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    468;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1
  ]);
  list_sum([
    450;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1
  ]);
  list_sum([
    434;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    430;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    416;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    412;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    420;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    416;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    427;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1
  ]);
  list_sum([
    409;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1
  ]);
  list_sum([
    418;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    414;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    400;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    396;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    404;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    400;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    411;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1
  ]);
  list_sum([
    393;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1
  ]);
  list_sum([
    415;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    411;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    397;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    393;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    401;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    397;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    408;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1
  ]);
  list_sum([
    390;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1
  ]);
  list_sum([
    468;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    464;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    450;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    446;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    454;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    450;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    461;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    457;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    443;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    439;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    419;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    452;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    448;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    434;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    430;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    438;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    434;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    445;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    441;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    427;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    423;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    403;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    295;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    464;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    460;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    446;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    442;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    450;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    446;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    457;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1
  ]);
  list_sum([
    439;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1
  ]);
  list_sum([
    448;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    444;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    430;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    426;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    434;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    430;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    441;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1
  ]);
  list_sum([
    423;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1
  ]);
  list_sum([
    407;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    403;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    389;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    385;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    393;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    389;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    400;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1
  ]);
  list_sum([
    382;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1
  ]);
  list_sum([
    391;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    387;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    373;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    369;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    377;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    373;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    384;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1
  ]);
  list_sum([
    366;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1
  ]);
  list_sum([
    388;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    384;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    370;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    366;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    374;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    370;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    381;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1
  ]);
  list_sum([
    363;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1
  ]);
  list_sum([
    438;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    434;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    420;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    416;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    424;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    420;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    431;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    427;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    413;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    409;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    389;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    422;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    418;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    404;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    400;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    408;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    404;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    415;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    411;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    397;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    393;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    373;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    265;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    434;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    430;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    416;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    412;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    420;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    416;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    427;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1
  ]);
  list_sum([
    409;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1
  ]);
  list_sum([
    418;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    414;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    400;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    396;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    404;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    400;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    411;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1
  ]);
  list_sum([
    393;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1
  ]);
  list_sum([
    377;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    373;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    359;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    355;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    363;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    359;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    370;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1
  ]);
  list_sum([
    352;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1
  ]);
  list_sum([
    361;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    357;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    343;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    339;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    347;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    343;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    354;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1
  ]);
  list_sum([
    336;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1
  ]);
  list_sum([
    358;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    354;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    340;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    336;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    344;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    340;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    351;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1
  ]);
  list_sum([
    333;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1
  ]);
  list_sum([
    411;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    407;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    393;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    389;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    397;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    393;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    404;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    400;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    386;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    382;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    362;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    395;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    391;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    377;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    373;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    381;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    377;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    388;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    384;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    370;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    366;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    346;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    238;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    407;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    403;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    389;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    385;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    393;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    389;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    400;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1
  ]);
  list_sum([
    382;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1
  ]);
  list_sum([
    391;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    387;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    373;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    369;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    377;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    373;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    384;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1
  ]);
  list_sum([
    366;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1
  ]);
  list_sum([
    350;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    346;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    332;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    328;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    336;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    332;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    343;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1
  ]);
  list_sum([
    325;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1
  ]);
  list_sum([
    334;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    330;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    316;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    312;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    320;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    316;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    327;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1
  ]);
  list_sum([
    309;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1
  ]);
  list_sum([
    331;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    327;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    313;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    309;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    317;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    313;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    324;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1
  ]);
  list_sum([
    306;
    (8 * (N([m[0]], [m[0]], [(m[0] & -8) + -1], [m[0]]))) + 1
  ])
])
