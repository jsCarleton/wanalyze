ebb costs:
[0]: 41
[6]: (list_max(((149 + |f28|) * N([ln8; m[272]], [((ln8 + 1) < m[272])], [0; m[272]], [(ln8 + 1); m[272]])), ((169 + |f28|) * N([ln8; m[272]], [((ln8 + 1) < m[272])], [0; m[272]], [(ln8 + 1); m[272]])), ((154 + |f28|) * N([ln8; m[272]], [((ln8 + 1) < m[272])], [0; m[272]], [(ln8 + 1); m[272]])), ((174 + |f28|) * N([ln8; m[272]], [((ln8 + 1) < m[272])], [0; m[272]], [(ln8 + 1); m[272]])), ((161 + |f28|) * N([ln8; m[272]], [((ln8 + 1) < m[272])], [0; m[272]], [(ln8 + 1); m[272]])), ((181 + |f28|) * N([ln8; m[272]], [((ln8 + 1) < m[272])], [0; m[272]], [(ln8 + 1); m[272]])), ((169 + |f28|) * N([ln8; m[272]], [((ln8 + 1) < m[272])], [0; m[272]], [(ln8 + 1); m[272]])), ((189 + |f28|) * N([ln8; m[272]], [((ln8 + 1) < m[272])], [0; m[272]], [(ln8 + 1); m[272]])), ((174 + |f28|) * N([ln8; m[272]], [((ln8 + 1) < m[272])], [0; m[272]], [(ln8 + 1); m[272]])), ((194 + |f28|) * N([ln8; m[272]], [((ln8 + 1) < m[272])], [0; m[272]], [(ln8 + 1); m[272]])), ((181 + |f28|) * N([ln8; m[272]], [((ln8 + 1) < m[272])], [0; m[272]], [(ln8 + 1); m[272]])), ((201 + |f28|) * N([ln8; m[272]], [((ln8 + 1) < m[272])], [0; m[272]], [(ln8 + 1); m[272]])), ((135 + |f28|) * N([ln8; m[272]], [((ln8 + 1) < m[272])], [0; m[272]], [(ln8 + 1); m[272]])), ((155 + |f28|) * N([ln8; m[272]], [((ln8 + 1) < m[272])], [0; m[272]], [(ln8 + 1); m[272]])), ((140 + |f28|) * N([ln8; m[272]], [((ln8 + 1) < m[272])], [0; m[272]], [(ln8 + 1); m[272]])), ((160 + |f28|) * N([ln8; m[272]], [((ln8 + 1) < m[272])], [0; m[272]], [(ln8 + 1); m[272]])), ((147 + |f28|) * N([ln8; m[272]], [((ln8 + 1) < m[272])], [0; m[272]], [(ln8 + 1); m[272]])), ((167 + |f28|) * N([ln8; m[272]], [((ln8 + 1) < m[272])], [0; m[272]], [(ln8 + 1); m[272]])), ((65 + |f28|) * N([ln8; m[272]], [((ln8 + 1) < m[272])], [0; m[272]], [(ln8 + 1); m[272]]))) + list_max(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1))
[6]: 114
[16]: (((17 + |f28|) * N([ln6], [(ln6 shr_s 1)], [((((((((m[276] shl 2) + m[364]) - m[36]) + ((((m[276] shl 2) + m[364]) - m[36]) shr_s 31)) xor ((((m[276] shl 2) + m[364]) - m[36]) shr_s 31)) + -1) shr_u 1) shr_s 1)], [(ln6 shr_s 1)])) + 1)
[18]: 1
[19]: 45
[27]: (((13 + |f28|) * N([ln2], [(ln2 shr_s 1)], [((1 shr_s 1) shr_s 1)], [(ln2 shr_s 1)])) + 1)
[29]: 1
[30]: 9
[32]: 1
[33]: 2
6 ebb paths found
[0 33]
[0 6 30 32 33]
[0 6 19 30 32 33]
[0 6 19 27 29 30 32 33]
[0 6 16 18 19 30 32 33]
[0 6 16 18 19 27 29 30 32 33]
|f346| = list_max([
  list_sum(41, 2);
  list_sum(41, 114, 9, 1, 2);
  list_sum(41, 114, 45, 9, 1, 2);
  list_sum([
    41;
    114;
    45;
    ((13 + |f28|) * (N([ln2], [ln2 shr_s 1], [(1 shr_s 1) shr_s 1], [ln2 shr_s 1]))) + 1;
    1;
    9;
    1;
    2
  ]);
  list_sum([
    41;
    114;
    ((17 + |f28|) * (N([ln6], [ln6 shr_s 1], [(((((((m[276] shl 2) + m[364]) - m[36]) + ((((m[276] shl 2) + m[364]) - m[36]) shr_s 31)) xor ((((m[276] shl 2) + m[364]) - m[36]) shr_s 31)) + -1) shr_u 1) shr_s 1], [ln6 shr_s 1]))) + 1;
    1;
    45;
    9;
    1;
    2
  ]);
  list_sum([
    41;
    114;
    ((17 + |f28|) * (N([ln6], [ln6 shr_s 1], [(((((((m[276] shl 2) + m[364]) - m[36]) + ((((m[276] shl 2) + m[364]) - m[36]) shr_s 31)) xor ((((m[276] shl 2) + m[364]) - m[36]) shr_s 31)) + -1) shr_u 1) shr_s 1], [ln6 shr_s 1]))) + 1;
    1;
    45;
    ((13 + |f28|) * (N([ln2], [ln2 shr_s 1], [(1 shr_s 1) shr_s 1], [ln2 shr_s 1]))) + 1;
    1;
    9;
    1;
    2
  ])
])
