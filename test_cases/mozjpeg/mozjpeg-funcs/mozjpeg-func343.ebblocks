ebb entry:  0
  ebb type:   block
  ebb blocks: [0 1 2 3 4 5 6 7 8]
  ebb cost:   58
  ebb exits:  [9 35]
  ebb succs:  [9 35]
ebb entry:  9
  ebb type:   loop
  ebb blocks: [9 10 11 12 13 14 15 16 17]
  ebb cost:   (list_max([
  32 * (N([ln4], [ln4 > 1], [m[320]], [ln4 + -1]));
  34 * (N([ln4], [ln4 > 1], [m[320]], [ln4 + -1]))
])) + 1
  ebb exits:  [18 20]
  ebb succs:  [18 20]
  2 paths to exit 18
  [9 10 14 15 16 17]
  [9 10 11 16 17]
  2 paths to exit 20
  [9 10 14]
  [9 10 11 12]
  2 loop paths
  [9 10 14 15 16]  [9 10 11 16]
  3 post loop exit paths
  [17]  [17]  [12]
ebb entry:  18
  ebb type:   block
  ebb blocks: [18 19]
  ebb cost:   3
  ebb exits:  [20 34]
  ebb succs:  [20 34]
ebb entry:  20
  ebb type:   block
  ebb blocks: [20 21 22 23]
  ebb cost:   7
  ebb exits:  [24 35]
  ebb succs:  [24 35]
ebb entry:  24
  ebb type:   loop
  ebb blocks: [24 25 26 27 28 29 30 31 32]
  ebb cost:   (list_max([
  32 * (N([ln6], [ln6 > 1], [m[320]], [ln6 + -1]));
  34 * (N([ln6], [ln6 > 1], [m[320]], [ln6 + -1]))
])) + 1
  ebb exits:  [33 35]
  ebb succs:  [33 35]
  2 paths to exit 33
  [24 25 29 30 31 32]
  [24 25 26 31 32]
  2 paths to exit 35
  [24 25 29]
  [24 25 26 27]
  2 loop paths
  [24 25 29 30 31]  [24 25 26 31]
  3 post loop exit paths
  [32]  [32]  [27]
ebb entry:  33
  ebb type:   block
  ebb blocks: [33]
  ebb cost:   1
  ebb exits:  [34]
  ebb succs:  [34]
ebb entry:  34
  ebb type:   block
  ebb blocks: [34]
  ebb cost:   3
  ebb exits:  [35]
  ebb succs:  [35]
ebb entry:  35
  ebb type:   block
  ebb blocks: [35 36]
  ebb cost:   17
  ebb exits:  [37 61]
  ebb succs:  [37 61]
ebb entry:  37
  ebb type:   loop
  ebb blocks: [37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59]
  ebb cost:   (list_max([
  (67 + |f28|) * (N([ln3; ln4], [ln3 < ln4], [m[316]; m[320]], [ln3 + 1; ln4]));
  (70 + |f28|) * (N([ln3; ln4], [ln3 < ln4], [m[316]; m[320]], [ln3 + 1; ln4]));
  (69 + |f28|) * (N([ln3; ln4], [ln3 < ln4], [m[316]; m[320]], [ln3 + 1; ln4]));
  (71 + |f28|) * (N([ln3; ln4], [ln3 < ln4], [m[316]; m[320]], [ln3 + 1; ln4]));
  (62 + |f28|) * (N([ln3; ln4], [ln3 < ln4], [m[316]; m[320]], [ln3 + 1; ln4]));
  (65 + |f28|) * (N([ln3; ln4], [ln3 < ln4], [m[316]; m[320]], [ln3 + 1; ln4]));
  (64 + |f28|) * (N([ln3; ln4], [ln3 < ln4], [m[316]; m[320]], [ln3 + 1; ln4]));
  (66 + |f28|) * (N([ln3; ln4], [ln3 < ln4], [m[316]; m[320]], [ln3 + 1; ln4]))
])) + 1
  ebb exits:  [60]
  ebb succs:  []
  8 paths to exit 60
  [37 39 40 41 42 43 48 49 52 58 59]
  [37 39 40 41 42 43 48 49 50 58 59]
  [37 39 40 41 42 43 44 45 56 57 58 59]
  [37 39 40 41 42 43 44 45 46 58 59]
  [37 38 39 40 41 42 43 48 49 52 58 59]
  [37 38 39 40 41 42 43 48 49 50 58 59]
  [37 38 39 40 41 42 43 44 45 56 57 58 59]
  [37 38 39 40 41 42 43 44 45 46 58 59]
  8 loop paths
  [37 39 40 41 42 43 48 49 52 58]  [37 39 40 41 42 43 48 49 50 58]  [37 39 40 41 42 43 44 45 56 57 58]  [37 39 40 41 42 43 44 45 46 58]  [37 38 39 40 41 42 43 48 49 52 58]  [37 38 39 40 41 42 43 48 49 50 58]  [37 38 39 40 41 42 43 44 45 56 57 58]  [37 38 39 40 41 42 43 44 45 46 58]
  8 post loop exit paths
  [59]  [59]  [59]  [59]  [59]  [59]  [59]  [59]
nested ebbs:
  ebb entry:  37
    ebb type:   block
    ebb blocks: [37 38 39 40]
    ebb cost:   22
    ebb exits:  [41]
    ebb succs:  [41]
  ebb entry:  41
    ebb type:   loop
    ebb blocks: [41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56]
    ebb cost:   (list_max([
  (39 + |f28|) * (N([m[0]; m[328]], [not(i32.eqz(m[0] shr_s m[328]))], [m[0]; m[328]], [m[0]; m[328]]));
  (41 + |f28|) * (N([m[0]; m[328]], [not(i32.eqz((0 - m[0]) shr_s m[328]))], [m[0]; m[328]], [m[0]; m[328]]))
])) + (list_max([
  5;
  13 + |f28|;
  13 + |f28|;
  15 + |f28|
]))
    ebb exits:  [57 58]
    ebb succs:  [57 58]
    1 paths to exit 57
    [41 42 43 44 45 56]
    3 paths to exit 58
    [41 42 43 48 49 52]
    [41 42 43 48 49 50]
    [41 42 43 44 45 46]
    2 loop paths
    [41 42 43 48 54]    [41 42 43 44 54]
    4 post loop exit paths
    [45 56]    [49 52]    [49 50]    [45 46]
  ebb entry:  57
    ebb type:   block
    ebb blocks: [57]
    ebb cost:   11
    ebb exits:  [58]
    ebb succs:  [58]
  ebb entry:  58
    ebb type:   block
    ebb blocks: [58 59]
    ebb cost:   9
    ebb exits:  [37 60]
    ebb succs:  [37 60]
ebb entry:  60
  ebb type:   block
  ebb blocks: [60]
  ebb cost:   4
  ebb exits:  [61]
  ebb succs:  [61]
ebb entry:  61
  ebb type:   block
  ebb blocks: [61 62 63 64]
  ebb cost:   22
  ebb exits:  [64]
  ebb succs:  []
ebb costs:
[0]: 58
[9]: (list_max((32 * N([ln4], [(ln4 > 1)], [m[320]], [(ln4 + -1)])), (34 * N([ln4], [(ln4 > 1)], [m[320]], [(ln4 + -1)]))) + 1)
[18]: 3
[20]: 7
[24]: (list_max((32 * N([ln6], [(ln6 > 1)], [m[320]], [(ln6 + -1)])), (34 * N([ln6], [(ln6 > 1)], [m[320]], [(ln6 + -1)]))) + 1)
[33]: 1
[34]: 3
[35]: 17
[37]: (list_max(((67 + |f28|) * N([ln3; ln4], [(ln3 < ln4)], [m[316]; m[320]], [(ln3 + 1); ln4])), ((70 + |f28|) * N([ln3; ln4], [(ln3 < ln4)], [m[316]; m[320]], [(ln3 + 1); ln4])), ((69 + |f28|) * N([ln3; ln4], [(ln3 < ln4)], [m[316]; m[320]], [(ln3 + 1); ln4])), ((71 + |f28|) * N([ln3; ln4], [(ln3 < ln4)], [m[316]; m[320]], [(ln3 + 1); ln4])), ((62 + |f28|) * N([ln3; ln4], [(ln3 < ln4)], [m[316]; m[320]], [(ln3 + 1); ln4])), ((65 + |f28|) * N([ln3; ln4], [(ln3 < ln4)], [m[316]; m[320]], [(ln3 + 1); ln4])), ((64 + |f28|) * N([ln3; ln4], [(ln3 < ln4)], [m[316]; m[320]], [(ln3 + 1); ln4])), ((66 + |f28|) * N([ln3; ln4], [(ln3 < ln4)], [m[316]; m[320]], [(ln3 + 1); ln4]))) + 1)
[37]: 22
[41]: (list_max(((39 + |f28|) * N([m[0]; m[328]], [not(i32.eqz((m[0] shr_s m[328])))], [m[0]; m[328]], [m[0]; m[328]])), ((41 + |f28|) * N([m[0]; m[328]], [not(i32.eqz(((0 - m[0]) shr_s m[328])))], [m[0]; m[328]], [m[0]; m[328]]))) + list_max(5, (13 + |f28|), (13 + |f28|), (15 + |f28|)))
[57]: 11
[58]: 9
[60]: 4
[61]: 22
24 ebb paths found
[0 35 61]
[0 35 37 41 58 60 61]
[0 35 37 41 57 58 60 61]
[0 9 20 35 61]
[0 9 20 35 37 41 58 60 61]
[0 9 20 35 37 41 57 58 60 61]
[0 9 20 24 35 61]
[0 9 20 24 35 37 41 58 60 61]
[0 9 20 24 35 37 41 57 58 60 61]
[0 9 20 24 33 34 35 61]
[0 9 20 24 33 34 35 37 41 58 60 61]
[0 9 20 24 33 34 35 37 41 57 58 60 61]
[0 9 18 34 35 61]
[0 9 18 34 35 37 41 58 60 61]
[0 9 18 34 35 37 41 57 58 60 61]
[0 9 18 20 35 61]
[0 9 18 20 35 37 41 58 60 61]
[0 9 18 20 35 37 41 57 58 60 61]
[0 9 18 20 24 35 61]
[0 9 18 20 24 35 37 41 58 60 61]
[0 9 18 20 24 35 37 41 57 58 60 61]
[0 9 18 20 24 33 34 35 61]
[0 9 18 20 24 33 34 35 37 41 58 60 61]
[0 9 18 20 24 33 34 35 37 41 57 58 60 61]
