ebb costs:
[0]: 16
[5]: ((22 * N([pn0], [((pn0 + 1) & 3)], [pn0], [(pn0 + 1)])) + 1)
[9]: 1
[10]: 13
[14]: ((23 * N([pn1], [((pn1 + -4) > 3)], [pn1], [(pn1 + -4)])) + 1)
[17]: 1
[18]: 5
[21]: ((13 * N([pn1], [(pn1 + -1)], [pn1], [(pn1 + -1)])) + list_max(1, 2))
[26]: 1
[27]: 2
[29]: 0
30 ebb paths found
[0 10 27]
[0 10 18 27]
[0 10 18 21 29]
[0 10 18 21 26 27]
[0 10 14 18 27]
[0 10 14 18 21 29]
[0 10 14 18 21 26 27]
[0 10 14 17 18 27]
[0 10 14 17 18 21 29]
[0 10 14 17 18 21 26 27]
[0 5 10 27]
[0 5 10 18 27]
[0 5 10 18 21 29]
[0 5 10 18 21 26 27]
[0 5 10 14 18 27]
[0 5 10 14 18 21 29]
[0 5 10 14 18 21 26 27]
[0 5 10 14 17 18 27]
[0 5 10 14 17 18 21 29]
[0 5 10 14 17 18 21 26 27]
[0 5 9 10 27]
[0 5 9 10 18 27]
[0 5 9 10 18 21 29]
[0 5 9 10 18 21 26 27]
[0 5 9 10 14 18 27]
[0 5 9 10 14 18 21 29]
[0 5 9 10 14 18 21 26 27]
[0 5 9 10 14 17 18 27]
[0 5 9 10 14 17 18 21 29]
[0 5 9 10 14 17 18 21 26 27]
|f128| = list_max([
  list_sum(16, 13, 2);
  list_sum(16, 13, 5, 2);
  list_sum([
    16;
    13;
    5;
    (13 * (N([pn1], [pn1 + -1], [pn1], [pn1 + -1]))) + (list_max(1, 2));
    0
  ]);
  list_sum([
    16;
    13;
    5;
    (13 * (N([pn1], [pn1 + -1], [pn1], [pn1 + -1]))) + (list_max(1, 2));
    1;
    2
  ]);
  list_sum([
    16;
    13;
    (23 * (N([pn1], [(pn1 + -4) > 3], [pn1], [pn1 + -4]))) + 1;
    5;
    2
  ]);
  list_sum([
    16;
    13;
    (23 * (N([pn1], [(pn1 + -4) > 3], [pn1], [pn1 + -4]))) + 1;
    5;
    (13 * (N([pn1], [pn1 + -1], [pn1], [pn1 + -1]))) + (list_max(1, 2));
    0
  ]);
  list_sum([
    16;
    13;
    (23 * (N([pn1], [(pn1 + -4) > 3], [pn1], [pn1 + -4]))) + 1;
    5;
    (13 * (N([pn1], [pn1 + -1], [pn1], [pn1 + -1]))) + (list_max(1, 2));
    1;
    2
  ]);
  list_sum([
    16;
    13;
    (23 * (N([pn1], [(pn1 + -4) > 3], [pn1], [pn1 + -4]))) + 1;
    1;
    5;
    2
  ]);
  list_sum([
    16;
    13;
    (23 * (N([pn1], [(pn1 + -4) > 3], [pn1], [pn1 + -4]))) + 1;
    1;
    5;
    (13 * (N([pn1], [pn1 + -1], [pn1], [pn1 + -1]))) + (list_max(1, 2));
    0
  ]);
  list_sum([
    16;
    13;
    (23 * (N([pn1], [(pn1 + -4) > 3], [pn1], [pn1 + -4]))) + 1;
    1;
    5;
    (13 * (N([pn1], [pn1 + -1], [pn1], [pn1 + -1]))) + (list_max(1, 2));
    1;
    2
  ]);
  list_sum([
    16;
    (22 * (N([pn0], [(pn0 + 1) & 3], [pn0], [pn0 + 1]))) + 1;
    13;
    2
  ]);
  list_sum([
    16;
    (22 * (N([pn0], [(pn0 + 1) & 3], [pn0], [pn0 + 1]))) + 1;
    13;
    5;
    2
  ]);
  list_sum([
    16;
    (22 * (N([pn0], [(pn0 + 1) & 3], [pn0], [pn0 + 1]))) + 1;
    13;
    5;
    (13 * (N([pn1], [pn1 + -1], [pn1], [pn1 + -1]))) + (list_max(1, 2));
    0
  ]);
  list_sum([
    16;
    (22 * (N([pn0], [(pn0 + 1) & 3], [pn0], [pn0 + 1]))) + 1;
    13;
    5;
    (13 * (N([pn1], [pn1 + -1], [pn1], [pn1 + -1]))) + (list_max(1, 2));
    1;
    2
  ]);
  list_sum([
    16;
    (22 * (N([pn0], [(pn0 + 1) & 3], [pn0], [pn0 + 1]))) + 1;
    13;
    (23 * (N([pn1], [(pn1 + -4) > 3], [pn1], [pn1 + -4]))) + 1;
    5;
    2
  ]);
  list_sum([
    16;
    (22 * (N([pn0], [(pn0 + 1) & 3], [pn0], [pn0 + 1]))) + 1;
    13;
    (23 * (N([pn1], [(pn1 + -4) > 3], [pn1], [pn1 + -4]))) + 1;
    5;
    (13 * (N([pn1], [pn1 + -1], [pn1], [pn1 + -1]))) + (list_max(1, 2));
    0
  ]);
  list_sum([
    16;
    (22 * (N([pn0], [(pn0 + 1) & 3], [pn0], [pn0 + 1]))) + 1;
    13;
    (23 * (N([pn1], [(pn1 + -4) > 3], [pn1], [pn1 + -4]))) + 1;
    5;
    (13 * (N([pn1], [pn1 + -1], [pn1], [pn1 + -1]))) + (list_max(1, 2));
    1;
    2
  ]);
  list_sum([
    16;
    (22 * (N([pn0], [(pn0 + 1) & 3], [pn0], [pn0 + 1]))) + 1;
    13;
    (23 * (N([pn1], [(pn1 + -4) > 3], [pn1], [pn1 + -4]))) + 1;
    1;
    5;
    2
  ]);
  list_sum([
    16;
    (22 * (N([pn0], [(pn0 + 1) & 3], [pn0], [pn0 + 1]))) + 1;
    13;
    (23 * (N([pn1], [(pn1 + -4) > 3], [pn1], [pn1 + -4]))) + 1;
    1;
    5;
    (13 * (N([pn1], [pn1 + -1], [pn1], [pn1 + -1]))) + (list_max(1, 2));
    0
  ]);
  list_sum([
    16;
    (22 * (N([pn0], [(pn0 + 1) & 3], [pn0], [pn0 + 1]))) + 1;
    13;
    (23 * (N([pn1], [(pn1 + -4) > 3], [pn1], [pn1 + -4]))) + 1;
    1;
    5;
    (13 * (N([pn1], [pn1 + -1], [pn1], [pn1 + -1]))) + (list_max(1, 2));
    1;
    2
  ]);
  list_sum([
    16;
    (22 * (N([pn0], [(pn0 + 1) & 3], [pn0], [pn0 + 1]))) + 1;
    1;
    13;
    2
  ]);
  list_sum([
    16;
    (22 * (N([pn0], [(pn0 + 1) & 3], [pn0], [pn0 + 1]))) + 1;
    1;
    13;
    5;
    2
  ]);
  list_sum([
    16;
    (22 * (N([pn0], [(pn0 + 1) & 3], [pn0], [pn0 + 1]))) + 1;
    1;
    13;
    5;
    (13 * (N([pn1], [pn1 + -1], [pn1], [pn1 + -1]))) + (list_max(1, 2));
    0
  ]);
  list_sum([
    16;
    (22 * (N([pn0], [(pn0 + 1) & 3], [pn0], [pn0 + 1]))) + 1;
    1;
    13;
    5;
    (13 * (N([pn1], [pn1 + -1], [pn1], [pn1 + -1]))) + (list_max(1, 2));
    1;
    2
  ]);
  list_sum([
    16;
    (22 * (N([pn0], [(pn0 + 1) & 3], [pn0], [pn0 + 1]))) + 1;
    1;
    13;
    (23 * (N([pn1], [(pn1 + -4) > 3], [pn1], [pn1 + -4]))) + 1;
    5;
    2
  ]);
  list_sum([
    16;
    (22 * (N([pn0], [(pn0 + 1) & 3], [pn0], [pn0 + 1]))) + 1;
    1;
    13;
    (23 * (N([pn1], [(pn1 + -4) > 3], [pn1], [pn1 + -4]))) + 1;
    5;
    (13 * (N([pn1], [pn1 + -1], [pn1], [pn1 + -1]))) + (list_max(1, 2));
    0
  ]);
  list_sum([
    16;
    (22 * (N([pn0], [(pn0 + 1) & 3], [pn0], [pn0 + 1]))) + 1;
    1;
    13;
    (23 * (N([pn1], [(pn1 + -4) > 3], [pn1], [pn1 + -4]))) + 1;
    5;
    (13 * (N([pn1], [pn1 + -1], [pn1], [pn1 + -1]))) + (list_max(1, 2));
    1;
    2
  ]);
  list_sum([
    16;
    (22 * (N([pn0], [(pn0 + 1) & 3], [pn0], [pn0 + 1]))) + 1;
    1;
    13;
    (23 * (N([pn1], [(pn1 + -4) > 3], [pn1], [pn1 + -4]))) + 1;
    1;
    5;
    2
  ]);
  list_sum([
    16;
    (22 * (N([pn0], [(pn0 + 1) & 3], [pn0], [pn0 + 1]))) + 1;
    1;
    13;
    (23 * (N([pn1], [(pn1 + -4) > 3], [pn1], [pn1 + -4]))) + 1;
    1;
    5;
    (13 * (N([pn1], [pn1 + -1], [pn1], [pn1 + -1]))) + (list_max(1, 2));
    0
  ]);
  list_sum([
    16;
    (22 * (N([pn0], [(pn0 + 1) & 3], [pn0], [pn0 + 1]))) + 1;
    1;
    13;
    (23 * (N([pn1], [(pn1 + -4) > 3], [pn1], [pn1 + -4]))) + 1;
    1;
    5;
    (13 * (N([pn1], [pn1 + -1], [pn1], [pn1 + -1]))) + (list_max(1, 2));
    1;
    2
  ])
])
