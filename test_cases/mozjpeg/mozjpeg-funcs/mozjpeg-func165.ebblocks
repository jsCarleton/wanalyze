ebb entry:  0
  ebb type:   block
  ebb blocks: [0 1 2]
  ebb cost:   18
  ebb exits:  [3 47]
  ebb succs:  [3 47]
ebb entry:  3
  ebb type:   loop
  ebb blocks: [3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45]
  ebb cost:   (list_max([
  29 * (N([m[0]; pn6], [m[0] < pn6], [m[0]; pn6], [m[0]; pn6]));
  74 * (N([pn5; pn6], [pn5 < pn6], [pn5; pn6], [pn5; pn6]));
  77 * (N([pn5; pn6], [pn5 < pn6], [pn5; pn6], [pn5; pn6]));
  82 * (N([pn5; pn6], [pn5 < pn6], [pn5; pn6], [pn5; pn6]));
  85 * (N([pn5; pn6], [pn5 < pn6], [pn5; pn6], [pn5; pn6]));
  96 * (N([pn5; pn6], [pn5 < pn6], [pn5; pn6], [pn5; pn6]));
  99 * (N([pn5; pn6], [pn5 < pn6], [pn5; pn6], [pn5; pn6]));
  (130 + |f68|) * (N([pn5; pn6], [pn5 < pn6], [pn5; pn6], [pn5; pn6]));
  (133 + |f68|) * (N([pn5; pn6], [pn5 < pn6], [pn5; pn6], [pn5; pn6]));
  76 * (N([pn2; pn6], [pn2 < pn6], [pn2; pn6], [pn2; pn6]));
  121 * (N([pn5; pn6], [pn5 < pn6], [pn5; pn6], [pn5; pn6]));
  124 * (N([pn5; pn6], [pn5 < pn6], [pn5; pn6], [pn5; pn6]));
  82 * (N([pn2; pn6], [pn2 < pn6], [pn2; pn6], [pn2; pn6]));
  127 * (N([pn5; pn6], [pn5 < pn6], [pn5; pn6], [pn5; pn6]));
  130 * (N([pn5; pn6], [pn5 < pn6], [pn5; pn6], [pn5; pn6]));
  101 * (N([pn2; pn6], [pn2 < pn6], [pn2; pn6], [pn2; pn6]));
  146 * (N([pn5; pn6], [pn5 < pn6], [pn5; pn6], [pn5; pn6]));
  149 * (N([pn5; pn6], [pn5 < pn6], [pn5; pn6], [pn5; pn6]));
  (139 + |f68|) * (N([pn2; pn6], [pn2 < pn6], [pn2; pn6], [pn2; pn6]));
  (184 + |f68|) * (N([pn5; pn6], [pn5 < pn6], [pn5; pn6], [pn5; pn6]));
  (187 + |f68|) * (N([pn5; pn6], [pn5 < pn6], [pn5; pn6], [pn5; pn6]))
])) + (list_max(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1))
  ebb exits:  [46 47]
  ebb succs:  []
  21 paths to exit 46
  [3 4 5 6 21 22 38 44 45]
  [3 4 5 6 21 22 38 39 40 42 43 44 45]
  [3 4 5 6 21 22 38 39 40 41 43 44 45]
  [3 4 5 6 21 22 23 35 36 40 42 43 44 45]
  [3 4 5 6 21 22 23 35 36 40 41 43 44 45]
  [3 4 5 6 21 22 23 24 25 30 33 34 36 40 42 43 44 45]
  [3 4 5 6 21 22 23 24 25 30 33 34 36 40 41 43 44 45]
  [3 4 5 6 21 22 23 24 25 26 27 28 29 30 33 34 36 40 42 43 44 45]
  [3 4 5 6 21 22 23 24 25 26 27 28 29 30 33 34 36 40 41 43 44 45]
  [3 4 5 6 7 8 19 38 44 45]
  [3 4 5 6 7 8 19 38 39 40 42 43 44 45]
  [3 4 5 6 7 8 19 38 39 40 41 43 44 45]
  [3 4 5 6 7 8 9 19 38 44 45]
  [3 4 5 6 7 8 9 19 38 39 40 42 43 44 45]
  [3 4 5 6 7 8 9 19 38 39 40 41 43 44 45]
  [3 4 5 6 7 8 9 10 11 16 17 18 19 38 44 45]
  [3 4 5 6 7 8 9 10 11 16 17 18 19 38 39 40 42 43 44 45]
  [3 4 5 6 7 8 9 10 11 16 17 18 19 38 39 40 41 43 44 45]
  [3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 38 44 45]
  [3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 38 39 40 42 43 44 45]
  [3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 38 39 40 41 43 44 45]
  1 paths to exit 47
  [3 4 5 6 21]
  21 loop paths
  [3 4 5 6 21 22 38 44]  [3 4 5 6 21 22 38 39 40 42 43 44]  [3 4 5 6 21 22 38 39 40 41 43 44]  [3 4 5 6 21 22 23 35 36 40 42 43 44]  [3 4 5 6 21 22 23 35 36 40 41 43 44]  [3 4 5 6 21 22 23 24 25 30 33 34 36 40 42 43 44]  [3 4 5 6 21 22 23 24 25 30 33 34 36 40 41 43 44]  [3 4 5 6 21 22 23 24 25 26 27 28 29 30 33 34 36 40 42 43 44]  [3 4 5 6 21 22 23 24 25 26 27 28 29 30 33 34 36 40 41 43 44]  [3 4 5 6 7 8 19 38 44]  [3 4 5 6 7 8 19 38 39 40 42 43 44]  [3 4 5 6 7 8 19 38 39 40 41 43 44]  [3 4 5 6 7 8 9 19 38 44]  [3 4 5 6 7 8 9 19 38 39 40 42 43 44]  [3 4 5 6 7 8 9 19 38 39 40 41 43 44]  [3 4 5 6 7 8 9 10 11 16 17 18 19 38 44]  [3 4 5 6 7 8 9 10 11 16 17 18 19 38 39 40 42 43 44]  [3 4 5 6 7 8 9 10 11 16 17 18 19 38 39 40 41 43 44]  [3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 38 44]  [3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 38 39 40 42 43 44]  [3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 38 39 40 41 43 44]
  21 post loop exit paths
  [45]  [45]  [45]  [45]  [45]  [45]  [45]  [45]  [45]  [45]  [45]  [45]  [45]  [45]  [45]  [45]  [45]  [45]  [45]  [45]  [45]
nested ebbs:
  ebb entry:  3
    ebb type:   block
    ebb blocks: [3 4 5 6 7 8 9 10]
    ebb cost:   56
    ebb exits:  [11 19 21]
    ebb succs:  [11 19 21]
  ebb entry:  11
    ebb type:   loop
    ebb blocks: [11 12 13 14 15 16 17]
    ebb cost:   (list_max([
  11 * (N([ln10; ln7], [(ln10 + 1) < ln7], [0; m[60]], [ln10 + 1; ln7]));
  (49 + |f68|) * (N([ln10; m[60]], [(ln10 + 1) < m[60]], [0; m[60]], [ln10 + 1; m[60]]))
])) + (list_max(1, 1))
    ebb exits:  [18]
    ebb succs:  []
    2 paths to exit 18
    [11 16 17]
    [11 12 13 14 15 16 17]
    2 loop paths
    [11 16]    [11 12 13 14 15 16]
    2 post loop exit paths
    [17]    [17]
nested ebbs:
    ebb entry:  11
      ebb type:   block
      ebb blocks: [11 12]
      ebb cost:   13
      ebb exits:  [13 16]
      ebb succs:  [13 16]
    ebb entry:  13
      ebb type:   loop
      ebb blocks: [13 14]
      ebb cost:   ((24 + |f68|) * (N([ln7; m[236]], [ln7 < m[236]], [1 + 1; m[236]], [ln7 + 1; m[236]]))) + 1
      ebb exits:  [15]
      ebb succs:  [15]
      1 paths to exit 15
      [13 14]
      1 loop paths
      [13]
      1 post loop exit paths
      [14]
    ebb entry:  15
      ebb type:   block
      ebb blocks: [15]
      ebb cost:   4
      ebb exits:  [16]
      ebb succs:  [16]
    ebb entry:  16
      ebb type:   block
      ebb blocks: [16 17]
      ebb cost:   8
      ebb exits:  [11 18]
      ebb succs:  [11 18]
  ebb entry:  18
    ebb type:   block
    ebb blocks: [18]
    ebb cost:   1
    ebb exits:  [19]
    ebb succs:  [19]
  ebb entry:  19
    ebb type:   block
    ebb blocks: [19 20]
    ebb cost:   23
    ebb exits:  [21 38]
    ebb succs:  [21 38]
  ebb entry:  21
    ebb type:   block
    ebb blocks: [21 22 23 24]
    ebb cost:   21
    ebb exits:  [25 35 38 47]
    ebb succs:  [25 35 38 47]
  ebb entry:  25
    ebb type:   loop
    ebb blocks: [25 26 27 28 29 30 31 32 33]
    ebb cost:   (list_max([
  18 * (N([ln10; ln11], [(ln11 + 1) < ln10], [m[60]; 0], [ln10; ln11 + 1]));
  (52 + |f68|) * (N([ln11; m[60]], [(ln11 + 1) < m[60]], [0; m[60]], [ln11 + 1; m[60]]))
])) + (list_max(1, 1))
    ebb exits:  [34]
    ebb succs:  []
    2 paths to exit 34
    [25 30 33]
    [25 26 27 28 29 30 33]
    2 loop paths
    [25 30 31]    [25 26 27 28 29 30 31]
    2 post loop exit paths
    [33]    [33]
nested ebbs:
    ebb entry:  25
      ebb type:   block
      ebb blocks: [25 26]
      ebb cost:   19
      ebb exits:  [27 30]
      ebb succs:  [27 30]
    ebb entry:  27
      ebb type:   loop
      ebb blocks: [27 28]
      ebb cost:   ((14 + |f68|) * (N([ln7; ln9], [(ln7 + 1) != ln9], [m[52] + 1; m[60]], [ln7 + 1; ln9]))) + 1
      ebb exits:  [29]
      ebb succs:  [29]
      1 paths to exit 29
      [27 28]
      1 loop paths
      [27]
      1 post loop exit paths
      [28]
    ebb entry:  29
      ebb type:   block
      ebb blocks: [29]
      ebb cost:   4
      ebb exits:  [30]
      ebb succs:  [30]
    ebb entry:  30
      ebb type:   block
      ebb blocks: [30 31 32 33]
      ebb cost:   14
      ebb exits:  [25 34]
      ebb succs:  [25 34]
  ebb entry:  34
    ebb type:   block
    ebb blocks: [34]
    ebb cost:   3
    ebb exits:  [36]
    ebb succs:  [36]
  ebb entry:  35
    ebb type:   block
    ebb blocks: [35]
    ebb cost:   2
    ebb exits:  [36]
    ebb succs:  [36]
  ebb entry:  36
    ebb type:   block
    ebb blocks: [36 37]
    ebb cost:   2
    ebb exits:  [38 40]
    ebb succs:  [38 40]
  ebb entry:  38
    ebb type:   block
    ebb blocks: [38 39]
    ebb cost:   5
    ebb exits:  [40 44]
    ebb succs:  [40 44]
  ebb entry:  40
    ebb type:   block
    ebb blocks: [40 41 42 43]
    ebb cost:   47
    ebb exits:  [44]
    ebb succs:  [44]
  ebb entry:  44
    ebb type:   block
    ebb blocks: [44 45]
    ebb cost:   6
    ebb exits:  [3 46]
    ebb succs:  [3 46]
ebb entry:  46
  ebb type:   block
  ebb blocks: [46]
  ebb cost:   1
  ebb exits:  [47]
  ebb succs:  [47]
ebb entry:  47
  ebb type:   block
  ebb blocks: [47 48]
  ebb cost:   1
  ebb exits:  [48]
  ebb succs:  []
