|f315| = list_max([
  13;
  list_sum([
    14;
    list_MAX([
      94 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        113;
        (210 * (N([ln4], [(ln4 + 1) != 8], [0 + 1], [ln4 + 1]))) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        113;
        (210 * (N([ln4], [(ln4 + 1) != 8], [0 + 1], [ln4 + 1]))) + 1
      ])) * (N([ln12], [(ln12 + 1) < 256], [0], [ln12 + 1]));
      (list_sum([
        111;
        (list_max([
          92 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          62 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          58 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          148 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        111;
        (list_max([
          92 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          62 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          58 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          148 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        111;
        (list_max([
          92 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          62 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          58 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          148 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        111;
        (list_max([
          92 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          62 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          58 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          148 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        111;
        (list_max([
          92 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          62 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          58 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          148 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        111;
        (list_max([
          92 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          62 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          58 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          148 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        111;
        (list_max([
          92 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          62 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          58 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          148 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        111;
        (list_max([
          92 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          62 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          58 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          148 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        111;
        (list_max([
          92 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          62 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          58 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          148 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        111;
        (list_max([
          92 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          62 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          58 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          148 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        111;
        (list_max([
          92 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          62 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          58 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          148 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        111;
        (list_max([
          92 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          62 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          58 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          148 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        111;
        (list_max([
          92 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          62 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          58 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          148 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        111;
        (list_max([
          92 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          62 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          58 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          148 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        111;
        (list_max([
          92 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          62 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          58 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          148 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        111;
        (list_max([
          92 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          62 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          58 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          148 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        85;
        (list_max([
          138 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          80 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        85;
        (list_max([
          138 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          80 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        85;
        (list_max([
          138 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          80 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        85;
        (list_max([
          138 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          80 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        85;
        (list_max([
          138 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          80 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        85;
        (list_max([
          138 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          80 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        85;
        (list_max([
          138 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          80 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        85;
        (list_max([
          138 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          80 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        85;
        (list_max([
          138 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          80 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        85;
        (list_max([
          138 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          80 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        85;
        (list_max([
          138 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          80 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        85;
        (list_max([
          138 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          80 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      94 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        113;
        (210 * (N([ln4], [(ln4 + 1) != 8], [0 + 1], [ln4 + 1]))) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        113;
        (210 * (N([ln4], [(ln4 + 1) != 8], [0 + 1], [ln4 + 1]))) + 1
      ])) * (N([ln12], [(ln12 + 1) < 256], [0], [ln12 + 1]));
      (list_sum([
        111;
        (list_max([
          92 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          62 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          58 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          148 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        111;
        (list_max([
          92 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          62 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          58 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          148 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        111;
        (list_max([
          92 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          62 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          58 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          148 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        111;
        (list_max([
          92 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          62 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          58 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          148 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        111;
        (list_max([
          92 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          62 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          58 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          148 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        111;
        (list_max([
          92 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          62 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          58 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          148 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        111;
        (list_max([
          92 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          62 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          58 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          148 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        111;
        (list_max([
          92 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          62 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          58 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          148 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        111;
        (list_max([
          92 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          62 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          58 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          148 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        111;
        (list_max([
          92 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          62 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          58 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          148 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        111;
        (list_max([
          92 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          62 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          58 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          148 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        111;
        (list_max([
          92 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          62 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          58 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          148 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        111;
        (list_max([
          92 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          62 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          58 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          148 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        111;
        (list_max([
          92 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          62 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          58 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          148 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        111;
        (list_max([
          92 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          62 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          58 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          148 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        111;
        (list_max([
          92 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          62 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          58 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          148 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        85;
        (list_max([
          138 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          80 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        85;
        (list_max([
          138 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          80 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        85;
        (list_max([
          138 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          80 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        85;
        (list_max([
          138 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          80 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        85;
        (list_max([
          138 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          80 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        85;
        (list_max([
          138 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          80 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        85;
        (list_max([
          138 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          80 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        85;
        (list_max([
          138 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          80 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        85;
        (list_max([
          138 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          80 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        85;
        (list_max([
          138 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          80 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        85;
        (list_max([
          138 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          80 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        85;
        (list_max([
          138 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          80 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      94 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        113;
        (210 * (N([ln4], [(ln4 + 1) != 8], [0 + 1], [ln4 + 1]))) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        113;
        (210 * (N([ln4], [(ln4 + 1) != 8], [0 + 1], [ln4 + 1]))) + 1
      ])) * (N([ln12], [(ln12 + 1) < 256], [0], [ln12 + 1]));
      (list_sum([
        111;
        (list_max([
          92 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          62 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          58 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          148 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        111;
        (list_max([
          92 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          62 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          58 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          148 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        111;
        (list_max([
          92 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          62 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          58 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          148 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        111;
        (list_max([
          92 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          62 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          58 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          148 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        111;
        (list_max([
          92 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          62 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          58 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          148 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        111;
        (list_max([
          92 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          62 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          58 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          148 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        111;
        (list_max([
          92 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          62 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          58 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          148 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        111;
        (list_max([
          92 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          62 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          58 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          148 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        111;
        (list_max([
          92 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          62 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          58 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          148 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        111;
        (list_max([
          92 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          62 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          58 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          148 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        111;
        (list_max([
          92 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          62 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          58 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          148 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        111;
        (list_max([
          92 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          62 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          58 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          148 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        111;
        (list_max([
          92 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          62 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          58 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          148 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        111;
        (list_max([
          92 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          62 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          58 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          148 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        111;
        (list_max([
          92 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          62 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          58 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          148 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        111;
        (list_max([
          92 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          62 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          58 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          148 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        85;
        (list_max([
          138 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          80 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        85;
        (list_max([
          138 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          80 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        85;
        (list_max([
          138 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          80 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        85;
        (list_max([
          138 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          80 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        85;
        (list_max([
          138 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          80 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        85;
        (list_max([
          138 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          80 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        85;
        (list_max([
          138 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          80 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        85;
        (list_max([
          138 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          80 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        85;
        (list_max([
          138 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          80 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        85;
        (list_max([
          138 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          80 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        85;
        (list_max([
          138 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          80 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
      (list_sum([
        85;
        (list_max([
          138 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          80 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
          81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
        ])) + 1
      ])) * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]))
    ])
  ])
])
