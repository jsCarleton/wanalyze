|f188| = list_max([
  392;
  list_sum([
    452;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    449;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    447;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    444;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    440;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    449;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    446;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    444;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    441;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    445;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    442;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    437;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    451;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    448;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    446;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    443;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    439;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    448;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    445;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    443;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    440;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    444;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    441;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    436;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    423;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    420;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    418;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    415;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    411;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    411;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    408;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    451;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    448;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    446;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    443;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    439;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    448;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    445;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    443;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    440;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    444;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    441;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    436;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    450;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    447;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    445;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    442;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    438;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    447;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    444;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    442;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    439;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    443;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    440;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    435;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    422;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    419;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    417;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    414;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    410;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    410;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    407;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    442;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    439;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    437;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    434;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    430;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    439;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    436;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    434;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    431;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    435;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    432;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    427;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    441;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    438;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    436;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    433;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    429;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    438;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    435;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    433;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    430;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    434;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    431;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    426;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    413;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    410;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    408;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    405;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    401;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    401;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    398;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    342;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    445;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    442;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    440;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    437;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    433;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    442;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    439;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    437;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    434;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    438;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    435;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    430;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    444;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    441;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    439;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    436;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    432;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    441;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    438;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    436;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    433;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    437;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    434;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    429;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    416;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    413;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    411;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    408;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    404;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    404;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    401;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    444;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    441;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    439;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    436;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    432;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    441;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    438;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    436;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    433;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    437;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    434;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    429;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    443;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    440;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    438;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    435;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    431;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    440;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    437;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    435;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    432;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    436;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    433;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    428;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    415;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    412;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    410;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    407;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    403;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    403;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    400;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    435;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    432;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    430;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    427;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    423;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    432;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    429;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    427;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    424;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    428;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    425;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    420;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    434;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    431;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    429;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    426;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    422;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    431;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    428;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    426;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    423;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    427;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    424;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    419;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    406;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    403;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    401;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    398;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    394;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    394;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    391;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    351;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    348;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    346;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    343;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    339;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    348;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    345;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    343;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    340;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    344;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    341;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    336;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    350;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    347;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    345;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    342;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    338;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    347;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    344;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    342;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    339;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    343;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    340;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    335;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    322;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    319;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    317;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    314;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    310;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    310;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    307;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    451;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    448;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    446;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    443;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    439;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    448;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    445;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    443;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    440;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    444;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    441;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    436;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    450;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    447;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    445;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    442;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    438;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    447;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    444;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    442;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    439;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    443;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    440;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    435;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    422;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    419;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    417;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    414;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    410;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    410;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    407;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    450;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    447;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    445;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    442;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    438;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    447;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    444;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    442;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    439;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    443;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    440;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    435;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    449;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    446;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    444;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    441;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    437;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    446;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    443;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    441;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    438;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    442;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    439;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    434;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    421;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    418;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    416;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    413;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    409;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    409;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    406;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    441;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    438;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    436;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    433;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    429;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    438;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    435;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    433;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    430;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    434;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    431;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    426;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    440;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    437;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    435;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    432;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    428;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    437;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    434;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    432;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    429;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    433;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    430;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    425;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    412;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    409;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    407;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    404;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    400;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    400;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    397;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    341;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    444;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    441;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    439;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    436;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    432;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    441;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    438;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    436;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    433;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    437;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    434;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    429;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    443;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    440;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    438;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    435;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    431;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    440;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    437;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    435;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    432;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    436;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    433;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    428;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    415;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    412;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    410;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    407;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    403;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    403;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    400;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    443;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    440;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    438;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    435;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    431;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    440;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    437;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    435;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    432;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    436;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    433;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    428;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    442;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    439;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    437;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    434;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    430;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    439;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    436;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    434;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    431;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    435;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    432;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    427;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    414;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    411;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    409;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    406;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    402;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    402;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    399;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    434;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    431;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    429;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    426;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    422;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    431;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    428;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    426;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    423;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    427;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    424;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    419;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    433;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    430;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    428;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    425;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    421;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    430;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    427;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    425;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    422;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    426;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    423;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    418;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    405;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    402;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    400;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    397;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    393;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    393;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    390;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    350;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    347;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    345;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    342;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    338;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    347;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    344;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    342;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    339;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    343;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    340;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    335;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    349;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    346;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    344;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    341;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    337;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    346;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    343;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    341;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    338;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    342;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    339;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    334;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    321;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    318;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    316;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    313;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    309;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    309;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    306;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1
  ]);
  list_sum([
    167;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    164;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    162;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    159;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    155;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    164;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    161;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    159;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    156;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    160;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    157;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    152;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    166;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    163;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    161;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    158;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    154;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    163;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    160;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    158;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    155;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    159;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    156;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    151;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    138;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    135;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    133;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    130;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    126;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    126;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    123;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    166;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ]);
  list_sum([
    163;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ]);
  list_sum([
    161;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ]);
  list_sum([
    158;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ]);
  list_sum([
    154;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ]);
  list_sum([
    163;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ]);
  list_sum([
    160;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ]);
  list_sum([
    158;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ]);
  list_sum([
    155;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ]);
  list_sum([
    159;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ]);
  list_sum([
    156;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ]);
  list_sum([
    151;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ]);
  list_sum([
    402;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    399;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    397;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    394;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    390;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    399;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    396;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    394;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    391;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    395;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    392;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    387;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    401;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    398;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    396;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    393;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    389;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    398;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    395;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    393;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    390;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    394;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    391;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    386;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    373;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    370;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    368;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    365;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    361;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    361;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    358;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    401;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    398;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    396;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    393;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    389;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    398;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    395;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    393;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    390;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    394;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    391;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    386;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    400;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    397;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    395;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    392;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    388;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    397;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    394;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    392;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    389;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    393;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    390;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    385;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    372;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    369;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    367;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    364;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    360;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    360;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    357;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    392;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    389;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    387;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    384;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    380;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    389;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    386;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    384;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    381;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    385;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    382;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    377;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    391;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    388;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    386;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    383;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    379;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    388;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    385;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    383;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    380;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    384;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    381;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    376;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    363;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    360;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    358;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    355;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    351;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    351;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    348;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    292;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    395;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    392;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    390;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    387;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    383;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    392;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    389;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    387;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    384;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    388;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    385;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    380;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    394;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    391;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    389;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    386;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    382;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    391;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    388;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    386;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    383;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    387;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    384;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    379;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    366;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    363;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    361;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    358;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    354;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    354;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    351;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    394;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    391;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    389;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    386;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    382;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    391;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    388;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    386;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    383;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    387;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    384;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    379;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    393;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    390;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    388;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    385;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    381;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    390;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    387;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    385;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    382;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    386;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    383;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    378;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    365;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    362;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    360;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    357;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    353;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    353;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    350;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    385;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    382;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    380;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    377;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    373;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    382;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    379;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    377;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    374;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    378;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    375;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    370;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    384;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    381;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    379;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    376;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    372;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    381;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    378;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    376;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    373;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    377;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    374;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    369;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    356;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    353;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    351;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    348;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    344;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    344;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    341;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    301;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    298;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    296;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    293;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    289;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    298;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    295;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    293;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    290;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    294;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    291;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    286;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    300;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    297;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    295;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    292;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    288;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    297;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    294;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    292;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    289;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    293;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    290;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    285;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    272;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    269;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    267;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    264;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    260;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    260;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    257;
    (list_max([
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + 1
  ]);
  list_sum([
    401;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    398;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    396;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    393;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    389;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    398;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    395;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    393;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    390;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    394;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    391;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    386;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    400;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    397;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    395;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    392;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    388;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    397;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    394;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    392;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    389;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    393;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    390;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    385;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    372;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    369;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    367;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    364;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    360;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    360;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    357;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    400;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    397;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    395;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    392;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    388;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    397;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    394;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    392;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    389;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    393;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    390;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    385;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    399;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    396;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    394;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    391;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    387;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    396;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    393;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    391;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    388;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    392;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    389;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    384;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    371;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    368;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    366;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    363;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    359;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    359;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    356;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    391;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    388;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    386;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    383;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    379;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    388;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    385;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    383;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    380;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    384;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    381;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    376;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    390;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    387;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    385;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    382;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    378;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    387;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    384;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    382;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    379;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    383;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    380;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    375;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    362;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    359;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    357;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    354;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    350;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    350;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    347;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    291;
    (list_max([
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + 1
  ]);
  list_sum([
    394;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    391;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    389;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    386;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    382;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    391;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    388;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    386;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    383;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    387;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    384;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    379;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    393;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    390;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    388;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    385;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    381;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    390;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    387;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    385;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    382;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    386;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    383;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    378;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    365;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    362;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    360;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    357;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    353;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    353;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    350;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    393;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ]);
  list_sum([
    390;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ]);
  list_sum([
    388;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ]);
  list_sum([
    385;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ]);
  list_sum([
    381;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ]);
  list_sum([
    390;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ]);
  list_sum([
    387;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ]);
  list_sum([
    385;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ]);
  list_sum([
    382;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ]);
  list_sum([
    386;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ]);
  list_sum([
    383;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ]);
  list_sum([
    378;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ]);
  list_sum([
    384;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ]);
  list_sum([
    381;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ]);
  list_sum([
    379;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ]);
  list_sum([
    376;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ]);
  list_sum([
    372;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ]);
  list_sum([
    381;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ]);
  list_sum([
    378;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ]);
  list_sum([
    376;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ]);
  list_sum([
    373;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ]);
  list_sum([
    377;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ]);
  list_sum([
    374;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ]);
  list_sum([
    369;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ]);
  list_sum([
    300;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ]);
  list_sum([
    297;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ]);
  list_sum([
    295;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ]);
  list_sum([
    292;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ]);
  list_sum([
    288;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ]);
  list_sum([
    297;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ]);
  list_sum([
    294;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ]);
  list_sum([
    292;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ]);
  list_sum([
    289;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ]);
  list_sum([
    293;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ]);
  list_sum([
    290;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ]);
  list_sum([
    285;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ]);
  list_sum([
    133;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    130;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    128;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    125;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    121;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    130;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    127;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    125;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    122;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    126;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    123;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    118;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    132;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    129;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    127;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    124;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    120;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    129;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    126;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    124;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    121;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    125;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    122;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    117;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    104;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    101;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    99;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    96;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    92;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    92;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    89;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1
  ]);
  list_sum([
    132;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ]);
  list_sum([
    129;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ]);
  list_sum([
    127;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ]);
  list_sum([
    124;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ]);
  list_sum([
    120;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ]);
  list_sum([
    129;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ]);
  list_sum([
    126;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ]);
  list_sum([
    124;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ]);
  list_sum([
    121;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ]);
  list_sum([
    125;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ]);
  list_sum([
    122;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ]);
  list_sum([
    117;
    (list_max([
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + 1
  ])
])
