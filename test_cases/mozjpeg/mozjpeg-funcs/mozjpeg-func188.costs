ebb costs:
[0]: 39
[10]: ((70 * N([ln2; ln5], [((ln5 + 1) != ln2)], [m[60]; 0], [ln2; (ln5 + 1)])) + 1)
[10]: 34
[13]: ((21 * N([ln1], [((ln1 + 1) != 64)], [(0 + 1)], [(ln1 + 1)])) + 1)
[15]: 15
[17]: 1
[18]: 89
[31]: (list_max((21 * N([ln1; ln3], [((ln1 + 1) != ln3)], [0; m[60]], [(ln1 + 1); ln3])), (42 * N([ln1; ln3], [((ln1 + 1) != ln3)], [0; m[60]], [(ln1 + 1); ln3]))) + list_max(1, 1))
[35]: 1
[36]: 88
[46]: (list_max((25 * N([ln2; ln3], [((ln3 + 1) < ln2)], [m[60]; 0], [ln2; (ln3 + 1)])), (141 * N([ln3; m[60]], [((ln3 + 1) < m[60])], [0; m[60]], [(ln3 + 1); m[60]])), (146 * N([ln3; m[60]], [((ln3 + 1) < m[60])], [0; m[60]], [(ln3 + 1); m[60]])), (156 * N([ln3; m[60]], [((ln3 + 1) < m[60])], [0; m[60]], [(ln3 + 1); m[60]])), (146 * N([ln3; m[60]], [((ln3 + 1) < m[60])], [0; m[60]], [(ln3 + 1); m[60]])), (151 * N([ln3; m[60]], [((ln3 + 1) < m[60])], [0; m[60]], [(ln3 + 1); m[60]])), (161 * N([ln3; m[60]], [((ln3 + 1) < m[60])], [0; m[60]], [(ln3 + 1); m[60]])), (156 * N([ln3; m[60]], [((ln3 + 1) < m[60])], [0; m[60]], [(ln3 + 1); m[60]])), (161 * N([ln3; m[60]], [((ln3 + 1) < m[60])], [0; m[60]], [(ln3 + 1); m[60]])), (171 * N([ln3; m[60]], [((ln3 + 1) < m[60])], [0; m[60]], [(ln3 + 1); m[60]])), (116 * N([ln3; m[60]], [((ln3 + 1) < m[60])], [0; m[60]], [(ln3 + 1); m[60]])), (121 * N([ln3; m[60]], [((ln3 + 1) < m[60])], [0; m[60]], [(ln3 + 1); m[60]])), (131 * N([ln3; m[60]], [((ln3 + 1) < m[60])], [0; m[60]], [(ln3 + 1); m[60]])), (146 * N([ln3; m[60]], [((ln3 + 1) < m[60])], [0; m[60]], [(ln3 + 1); m[60]])), (151 * N([ln3; m[60]], [((ln3 + 1) < m[60])], [0; m[60]], [(ln3 + 1); m[60]])), (161 * N([ln3; m[60]], [((ln3 + 1) < m[60])], [0; m[60]], [(ln3 + 1); m[60]])), (151 * N([ln3; m[60]], [((ln3 + 1) < m[60])], [0; m[60]], [(ln3 + 1); m[60]])), (156 * N([ln3; m[60]], [((ln3 + 1) < m[60])], [0; m[60]], [(ln3 + 1); m[60]])), (166 * N([ln3; m[60]], [((ln3 + 1) < m[60])], [0; m[60]], [(ln3 + 1); m[60]])), (161 * N([ln3; m[60]], [((ln3 + 1) < m[60])], [0; m[60]], [(ln3 + 1); m[60]])), (166 * N([ln3; m[60]], [((ln3 + 1) < m[60])], [0; m[60]], [(ln3 + 1); m[60]])), (176 * N([ln3; m[60]], [((ln3 + 1) < m[60])], [0; m[60]], [(ln3 + 1); m[60]])), (121 * N([ln3; m[60]], [((ln3 + 1) < m[60])], [0; m[60]], [(ln3 + 1); m[60]])), (126 * N([ln3; m[60]], [((ln3 + 1) < m[60])], [0; m[60]], [(ln3 + 1); m[60]])), (136 * N([ln3; m[60]], [((ln3 + 1) < m[60])], [0; m[60]], [(ln3 + 1); m[60]])), (156 * N([ln3; m[60]], [((ln3 + 1) < m[60])], [0; m[60]], [(ln3 + 1); m[60]])), (161 * N([ln3; m[60]], [((ln3 + 1) < m[60])], [0; m[60]], [(ln3 + 1); m[60]])), (171 * N([ln3; m[60]], [((ln3 + 1) < m[60])], [0; m[60]], [(ln3 + 1); m[60]])), (161 * N([ln3; m[60]], [((ln3 + 1) < m[60])], [0; m[60]], [(ln3 + 1); m[60]])), (166 * N([ln3; m[60]], [((ln3 + 1) < m[60])], [0; m[60]], [(ln3 + 1); m[60]])), (176 * N([ln3; m[60]], [((ln3 + 1) < m[60])], [0; m[60]], [(ln3 + 1); m[60]])), (171 * N([ln3; m[60]], [((ln3 + 1) < m[60])], [0; m[60]], [(ln3 + 1); m[60]])), (176 * N([ln3; m[60]], [((ln3 + 1) < m[60])], [0; m[60]], [(ln3 + 1); m[60]])), (186 * N([ln3; m[60]], [((ln3 + 1) < m[60])], [0; m[60]], [(ln3 + 1); m[60]])), (131 * N([ln3; m[60]], [((ln3 + 1) < m[60])], [0; m[60]], [(ln3 + 1); m[60]])), (136 * N([ln3; m[60]], [((ln3 + 1) < m[60])], [0; m[60]], [(ln3 + 1); m[60]])), (146 * N([ln3; m[60]], [((ln3 + 1) < m[60])], [0; m[60]], [(ln3 + 1); m[60]]))) + list_max(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1))
[46]: 75
[54]: (list_max((41 * N([ln1], [((ln1 + 1) != 64)], [0], [(ln1 + 1)])), (46 * N([ln1], [((ln1 + 1) != 64)], [0], [(ln1 + 1)])), (56 * N([ln1], [((ln1 + 1) != 64)], [0], [(ln1 + 1)]))) + list_max(1, 1, 1))
[62]: 1
[65]: (list_max((65 * N([ln1], [((ln1 + 1) != 64)], [0], [(ln1 + 1)])), (70 * N([ln1], [((ln1 + 1) != 64)], [0], [(ln1 + 1)])), (80 * N([ln1], [((ln1 + 1) != 64)], [0], [(ln1 + 1)])), (70 * N([ln1], [((ln1 + 1) != 64)], [0], [(ln1 + 1)])), (75 * N([ln1], [((ln1 + 1) != 64)], [0], [(ln1 + 1)])), (85 * N([ln1], [((ln1 + 1) != 64)], [0], [(ln1 + 1)])), (80 * N([ln1], [((ln1 + 1) != 64)], [0], [(ln1 + 1)])), (85 * N([ln1], [((ln1 + 1) != 64)], [0], [(ln1 + 1)])), (95 * N([ln1], [((ln1 + 1) != 64)], [0], [(ln1 + 1)]))) + list_max(1, 1, 1, 1, 1, 1, 1, 1, 1))
[75]: 1
[76]: 7
[77]: 8
[79]: 1
[81]: 9
[83]: (((20 + |f64|) * N([ln1; m[60]], [((ln1 + 1) < m[60])], [(0 + 1); m[60]], [(ln1 + 1); m[60]])) + 1)
[85]: 1
[86]: 32
[99]: (list_max((20 * N([ln2; ln4], [((ln4 + 1) != ln2)], [m[60]; 0], [ln2; (ln4 + 1)])), (22 * N([ln2; ln4], [((ln4 + 1) != ln2)], [m[60]; 0], [ln2; (ln4 + 1)])), (26 * N([ln2; ln4], [((ln4 + 1) != ln2)], [m[60]; 0], [ln2; (ln4 + 1)]))) + list_max(1, 1, 1))
[106]: 1
[107]: 28
[111]: 3
[113]: 4
[116]: 5
[118]: 3
[119]: 8
[121]: 0
996 ebb paths found
[0 81 86 119]
[0 81 86 118 119]
[0 81 86 111 119]
[0 81 86 111 113 119]
[0 81 86 111 113 118 119]
[0 81 86 111 113 116 119]
[0 81 86 111 113 116 118 119]
[0 81 86 107 119]
[0 81 86 107 116 119]
[0 81 86 107 116 118 119]
[0 81 86 107 113 119]
[0 81 86 107 113 118 119]
[0 81 86 107 113 116 119]
[0 81 86 107 113 116 118 119]
[0 81 86 107 111 119]
[0 81 86 107 111 113 119]
[0 81 86 107 111 113 118 119]
[0 81 86 107 111 113 116 119]
[0 81 86 107 111 113 116 118 119]
[0 81 86 99 106 107 119]
[0 81 86 99 106 107 116 119]
[0 81 86 99 106 107 116 118 119]
[0 81 86 99 106 107 113 119]
[0 81 86 99 106 107 113 118 119]
[0 81 86 99 106 107 113 116 119]
[0 81 86 99 106 107 113 116 118 119]
[0 81 86 99 106 107 111 119]
[0 81 86 99 106 107 111 113 119]
[0 81 86 99 106 107 111 113 118 119]
[0 81 86 99 106 107 111 113 116 119]
[0 81 86 99 106 107 111 113 116 118 119]
[0 81 83 85 86 119]
[0 81 83 85 86 118 119]
[0 81 83 85 86 111 119]
[0 81 83 85 86 111 113 119]
[0 81 83 85 86 111 113 118 119]
[0 81 83 85 86 111 113 116 119]
[0 81 83 85 86 111 113 116 118 119]
[0 81 83 85 86 107 119]
[0 81 83 85 86 107 116 119]
[0 81 83 85 86 107 116 118 119]
[0 81 83 85 86 107 113 119]
[0 81 83 85 86 107 113 118 119]
[0 81 83 85 86 107 113 116 119]
[0 81 83 85 86 107 113 116 118 119]
[0 81 83 85 86 107 111 119]
[0 81 83 85 86 107 111 113 119]
[0 81 83 85 86 107 111 113 118 119]
[0 81 83 85 86 107 111 113 116 119]
[0 81 83 85 86 107 111 113 116 118 119]
[0 81 83 85 86 99 106 107 119]
[0 81 83 85 86 99 106 107 116 119]
[0 81 83 85 86 99 106 107 116 118 119]
[0 81 83 85 86 99 106 107 113 119]
[0 81 83 85 86 99 106 107 113 118 119]
[0 81 83 85 86 99 106 107 113 116 119]
[0 81 83 85 86 99 106 107 113 116 118 119]
[0 81 83 85 86 99 106 107 111 119]
[0 81 83 85 86 99 106 107 111 113 119]
[0 81 83 85 86 99 106 107 111 113 118 119]
[0 81 83 85 86 99 106 107 111 113 116 119]
[0 81 83 85 86 99 106 107 111 113 116 118 119]
[0 18 36 86 119]
[0 18 36 86 118 119]
[0 18 36 86 111 119]
[0 18 36 86 111 113 119]
[0 18 36 86 111 113 118 119]
[0 18 36 86 111 113 116 119]
[0 18 36 86 111 113 116 118 119]
[0 18 36 86 107 119]
[0 18 36 86 107 116 119]
[0 18 36 86 107 116 118 119]
[0 18 36 86 107 113 119]
[0 18 36 86 107 113 118 119]
[0 18 36 86 107 113 116 119]
[0 18 36 86 107 113 116 118 119]
[0 18 36 86 107 111 119]
[0 18 36 86 107 111 113 119]
[0 18 36 86 107 111 113 118 119]
[0 18 36 86 107 111 113 116 119]
[0 18 36 86 107 111 113 116 118 119]
[0 18 36 86 99 106 107 119]
[0 18 36 86 99 106 107 116 119]
[0 18 36 86 99 106 107 116 118 119]
[0 18 36 86 99 106 107 113 119]
[0 18 36 86 99 106 107 113 118 119]
[0 18 36 86 99 106 107 113 116 119]
[0 18 36 86 99 106 107 113 116 118 119]
[0 18 36 86 99 106 107 111 119]
[0 18 36 86 99 106 107 111 113 119]
[0 18 36 86 99 106 107 111 113 118 119]
[0 18 36 86 99 106 107 111 113 116 119]
[0 18 36 86 99 106 107 111 113 116 118 119]
[0 18 36 46 77 79 86 119]
[0 18 36 46 77 79 86 118 119]
[0 18 36 46 77 79 86 111 119]
[0 18 36 46 77 79 86 111 113 119]
[0 18 36 46 77 79 86 111 113 118 119]
[0 18 36 46 77 79 86 111 113 116 119]
[0 18 36 46 77 79 86 111 113 116 118 119]
[0 18 36 46 77 79 86 107 119]
[0 18 36 46 77 79 86 107 116 119]
[0 18 36 46 77 79 86 107 116 118 119]
[0 18 36 46 77 79 86 107 113 119]
[0 18 36 46 77 79 86 107 113 118 119]
[0 18 36 46 77 79 86 107 113 116 119]
[0 18 36 46 77 79 86 107 113 116 118 119]
[0 18 36 46 77 79 86 107 111 119]
[0 18 36 46 77 79 86 107 111 113 119]
[0 18 36 46 77 79 86 107 111 113 118 119]
[0 18 36 46 77 79 86 107 111 113 116 119]
[0 18 36 46 77 79 86 107 111 113 116 118 119]
[0 18 36 46 77 79 86 99 106 107 119]
[0 18 36 46 77 79 86 99 106 107 116 119]
[0 18 36 46 77 79 86 99 106 107 116 118 119]
[0 18 36 46 77 79 86 99 106 107 113 119]
[0 18 36 46 77 79 86 99 106 107 113 118 119]
[0 18 36 46 77 79 86 99 106 107 113 116 119]
[0 18 36 46 77 79 86 99 106 107 113 116 118 119]
[0 18 36 46 77 79 86 99 106 107 111 119]
[0 18 36 46 77 79 86 99 106 107 111 113 119]
[0 18 36 46 77 79 86 99 106 107 111 113 118 119]
[0 18 36 46 77 79 86 99 106 107 111 113 116 119]
[0 18 36 46 77 79 86 99 106 107 111 113 116 118 119]
[0 18 36 46 77 79 81 86 119]
[0 18 36 46 77 79 81 86 118 119]
[0 18 36 46 77 79 81 86 111 119]
[0 18 36 46 77 79 81 86 111 113 119]
[0 18 36 46 77 79 81 86 111 113 118 119]
[0 18 36 46 77 79 81 86 111 113 116 119]
[0 18 36 46 77 79 81 86 111 113 116 118 119]
[0 18 36 46 77 79 81 86 107 119]
[0 18 36 46 77 79 81 86 107 116 119]
[0 18 36 46 77 79 81 86 107 116 118 119]
[0 18 36 46 77 79 81 86 107 113 119]
[0 18 36 46 77 79 81 86 107 113 118 119]
[0 18 36 46 77 79 81 86 107 113 116 119]
[0 18 36 46 77 79 81 86 107 113 116 118 119]
[0 18 36 46 77 79 81 86 107 111 119]
[0 18 36 46 77 79 81 86 107 111 113 119]
[0 18 36 46 77 79 81 86 107 111 113 118 119]
[0 18 36 46 77 79 81 86 107 111 113 116 119]
[0 18 36 46 77 79 81 86 107 111 113 116 118 119]
[0 18 36 46 77 79 81 86 99 106 107 119]
[0 18 36 46 77 79 81 86 99 106 107 116 119]
[0 18 36 46 77 79 81 86 99 106 107 116 118 119]
[0 18 36 46 77 79 81 86 99 106 107 113 119]
[0 18 36 46 77 79 81 86 99 106 107 113 118 119]
[0 18 36 46 77 79 81 86 99 106 107 113 116 119]
[0 18 36 46 77 79 81 86 99 106 107 113 116 118 119]
[0 18 36 46 77 79 81 86 99 106 107 111 119]
[0 18 36 46 77 79 81 86 99 106 107 111 113 119]
[0 18 36 46 77 79 81 86 99 106 107 111 113 118 119]
[0 18 36 46 77 79 81 86 99 106 107 111 113 116 119]
[0 18 36 46 77 79 81 86 99 106 107 111 113 116 118 119]
[0 18 36 46 77 79 81 83 85 86 119]
[0 18 36 46 77 79 81 83 85 86 118 119]
[0 18 36 46 77 79 81 83 85 86 111 119]
[0 18 36 46 77 79 81 83 85 86 111 113 119]
[0 18 36 46 77 79 81 83 85 86 111 113 118 119]
[0 18 36 46 77 79 81 83 85 86 111 113 116 119]
[0 18 36 46 77 79 81 83 85 86 111 113 116 118 119]
[0 18 36 46 77 79 81 83 85 86 107 119]
[0 18 36 46 77 79 81 83 85 86 107 116 119]
[0 18 36 46 77 79 81 83 85 86 107 116 118 119]
[0 18 36 46 77 79 81 83 85 86 107 113 119]
[0 18 36 46 77 79 81 83 85 86 107 113 118 119]
[0 18 36 46 77 79 81 83 85 86 107 113 116 119]
[0 18 36 46 77 79 81 83 85 86 107 113 116 118 119]
[0 18 36 46 77 79 81 83 85 86 107 111 119]
[0 18 36 46 77 79 81 83 85 86 107 111 113 119]
[0 18 36 46 77 79 81 83 85 86 107 111 113 118 119]
[0 18 36 46 77 79 81 83 85 86 107 111 113 116 119]
[0 18 36 46 77 79 81 83 85 86 107 111 113 116 118 119]
[0 18 36 46 77 79 81 83 85 86 99 106 107 119]
[0 18 36 46 77 79 81 83 85 86 99 106 107 116 119]
[0 18 36 46 77 79 81 83 85 86 99 106 107 116 118 119]
[0 18 36 46 77 79 81 83 85 86 99 106 107 113 119]
[0 18 36 46 77 79 81 83 85 86 99 106 107 113 118 119]
[0 18 36 46 77 79 81 83 85 86 99 106 107 113 116 119]
[0 18 36 46 77 79 81 83 85 86 99 106 107 113 116 118 119]
[0 18 36 46 77 79 81 83 85 86 99 106 107 111 119]
[0 18 36 46 77 79 81 83 85 86 99 106 107 111 113 119]
[0 18 36 46 77 79 81 83 85 86 99 106 107 111 113 118 119]
[0 18 36 46 77 79 81 83 85 86 99 106 107 111 113 116 119]
[0 18 36 46 77 79 81 83 85 86 99 106 107 111 113 116 118 119]
[0 18 36 46 54 121]
[0 18 36 46 54 76 77 79 86 119]
[0 18 36 46 54 76 77 79 86 118 119]
[0 18 36 46 54 76 77 79 86 111 119]
[0 18 36 46 54 76 77 79 86 111 113 119]
[0 18 36 46 54 76 77 79 86 111 113 118 119]
[0 18 36 46 54 76 77 79 86 111 113 116 119]
[0 18 36 46 54 76 77 79 86 111 113 116 118 119]
[0 18 36 46 54 76 77 79 86 107 119]
[0 18 36 46 54 76 77 79 86 107 116 119]
[0 18 36 46 54 76 77 79 86 107 116 118 119]
[0 18 36 46 54 76 77 79 86 107 113 119]
[0 18 36 46 54 76 77 79 86 107 113 118 119]
[0 18 36 46 54 76 77 79 86 107 113 116 119]
[0 18 36 46 54 76 77 79 86 107 113 116 118 119]
[0 18 36 46 54 76 77 79 86 107 111 119]
[0 18 36 46 54 76 77 79 86 107 111 113 119]
[0 18 36 46 54 76 77 79 86 107 111 113 118 119]
[0 18 36 46 54 76 77 79 86 107 111 113 116 119]
[0 18 36 46 54 76 77 79 86 107 111 113 116 118 119]
[0 18 36 46 54 76 77 79 86 99 106 107 119]
[0 18 36 46 54 76 77 79 86 99 106 107 116 119]
[0 18 36 46 54 76 77 79 86 99 106 107 116 118 119]
[0 18 36 46 54 76 77 79 86 99 106 107 113 119]
[0 18 36 46 54 76 77 79 86 99 106 107 113 118 119]
[0 18 36 46 54 76 77 79 86 99 106 107 113 116 119]
[0 18 36 46 54 76 77 79 86 99 106 107 113 116 118 119]
[0 18 36 46 54 76 77 79 86 99 106 107 111 119]
[0 18 36 46 54 76 77 79 86 99 106 107 111 113 119]
[0 18 36 46 54 76 77 79 86 99 106 107 111 113 118 119]
[0 18 36 46 54 76 77 79 86 99 106 107 111 113 116 119]
[0 18 36 46 54 76 77 79 86 99 106 107 111 113 116 118 119]
[0 18 36 46 54 76 77 79 81 86 119]
[0 18 36 46 54 76 77 79 81 86 118 119]
[0 18 36 46 54 76 77 79 81 86 111 119]
[0 18 36 46 54 76 77 79 81 86 111 113 119]
[0 18 36 46 54 76 77 79 81 86 111 113 118 119]
[0 18 36 46 54 76 77 79 81 86 111 113 116 119]
[0 18 36 46 54 76 77 79 81 86 111 113 116 118 119]
[0 18 36 46 54 76 77 79 81 86 107 119]
[0 18 36 46 54 76 77 79 81 86 107 116 119]
[0 18 36 46 54 76 77 79 81 86 107 116 118 119]
[0 18 36 46 54 76 77 79 81 86 107 113 119]
[0 18 36 46 54 76 77 79 81 86 107 113 118 119]
[0 18 36 46 54 76 77 79 81 86 107 113 116 119]
[0 18 36 46 54 76 77 79 81 86 107 113 116 118 119]
[0 18 36 46 54 76 77 79 81 86 107 111 119]
[0 18 36 46 54 76 77 79 81 86 107 111 113 119]
[0 18 36 46 54 76 77 79 81 86 107 111 113 118 119]
[0 18 36 46 54 76 77 79 81 86 107 111 113 116 119]
[0 18 36 46 54 76 77 79 81 86 107 111 113 116 118 119]
[0 18 36 46 54 76 77 79 81 86 99 106 107 119]
[0 18 36 46 54 76 77 79 81 86 99 106 107 116 119]
[0 18 36 46 54 76 77 79 81 86 99 106 107 116 118 119]
[0 18 36 46 54 76 77 79 81 86 99 106 107 113 119]
[0 18 36 46 54 76 77 79 81 86 99 106 107 113 118 119]
[0 18 36 46 54 76 77 79 81 86 99 106 107 113 116 119]
[0 18 36 46 54 76 77 79 81 86 99 106 107 113 116 118 119]
[0 18 36 46 54 76 77 79 81 86 99 106 107 111 119]
[0 18 36 46 54 76 77 79 81 86 99 106 107 111 113 119]
[0 18 36 46 54 76 77 79 81 86 99 106 107 111 113 118 119]
[0 18 36 46 54 76 77 79 81 86 99 106 107 111 113 116 119]
[0 18 36 46 54 76 77 79 81 86 99 106 107 111 113 116 118 119]
[0 18 36 46 54 76 77 79 81 83 85 86 119]
[0 18 36 46 54 76 77 79 81 83 85 86 118 119]
[0 18 36 46 54 76 77 79 81 83 85 86 111 119]
[0 18 36 46 54 76 77 79 81 83 85 86 111 113 119]
[0 18 36 46 54 76 77 79 81 83 85 86 111 113 118 119]
[0 18 36 46 54 76 77 79 81 83 85 86 111 113 116 119]
[0 18 36 46 54 76 77 79 81 83 85 86 111 113 116 118 119]
[0 18 36 46 54 76 77 79 81 83 85 86 107 119]
[0 18 36 46 54 76 77 79 81 83 85 86 107 116 119]
[0 18 36 46 54 76 77 79 81 83 85 86 107 116 118 119]
[0 18 36 46 54 76 77 79 81 83 85 86 107 113 119]
[0 18 36 46 54 76 77 79 81 83 85 86 107 113 118 119]
[0 18 36 46 54 76 77 79 81 83 85 86 107 113 116 119]
[0 18 36 46 54 76 77 79 81 83 85 86 107 113 116 118 119]
[0 18 36 46 54 76 77 79 81 83 85 86 107 111 119]
[0 18 36 46 54 76 77 79 81 83 85 86 107 111 113 119]
[0 18 36 46 54 76 77 79 81 83 85 86 107 111 113 118 119]
[0 18 36 46 54 76 77 79 81 83 85 86 107 111 113 116 119]
[0 18 36 46 54 76 77 79 81 83 85 86 107 111 113 116 118 119]
[0 18 36 46 54 76 77 79 81 83 85 86 99 106 107 119]
[0 18 36 46 54 76 77 79 81 83 85 86 99 106 107 116 119]
[0 18 36 46 54 76 77 79 81 83 85 86 99 106 107 116 118 119]
[0 18 36 46 54 76 77 79 81 83 85 86 99 106 107 113 119]
[0 18 36 46 54 76 77 79 81 83 85 86 99 106 107 113 118 119]
[0 18 36 46 54 76 77 79 81 83 85 86 99 106 107 113 116 119]
[0 18 36 46 54 76 77 79 81 83 85 86 99 106 107 113 116 118 119]
[0 18 36 46 54 76 77 79 81 83 85 86 99 106 107 111 119]
[0 18 36 46 54 76 77 79 81 83 85 86 99 106 107 111 113 119]
[0 18 36 46 54 76 77 79 81 83 85 86 99 106 107 111 113 118 119]
[0 18 36 46 54 76 77 79 81 83 85 86 99 106 107 111 113 116 119]
[0 18 36 46 54 76 77 79 81 83 85 86 99 106 107 111 113 116 118 119]
[0 18 31 35 36 86 119]
[0 18 31 35 36 86 118 119]
[0 18 31 35 36 86 111 119]
[0 18 31 35 36 86 111 113 119]
[0 18 31 35 36 86 111 113 118 119]
[0 18 31 35 36 86 111 113 116 119]
[0 18 31 35 36 86 111 113 116 118 119]
[0 18 31 35 36 86 107 119]
[0 18 31 35 36 86 107 116 119]
[0 18 31 35 36 86 107 116 118 119]
[0 18 31 35 36 86 107 113 119]
[0 18 31 35 36 86 107 113 118 119]
[0 18 31 35 36 86 107 113 116 119]
[0 18 31 35 36 86 107 113 116 118 119]
[0 18 31 35 36 86 107 111 119]
[0 18 31 35 36 86 107 111 113 119]
[0 18 31 35 36 86 107 111 113 118 119]
[0 18 31 35 36 86 107 111 113 116 119]
[0 18 31 35 36 86 107 111 113 116 118 119]
[0 18 31 35 36 86 99 106 107 119]
[0 18 31 35 36 86 99 106 107 116 119]
[0 18 31 35 36 86 99 106 107 116 118 119]
[0 18 31 35 36 86 99 106 107 113 119]
[0 18 31 35 36 86 99 106 107 113 118 119]
[0 18 31 35 36 86 99 106 107 113 116 119]
[0 18 31 35 36 86 99 106 107 113 116 118 119]
[0 18 31 35 36 86 99 106 107 111 119]
[0 18 31 35 36 86 99 106 107 111 113 119]
[0 18 31 35 36 86 99 106 107 111 113 118 119]
[0 18 31 35 36 86 99 106 107 111 113 116 119]
[0 18 31 35 36 86 99 106 107 111 113 116 118 119]
[0 18 31 35 36 46 77 79 86 119]
[0 18 31 35 36 46 77 79 86 118 119]
[0 18 31 35 36 46 77 79 86 111 119]
[0 18 31 35 36 46 77 79 86 111 113 119]
[0 18 31 35 36 46 77 79 86 111 113 118 119]
[0 18 31 35 36 46 77 79 86 111 113 116 119]
[0 18 31 35 36 46 77 79 86 111 113 116 118 119]
[0 18 31 35 36 46 77 79 86 107 119]
[0 18 31 35 36 46 77 79 86 107 116 119]
[0 18 31 35 36 46 77 79 86 107 116 118 119]
[0 18 31 35 36 46 77 79 86 107 113 119]
[0 18 31 35 36 46 77 79 86 107 113 118 119]
[0 18 31 35 36 46 77 79 86 107 113 116 119]
[0 18 31 35 36 46 77 79 86 107 113 116 118 119]
[0 18 31 35 36 46 77 79 86 107 111 119]
[0 18 31 35 36 46 77 79 86 107 111 113 119]
[0 18 31 35 36 46 77 79 86 107 111 113 118 119]
[0 18 31 35 36 46 77 79 86 107 111 113 116 119]
[0 18 31 35 36 46 77 79 86 107 111 113 116 118 119]
[0 18 31 35 36 46 77 79 86 99 106 107 119]
[0 18 31 35 36 46 77 79 86 99 106 107 116 119]
[0 18 31 35 36 46 77 79 86 99 106 107 116 118 119]
[0 18 31 35 36 46 77 79 86 99 106 107 113 119]
[0 18 31 35 36 46 77 79 86 99 106 107 113 118 119]
[0 18 31 35 36 46 77 79 86 99 106 107 113 116 119]
[0 18 31 35 36 46 77 79 86 99 106 107 113 116 118 119]
[0 18 31 35 36 46 77 79 86 99 106 107 111 119]
[0 18 31 35 36 46 77 79 86 99 106 107 111 113 119]
[0 18 31 35 36 46 77 79 86 99 106 107 111 113 118 119]
[0 18 31 35 36 46 77 79 86 99 106 107 111 113 116 119]
[0 18 31 35 36 46 77 79 86 99 106 107 111 113 116 118 119]
[0 18 31 35 36 46 77 79 81 86 119]
[0 18 31 35 36 46 77 79 81 86 118 119]
[0 18 31 35 36 46 77 79 81 86 111 119]
[0 18 31 35 36 46 77 79 81 86 111 113 119]
[0 18 31 35 36 46 77 79 81 86 111 113 118 119]
[0 18 31 35 36 46 77 79 81 86 111 113 116 119]
[0 18 31 35 36 46 77 79 81 86 111 113 116 118 119]
[0 18 31 35 36 46 77 79 81 86 107 119]
[0 18 31 35 36 46 77 79 81 86 107 116 119]
[0 18 31 35 36 46 77 79 81 86 107 116 118 119]
[0 18 31 35 36 46 77 79 81 86 107 113 119]
[0 18 31 35 36 46 77 79 81 86 107 113 118 119]
[0 18 31 35 36 46 77 79 81 86 107 113 116 119]
[0 18 31 35 36 46 77 79 81 86 107 113 116 118 119]
[0 18 31 35 36 46 77 79 81 86 107 111 119]
[0 18 31 35 36 46 77 79 81 86 107 111 113 119]
[0 18 31 35 36 46 77 79 81 86 107 111 113 118 119]
[0 18 31 35 36 46 77 79 81 86 107 111 113 116 119]
[0 18 31 35 36 46 77 79 81 86 107 111 113 116 118 119]
[0 18 31 35 36 46 77 79 81 86 99 106 107 119]
[0 18 31 35 36 46 77 79 81 86 99 106 107 116 119]
[0 18 31 35 36 46 77 79 81 86 99 106 107 116 118 119]
[0 18 31 35 36 46 77 79 81 86 99 106 107 113 119]
[0 18 31 35 36 46 77 79 81 86 99 106 107 113 118 119]
[0 18 31 35 36 46 77 79 81 86 99 106 107 113 116 119]
[0 18 31 35 36 46 77 79 81 86 99 106 107 113 116 118 119]
[0 18 31 35 36 46 77 79 81 86 99 106 107 111 119]
[0 18 31 35 36 46 77 79 81 86 99 106 107 111 113 119]
[0 18 31 35 36 46 77 79 81 86 99 106 107 111 113 118 119]
[0 18 31 35 36 46 77 79 81 86 99 106 107 111 113 116 119]
[0 18 31 35 36 46 77 79 81 86 99 106 107 111 113 116 118 119]
[0 18 31 35 36 46 77 79 81 83 85 86 119]
[0 18 31 35 36 46 77 79 81 83 85 86 118 119]
[0 18 31 35 36 46 77 79 81 83 85 86 111 119]
[0 18 31 35 36 46 77 79 81 83 85 86 111 113 119]
[0 18 31 35 36 46 77 79 81 83 85 86 111 113 118 119]
[0 18 31 35 36 46 77 79 81 83 85 86 111 113 116 119]
[0 18 31 35 36 46 77 79 81 83 85 86 111 113 116 118 119]
[0 18 31 35 36 46 77 79 81 83 85 86 107 119]
[0 18 31 35 36 46 77 79 81 83 85 86 107 116 119]
[0 18 31 35 36 46 77 79 81 83 85 86 107 116 118 119]
[0 18 31 35 36 46 77 79 81 83 85 86 107 113 119]
[0 18 31 35 36 46 77 79 81 83 85 86 107 113 118 119]
[0 18 31 35 36 46 77 79 81 83 85 86 107 113 116 119]
[0 18 31 35 36 46 77 79 81 83 85 86 107 113 116 118 119]
[0 18 31 35 36 46 77 79 81 83 85 86 107 111 119]
[0 18 31 35 36 46 77 79 81 83 85 86 107 111 113 119]
[0 18 31 35 36 46 77 79 81 83 85 86 107 111 113 118 119]
[0 18 31 35 36 46 77 79 81 83 85 86 107 111 113 116 119]
[0 18 31 35 36 46 77 79 81 83 85 86 107 111 113 116 118 119]
[0 18 31 35 36 46 77 79 81 83 85 86 99 106 107 119]
[0 18 31 35 36 46 77 79 81 83 85 86 99 106 107 116 119]
[0 18 31 35 36 46 77 79 81 83 85 86 99 106 107 116 118 119]
[0 18 31 35 36 46 77 79 81 83 85 86 99 106 107 113 119]
[0 18 31 35 36 46 77 79 81 83 85 86 99 106 107 113 118 119]
[0 18 31 35 36 46 77 79 81 83 85 86 99 106 107 113 116 119]
[0 18 31 35 36 46 77 79 81 83 85 86 99 106 107 113 116 118 119]
[0 18 31 35 36 46 77 79 81 83 85 86 99 106 107 111 119]
[0 18 31 35 36 46 77 79 81 83 85 86 99 106 107 111 113 119]
[0 18 31 35 36 46 77 79 81 83 85 86 99 106 107 111 113 118 119]
[0 18 31 35 36 46 77 79 81 83 85 86 99 106 107 111 113 116 119]
[0 18 31 35 36 46 77 79 81 83 85 86 99 106 107 111 113 116 118 119]
[0 18 31 35 36 46 54 121]
[0 18 31 35 36 46 54 76 77 79 86 119]
[0 18 31 35 36 46 54 76 77 79 86 118 119]
[0 18 31 35 36 46 54 76 77 79 86 111 119]
[0 18 31 35 36 46 54 76 77 79 86 111 113 119]
[0 18 31 35 36 46 54 76 77 79 86 111 113 118 119]
[0 18 31 35 36 46 54 76 77 79 86 111 113 116 119]
[0 18 31 35 36 46 54 76 77 79 86 111 113 116 118 119]
[0 18 31 35 36 46 54 76 77 79 86 107 119]
[0 18 31 35 36 46 54 76 77 79 86 107 116 119]
[0 18 31 35 36 46 54 76 77 79 86 107 116 118 119]
[0 18 31 35 36 46 54 76 77 79 86 107 113 119]
[0 18 31 35 36 46 54 76 77 79 86 107 113 118 119]
[0 18 31 35 36 46 54 76 77 79 86 107 113 116 119]
[0 18 31 35 36 46 54 76 77 79 86 107 113 116 118 119]
[0 18 31 35 36 46 54 76 77 79 86 107 111 119]
[0 18 31 35 36 46 54 76 77 79 86 107 111 113 119]
[0 18 31 35 36 46 54 76 77 79 86 107 111 113 118 119]
[0 18 31 35 36 46 54 76 77 79 86 107 111 113 116 119]
[0 18 31 35 36 46 54 76 77 79 86 107 111 113 116 118 119]
[0 18 31 35 36 46 54 76 77 79 86 99 106 107 119]
[0 18 31 35 36 46 54 76 77 79 86 99 106 107 116 119]
[0 18 31 35 36 46 54 76 77 79 86 99 106 107 116 118 119]
[0 18 31 35 36 46 54 76 77 79 86 99 106 107 113 119]
[0 18 31 35 36 46 54 76 77 79 86 99 106 107 113 118 119]
[0 18 31 35 36 46 54 76 77 79 86 99 106 107 113 116 119]
[0 18 31 35 36 46 54 76 77 79 86 99 106 107 113 116 118 119]
[0 18 31 35 36 46 54 76 77 79 86 99 106 107 111 119]
[0 18 31 35 36 46 54 76 77 79 86 99 106 107 111 113 119]
[0 18 31 35 36 46 54 76 77 79 86 99 106 107 111 113 118 119]
[0 18 31 35 36 46 54 76 77 79 86 99 106 107 111 113 116 119]
[0 18 31 35 36 46 54 76 77 79 86 99 106 107 111 113 116 118 119]
[0 18 31 35 36 46 54 76 77 79 81 86 119]
[0 18 31 35 36 46 54 76 77 79 81 86 118 119]
[0 18 31 35 36 46 54 76 77 79 81 86 111 119]
[0 18 31 35 36 46 54 76 77 79 81 86 111 113 119]
[0 18 31 35 36 46 54 76 77 79 81 86 111 113 118 119]
[0 18 31 35 36 46 54 76 77 79 81 86 111 113 116 119]
[0 18 31 35 36 46 54 76 77 79 81 86 111 113 116 118 119]
[0 18 31 35 36 46 54 76 77 79 81 86 107 119]
[0 18 31 35 36 46 54 76 77 79 81 86 107 116 119]
[0 18 31 35 36 46 54 76 77 79 81 86 107 116 118 119]
[0 18 31 35 36 46 54 76 77 79 81 86 107 113 119]
[0 18 31 35 36 46 54 76 77 79 81 86 107 113 118 119]
[0 18 31 35 36 46 54 76 77 79 81 86 107 113 116 119]
[0 18 31 35 36 46 54 76 77 79 81 86 107 113 116 118 119]
[0 18 31 35 36 46 54 76 77 79 81 86 107 111 119]
[0 18 31 35 36 46 54 76 77 79 81 86 107 111 113 119]
[0 18 31 35 36 46 54 76 77 79 81 86 107 111 113 118 119]
[0 18 31 35 36 46 54 76 77 79 81 86 107 111 113 116 119]
[0 18 31 35 36 46 54 76 77 79 81 86 107 111 113 116 118 119]
[0 18 31 35 36 46 54 76 77 79 81 86 99 106 107 119]
[0 18 31 35 36 46 54 76 77 79 81 86 99 106 107 116 119]
[0 18 31 35 36 46 54 76 77 79 81 86 99 106 107 116 118 119]
[0 18 31 35 36 46 54 76 77 79 81 86 99 106 107 113 119]
[0 18 31 35 36 46 54 76 77 79 81 86 99 106 107 113 118 119]
[0 18 31 35 36 46 54 76 77 79 81 86 99 106 107 113 116 119]
[0 18 31 35 36 46 54 76 77 79 81 86 99 106 107 113 116 118 119]
[0 18 31 35 36 46 54 76 77 79 81 86 99 106 107 111 119]
[0 18 31 35 36 46 54 76 77 79 81 86 99 106 107 111 113 119]
[0 18 31 35 36 46 54 76 77 79 81 86 99 106 107 111 113 118 119]
[0 18 31 35 36 46 54 76 77 79 81 86 99 106 107 111 113 116 119]
[0 18 31 35 36 46 54 76 77 79 81 86 99 106 107 111 113 116 118 119]
[0 18 31 35 36 46 54 76 77 79 81 83 85 86 119]
[0 18 31 35 36 46 54 76 77 79 81 83 85 86 118 119]
[0 18 31 35 36 46 54 76 77 79 81 83 85 86 111 119]
[0 18 31 35 36 46 54 76 77 79 81 83 85 86 111 113 119]
[0 18 31 35 36 46 54 76 77 79 81 83 85 86 111 113 118 119]
[0 18 31 35 36 46 54 76 77 79 81 83 85 86 111 113 116 119]
[0 18 31 35 36 46 54 76 77 79 81 83 85 86 111 113 116 118 119]
[0 18 31 35 36 46 54 76 77 79 81 83 85 86 107 119]
[0 18 31 35 36 46 54 76 77 79 81 83 85 86 107 116 119]
[0 18 31 35 36 46 54 76 77 79 81 83 85 86 107 116 118 119]
[0 18 31 35 36 46 54 76 77 79 81 83 85 86 107 113 119]
[0 18 31 35 36 46 54 76 77 79 81 83 85 86 107 113 118 119]
[0 18 31 35 36 46 54 76 77 79 81 83 85 86 107 113 116 119]
[0 18 31 35 36 46 54 76 77 79 81 83 85 86 107 113 116 118 119]
[0 18 31 35 36 46 54 76 77 79 81 83 85 86 107 111 119]
[0 18 31 35 36 46 54 76 77 79 81 83 85 86 107 111 113 119]
[0 18 31 35 36 46 54 76 77 79 81 83 85 86 107 111 113 118 119]
[0 18 31 35 36 46 54 76 77 79 81 83 85 86 107 111 113 116 119]
[0 18 31 35 36 46 54 76 77 79 81 83 85 86 107 111 113 116 118 119]
[0 18 31 35 36 46 54 76 77 79 81 83 85 86 99 106 107 119]
[0 18 31 35 36 46 54 76 77 79 81 83 85 86 99 106 107 116 119]
[0 18 31 35 36 46 54 76 77 79 81 83 85 86 99 106 107 116 118 119]
[0 18 31 35 36 46 54 76 77 79 81 83 85 86 99 106 107 113 119]
[0 18 31 35 36 46 54 76 77 79 81 83 85 86 99 106 107 113 118 119]
[0 18 31 35 36 46 54 76 77 79 81 83 85 86 99 106 107 113 116 119]
[0 18 31 35 36 46 54 76 77 79 81 83 85 86 99 106 107 113 116 118 119]
[0 18 31 35 36 46 54 76 77 79 81 83 85 86 99 106 107 111 119]
[0 18 31 35 36 46 54 76 77 79 81 83 85 86 99 106 107 111 113 119]
[0 18 31 35 36 46 54 76 77 79 81 83 85 86 99 106 107 111 113 118 119]
[0 18 31 35 36 46 54 76 77 79 81 83 85 86 99 106 107 111 113 116 119]
[0 18 31 35 36 46 54 76 77 79 81 83 85 86 99 106 107 111 113 116 118 119]
[0 10 81 86 119]
[0 10 81 86 118 119]
[0 10 81 86 111 119]
[0 10 81 86 111 113 119]
[0 10 81 86 111 113 118 119]
[0 10 81 86 111 113 116 119]
[0 10 81 86 111 113 116 118 119]
[0 10 81 86 107 119]
[0 10 81 86 107 116 119]
[0 10 81 86 107 116 118 119]
[0 10 81 86 107 113 119]
[0 10 81 86 107 113 118 119]
[0 10 81 86 107 113 116 119]
[0 10 81 86 107 113 116 118 119]
[0 10 81 86 107 111 119]
[0 10 81 86 107 111 113 119]
[0 10 81 86 107 111 113 118 119]
[0 10 81 86 107 111 113 116 119]
[0 10 81 86 107 111 113 116 118 119]
[0 10 81 86 99 106 107 119]
[0 10 81 86 99 106 107 116 119]
[0 10 81 86 99 106 107 116 118 119]
[0 10 81 86 99 106 107 113 119]
[0 10 81 86 99 106 107 113 118 119]
[0 10 81 86 99 106 107 113 116 119]
[0 10 81 86 99 106 107 113 116 118 119]
[0 10 81 86 99 106 107 111 119]
[0 10 81 86 99 106 107 111 113 119]
[0 10 81 86 99 106 107 111 113 118 119]
[0 10 81 86 99 106 107 111 113 116 119]
[0 10 81 86 99 106 107 111 113 116 118 119]
[0 10 81 83 85 86 119]
[0 10 81 83 85 86 118 119]
[0 10 81 83 85 86 111 119]
[0 10 81 83 85 86 111 113 119]
[0 10 81 83 85 86 111 113 118 119]
[0 10 81 83 85 86 111 113 116 119]
[0 10 81 83 85 86 111 113 116 118 119]
[0 10 81 83 85 86 107 119]
[0 10 81 83 85 86 107 116 119]
[0 10 81 83 85 86 107 116 118 119]
[0 10 81 83 85 86 107 113 119]
[0 10 81 83 85 86 107 113 118 119]
[0 10 81 83 85 86 107 113 116 119]
[0 10 81 83 85 86 107 113 116 118 119]
[0 10 81 83 85 86 107 111 119]
[0 10 81 83 85 86 107 111 113 119]
[0 10 81 83 85 86 107 111 113 118 119]
[0 10 81 83 85 86 107 111 113 116 119]
[0 10 81 83 85 86 107 111 113 116 118 119]
[0 10 81 83 85 86 99 106 107 119]
[0 10 81 83 85 86 99 106 107 116 119]
[0 10 81 83 85 86 99 106 107 116 118 119]
[0 10 81 83 85 86 99 106 107 113 119]
[0 10 81 83 85 86 99 106 107 113 118 119]
[0 10 81 83 85 86 99 106 107 113 116 119]
[0 10 81 83 85 86 99 106 107 113 116 118 119]
[0 10 81 83 85 86 99 106 107 111 119]
[0 10 81 83 85 86 99 106 107 111 113 119]
[0 10 81 83 85 86 99 106 107 111 113 118 119]
[0 10 81 83 85 86 99 106 107 111 113 116 119]
[0 10 81 83 85 86 99 106 107 111 113 116 118 119]
[0 10 13 15 17 18 36 86 119]
[0 10 13 15 17 18 36 86 118 119]
[0 10 13 15 17 18 36 86 111 119]
[0 10 13 15 17 18 36 86 111 113 119]
[0 10 13 15 17 18 36 86 111 113 118 119]
[0 10 13 15 17 18 36 86 111 113 116 119]
[0 10 13 15 17 18 36 86 111 113 116 118 119]
[0 10 13 15 17 18 36 86 107 119]
[0 10 13 15 17 18 36 86 107 116 119]
[0 10 13 15 17 18 36 86 107 116 118 119]
[0 10 13 15 17 18 36 86 107 113 119]
[0 10 13 15 17 18 36 86 107 113 118 119]
[0 10 13 15 17 18 36 86 107 113 116 119]
[0 10 13 15 17 18 36 86 107 113 116 118 119]
[0 10 13 15 17 18 36 86 107 111 119]
[0 10 13 15 17 18 36 86 107 111 113 119]
[0 10 13 15 17 18 36 86 107 111 113 118 119]
[0 10 13 15 17 18 36 86 107 111 113 116 119]
[0 10 13 15 17 18 36 86 107 111 113 116 118 119]
[0 10 13 15 17 18 36 86 99 106 107 119]
[0 10 13 15 17 18 36 86 99 106 107 116 119]
[0 10 13 15 17 18 36 86 99 106 107 116 118 119]
[0 10 13 15 17 18 36 86 99 106 107 113 119]
[0 10 13 15 17 18 36 86 99 106 107 113 118 119]
[0 10 13 15 17 18 36 86 99 106 107 113 116 119]
[0 10 13 15 17 18 36 86 99 106 107 113 116 118 119]
[0 10 13 15 17 18 36 86 99 106 107 111 119]
[0 10 13 15 17 18 36 86 99 106 107 111 113 119]
[0 10 13 15 17 18 36 86 99 106 107 111 113 118 119]
[0 10 13 15 17 18 36 86 99 106 107 111 113 116 119]
[0 10 13 15 17 18 36 86 99 106 107 111 113 116 118 119]
[0 10 13 15 17 18 36 46 77 79 86 119]
[0 10 13 15 17 18 36 46 77 79 86 118 119]
[0 10 13 15 17 18 36 46 77 79 86 111 119]
[0 10 13 15 17 18 36 46 77 79 86 111 113 119]
[0 10 13 15 17 18 36 46 77 79 86 111 113 118 119]
[0 10 13 15 17 18 36 46 77 79 86 111 113 116 119]
[0 10 13 15 17 18 36 46 77 79 86 111 113 116 118 119]
[0 10 13 15 17 18 36 46 77 79 86 107 119]
[0 10 13 15 17 18 36 46 77 79 86 107 116 119]
[0 10 13 15 17 18 36 46 77 79 86 107 116 118 119]
[0 10 13 15 17 18 36 46 77 79 86 107 113 119]
[0 10 13 15 17 18 36 46 77 79 86 107 113 118 119]
[0 10 13 15 17 18 36 46 77 79 86 107 113 116 119]
[0 10 13 15 17 18 36 46 77 79 86 107 113 116 118 119]
[0 10 13 15 17 18 36 46 77 79 86 107 111 119]
[0 10 13 15 17 18 36 46 77 79 86 107 111 113 119]
[0 10 13 15 17 18 36 46 77 79 86 107 111 113 118 119]
[0 10 13 15 17 18 36 46 77 79 86 107 111 113 116 119]
[0 10 13 15 17 18 36 46 77 79 86 107 111 113 116 118 119]
[0 10 13 15 17 18 36 46 77 79 86 99 106 107 119]
[0 10 13 15 17 18 36 46 77 79 86 99 106 107 116 119]
[0 10 13 15 17 18 36 46 77 79 86 99 106 107 116 118 119]
[0 10 13 15 17 18 36 46 77 79 86 99 106 107 113 119]
[0 10 13 15 17 18 36 46 77 79 86 99 106 107 113 118 119]
[0 10 13 15 17 18 36 46 77 79 86 99 106 107 113 116 119]
[0 10 13 15 17 18 36 46 77 79 86 99 106 107 113 116 118 119]
[0 10 13 15 17 18 36 46 77 79 86 99 106 107 111 119]
[0 10 13 15 17 18 36 46 77 79 86 99 106 107 111 113 119]
[0 10 13 15 17 18 36 46 77 79 86 99 106 107 111 113 118 119]
[0 10 13 15 17 18 36 46 77 79 86 99 106 107 111 113 116 119]
[0 10 13 15 17 18 36 46 77 79 86 99 106 107 111 113 116 118 119]
[0 10 13 15 17 18 36 46 77 79 81 86 119]
[0 10 13 15 17 18 36 46 77 79 81 86 118 119]
[0 10 13 15 17 18 36 46 77 79 81 86 111 119]
[0 10 13 15 17 18 36 46 77 79 81 86 111 113 119]
[0 10 13 15 17 18 36 46 77 79 81 86 111 113 118 119]
[0 10 13 15 17 18 36 46 77 79 81 86 111 113 116 119]
[0 10 13 15 17 18 36 46 77 79 81 86 111 113 116 118 119]
[0 10 13 15 17 18 36 46 77 79 81 86 107 119]
[0 10 13 15 17 18 36 46 77 79 81 86 107 116 119]
[0 10 13 15 17 18 36 46 77 79 81 86 107 116 118 119]
[0 10 13 15 17 18 36 46 77 79 81 86 107 113 119]
[0 10 13 15 17 18 36 46 77 79 81 86 107 113 118 119]
[0 10 13 15 17 18 36 46 77 79 81 86 107 113 116 119]
[0 10 13 15 17 18 36 46 77 79 81 86 107 113 116 118 119]
[0 10 13 15 17 18 36 46 77 79 81 86 107 111 119]
[0 10 13 15 17 18 36 46 77 79 81 86 107 111 113 119]
[0 10 13 15 17 18 36 46 77 79 81 86 107 111 113 118 119]
[0 10 13 15 17 18 36 46 77 79 81 86 107 111 113 116 119]
[0 10 13 15 17 18 36 46 77 79 81 86 107 111 113 116 118 119]
[0 10 13 15 17 18 36 46 77 79 81 86 99 106 107 119]
[0 10 13 15 17 18 36 46 77 79 81 86 99 106 107 116 119]
[0 10 13 15 17 18 36 46 77 79 81 86 99 106 107 116 118 119]
[0 10 13 15 17 18 36 46 77 79 81 86 99 106 107 113 119]
[0 10 13 15 17 18 36 46 77 79 81 86 99 106 107 113 118 119]
[0 10 13 15 17 18 36 46 77 79 81 86 99 106 107 113 116 119]
[0 10 13 15 17 18 36 46 77 79 81 86 99 106 107 113 116 118 119]
[0 10 13 15 17 18 36 46 77 79 81 86 99 106 107 111 119]
[0 10 13 15 17 18 36 46 77 79 81 86 99 106 107 111 113 119]
[0 10 13 15 17 18 36 46 77 79 81 86 99 106 107 111 113 118 119]
[0 10 13 15 17 18 36 46 77 79 81 86 99 106 107 111 113 116 119]
[0 10 13 15 17 18 36 46 77 79 81 86 99 106 107 111 113 116 118 119]
[0 10 13 15 17 18 36 46 77 79 81 83 85 86 119]
[0 10 13 15 17 18 36 46 77 79 81 83 85 86 118 119]
[0 10 13 15 17 18 36 46 77 79 81 83 85 86 111 119]
[0 10 13 15 17 18 36 46 77 79 81 83 85 86 111 113 119]
[0 10 13 15 17 18 36 46 77 79 81 83 85 86 111 113 118 119]
[0 10 13 15 17 18 36 46 77 79 81 83 85 86 111 113 116 119]
[0 10 13 15 17 18 36 46 77 79 81 83 85 86 111 113 116 118 119]
[0 10 13 15 17 18 36 46 77 79 81 83 85 86 107 119]
[0 10 13 15 17 18 36 46 77 79 81 83 85 86 107 116 119]
[0 10 13 15 17 18 36 46 77 79 81 83 85 86 107 116 118 119]
[0 10 13 15 17 18 36 46 77 79 81 83 85 86 107 113 119]
[0 10 13 15 17 18 36 46 77 79 81 83 85 86 107 113 118 119]
[0 10 13 15 17 18 36 46 77 79 81 83 85 86 107 113 116 119]
[0 10 13 15 17 18 36 46 77 79 81 83 85 86 107 113 116 118 119]
[0 10 13 15 17 18 36 46 77 79 81 83 85 86 107 111 119]
[0 10 13 15 17 18 36 46 77 79 81 83 85 86 107 111 113 119]
[0 10 13 15 17 18 36 46 77 79 81 83 85 86 107 111 113 118 119]
[0 10 13 15 17 18 36 46 77 79 81 83 85 86 107 111 113 116 119]
[0 10 13 15 17 18 36 46 77 79 81 83 85 86 107 111 113 116 118 119]
[0 10 13 15 17 18 36 46 77 79 81 83 85 86 99 106 107 119]
[0 10 13 15 17 18 36 46 77 79 81 83 85 86 99 106 107 116 119]
[0 10 13 15 17 18 36 46 77 79 81 83 85 86 99 106 107 116 118 119]
[0 10 13 15 17 18 36 46 77 79 81 83 85 86 99 106 107 113 119]
[0 10 13 15 17 18 36 46 77 79 81 83 85 86 99 106 107 113 118 119]
[0 10 13 15 17 18 36 46 77 79 81 83 85 86 99 106 107 113 116 119]
[0 10 13 15 17 18 36 46 77 79 81 83 85 86 99 106 107 113 116 118 119]
[0 10 13 15 17 18 36 46 77 79 81 83 85 86 99 106 107 111 119]
[0 10 13 15 17 18 36 46 77 79 81 83 85 86 99 106 107 111 113 119]
[0 10 13 15 17 18 36 46 77 79 81 83 85 86 99 106 107 111 113 118 119]
[0 10 13 15 17 18 36 46 77 79 81 83 85 86 99 106 107 111 113 116 119]
[0 10 13 15 17 18 36 46 77 79 81 83 85 86 99 106 107 111 113 116 118 119]
[0 10 13 15 17 18 36 46 54 121]
[0 10 13 15 17 18 36 46 54 76 77 79 86 119]
[0 10 13 15 17 18 36 46 54 76 77 79 86 118 119]
[0 10 13 15 17 18 36 46 54 76 77 79 86 111 119]
[0 10 13 15 17 18 36 46 54 76 77 79 86 111 113 119]
[0 10 13 15 17 18 36 46 54 76 77 79 86 111 113 118 119]
[0 10 13 15 17 18 36 46 54 76 77 79 86 111 113 116 119]
[0 10 13 15 17 18 36 46 54 76 77 79 86 111 113 116 118 119]
[0 10 13 15 17 18 36 46 54 76 77 79 86 107 119]
[0 10 13 15 17 18 36 46 54 76 77 79 86 107 116 119]
[0 10 13 15 17 18 36 46 54 76 77 79 86 107 116 118 119]
[0 10 13 15 17 18 36 46 54 76 77 79 86 107 113 119]
[0 10 13 15 17 18 36 46 54 76 77 79 86 107 113 118 119]
[0 10 13 15 17 18 36 46 54 76 77 79 86 107 113 116 119]
[0 10 13 15 17 18 36 46 54 76 77 79 86 107 113 116 118 119]
[0 10 13 15 17 18 36 46 54 76 77 79 86 107 111 119]
[0 10 13 15 17 18 36 46 54 76 77 79 86 107 111 113 119]
[0 10 13 15 17 18 36 46 54 76 77 79 86 107 111 113 118 119]
[0 10 13 15 17 18 36 46 54 76 77 79 86 107 111 113 116 119]
[0 10 13 15 17 18 36 46 54 76 77 79 86 107 111 113 116 118 119]
[0 10 13 15 17 18 36 46 54 76 77 79 86 99 106 107 119]
[0 10 13 15 17 18 36 46 54 76 77 79 86 99 106 107 116 119]
[0 10 13 15 17 18 36 46 54 76 77 79 86 99 106 107 116 118 119]
[0 10 13 15 17 18 36 46 54 76 77 79 86 99 106 107 113 119]
[0 10 13 15 17 18 36 46 54 76 77 79 86 99 106 107 113 118 119]
[0 10 13 15 17 18 36 46 54 76 77 79 86 99 106 107 113 116 119]
[0 10 13 15 17 18 36 46 54 76 77 79 86 99 106 107 113 116 118 119]
[0 10 13 15 17 18 36 46 54 76 77 79 86 99 106 107 111 119]
[0 10 13 15 17 18 36 46 54 76 77 79 86 99 106 107 111 113 119]
[0 10 13 15 17 18 36 46 54 76 77 79 86 99 106 107 111 113 118 119]
[0 10 13 15 17 18 36 46 54 76 77 79 86 99 106 107 111 113 116 119]
[0 10 13 15 17 18 36 46 54 76 77 79 86 99 106 107 111 113 116 118 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 86 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 86 118 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 86 111 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 86 111 113 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 86 111 113 118 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 86 111 113 116 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 86 111 113 116 118 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 86 107 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 86 107 116 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 86 107 116 118 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 86 107 113 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 86 107 113 118 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 86 107 113 116 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 86 107 113 116 118 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 86 107 111 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 86 107 111 113 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 86 107 111 113 118 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 86 107 111 113 116 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 86 107 111 113 116 118 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 86 99 106 107 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 86 99 106 107 116 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 86 99 106 107 116 118 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 86 99 106 107 113 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 86 99 106 107 113 118 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 86 99 106 107 113 116 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 86 99 106 107 113 116 118 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 86 99 106 107 111 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 86 99 106 107 111 113 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 86 99 106 107 111 113 118 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 86 99 106 107 111 113 116 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 86 99 106 107 111 113 116 118 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 83 85 86 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 83 85 86 118 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 83 85 86 111 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 83 85 86 111 113 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 83 85 86 111 113 118 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 83 85 86 111 113 116 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 83 85 86 111 113 116 118 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 83 85 86 107 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 83 85 86 107 116 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 83 85 86 107 116 118 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 83 85 86 107 113 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 83 85 86 107 113 118 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 83 85 86 107 113 116 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 83 85 86 107 113 116 118 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 83 85 86 107 111 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 83 85 86 107 111 113 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 83 85 86 107 111 113 118 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 83 85 86 107 111 113 116 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 83 85 86 107 111 113 116 118 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 83 85 86 99 106 107 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 83 85 86 99 106 107 116 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 83 85 86 99 106 107 116 118 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 83 85 86 99 106 107 113 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 83 85 86 99 106 107 113 118 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 83 85 86 99 106 107 113 116 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 83 85 86 99 106 107 113 116 118 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 83 85 86 99 106 107 111 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 83 85 86 99 106 107 111 113 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 83 85 86 99 106 107 111 113 118 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 83 85 86 99 106 107 111 113 116 119]
[0 10 13 15 17 18 36 46 54 76 77 79 81 83 85 86 99 106 107 111 113 116 118 119]
[0 10 13 15 17 18 31 35 36 86 119]
[0 10 13 15 17 18 31 35 36 86 118 119]
[0 10 13 15 17 18 31 35 36 86 111 119]
[0 10 13 15 17 18 31 35 36 86 111 113 119]
[0 10 13 15 17 18 31 35 36 86 111 113 118 119]
[0 10 13 15 17 18 31 35 36 86 111 113 116 119]
[0 10 13 15 17 18 31 35 36 86 111 113 116 118 119]
[0 10 13 15 17 18 31 35 36 86 107 119]
[0 10 13 15 17 18 31 35 36 86 107 116 119]
[0 10 13 15 17 18 31 35 36 86 107 116 118 119]
[0 10 13 15 17 18 31 35 36 86 107 113 119]
[0 10 13 15 17 18 31 35 36 86 107 113 118 119]
[0 10 13 15 17 18 31 35 36 86 107 113 116 119]
[0 10 13 15 17 18 31 35 36 86 107 113 116 118 119]
[0 10 13 15 17 18 31 35 36 86 107 111 119]
[0 10 13 15 17 18 31 35 36 86 107 111 113 119]
[0 10 13 15 17 18 31 35 36 86 107 111 113 118 119]
[0 10 13 15 17 18 31 35 36 86 107 111 113 116 119]
[0 10 13 15 17 18 31 35 36 86 107 111 113 116 118 119]
[0 10 13 15 17 18 31 35 36 86 99 106 107 119]
[0 10 13 15 17 18 31 35 36 86 99 106 107 116 119]
[0 10 13 15 17 18 31 35 36 86 99 106 107 116 118 119]
[0 10 13 15 17 18 31 35 36 86 99 106 107 113 119]
[0 10 13 15 17 18 31 35 36 86 99 106 107 113 118 119]
[0 10 13 15 17 18 31 35 36 86 99 106 107 113 116 119]
[0 10 13 15 17 18 31 35 36 86 99 106 107 113 116 118 119]
[0 10 13 15 17 18 31 35 36 86 99 106 107 111 119]
[0 10 13 15 17 18 31 35 36 86 99 106 107 111 113 119]
[0 10 13 15 17 18 31 35 36 86 99 106 107 111 113 118 119]
[0 10 13 15 17 18 31 35 36 86 99 106 107 111 113 116 119]
[0 10 13 15 17 18 31 35 36 86 99 106 107 111 113 116 118 119]
[0 10 13 15 17 18 31 35 36 46 77 79 86 119]
[0 10 13 15 17 18 31 35 36 46 77 79 86 118 119]
[0 10 13 15 17 18 31 35 36 46 77 79 86 111 119]
[0 10 13 15 17 18 31 35 36 46 77 79 86 111 113 119]
[0 10 13 15 17 18 31 35 36 46 77 79 86 111 113 118 119]
[0 10 13 15 17 18 31 35 36 46 77 79 86 111 113 116 119]
[0 10 13 15 17 18 31 35 36 46 77 79 86 111 113 116 118 119]
[0 10 13 15 17 18 31 35 36 46 77 79 86 107 119]
[0 10 13 15 17 18 31 35 36 46 77 79 86 107 116 119]
[0 10 13 15 17 18 31 35 36 46 77 79 86 107 116 118 119]
[0 10 13 15 17 18 31 35 36 46 77 79 86 107 113 119]
[0 10 13 15 17 18 31 35 36 46 77 79 86 107 113 118 119]
[0 10 13 15 17 18 31 35 36 46 77 79 86 107 113 116 119]
[0 10 13 15 17 18 31 35 36 46 77 79 86 107 113 116 118 119]
[0 10 13 15 17 18 31 35 36 46 77 79 86 107 111 119]
[0 10 13 15 17 18 31 35 36 46 77 79 86 107 111 113 119]
[0 10 13 15 17 18 31 35 36 46 77 79 86 107 111 113 118 119]
[0 10 13 15 17 18 31 35 36 46 77 79 86 107 111 113 116 119]
[0 10 13 15 17 18 31 35 36 46 77 79 86 107 111 113 116 118 119]
[0 10 13 15 17 18 31 35 36 46 77 79 86 99 106 107 119]
[0 10 13 15 17 18 31 35 36 46 77 79 86 99 106 107 116 119]
[0 10 13 15 17 18 31 35 36 46 77 79 86 99 106 107 116 118 119]
[0 10 13 15 17 18 31 35 36 46 77 79 86 99 106 107 113 119]
[0 10 13 15 17 18 31 35 36 46 77 79 86 99 106 107 113 118 119]
[0 10 13 15 17 18 31 35 36 46 77 79 86 99 106 107 113 116 119]
[0 10 13 15 17 18 31 35 36 46 77 79 86 99 106 107 113 116 118 119]
[0 10 13 15 17 18 31 35 36 46 77 79 86 99 106 107 111 119]
[0 10 13 15 17 18 31 35 36 46 77 79 86 99 106 107 111 113 119]
[0 10 13 15 17 18 31 35 36 46 77 79 86 99 106 107 111 113 118 119]
[0 10 13 15 17 18 31 35 36 46 77 79 86 99 106 107 111 113 116 119]
[0 10 13 15 17 18 31 35 36 46 77 79 86 99 106 107 111 113 116 118 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 86 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 86 118 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 86 111 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 86 111 113 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 86 111 113 118 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 86 111 113 116 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 86 111 113 116 118 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 86 107 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 86 107 116 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 86 107 116 118 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 86 107 113 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 86 107 113 118 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 86 107 113 116 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 86 107 113 116 118 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 86 107 111 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 86 107 111 113 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 86 107 111 113 118 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 86 107 111 113 116 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 86 107 111 113 116 118 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 86 99 106 107 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 86 99 106 107 116 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 86 99 106 107 116 118 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 86 99 106 107 113 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 86 99 106 107 113 118 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 86 99 106 107 113 116 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 86 99 106 107 113 116 118 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 86 99 106 107 111 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 86 99 106 107 111 113 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 86 99 106 107 111 113 118 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 86 99 106 107 111 113 116 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 86 99 106 107 111 113 116 118 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 83 85 86 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 83 85 86 118 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 83 85 86 111 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 83 85 86 111 113 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 83 85 86 111 113 118 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 83 85 86 111 113 116 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 83 85 86 111 113 116 118 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 83 85 86 107 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 83 85 86 107 116 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 83 85 86 107 116 118 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 83 85 86 107 113 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 83 85 86 107 113 118 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 83 85 86 107 113 116 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 83 85 86 107 113 116 118 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 83 85 86 107 111 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 83 85 86 107 111 113 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 83 85 86 107 111 113 118 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 83 85 86 107 111 113 116 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 83 85 86 107 111 113 116 118 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 83 85 86 99 106 107 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 83 85 86 99 106 107 116 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 83 85 86 99 106 107 116 118 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 83 85 86 99 106 107 113 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 83 85 86 99 106 107 113 118 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 83 85 86 99 106 107 113 116 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 83 85 86 99 106 107 113 116 118 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 83 85 86 99 106 107 111 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 83 85 86 99 106 107 111 113 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 83 85 86 99 106 107 111 113 118 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 83 85 86 99 106 107 111 113 116 119]
[0 10 13 15 17 18 31 35 36 46 77 79 81 83 85 86 99 106 107 111 113 116 118 119]
[0 10 13 15 17 18 31 35 36 46 54 121]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 86 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 86 118 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 86 111 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 86 111 113 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 86 111 113 118 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 86 111 113 116 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 86 111 113 116 118 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 86 107 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 86 107 116 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 86 107 116 118 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 86 107 113 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 86 107 113 118 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 86 107 113 116 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 86 107 113 116 118 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 86 107 111 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 86 107 111 113 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 86 107 111 113 118 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 86 107 111 113 116 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 86 107 111 113 116 118 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 86 99 106 107 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 86 99 106 107 116 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 86 99 106 107 116 118 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 86 99 106 107 113 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 86 99 106 107 113 118 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 86 99 106 107 113 116 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 86 99 106 107 113 116 118 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 86 99 106 107 111 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 86 99 106 107 111 113 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 86 99 106 107 111 113 118 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 86 99 106 107 111 113 116 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 86 99 106 107 111 113 116 118 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 86 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 86 118 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 86 111 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 86 111 113 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 86 111 113 118 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 86 111 113 116 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 86 111 113 116 118 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 86 107 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 86 107 116 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 86 107 116 118 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 86 107 113 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 86 107 113 118 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 86 107 113 116 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 86 107 113 116 118 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 86 107 111 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 86 107 111 113 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 86 107 111 113 118 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 86 107 111 113 116 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 86 107 111 113 116 118 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 86 99 106 107 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 86 99 106 107 116 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 86 99 106 107 116 118 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 86 99 106 107 113 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 86 99 106 107 113 118 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 86 99 106 107 113 116 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 86 99 106 107 113 116 118 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 86 99 106 107 111 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 86 99 106 107 111 113 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 86 99 106 107 111 113 118 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 86 99 106 107 111 113 116 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 86 99 106 107 111 113 116 118 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 83 85 86 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 83 85 86 118 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 83 85 86 111 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 83 85 86 111 113 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 83 85 86 111 113 118 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 83 85 86 111 113 116 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 83 85 86 111 113 116 118 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 83 85 86 107 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 83 85 86 107 116 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 83 85 86 107 116 118 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 83 85 86 107 113 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 83 85 86 107 113 118 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 83 85 86 107 113 116 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 83 85 86 107 113 116 118 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 83 85 86 107 111 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 83 85 86 107 111 113 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 83 85 86 107 111 113 118 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 83 85 86 107 111 113 116 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 83 85 86 107 111 113 116 118 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 83 85 86 99 106 107 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 83 85 86 99 106 107 116 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 83 85 86 99 106 107 116 118 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 83 85 86 99 106 107 113 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 83 85 86 99 106 107 113 118 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 83 85 86 99 106 107 113 116 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 83 85 86 99 106 107 113 116 118 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 83 85 86 99 106 107 111 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 83 85 86 99 106 107 111 113 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 83 85 86 99 106 107 111 113 118 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 83 85 86 99 106 107 111 113 116 119]
[0 10 13 15 17 18 31 35 36 46 54 76 77 79 81 83 85 86 99 106 107 111 113 116 118 119]
|f188| = list_max([
  list_sum(39, 9, 32, 8);
  list_sum(39, 9, 32, 3, 8);
  list_sum(39, 9, 32, 3, 8);
  list_sum(39, 9, 32, 3, 4, 8);
  list_sum(39, 9, 32, 3, 4, 3, 8);
  list_sum(39, 9, 32, 3, 4, 5, 8);
  list_sum(39, 9, 32, 3, 4, 5, 3, 8);
  list_sum(39, 9, 32, 28, 8);
  list_sum(39, 9, 32, 28, 5, 8);
  list_sum(39, 9, 32, 28, 5, 3, 8);
  list_sum(39, 9, 32, 28, 4, 8);
  list_sum(39, 9, 32, 28, 4, 3, 8);
  list_sum(39, 9, 32, 28, 4, 5, 8);
  list_sum(39, 9, 32, 28, 4, 5, 3, 8);
  list_sum(39, 9, 32, 28, 3, 8);
  list_sum(39, 9, 32, 28, 3, 4, 8);
  list_sum(39, 9, 32, 28, 3, 4, 3, 8);
  list_sum(39, 9, 32, 28, 3, 4, 5, 8);
  list_sum(39, 9, 32, 28, 3, 4, 5, 3, 8);
  list_sum([
    39;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    8
  ]);
  list_sum([
    39;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    8
  ]);
  list_sum([
    39;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    8
  ]);
  list_sum([
    39;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    8
  ]);
  list_sum([
    39;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    8
  ]);
  list_sum([
    39;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    8
  ]);
  list_sum([
    39;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    8
  ]);
  list_sum([
    39;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    8
  ]);
  list_sum([
    39;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    5;
    8
  ]);
  list_sum([
    39;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    4;
    8
  ]);
  list_sum([
    39;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    3;
    8
  ]);
  list_sum([
    39;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    8
  ]);
  list_sum([
    39;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    8
  ]);
  list_sum([
    39;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    8
  ]);
  list_sum([
    39;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    8
  ]);
  list_sum([
    39;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum(39, 89, 88, 32, 8);
  list_sum(39, 89, 88, 32, 3, 8);
  list_sum(39, 89, 88, 32, 3, 8);
  list_sum(39, 89, 88, 32, 3, 4, 8);
  list_sum(39, 89, 88, 32, 3, 4, 3, 8);
  list_sum(39, 89, 88, 32, 3, 4, 5, 8);
  list_sum(39, 89, 88, 32, 3, 4, 5, 3, 8);
  list_sum(39, 89, 88, 32, 28, 8);
  list_sum(39, 89, 88, 32, 28, 5, 8);
  list_sum(39, 89, 88, 32, 28, 5, 3, 8);
  list_sum(39, 89, 88, 32, 28, 4, 8);
  list_sum(39, 89, 88, 32, 28, 4, 3, 8);
  list_sum(39, 89, 88, 32, 28, 4, 5, 8);
  list_sum(39, 89, 88, 32, 28, 4, 5, 3, 8);
  list_sum(39, 89, 88, 32, 28, 3, 8);
  list_sum(39, 89, 88, 32, 28, 3, 4, 8);
  list_sum(39, 89, 88, 32, 28, 3, 4, 3, 8);
  list_sum(39, 89, 88, 32, 28, 3, 4, 5, 8);
  list_sum(39, 89, 88, 32, 28, 3, 4, 5, 3, 8);
  list_sum([
    39;
    89;
    88;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum(39, 89, 88, 75, 8, 1, 32, 8);
  list_sum(39, 89, 88, 75, 8, 1, 32, 3, 8);
  list_sum(39, 89, 88, 75, 8, 1, 32, 3, 8);
  list_sum(39, 89, 88, 75, 8, 1, 32, 3, 4, 8);
  list_sum(39, 89, 88, 75, 8, 1, 32, 3, 4, 3, 8);
  list_sum(39, 89, 88, 75, 8, 1, 32, 3, 4, 5, 8);
  list_sum(39, 89, 88, 75, 8, 1, 32, 3, 4, 5, 3, 8);
  list_sum(39, 89, 88, 75, 8, 1, 32, 28, 8);
  list_sum(39, 89, 88, 75, 8, 1, 32, 28, 5, 8);
  list_sum(39, 89, 88, 75, 8, 1, 32, 28, 5, 3, 8);
  list_sum(39, 89, 88, 75, 8, 1, 32, 28, 4, 8);
  list_sum(39, 89, 88, 75, 8, 1, 32, 28, 4, 3, 8);
  list_sum(39, 89, 88, 75, 8, 1, 32, 28, 4, 5, 8);
  list_sum(39, 89, 88, 75, 8, 1, 32, 28, 4, 5, 3, 8);
  list_sum(39, 89, 88, 75, 8, 1, 32, 28, 3, 8);
  list_sum(39, 89, 88, 75, 8, 1, 32, 28, 3, 4, 8);
  list_sum(39, 89, 88, 75, 8, 1, 32, 28, 3, 4, 3, 8);
  list_sum(39, 89, 88, 75, 8, 1, 32, 28, 3, 4, 5, 8);
  list_sum(39, 89, 88, 75, 8, 1, 32, 28, 3, 4, 5, 3, 8);
  list_sum([
    39;
    89;
    88;
    75;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum(39, 89, 88, 75, 8, 1, 9, 32, 8);
  list_sum(39, 89, 88, 75, 8, 1, 9, 32, 3, 8);
  list_sum(39, 89, 88, 75, 8, 1, 9, 32, 3, 8);
  list_sum(39, 89, 88, 75, 8, 1, 9, 32, 3, 4, 8);
  list_sum(39, 89, 88, 75, 8, 1, 9, 32, 3, 4, 3, 8);
  list_sum(39, 89, 88, 75, 8, 1, 9, 32, 3, 4, 5, 8);
  list_sum(39, 89, 88, 75, 8, 1, 9, 32, 3, 4, 5, 3, 8);
  list_sum(39, 89, 88, 75, 8, 1, 9, 32, 28, 8);
  list_sum(39, 89, 88, 75, 8, 1, 9, 32, 28, 5, 8);
  list_sum(39, 89, 88, 75, 8, 1, 9, 32, 28, 5, 3, 8);
  list_sum(39, 89, 88, 75, 8, 1, 9, 32, 28, 4, 8);
  list_sum(39, 89, 88, 75, 8, 1, 9, 32, 28, 4, 3, 8);
  list_sum(39, 89, 88, 75, 8, 1, 9, 32, 28, 4, 5, 8);
  list_sum(39, 89, 88, 75, 8, 1, 9, 32, 28, 4, 5, 3, 8);
  list_sum(39, 89, 88, 75, 8, 1, 9, 32, 28, 3, 8);
  list_sum(39, 89, 88, 75, 8, 1, 9, 32, 28, 3, 4, 8);
  list_sum(39, 89, 88, 75, 8, 1, 9, 32, 28, 3, 4, 3, 8);
  list_sum(39, 89, 88, 75, 8, 1, 9, 32, 28, 3, 4, 5, 8);
  list_sum(39, 89, 88, 75, 8, 1, 9, 32, 28, 3, 4, 5, 3, 8);
  list_sum([
    39;
    89;
    88;
    75;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    0
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    28;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    28;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    28;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    28;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    28;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    28;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    28;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    28;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    28;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    28;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    28;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    28;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    28;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    28;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    28;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    28;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    28;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    28;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    28;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    28;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    28;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    28;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    28;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    28;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    28;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    28;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    28;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    28;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    28;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    28;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    28;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    28;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    28;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    28;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    28;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    28;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    28;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    28;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    28;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    28;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    28;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    28;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    28;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    28;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    28;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    28;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    28;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    28;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    28;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    28;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    28;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    28;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    28;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    28;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    28;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    28;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    28;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    28;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    28;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    28;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    0
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    28;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    28;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    28;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    28;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    28;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    28;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    28;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    28;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    28;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    28;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    28;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    28;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    28;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    28;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    28;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    28;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    28;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    28;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    28;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    28;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    28;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    28;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    28;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    28;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum(39, 34, 9, 32, 8);
  list_sum(39, 34, 9, 32, 3, 8);
  list_sum(39, 34, 9, 32, 3, 8);
  list_sum(39, 34, 9, 32, 3, 4, 8);
  list_sum(39, 34, 9, 32, 3, 4, 3, 8);
  list_sum(39, 34, 9, 32, 3, 4, 5, 8);
  list_sum(39, 34, 9, 32, 3, 4, 5, 3, 8);
  list_sum(39, 34, 9, 32, 28, 8);
  list_sum(39, 34, 9, 32, 28, 5, 8);
  list_sum(39, 34, 9, 32, 28, 5, 3, 8);
  list_sum(39, 34, 9, 32, 28, 4, 8);
  list_sum(39, 34, 9, 32, 28, 4, 3, 8);
  list_sum(39, 34, 9, 32, 28, 4, 5, 8);
  list_sum(39, 34, 9, 32, 28, 4, 5, 3, 8);
  list_sum(39, 34, 9, 32, 28, 3, 8);
  list_sum(39, 34, 9, 32, 28, 3, 4, 8);
  list_sum(39, 34, 9, 32, 28, 3, 4, 3, 8);
  list_sum(39, 34, 9, 32, 28, 3, 4, 5, 8);
  list_sum(39, 34, 9, 32, 28, 3, 4, 5, 3, 8);
  list_sum([
    39;
    34;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    8
  ]);
  list_sum([
    39;
    34;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    8
  ]);
  list_sum([
    39;
    34;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    8
  ]);
  list_sum([
    39;
    34;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    8
  ]);
  list_sum([
    39;
    34;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    32;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    32;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    32;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    32;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    32;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    32;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    32;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    32;
    28;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    32;
    28;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    32;
    28;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    32;
    28;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    32;
    28;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    32;
    28;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    32;
    28;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    32;
    28;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    32;
    28;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    32;
    28;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    32;
    28;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    32;
    28;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    32;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    32;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    32;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    32;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    32;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    32;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    32;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    32;
    28;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    32;
    28;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    32;
    28;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    32;
    28;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    32;
    28;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    32;
    28;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    32;
    28;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    32;
    28;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    32;
    28;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    32;
    28;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    32;
    28;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    32;
    28;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    32;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    32;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    32;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    32;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    32;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    32;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    32;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    32;
    28;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    32;
    28;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    32;
    28;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    32;
    28;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    32;
    28;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    32;
    28;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    32;
    28;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    32;
    28;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    32;
    28;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    32;
    28;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    32;
    28;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    32;
    28;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    0
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    28;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    28;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    28;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    28;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    28;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    28;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    28;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    28;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    28;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    28;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    28;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    28;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    28;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    28;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    28;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    28;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    28;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    28;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    28;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    28;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    28;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    28;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    28;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    28;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    28;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    28;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    28;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    28;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    28;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    28;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    28;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    28;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    28;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    28;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    28;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    28;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    28;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    28;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    28;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    28;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    28;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    28;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    28;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    28;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    28;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    28;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    28;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    28;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    28;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    28;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    28;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    28;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    28;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    28;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    28;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    28;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    28;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    28;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    28;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    28;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    0
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    28;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    28;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    28;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    28;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    28;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    28;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    28;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    28;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    28;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    28;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    28;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    28;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    28;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    28;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    28;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    28;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    28;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    28;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    28;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    28;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    28;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    28;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    28;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    28;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    28;
    3;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    4;
    5;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    3;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    8
  ]);
  list_sum([
    39;
    34;
    (21 * (N([ln1], [(ln1 + 1) != 64], [0 + 1], [ln1 + 1]))) + 1;
    15;
    1;
    89;
    (list_max([
      21 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]));
      42 * (N([ln1; ln3], [(ln1 + 1) != ln3], [0; m[60]], [ln1 + 1; ln3]))
    ])) + (list_max(1, 1));
    1;
    88;
    75;
    (list_max([
      41 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      46 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [0], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    7;
    8;
    1;
    9;
    ((20 + |f64|) * (N([ln1; m[60]], [(ln1 + 1) < m[60]], [0 + 1; m[60]], [ln1 + 1; m[60]]))) + 1;
    1;
    32;
    (list_max([
      20 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      22 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]));
      26 * (N([ln2; ln4], [(ln4 + 1) != ln2], [m[60]; 0], [ln2; ln4 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    28;
    3;
    4;
    5;
    3;
    8
  ])
])
