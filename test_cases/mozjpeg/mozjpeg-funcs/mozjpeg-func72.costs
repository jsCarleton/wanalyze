|f72| = list_max([
  list_sum([
    283;
    (22 * (N([ln3; ln5], [((ln3 shl 2) + (ln5 + 1040)) > -1], [((select(((i32.eqz(0)) | (0 > 1000000000)) | (0 == (select((i32.eqz(0)) | (0 > 1000000000), 0, -1))), 0, -1)) + 1) + 1; R(27, 43, i32, 1028, 255, gn0 - 2128)], [m[0] + 1; ln5]))) + 1;
    (23 * (N([ln3; ln5], [((ln3 shl 2) + (ln5 + 1040)) > -1], [(0 + 1) + 1; R(27, 43, i32, 1028, 255, gn0 - 2128)], [m[0] + 1; ln5]))) + 1;
    (list_max([
      28 * (N([ln3], [(ln3 + 1) != 256], [0], [ln3 + 1]));
      18 * (N([ln3], [(ln3 + 1) != 256], [0], [ln3 + 1]))
    ])) + 1;
    (15 * (N([m[0]], [i32.eqz(m[0])], [(((0 + -2) + 1) + 2) + -1], [m[0]]))) + 1;
    (14 * (N([m[0]], [i32.eqz(m[0])], [0], [m[0]]))) + 1;
    (list_max([
      43 * (N([ln3], [(ln3 + 1) != 257], [0], [ln3 + 1]));
      33 * (N([ln3], [(ln3 + 1) != 257], [0], [ln3 + 1]));
      17 * (N([ln3], [(ln3 + 1) != 257], [0], [ln3 + 1]))
    ])) + 1;
    (33 * (N([ln3], [(ln3 + 1) != 257], [0 + 1], [ln3 + 1]))) + 1
  ]);
  list_sum([
    282;
    (22 * (N([ln3; ln5], [((ln3 shl 2) + (ln5 + 1040)) > -1], [((select(((i32.eqz(0)) | (0 > 1000000000)) | (0 == (select((i32.eqz(0)) | (0 > 1000000000), 0, -1))), 0, -1)) + 1) + 1; R(27, 43, i32, 1028, 255, gn0 - 2128)], [m[0] + 1; ln5]))) + 1;
    (list_max([
      28 * (N([ln3], [(ln3 + 1) != 256], [0], [ln3 + 1]));
      18 * (N([ln3], [(ln3 + 1) != 256], [0], [ln3 + 1]))
    ])) + 1;
    (15 * (N([m[0]], [i32.eqz(m[0])], [(((0 + -2) + 1) + 2) + -1], [m[0]]))) + 1;
    (14 * (N([m[0]], [i32.eqz(m[0])], [0], [m[0]]))) + 1;
    (list_max([
      43 * (N([ln3], [(ln3 + 1) != 257], [0], [ln3 + 1]));
      33 * (N([ln3], [(ln3 + 1) != 257], [0], [ln3 + 1]));
      17 * (N([ln3], [(ln3 + 1) != 257], [0], [ln3 + 1]))
    ])) + 1;
    (33 * (N([ln3], [(ln3 + 1) != 257], [0 + 1], [ln3 + 1]))) + 1
  ]);
  list_sum([
    209;
    (list_max([
      28 * (N([ln3], [(ln3 + 1) != 256], [0], [ln3 + 1]));
      18 * (N([ln3], [(ln3 + 1) != 256], [0], [ln3 + 1]))
    ])) + 1;
    (15 * (N([m[0]], [i32.eqz(m[0])], [(((0 + -2) + 1) + 2) + -1], [m[0]]))) + 1;
    (14 * (N([m[0]], [i32.eqz(m[0])], [0], [m[0]]))) + 1;
    (list_max([
      43 * (N([ln3], [(ln3 + 1) != 257], [0], [ln3 + 1]));
      33 * (N([ln3], [(ln3 + 1) != 257], [0], [ln3 + 1]));
      17 * (N([ln3], [(ln3 + 1) != 257], [0], [ln3 + 1]))
    ])) + 1;
    (33 * (N([ln3], [(ln3 + 1) != 257], [0 + 1], [ln3 + 1]))) + 1
  ]);
  list_sum([
    246;
    (22 * (N([ln3; ln5], [((ln3 shl 2) + (ln5 + 1040)) > -1], [((select(((i32.eqz(0)) | (0 > 1000000000)) | (0 == (select((i32.eqz(0)) | (0 > 1000000000), 0, -1))), 0, -1)) + 1) + 1; R(27, 43, i32, 1028, 255, gn0 - 2128)], [m[0] + 1; ln5]))) + 1;
    (23 * (N([ln3; ln5], [((ln3 shl 2) + (ln5 + 1040)) > -1], [(0 + 1) + 1; R(27, 43, i32, 1028, 255, gn0 - 2128)], [m[0] + 1; ln5]))) + 1;
    (list_max([
      28 * (N([ln3], [(ln3 + 1) != 256], [0], [ln3 + 1]));
      18 * (N([ln3], [(ln3 + 1) != 256], [0], [ln3 + 1]))
    ])) + 1;
    (15 * (N([m[0]], [i32.eqz(m[0])], [(((0 + -2) + 1) + 2) + -1], [m[0]]))) + 1;
    (list_max([
      43 * (N([ln3], [(ln3 + 1) != 257], [0], [ln3 + 1]));
      33 * (N([ln3], [(ln3 + 1) != 257], [0], [ln3 + 1]));
      17 * (N([ln3], [(ln3 + 1) != 257], [0], [ln3 + 1]))
    ])) + 1;
    (33 * (N([ln3], [(ln3 + 1) != 257], [0 + 1], [ln3 + 1]))) + 1
  ]);
  list_sum([
    245;
    (22 * (N([ln3; ln5], [((ln3 shl 2) + (ln5 + 1040)) > -1], [((select(((i32.eqz(0)) | (0 > 1000000000)) | (0 == (select((i32.eqz(0)) | (0 > 1000000000), 0, -1))), 0, -1)) + 1) + 1; R(27, 43, i32, 1028, 255, gn0 - 2128)], [m[0] + 1; ln5]))) + 1;
    (list_max([
      28 * (N([ln3], [(ln3 + 1) != 256], [0], [ln3 + 1]));
      18 * (N([ln3], [(ln3 + 1) != 256], [0], [ln3 + 1]))
    ])) + 1;
    (15 * (N([m[0]], [i32.eqz(m[0])], [(((0 + -2) + 1) + 2) + -1], [m[0]]))) + 1;
    (list_max([
      43 * (N([ln3], [(ln3 + 1) != 257], [0], [ln3 + 1]));
      33 * (N([ln3], [(ln3 + 1) != 257], [0], [ln3 + 1]));
      17 * (N([ln3], [(ln3 + 1) != 257], [0], [ln3 + 1]))
    ])) + 1;
    (33 * (N([ln3], [(ln3 + 1) != 257], [0 + 1], [ln3 + 1]))) + 1
  ]);
  list_sum([
    172;
    (list_max([
      28 * (N([ln3], [(ln3 + 1) != 256], [0], [ln3 + 1]));
      18 * (N([ln3], [(ln3 + 1) != 256], [0], [ln3 + 1]))
    ])) + 1;
    (15 * (N([m[0]], [i32.eqz(m[0])], [(((0 + -2) + 1) + 2) + -1], [m[0]]))) + 1;
    (list_max([
      43 * (N([ln3], [(ln3 + 1) != 257], [0], [ln3 + 1]));
      33 * (N([ln3], [(ln3 + 1) != 257], [0], [ln3 + 1]));
      17 * (N([ln3], [(ln3 + 1) != 257], [0], [ln3 + 1]))
    ])) + 1;
    (33 * (N([ln3], [(ln3 + 1) != 257], [0 + 1], [ln3 + 1]))) + 1
  ]);
  list_sum([
    163;
    (22 * (N([ln3; ln5], [((ln3 shl 2) + (ln5 + 1040)) > -1], [((select(((i32.eqz(0)) | (0 > 1000000000)) | (0 == (select((i32.eqz(0)) | (0 > 1000000000), 0, -1))), 0, -1)) + 1) + 1; R(27, 43, i32, 1028, 255, gn0 - 2128)], [m[0] + 1; ln5]))) + 1;
    (23 * (N([ln3; ln5], [((ln3 shl 2) + (ln5 + 1040)) > -1], [(0 + 1) + 1; R(27, 43, i32, 1028, 255, gn0 - 2128)], [m[0] + 1; ln5]))) + 1;
    (33 * (N([ln3], [(ln3 + 1) != 257], [0 + 1], [ln3 + 1]))) + 1
  ]);
  list_sum([
    162;
    (22 * (N([ln3; ln5], [((ln3 shl 2) + (ln5 + 1040)) > -1], [((select(((i32.eqz(0)) | (0 > 1000000000)) | (0 == (select((i32.eqz(0)) | (0 > 1000000000), 0, -1))), 0, -1)) + 1) + 1; R(27, 43, i32, 1028, 255, gn0 - 2128)], [m[0] + 1; ln5]))) + 1;
    (33 * (N([ln3], [(ln3 + 1) != 257], [0 + 1], [ln3 + 1]))) + 1
  ])
])
