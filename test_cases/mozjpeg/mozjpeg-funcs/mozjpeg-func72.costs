ebb costs:
[0]: 46
[1]: (list_max((169 * N([ln6], [((ln6 + 1) != 257)], [(0 + 1)], [0])), (144 * N([ln6], [((ln6 + 1) != 257)], [(0 + 1)], [0])), (195 * N([ln6], [((ln6 + 1) != 257)], [(0 + 1)], [0])), (170 * N([ln6], [((ln6 + 1) != 257)], [(0 + 1)], [0])), (35 * N([ln6], [((ln6 + 1) != 257)], [(0 + 1)], [(ln6 + 1)]))) + list_max(191, 201, 130, 140, 207, 217, 146, 156, 217, 227, 156, 166))
[1]: 36
[3]: ((33 * N([ln3], [((ln3 + 1) != 257)], [(0 + 1)], [(ln3 + 1)])) + 1)
[5]: 7
[7]: (list_max((17 * N([ln3], [((ln3 + 1) != 257)], [0], [(ln3 + 1)])), (33 * N([ln3], [((ln3 + 1) != 257)], [0], [(ln3 + 1)])), (43 * N([ln3], [((ln3 + 1) != 257)], [0], [(ln3 + 1)]))) + list_max(1, 1, 1))
[13]: 3
[14]: (list_max((85 * N([pn2], [(pn2 > 17)], [32], [(pn2 + -1)])), (24 * N([pn2], [(pn2 > 17)], [32], [(pn2 + -1)]))) + list_max(1, 1))
[14]: 25
[19]: ((50 * N([ln5; ln6], [(ln6 + (ln5 + 2080))], [R(27, 43, i32, 1028, 255, (gn0 - 2128)); (32 + -2)], [ln5; ln6])) + 1)
[19]: 3
[20]: ((14 * N([m[0]], [i32.eqz(m[0])], [0], [m[0]])) + 1)
[22]: 33
[24]: 1
[25]: 9
[27]: 3
[28]: ((15 * N([m[0]], [i32.eqz(m[0])], [((((0 + -2) + 1) + 2) + -1)], [m[0]])) + 1)
[30]: 24
[31]: (list_max((29 * N([ln6], [((ln6 + 1) != 33)], [1], [(ln6 + 1)])), (39 * N([ln6], [((ln6 + 1) != 33)], [1], [(ln6 + 1)]))) + list_max(1, 1))
[31]: 3
[32]: (list_max((18 * N([ln3], [((ln3 + 1) != 256)], [0], [(ln3 + 1)])), (28 * N([ln3], [((ln3 + 1) != 256)], [0], [(ln3 + 1)]))) + list_max(1, 1))
[36]: 8
[38]: 8
[40]: 43
[42]: ((23 * N([ln3; ln5], [(((ln3 shl 2) + (ln5 + 1040)) > -1)], [((0 + 1) + 1); R(27, 43, i32, 1028, 255, (gn0 - 2128))], [(m[0] + 1); ln5])) + 1)
[44]: 1
[45]: 29
[47]: ((22 * N([ln3; ln5], [(((ln3 shl 2) + (ln5 + 1040)) > -1)], [((select(((i32.eqz0 | (0 > 1000000000)) | (0 == select((i32.eqz0 | (0 > 1000000000)), 0, -1))), 0, -1) + 1) + 1); R(27, 43, i32, 1028, 255, (gn0 - 2128))], [(m[0] + 1); ln5])) + 1)
[49]: 1
[52]: 1
[55]: 0
[56]: 0
8 ebb paths found
[0 1 3 5 40 45 47 49 56]
[0 1 3 5 40 42 44 45 47 49 56]
[0 1 3 5 7 13 14 25 27 28 30 31 32 36 38 55]
[0 1 3 5 7 13 14 25 27 28 30 31 32 36 38 40 45 47 49 56]
[0 1 3 5 7 13 14 25 27 28 30 31 32 36 38 40 42 44 45 47 49 56]
[0 1 3 5 7 13 14 19 20 22 24 25 27 28 30 31 32 36 38 55]
[0 1 3 5 7 13 14 19 20 22 24 25 27 28 30 31 32 36 38 40 45 47 49 56]
[0 1 3 5 7 13 14 19 20 22 24 25 27 28 30 31 32 36 38 40 42 44 45 47 49 56]
|f72| = list_max([
  list_sum([
    46;
    36;
    (33 * (N([ln3], [(ln3 + 1) != 257], [0 + 1], [ln3 + 1]))) + 1;
    7;
    43;
    29;
    (22 * (N([ln3; ln5], [((ln3 shl 2) + (ln5 + 1040)) > -1], [((select(((i32.eqz(0)) | (0 > 1000000000)) | (0 == (select((i32.eqz(0)) | (0 > 1000000000), 0, -1))), 0, -1)) + 1) + 1; R(27, 43, i32, 1028, 255, gn0 - 2128)], [m[0] + 1; ln5]))) + 1;
    1;
    0
  ]);
  list_sum([
    46;
    36;
    (33 * (N([ln3], [(ln3 + 1) != 257], [0 + 1], [ln3 + 1]))) + 1;
    7;
    43;
    (23 * (N([ln3; ln5], [((ln3 shl 2) + (ln5 + 1040)) > -1], [(0 + 1) + 1; R(27, 43, i32, 1028, 255, gn0 - 2128)], [m[0] + 1; ln5]))) + 1;
    1;
    29;
    (22 * (N([ln3; ln5], [((ln3 shl 2) + (ln5 + 1040)) > -1], [((select(((i32.eqz(0)) | (0 > 1000000000)) | (0 == (select((i32.eqz(0)) | (0 > 1000000000), 0, -1))), 0, -1)) + 1) + 1; R(27, 43, i32, 1028, 255, gn0 - 2128)], [m[0] + 1; ln5]))) + 1;
    1;
    0
  ]);
  list_sum([
    46;
    36;
    (33 * (N([ln3], [(ln3 + 1) != 257], [0 + 1], [ln3 + 1]))) + 1;
    7;
    (list_max([
      17 * (N([ln3], [(ln3 + 1) != 257], [0], [ln3 + 1]));
      33 * (N([ln3], [(ln3 + 1) != 257], [0], [ln3 + 1]));
      43 * (N([ln3], [(ln3 + 1) != 257], [0], [ln3 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    25;
    9;
    3;
    (15 * (N([m[0]], [i32.eqz(m[0])], [(((0 + -2) + 1) + 2) + -1], [m[0]]))) + 1;
    24;
    3;
    (list_max([
      18 * (N([ln3], [(ln3 + 1) != 256], [0], [ln3 + 1]));
      28 * (N([ln3], [(ln3 + 1) != 256], [0], [ln3 + 1]))
    ])) + (list_max(1, 1));
    8;
    8;
    0
  ]);
  list_sum([
    46;
    36;
    (33 * (N([ln3], [(ln3 + 1) != 257], [0 + 1], [ln3 + 1]))) + 1;
    7;
    (list_max([
      17 * (N([ln3], [(ln3 + 1) != 257], [0], [ln3 + 1]));
      33 * (N([ln3], [(ln3 + 1) != 257], [0], [ln3 + 1]));
      43 * (N([ln3], [(ln3 + 1) != 257], [0], [ln3 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    25;
    9;
    3;
    (15 * (N([m[0]], [i32.eqz(m[0])], [(((0 + -2) + 1) + 2) + -1], [m[0]]))) + 1;
    24;
    3;
    (list_max([
      18 * (N([ln3], [(ln3 + 1) != 256], [0], [ln3 + 1]));
      28 * (N([ln3], [(ln3 + 1) != 256], [0], [ln3 + 1]))
    ])) + (list_max(1, 1));
    8;
    8;
    43;
    29;
    (22 * (N([ln3; ln5], [((ln3 shl 2) + (ln5 + 1040)) > -1], [((select(((i32.eqz(0)) | (0 > 1000000000)) | (0 == (select((i32.eqz(0)) | (0 > 1000000000), 0, -1))), 0, -1)) + 1) + 1; R(27, 43, i32, 1028, 255, gn0 - 2128)], [m[0] + 1; ln5]))) + 1;
    1;
    0
  ]);
  list_sum([
    46;
    36;
    (33 * (N([ln3], [(ln3 + 1) != 257], [0 + 1], [ln3 + 1]))) + 1;
    7;
    (list_max([
      17 * (N([ln3], [(ln3 + 1) != 257], [0], [ln3 + 1]));
      33 * (N([ln3], [(ln3 + 1) != 257], [0], [ln3 + 1]));
      43 * (N([ln3], [(ln3 + 1) != 257], [0], [ln3 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    25;
    9;
    3;
    (15 * (N([m[0]], [i32.eqz(m[0])], [(((0 + -2) + 1) + 2) + -1], [m[0]]))) + 1;
    24;
    3;
    (list_max([
      18 * (N([ln3], [(ln3 + 1) != 256], [0], [ln3 + 1]));
      28 * (N([ln3], [(ln3 + 1) != 256], [0], [ln3 + 1]))
    ])) + (list_max(1, 1));
    8;
    8;
    43;
    (23 * (N([ln3; ln5], [((ln3 shl 2) + (ln5 + 1040)) > -1], [(0 + 1) + 1; R(27, 43, i32, 1028, 255, gn0 - 2128)], [m[0] + 1; ln5]))) + 1;
    1;
    29;
    (22 * (N([ln3; ln5], [((ln3 shl 2) + (ln5 + 1040)) > -1], [((select(((i32.eqz(0)) | (0 > 1000000000)) | (0 == (select((i32.eqz(0)) | (0 > 1000000000), 0, -1))), 0, -1)) + 1) + 1; R(27, 43, i32, 1028, 255, gn0 - 2128)], [m[0] + 1; ln5]))) + 1;
    1;
    0
  ]);
  list_sum([
    46;
    36;
    (33 * (N([ln3], [(ln3 + 1) != 257], [0 + 1], [ln3 + 1]))) + 1;
    7;
    (list_max([
      17 * (N([ln3], [(ln3 + 1) != 257], [0], [ln3 + 1]));
      33 * (N([ln3], [(ln3 + 1) != 257], [0], [ln3 + 1]));
      43 * (N([ln3], [(ln3 + 1) != 257], [0], [ln3 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    25;
    3;
    (14 * (N([m[0]], [i32.eqz(m[0])], [0], [m[0]]))) + 1;
    33;
    1;
    9;
    3;
    (15 * (N([m[0]], [i32.eqz(m[0])], [(((0 + -2) + 1) + 2) + -1], [m[0]]))) + 1;
    24;
    3;
    (list_max([
      18 * (N([ln3], [(ln3 + 1) != 256], [0], [ln3 + 1]));
      28 * (N([ln3], [(ln3 + 1) != 256], [0], [ln3 + 1]))
    ])) + (list_max(1, 1));
    8;
    8;
    0
  ]);
  list_sum([
    46;
    36;
    (33 * (N([ln3], [(ln3 + 1) != 257], [0 + 1], [ln3 + 1]))) + 1;
    7;
    (list_max([
      17 * (N([ln3], [(ln3 + 1) != 257], [0], [ln3 + 1]));
      33 * (N([ln3], [(ln3 + 1) != 257], [0], [ln3 + 1]));
      43 * (N([ln3], [(ln3 + 1) != 257], [0], [ln3 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    25;
    3;
    (14 * (N([m[0]], [i32.eqz(m[0])], [0], [m[0]]))) + 1;
    33;
    1;
    9;
    3;
    (15 * (N([m[0]], [i32.eqz(m[0])], [(((0 + -2) + 1) + 2) + -1], [m[0]]))) + 1;
    24;
    3;
    (list_max([
      18 * (N([ln3], [(ln3 + 1) != 256], [0], [ln3 + 1]));
      28 * (N([ln3], [(ln3 + 1) != 256], [0], [ln3 + 1]))
    ])) + (list_max(1, 1));
    8;
    8;
    43;
    29;
    (22 * (N([ln3; ln5], [((ln3 shl 2) + (ln5 + 1040)) > -1], [((select(((i32.eqz(0)) | (0 > 1000000000)) | (0 == (select((i32.eqz(0)) | (0 > 1000000000), 0, -1))), 0, -1)) + 1) + 1; R(27, 43, i32, 1028, 255, gn0 - 2128)], [m[0] + 1; ln5]))) + 1;
    1;
    0
  ]);
  list_sum([
    46;
    36;
    (33 * (N([ln3], [(ln3 + 1) != 257], [0 + 1], [ln3 + 1]))) + 1;
    7;
    (list_max([
      17 * (N([ln3], [(ln3 + 1) != 257], [0], [ln3 + 1]));
      33 * (N([ln3], [(ln3 + 1) != 257], [0], [ln3 + 1]));
      43 * (N([ln3], [(ln3 + 1) != 257], [0], [ln3 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    25;
    3;
    (14 * (N([m[0]], [i32.eqz(m[0])], [0], [m[0]]))) + 1;
    33;
    1;
    9;
    3;
    (15 * (N([m[0]], [i32.eqz(m[0])], [(((0 + -2) + 1) + 2) + -1], [m[0]]))) + 1;
    24;
    3;
    (list_max([
      18 * (N([ln3], [(ln3 + 1) != 256], [0], [ln3 + 1]));
      28 * (N([ln3], [(ln3 + 1) != 256], [0], [ln3 + 1]))
    ])) + (list_max(1, 1));
    8;
    8;
    43;
    (23 * (N([ln3; ln5], [((ln3 shl 2) + (ln5 + 1040)) > -1], [(0 + 1) + 1; R(27, 43, i32, 1028, 255, gn0 - 2128)], [m[0] + 1; ln5]))) + 1;
    1;
    29;
    (22 * (N([ln3; ln5], [((ln3 shl 2) + (ln5 + 1040)) > -1], [((select(((i32.eqz(0)) | (0 > 1000000000)) | (0 == (select((i32.eqz(0)) | (0 > 1000000000), 0, -1))), 0, -1)) + 1) + 1; R(27, 43, i32, 1028, 255, gn0 - 2128)], [m[0] + 1; ln5]))) + 1;
    1;
    0
  ])
])
