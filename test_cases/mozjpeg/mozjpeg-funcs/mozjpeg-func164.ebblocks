ebb entry:  0
  ebb type:   block
  ebb blocks: [0 1 2]
  ebb cost:   14
  ebb exits:  [3 47]
  ebb succs:  [3 47]
ebb entry:  3
  ebb type:   loop
  ebb blocks: [3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45]
  ebb cost:   list_MAX([
  109 * (N([pn2; pn3], [pn2 < pn3], [pn2; pn3], [pn2; pn3]));
  109 * (N([pn2; pn3], [pn2 < pn3], [pn2; pn3], [pn2; pn3]));
  129 * (N([pn3; pn5], [pn5 < pn3], [pn3; pn5], [pn3; pn5]));
  129 * (N([pn3; pn5], [pn5 < pn3], [pn3; pn5], [pn3; pn5]));
  128 * (N([pn3; pn5], [pn5 < pn3], [pn3; pn5], [pn3; pn5]));
  128 * (N([pn3; pn5], [pn5 < pn3], [pn3; pn5], [pn3; pn5]));
  (list_sum([
    129;
    list_MAX([
      33 * (N([ln11; ln8], [(ln8 + 1) < ln11], [m[60]; 0], [ln11; ln8 + 1]));
      (list_sum([
        37;
        ((14 + |f68|) * (N([ln10; ln7], [(ln7 + 1) != ln10], [m[236]; (m[52] + (select((m[236] - m[52]) < (pn3 - m[0]), pn3 - m[0], m[236] - m[52]))) + 1], [ln10; ln7 + 1]))) + 1
      ])) * (N([ln8; m[60]], [(ln8 + 1) < m[60]], [0; m[60]], [ln8 + 1; m[60]]))
    ])
  ])) * (N([pn3; pn5], [pn5 < pn3], [pn3; pn5], [pn3; pn5]));
  (list_sum([
    129;
    list_MAX([
      33 * (N([ln11; ln8], [(ln8 + 1) < ln11], [m[60]; 0], [ln11; ln8 + 1]));
      (list_sum([
        37;
        ((14 + |f68|) * (N([ln10; ln7], [(ln7 + 1) != ln10], [m[236]; (m[52] + (select((m[236] - m[52]) < (pn3 - m[0]), pn3 - m[0], m[236] - m[52]))) + 1], [ln10; ln7 + 1]))) + 1
      ])) * (N([ln8; m[60]], [(ln8 + 1) < m[60]], [0; m[60]], [ln8 + 1; m[60]]))
    ])
  ])) * (N([pn3; pn5], [pn5 < pn3], [pn3; pn5], [pn3; pn5]));
  (list_sum([
    129;
    list_MAX([
      33 * (N([ln11; ln8], [(ln8 + 1) < ln11], [m[60]; 0], [ln11; ln8 + 1]));
      (list_sum([
        37;
        ((14 + |f68|) * (N([ln10; ln7], [(ln7 + 1) != ln10], [m[236]; (m[52] + (select((m[236] - m[52]) < (pn3 - m[0]), pn3 - m[0], m[236] - m[52]))) + 1], [ln10; ln7 + 1]))) + 1
      ])) * (N([ln8; m[60]], [(ln8 + 1) < m[60]], [0; m[60]], [ln8 + 1; m[60]]))
    ])
  ])) * (N([pn3; pn5], [pn5 < pn3], [pn3; pn5], [pn3; pn5]));
  (list_sum([
    129;
    list_MAX([
      33 * (N([ln11; ln8], [(ln8 + 1) < ln11], [m[60]; 0], [ln11; ln8 + 1]));
      (list_sum([
        37;
        ((14 + |f68|) * (N([ln10; ln7], [(ln7 + 1) != ln10], [m[236]; (m[52] + (select((m[236] - m[52]) < (pn3 - m[0]), pn3 - m[0], m[236] - m[52]))) + 1], [ln10; ln7 + 1]))) + 1
      ])) * (N([ln8; m[60]], [(ln8 + 1) < m[60]], [0; m[60]], [ln8 + 1; m[60]]))
    ])
  ])) * (N([pn3; pn5], [pn5 < pn3], [pn3; pn5], [pn3; pn5]))
])
  ebb exits:  [46 47 49 50]
  ebb succs:  [46 47 49 50]
  10 paths to exit 46
  [3 4 5 6 22 25 26 44 45]
  [3 4 5 6 22 25 26 27 44 45]
  [3 4 5 6 22 23 24 25 26 44 45]
  [3 4 5 6 22 23 24 25 26 27 44 45]
  [3 4 5 6 7 19 20 24 25 26 44 45]
  [3 4 5 6 7 19 20 24 25 26 27 44 45]
  [3 4 5 6 7 8 9 14 17 18 20 24 25 26 44 45]
  [3 4 5 6 7 8 9 14 17 18 20 24 25 26 27 44 45]
  [3 4 5 6 7 8 9 10 11 12 13 14 17 18 20 24 25 26 44 45]
  [3 4 5 6 7 8 9 10 11 12 13 14 17 18 20 24 25 26 27 44 45]
  1 paths to exit 47
  [3]
  15 paths to exit 49
  [3 4 5 6 22 25 26 27 28 29 42]
  [3 4 5 6 22 25 26 27 28 29 30 31 36 42]
  [3 4 5 6 22 25 26 27 28 29 30 31 32 33 34 35 36 42]
  [3 4 5 6 22 23 24 25 26 27 28 29 42]
  [3 4 5 6 22 23 24 25 26 27 28 29 30 31 36 42]
  [3 4 5 6 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 42]
  [3 4 5 6 7 19 20 24 25 26 27 28 29 42]
  [3 4 5 6 7 19 20 24 25 26 27 28 29 30 31 36 42]
  [3 4 5 6 7 19 20 24 25 26 27 28 29 30 31 32 33 34 35 36 42]
  [3 4 5 6 7 8 9 14 17 18 20 24 25 26 27 28 29 42]
  [3 4 5 6 7 8 9 14 17 18 20 24 25 26 27 28 29 30 31 36 42]
  [3 4 5 6 7 8 9 14 17 18 20 24 25 26 27 28 29 30 31 32 33 34 35 36 42]
  [3 4 5 6 7 8 9 10 11 12 13 14 17 18 20 24 25 26 27 28 29 42]
  [3 4 5 6 7 8 9 10 11 12 13 14 17 18 20 24 25 26 27 28 29 30 31 36 42]
  [3 4 5 6 7 8 9 10 11 12 13 14 17 18 20 24 25 26 27 28 29 30 31 32 33 34 35 36 42]
  0 paths to exit 50

  10 loop paths
  [3 4 5 6 22 25 26 44]  [3 4 5 6 22 25 26 27 44]  [3 4 5 6 22 23 24 25 26 44]  [3 4 5 6 22 23 24 25 26 27 44]  [3 4 5 6 7 19 20 24 25 26 44]  [3 4 5 6 7 19 20 24 25 26 27 44]  [3 4 5 6 7 8 9 14 17 18 20 24 25 26 44]  [3 4 5 6 7 8 9 14 17 18 20 24 25 26 27 44]  [3 4 5 6 7 8 9 10 11 12 13 14 17 18 20 24 25 26 44]  [3 4 5 6 7 8 9 10 11 12 13 14 17 18 20 24 25 26 27 44]
  25 post loop exit paths
  [45]  [45]  [45]  [45]  [45]  [45]  [45]  [45]  [45]  [45]  [28 29 42]  [28 29 30 31 36 42]  [28 29 30 31 32 33 34 35 36 42]  [28 29 42]  [28 29 30 31 36 42]  [28 29 30 31 32 33 34 35 36 42]  [28 29 42]  [28 29 30 31 36 42]  [28 29 30 31 32 33 34 35 36 42]  [28 29 42]  [28 29 30 31 36 42]  [28 29 30 31 32 33 34 35 36 42]  [28 29 42]  [28 29 30 31 36 42]  [28 29 30 31 32 33 34 35 36 42]
nested ebbs:
  ebb entry:  3
    ebb type:   block
    ebb blocks: [3 4 5 6 7 8]
    ebb cost:   74
    ebb exits:  [9 19 22 47]
    ebb succs:  [9 19 22 47]
  ebb entry:  9
    ebb type:   loop
    ebb blocks: [9 10 11 12 13 14 15 16 17]
    ebb cost:   list_MAX([
  33 * (N([ln11; ln8], [(ln8 + 1) < ln11], [m[60]; 0], [ln11; ln8 + 1]));
  (list_sum([
    37;
    ((14 + |f68|) * (N([ln10; ln7], [(ln7 + 1) != ln10], [m[236]; (m[52] + (select((m[236] - m[52]) < (pn3 - m[0]), pn3 - m[0], m[236] - m[52]))) + 1], [ln10; ln7 + 1]))) + 1
  ])) * (N([ln8; m[60]], [(ln8 + 1) < m[60]], [0; m[60]], [ln8 + 1; m[60]]))
])
    ebb exits:  [18]
    ebb succs:  [18]
    2 paths to exit 18
    [9 14 17]
    [9 10 11 12 13 14 17]
    2 loop paths
    [9 14 15]    [9 10 11 12 13 14 15]
    2 post loop exit paths
    [17]    [17]
nested ebbs:
    ebb entry:  9
      ebb type:   block
      ebb blocks: [9 10]
      ebb cost:   19
      ebb exits:  [11 14]
      ebb succs:  [11 14]
    ebb entry:  11
      ebb type:   loop
      ebb blocks: [11 12]
      ebb cost:   ((14 + |f68|) * (N([ln10; ln7], [(ln7 + 1) != ln10], [m[236]; (m[52] + (select((m[236] - m[52]) < (pn3 - m[0]), pn3 - m[0], m[236] - m[52]))) + 1], [ln10; ln7 + 1]))) + 1
      ebb exits:  [13]
      ebb succs:  [13]
      1 paths to exit 13
      [11 12]
      1 loop paths
      [11]
      1 post loop exit paths
      [12]
    ebb entry:  13
      ebb type:   block
      ebb blocks: [13]
      ebb cost:   4
      ebb exits:  [14]
      ebb succs:  [14]
    ebb entry:  14
      ebb type:   block
      ebb blocks: [14 15 16 17]
      ebb cost:   14
      ebb exits:  [9 18]
      ebb succs:  [9 18]
  ebb entry:  18
    ebb type:   block
    ebb blocks: [18]
    ebb cost:   3
    ebb exits:  [20]
    ebb succs:  [20]
  ebb entry:  19
    ebb type:   block
    ebb blocks: [19]
    ebb cost:   2
    ebb exits:  [20]
    ebb succs:  [20]
  ebb entry:  20
    ebb type:   block
    ebb blocks: [20 21]
    ebb cost:   2
    ebb exits:  [22 24]
    ebb succs:  [22 24]
  ebb entry:  22
    ebb type:   block
    ebb blocks: [22 23]
    ebb cost:   5
    ebb exits:  [24 25]
    ebb succs:  [24 25]
  ebb entry:  24
    ebb type:   block
    ebb blocks: [24]
    ebb cost:   20
    ebb exits:  [25]
    ebb succs:  [25]
  ebb entry:  25
    ebb type:   block
    ebb blocks: [25 26 27 28 29 30]
    ebb cost:   23
    ebb exits:  [31 42 44]
    ebb succs:  [31 42 44]
  ebb entry:  31
    ebb type:   loop
    ebb blocks: [31 32 33 34 35 36 37 38 39]
    ebb cost:   list_MAX([
  44 * (N([pn1; pn2], [not((pn1 + 1) >= pn2)], [0; m[60]], [pn1 + 1; pn2]));
  (list_sum([
    48;
    ((14 + |f68|) * (N([ln7; pn3], [(ln7 + 1) != pn3], [(m[12] * (m[0] + (select((m[236] - m[52]) < (pn3 - m[0]), pn3 - m[0], m[236] - m[52])))) + 1; m[12] * pn6], [ln7 + 1; pn3]))) + 1
  ])) * (N([m[60]; pn1], [not((pn1 + 1) >= m[60])], [m[60]; 0], [m[60]; pn1 + 1]))
])
    ebb exits:  [42 50]
    ebb succs:  [42 50]
    2 paths to exit 42
    [31 36]
    [31 32 33 34 35 36]
    0 paths to exit 50

    2 loop paths
    [31 36 37]    [31 32 33 34 35 36 37]
nested ebbs:
    ebb entry:  31
      ebb type:   block
      ebb blocks: [31 32]
      ebb cost:   29
      ebb exits:  [33 36]
      ebb succs:  [33 36]
    ebb entry:  33
      ebb type:   loop
      ebb blocks: [33 34]
      ebb cost:   ((14 + |f68|) * (N([ln7; pn3], [(ln7 + 1) != pn3], [(m[12] * (m[0] + (select((m[236] - m[52]) < (pn3 - m[0]), pn3 - m[0], m[236] - m[52])))) + 1; m[12] * pn6], [ln7 + 1; pn3]))) + 1
      ebb exits:  [35]
      ebb succs:  [35]
      1 paths to exit 35
      [33 34]
      1 loop paths
      [33]
      1 post loop exit paths
      [34]
    ebb entry:  35
      ebb type:   block
      ebb blocks: [35]
      ebb cost:   4
      ebb exits:  [36]
      ebb succs:  [36]
    ebb entry:  36
      ebb type:   block
      ebb blocks: [36 37 38 39]
      ebb cost:   15
      ebb exits:  [31 42 50]
      ebb succs:  [31 42 50]
  ebb entry:  40
    ebb type:   block
    ebb blocks: [40 41]
    ebb cost:   1
    ebb exits:  [42 50]
    ebb succs:  [42 50]
  ebb entry:  42
    ebb type:   block
    ebb blocks: [42 43]
    ebb cost:   4
    ebb exits:  [44 49]
    ebb succs:  [44 49]
  ebb entry:  44
    ebb type:   block
    ebb blocks: [44 45]
    ebb cost:   7
    ebb exits:  [3 46]
    ebb succs:  [3 46]
ebb entry:  46
  ebb type:   block
  ebb blocks: [46]
  ebb cost:   1
  ebb exits:  [47]
  ebb succs:  [47]
ebb entry:  47
  ebb type:   block
  ebb blocks: [47 48]
  ebb cost:   1
  ebb exits:  [48]
  ebb succs:  []
ebb entry:  49
  ebb type:   block
  ebb blocks: [49]
  ebb cost:   0
  ebb exits:  []
  ebb succs:  []
ebb entry:  50
  ebb type:   block
  ebb blocks: [50]
  ebb cost:   0
  ebb exits:  []
  ebb succs:  []
ebb costs:
[0]: 14
[3]: list_MAX((109 * N([pn2; pn3], [(pn2 < pn3)], [pn2; pn3], [pn2; pn3])), (109 * N([pn2; pn3], [(pn2 < pn3)], [pn2; pn3], [pn2; pn3])), (129 * N([pn3; pn5], [(pn5 < pn3)], [pn3; pn5], [pn3; pn5])), (129 * N([pn3; pn5], [(pn5 < pn3)], [pn3; pn5], [pn3; pn5])), (128 * N([pn3; pn5], [(pn5 < pn3)], [pn3; pn5], [pn3; pn5])), (128 * N([pn3; pn5], [(pn5 < pn3)], [pn3; pn5], [pn3; pn5])), (list_sum(129, list_MAX((33 * N([ln11; ln8], [((ln8 + 1) < ln11)], [m[60]; 0], [ln11; (ln8 + 1)])), (list_sum(37, (((14 + |f68|) * N([ln10; ln7], [((ln7 + 1) != ln10)], [m[236]; ((m[52] + select(((m[236] - m[52]) < (pn3 - m[0])), (pn3 - m[0]), (m[236] - m[52]))) + 1)], [ln10; (ln7 + 1)])) + 1)) * N([ln8; m[60]], [((ln8 + 1) < m[60])], [0; m[60]], [(ln8 + 1); m[60]])))) * N([pn3; pn5], [(pn5 < pn3)], [pn3; pn5], [pn3; pn5])), (list_sum(129, list_MAX((33 * N([ln11; ln8], [((ln8 + 1) < ln11)], [m[60]; 0], [ln11; (ln8 + 1)])), (list_sum(37, (((14 + |f68|) * N([ln10; ln7], [((ln7 + 1) != ln10)], [m[236]; ((m[52] + select(((m[236] - m[52]) < (pn3 - m[0])), (pn3 - m[0]), (m[236] - m[52]))) + 1)], [ln10; (ln7 + 1)])) + 1)) * N([ln8; m[60]], [((ln8 + 1) < m[60])], [0; m[60]], [(ln8 + 1); m[60]])))) * N([pn3; pn5], [(pn5 < pn3)], [pn3; pn5], [pn3; pn5])), (list_sum(129, list_MAX((33 * N([ln11; ln8], [((ln8 + 1) < ln11)], [m[60]; 0], [ln11; (ln8 + 1)])), (list_sum(37, (((14 + |f68|) * N([ln10; ln7], [((ln7 + 1) != ln10)], [m[236]; ((m[52] + select(((m[236] - m[52]) < (pn3 - m[0])), (pn3 - m[0]), (m[236] - m[52]))) + 1)], [ln10; (ln7 + 1)])) + 1)) * N([ln8; m[60]], [((ln8 + 1) < m[60])], [0; m[60]], [(ln8 + 1); m[60]])))) * N([pn3; pn5], [(pn5 < pn3)], [pn3; pn5], [pn3; pn5])), (list_sum(129, list_MAX((33 * N([ln11; ln8], [((ln8 + 1) < ln11)], [m[60]; 0], [ln11; (ln8 + 1)])), (list_sum(37, (((14 + |f68|) * N([ln10; ln7], [((ln7 + 1) != ln10)], [m[236]; ((m[52] + select(((m[236] - m[52]) < (pn3 - m[0])), (pn3 - m[0]), (m[236] - m[52]))) + 1)], [ln10; (ln7 + 1)])) + 1)) * N([ln8; m[60]], [((ln8 + 1) < m[60])], [0; m[60]], [(ln8 + 1); m[60]])))) * N([pn3; pn5], [(pn5 < pn3)], [pn3; pn5], [pn3; pn5])))
[3]: 74
[9]: list_MAX((33 * N([ln11; ln8], [((ln8 + 1) < ln11)], [m[60]; 0], [ln11; (ln8 + 1)])), (list_sum(37, (((14 + |f68|) * N([ln10; ln7], [((ln7 + 1) != ln10)], [m[236]; ((m[52] + select(((m[236] - m[52]) < (pn3 - m[0])), (pn3 - m[0]), (m[236] - m[52]))) + 1)], [ln10; (ln7 + 1)])) + 1)) * N([ln8; m[60]], [((ln8 + 1) < m[60])], [0; m[60]], [(ln8 + 1); m[60]])))
[9]: 19
[11]: (((14 + |f68|) * N([ln10; ln7], [((ln7 + 1) != ln10)], [m[236]; ((m[52] + select(((m[236] - m[52]) < (pn3 - m[0])), (pn3 - m[0]), (m[236] - m[52]))) + 1)], [ln10; (ln7 + 1)])) + 1)
[13]: 4
[14]: 14
[18]: 3
[19]: 2
[20]: 2
[22]: 5
[24]: 20
[25]: 23
[31]: list_MAX((44 * N([pn1; pn2], [not(((pn1 + 1) >= pn2))], [0; m[60]], [(pn1 + 1); pn2])), (list_sum(48, (((14 + |f68|) * N([ln7; pn3], [((ln7 + 1) != pn3)], [((m[12] * (m[0] + select(((m[236] - m[52]) < (pn3 - m[0])), (pn3 - m[0]), (m[236] - m[52])))) + 1); (m[12] * pn6)], [(ln7 + 1); pn3])) + 1)) * N([m[60]; pn1], [not(((pn1 + 1) >= m[60]))], [m[60]; 0], [m[60]; (pn1 + 1)])))
[31]: 29
[33]: (((14 + |f68|) * N([ln7; pn3], [((ln7 + 1) != pn3)], [((m[12] * (m[0] + select(((m[236] - m[52]) < (pn3 - m[0])), (pn3 - m[0]), (m[236] - m[52])))) + 1); (m[12] * pn6)], [(ln7 + 1); pn3])) + 1)
[35]: 4
[36]: 15
[40]: 1
[42]: 4
[44]: 7
[46]: 1
[47]: 1
[49]: 0
[50]: 0
5 ebb paths found
[0 47]
[0 3 50]
[0 3 49]
[0 3 47]
[0 3 46 47]
