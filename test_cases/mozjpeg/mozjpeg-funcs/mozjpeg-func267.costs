|f267| = list_max([
  39;
  list_sum([
    224;
    (list_max([
      38 * (N([m[0]], [(((m[0] + -48) < 10) | ((m[0] + -65) < 26)) | ((m[0] == 95) | ((m[0] + -97) < 26))], [m[0]], [m[0]]));
      (33 + |f29|) * (N([pn1], [((((R(29, 0, i32, pn1)) + -48) < 10) | (((R(29, 0, i32, pn1)) + -65) < 26)) | (((R(29, 0, i32, pn1)) == 95) | (((R(29, 0, i32, pn1)) + -97) < 26))], [pn1], [pn1]))
    ])) + 1;
    (list_max([
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + 3;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    221;
    (list_max([
      38 * (N([m[0]], [(((m[0] + -48) < 10) | ((m[0] + -65) < 26)) | ((m[0] == 95) | ((m[0] + -97) < 26))], [m[0]], [m[0]]));
      (33 + |f29|) * (N([pn1], [((((R(29, 0, i32, pn1)) + -48) < 10) | (((R(29, 0, i32, pn1)) + -65) < 26)) | (((R(29, 0, i32, pn1)) == 95) | (((R(29, 0, i32, pn1)) + -97) < 26))], [pn1], [pn1]))
    ])) + 1;
    (list_max([
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + 3;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    208;
    (list_max([
      38 * (N([m[0]], [(((m[0] + -48) < 10) | ((m[0] + -65) < 26)) | ((m[0] == 95) | ((m[0] + -97) < 26))], [m[0]], [m[0]]));
      (33 + |f29|) * (N([pn1], [((((R(29, 0, i32, pn1)) + -48) < 10) | (((R(29, 0, i32, pn1)) + -65) < 26)) | (((R(29, 0, i32, pn1)) == 95) | (((R(29, 0, i32, pn1)) + -97) < 26))], [pn1], [pn1]))
    ])) + 1;
    (list_max([
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + 3;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    198;
    (list_max([
      38 * (N([m[0]], [(((m[0] + -48) < 10) | ((m[0] + -65) < 26)) | ((m[0] == 95) | ((m[0] + -97) < 26))], [m[0]], [m[0]]));
      (33 + |f29|) * (N([pn1], [((((R(29, 0, i32, pn1)) + -48) < 10) | (((R(29, 0, i32, pn1)) + -65) < 26)) | (((R(29, 0, i32, pn1)) == 95) | (((R(29, 0, i32, pn1)) + -97) < 26))], [pn1], [pn1]))
    ])) + 1;
    (list_max([
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + 3;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    178;
    (list_max([
      38 * (N([m[0]], [(((m[0] + -48) < 10) | ((m[0] + -65) < 26)) | ((m[0] == 95) | ((m[0] + -97) < 26))], [m[0]], [m[0]]));
      (33 + |f29|) * (N([pn1], [((((R(29, 0, i32, pn1)) + -48) < 10) | (((R(29, 0, i32, pn1)) + -65) < 26)) | (((R(29, 0, i32, pn1)) == 95) | (((R(29, 0, i32, pn1)) + -97) < 26))], [pn1], [pn1]))
    ])) + 1;
    (list_max([
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + 3;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    200;
    (list_max([
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + 3;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    197;
    (list_max([
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + 3;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    184;
    (list_max([
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + 3;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    197;
    (list_max([
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + 3;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    194;
    (list_max([
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + 3;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    181;
    (list_max([
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + 3;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    171;
    (list_max([
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + 3;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    151;
    (list_max([
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + 3;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    111;
    (list_max([
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + 3;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    108;
    (list_max([
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + 3;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    163;
    (list_max([
      38 * (N([m[0]], [(((m[0] + -48) < 10) | ((m[0] + -65) < 26)) | ((m[0] == 95) | ((m[0] + -97) < 26))], [m[0]], [m[0]]));
      (33 + |f29|) * (N([pn1], [((((R(29, 0, i32, pn1)) + -48) < 10) | (((R(29, 0, i32, pn1)) + -65) < 26)) | (((R(29, 0, i32, pn1)) == 95) | (((R(29, 0, i32, pn1)) + -97) < 26))], [pn1], [pn1]))
    ])) + 1;
    (list_max([
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + 3;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    160;
    (list_max([
      38 * (N([m[0]], [(((m[0] + -48) < 10) | ((m[0] + -65) < 26)) | ((m[0] == 95) | ((m[0] + -97) < 26))], [m[0]], [m[0]]));
      (33 + |f29|) * (N([pn1], [((((R(29, 0, i32, pn1)) + -48) < 10) | (((R(29, 0, i32, pn1)) + -65) < 26)) | (((R(29, 0, i32, pn1)) == 95) | (((R(29, 0, i32, pn1)) + -97) < 26))], [pn1], [pn1]))
    ])) + 1;
    (list_max([
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + 3;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    147;
    (list_max([
      38 * (N([m[0]], [(((m[0] + -48) < 10) | ((m[0] + -65) < 26)) | ((m[0] == 95) | ((m[0] + -97) < 26))], [m[0]], [m[0]]));
      (33 + |f29|) * (N([pn1], [((((R(29, 0, i32, pn1)) + -48) < 10) | (((R(29, 0, i32, pn1)) + -65) < 26)) | (((R(29, 0, i32, pn1)) == 95) | (((R(29, 0, i32, pn1)) + -97) < 26))], [pn1], [pn1]))
    ])) + 1;
    (list_max([
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + 3;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    137;
    (list_max([
      38 * (N([m[0]], [(((m[0] + -48) < 10) | ((m[0] + -65) < 26)) | ((m[0] == 95) | ((m[0] + -97) < 26))], [m[0]], [m[0]]));
      (33 + |f29|) * (N([pn1], [((((R(29, 0, i32, pn1)) + -48) < 10) | (((R(29, 0, i32, pn1)) + -65) < 26)) | (((R(29, 0, i32, pn1)) == 95) | (((R(29, 0, i32, pn1)) + -97) < 26))], [pn1], [pn1]))
    ])) + 1;
    (list_max([
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + 3;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    117;
    (list_max([
      38 * (N([m[0]], [(((m[0] + -48) < 10) | ((m[0] + -65) < 26)) | ((m[0] == 95) | ((m[0] + -97) < 26))], [m[0]], [m[0]]));
      (33 + |f29|) * (N([pn1], [((((R(29, 0, i32, pn1)) + -48) < 10) | (((R(29, 0, i32, pn1)) + -65) < 26)) | (((R(29, 0, i32, pn1)) == 95) | (((R(29, 0, i32, pn1)) + -97) < 26))], [pn1], [pn1]))
    ])) + 1;
    (list_max([
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + 3;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    139;
    (list_max([
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + 3;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    136;
    (list_max([
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + 3;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    123;
    (list_max([
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + 3;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    218;
    (list_max([
      38 * (N([m[0]], [(((m[0] + -48) < 10) | ((m[0] + -65) < 26)) | ((m[0] == 95) | ((m[0] + -97) < 26))], [m[0]], [m[0]]));
      (33 + |f29|) * (N([pn1], [((((R(29, 0, i32, pn1)) + -48) < 10) | (((R(29, 0, i32, pn1)) + -65) < 26)) | (((R(29, 0, i32, pn1)) == 95) | (((R(29, 0, i32, pn1)) + -97) < 26))], [pn1], [pn1]))
    ])) + 1;
    (list_max([
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + 3;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    215;
    (list_max([
      38 * (N([m[0]], [(((m[0] + -48) < 10) | ((m[0] + -65) < 26)) | ((m[0] == 95) | ((m[0] + -97) < 26))], [m[0]], [m[0]]));
      (33 + |f29|) * (N([pn1], [((((R(29, 0, i32, pn1)) + -48) < 10) | (((R(29, 0, i32, pn1)) + -65) < 26)) | (((R(29, 0, i32, pn1)) == 95) | (((R(29, 0, i32, pn1)) + -97) < 26))], [pn1], [pn1]))
    ])) + 1;
    (list_max([
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + 3;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    202;
    (list_max([
      38 * (N([m[0]], [(((m[0] + -48) < 10) | ((m[0] + -65) < 26)) | ((m[0] == 95) | ((m[0] + -97) < 26))], [m[0]], [m[0]]));
      (33 + |f29|) * (N([pn1], [((((R(29, 0, i32, pn1)) + -48) < 10) | (((R(29, 0, i32, pn1)) + -65) < 26)) | (((R(29, 0, i32, pn1)) == 95) | (((R(29, 0, i32, pn1)) + -97) < 26))], [pn1], [pn1]))
    ])) + 1;
    (list_max([
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + 3;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    192;
    (list_max([
      38 * (N([m[0]], [(((m[0] + -48) < 10) | ((m[0] + -65) < 26)) | ((m[0] == 95) | ((m[0] + -97) < 26))], [m[0]], [m[0]]));
      (33 + |f29|) * (N([pn1], [((((R(29, 0, i32, pn1)) + -48) < 10) | (((R(29, 0, i32, pn1)) + -65) < 26)) | (((R(29, 0, i32, pn1)) == 95) | (((R(29, 0, i32, pn1)) + -97) < 26))], [pn1], [pn1]))
    ])) + 1;
    (list_max([
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + 3;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    172;
    (list_max([
      38 * (N([m[0]], [(((m[0] + -48) < 10) | ((m[0] + -65) < 26)) | ((m[0] == 95) | ((m[0] + -97) < 26))], [m[0]], [m[0]]));
      (33 + |f29|) * (N([pn1], [((((R(29, 0, i32, pn1)) + -48) < 10) | (((R(29, 0, i32, pn1)) + -65) < 26)) | (((R(29, 0, i32, pn1)) == 95) | (((R(29, 0, i32, pn1)) + -97) < 26))], [pn1], [pn1]))
    ])) + 1;
    (list_max([
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + 3;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    194;
    (list_max([
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + 3;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    191;
    (list_max([
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + 3;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    178;
    (list_max([
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + 3;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    191;
    (list_max([
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + 3;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    188;
    (list_max([
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + 3;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    175;
    (list_max([
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + 3;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    165;
    (list_max([
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + 3;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    145;
    (list_max([
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + 3;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    223;
    (list_max([
      38 * (N([m[0]], [(((m[0] + -48) < 10) | ((m[0] + -65) < 26)) | ((m[0] == 95) | ((m[0] + -97) < 26))], [m[0]], [m[0]]));
      (33 + |f29|) * (N([pn1], [((((R(29, 0, i32, pn1)) + -48) < 10) | (((R(29, 0, i32, pn1)) + -65) < 26)) | (((R(29, 0, i32, pn1)) == 95) | (((R(29, 0, i32, pn1)) + -97) < 26))], [pn1], [pn1]))
    ])) + 1;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    220;
    (list_max([
      38 * (N([m[0]], [(((m[0] + -48) < 10) | ((m[0] + -65) < 26)) | ((m[0] == 95) | ((m[0] + -97) < 26))], [m[0]], [m[0]]));
      (33 + |f29|) * (N([pn1], [((((R(29, 0, i32, pn1)) + -48) < 10) | (((R(29, 0, i32, pn1)) + -65) < 26)) | (((R(29, 0, i32, pn1)) == 95) | (((R(29, 0, i32, pn1)) + -97) < 26))], [pn1], [pn1]))
    ])) + 1;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    207;
    (list_max([
      38 * (N([m[0]], [(((m[0] + -48) < 10) | ((m[0] + -65) < 26)) | ((m[0] == 95) | ((m[0] + -97) < 26))], [m[0]], [m[0]]));
      (33 + |f29|) * (N([pn1], [((((R(29, 0, i32, pn1)) + -48) < 10) | (((R(29, 0, i32, pn1)) + -65) < 26)) | (((R(29, 0, i32, pn1)) == 95) | (((R(29, 0, i32, pn1)) + -97) < 26))], [pn1], [pn1]))
    ])) + 1;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    197;
    (list_max([
      38 * (N([m[0]], [(((m[0] + -48) < 10) | ((m[0] + -65) < 26)) | ((m[0] == 95) | ((m[0] + -97) < 26))], [m[0]], [m[0]]));
      (33 + |f29|) * (N([pn1], [((((R(29, 0, i32, pn1)) + -48) < 10) | (((R(29, 0, i32, pn1)) + -65) < 26)) | (((R(29, 0, i32, pn1)) == 95) | (((R(29, 0, i32, pn1)) + -97) < 26))], [pn1], [pn1]))
    ])) + 1;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    177;
    (list_max([
      38 * (N([m[0]], [(((m[0] + -48) < 10) | ((m[0] + -65) < 26)) | ((m[0] == 95) | ((m[0] + -97) < 26))], [m[0]], [m[0]]));
      (33 + |f29|) * (N([pn1], [((((R(29, 0, i32, pn1)) + -48) < 10) | (((R(29, 0, i32, pn1)) + -65) < 26)) | (((R(29, 0, i32, pn1)) == 95) | (((R(29, 0, i32, pn1)) + -97) < 26))], [pn1], [pn1]))
    ])) + 1;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    199;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    196;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    183;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    196;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    193;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    180;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    170;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    150;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    110;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    107;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    218;
    (list_max([
      38 * (N([m[0]], [(((m[0] + -48) < 10) | ((m[0] + -65) < 26)) | ((m[0] == 95) | ((m[0] + -97) < 26))], [m[0]], [m[0]]));
      (33 + |f29|) * (N([pn1], [((((R(29, 0, i32, pn1)) + -48) < 10) | (((R(29, 0, i32, pn1)) + -65) < 26)) | (((R(29, 0, i32, pn1)) == 95) | (((R(29, 0, i32, pn1)) + -97) < 26))], [pn1], [pn1]))
    ])) + 1;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    215;
    (list_max([
      38 * (N([m[0]], [(((m[0] + -48) < 10) | ((m[0] + -65) < 26)) | ((m[0] == 95) | ((m[0] + -97) < 26))], [m[0]], [m[0]]));
      (33 + |f29|) * (N([pn1], [((((R(29, 0, i32, pn1)) + -48) < 10) | (((R(29, 0, i32, pn1)) + -65) < 26)) | (((R(29, 0, i32, pn1)) == 95) | (((R(29, 0, i32, pn1)) + -97) < 26))], [pn1], [pn1]))
    ])) + 1;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    202;
    (list_max([
      38 * (N([m[0]], [(((m[0] + -48) < 10) | ((m[0] + -65) < 26)) | ((m[0] == 95) | ((m[0] + -97) < 26))], [m[0]], [m[0]]));
      (33 + |f29|) * (N([pn1], [((((R(29, 0, i32, pn1)) + -48) < 10) | (((R(29, 0, i32, pn1)) + -65) < 26)) | (((R(29, 0, i32, pn1)) == 95) | (((R(29, 0, i32, pn1)) + -97) < 26))], [pn1], [pn1]))
    ])) + 1;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    192;
    (list_max([
      38 * (N([m[0]], [(((m[0] + -48) < 10) | ((m[0] + -65) < 26)) | ((m[0] == 95) | ((m[0] + -97) < 26))], [m[0]], [m[0]]));
      (33 + |f29|) * (N([pn1], [((((R(29, 0, i32, pn1)) + -48) < 10) | (((R(29, 0, i32, pn1)) + -65) < 26)) | (((R(29, 0, i32, pn1)) == 95) | (((R(29, 0, i32, pn1)) + -97) < 26))], [pn1], [pn1]))
    ])) + 1;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    172;
    (list_max([
      38 * (N([m[0]], [(((m[0] + -48) < 10) | ((m[0] + -65) < 26)) | ((m[0] == 95) | ((m[0] + -97) < 26))], [m[0]], [m[0]]));
      (33 + |f29|) * (N([pn1], [((((R(29, 0, i32, pn1)) + -48) < 10) | (((R(29, 0, i32, pn1)) + -65) < 26)) | (((R(29, 0, i32, pn1)) == 95) | (((R(29, 0, i32, pn1)) + -97) < 26))], [pn1], [pn1]))
    ])) + 1;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    194;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    191;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    178;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    191;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    188;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    175;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    165;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    145;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    105;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    102;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    85;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ]);
  list_sum([
    82;
    (list_max([
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]))
    ])) + 1
  ])
])
