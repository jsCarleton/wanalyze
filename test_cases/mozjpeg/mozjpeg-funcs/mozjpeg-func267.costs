ebb costs:
[0]: 25
[4]: (list_max(((14 + list_sum(|f29|, |f56|)) * N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1])), ((19 + |f56|) * N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))) + list_max(1, 1))
[11]: 33
[21]: (list_max((21 * N([ln4], [((ln4 + 1) != 8)], [0], [(ln4 + 1)])), ((32 + |f29|) * N([ln4], [((ln4 + 1) != 8)], [0], [(ln4 + 1)])), (37 * N([ln4], [((ln4 + 1) != 8)], [0], [(ln4 + 1)]))) + list_max(1, 1, 1, 1))
[32]: 20
[45]: (list_max((21 * N([ln5], [((ln5 + 1) != 3)], [0], [(ln5 + 1)])), ((32 + |f29|) * N([ln5], [((ln5 + 1) != 3)], [0], [(ln5 + 1)])), (37 * N([ln5], [((ln5 + 1) != 3)], [0], [(ln5 + 1)]))) + list_max(1, 1, 1, 3))
[56]: 1
[58]: 5
[60]: 56
[77]: 20
[84]: (list_max(((33 + |f29|) * N([pn1], [((((R(29, 0, i32, pn1) + -48) < 10) || ((R(29, 0, i32, pn1) + -65) < 26)) || ((R(29, 0, i32, pn1) == 95) || ((R(29, 0, i32, pn1) + -97) < 26)))], [pn1], [pn1])), (38 * N([m[0]], [((((m[0] + -48) < 10) || ((m[0] + -65) < 26)) || ((m[0] == 95) || ((m[0] + -97) < 26)))], [m[0]], [m[0]]))) + list_max(1, 1))
[91]: 7
[93]: 17
[97]: 13
[100]: 13
[102]: 3
[103]: 11
69 ebb paths found
[0 102 103]
[0 4 11 21 100 103]
[0 4 11 21 100 102 103]
[0 4 11 21 32 100 103]
[0 4 11 21 32 100 102 103]
[0 4 11 21 32 60 103]
[0 4 11 21 32 60 93 102 103]
[0 4 11 21 32 60 93 97 103]
[0 4 11 21 32 60 93 97 100 103]
[0 4 11 21 32 60 93 97 100 102 103]
[0 4 11 21 32 60 77 97 103]
[0 4 11 21 32 60 77 97 100 103]
[0 4 11 21 32 60 77 97 100 102 103]
[0 4 11 21 32 60 77 84 91 103]
[0 4 11 21 32 60 77 84 91 93 102 103]
[0 4 11 21 32 60 77 84 91 93 97 103]
[0 4 11 21 32 60 77 84 91 93 97 100 103]
[0 4 11 21 32 60 77 84 91 93 97 100 102 103]
[0 4 11 21 32 58 100 103]
[0 4 11 21 32 58 100 102 103]
[0 4 11 21 32 58 60 103]
[0 4 11 21 32 58 60 93 102 103]
[0 4 11 21 32 58 60 93 97 103]
[0 4 11 21 32 58 60 93 97 100 103]
[0 4 11 21 32 58 60 93 97 100 102 103]
[0 4 11 21 32 58 60 77 97 103]
[0 4 11 21 32 58 60 77 97 100 103]
[0 4 11 21 32 58 60 77 97 100 102 103]
[0 4 11 21 32 58 60 77 84 91 103]
[0 4 11 21 32 58 60 77 84 91 93 102 103]
[0 4 11 21 32 58 60 77 84 91 93 97 103]
[0 4 11 21 32 58 60 77 84 91 93 97 100 103]
[0 4 11 21 32 58 60 77 84 91 93 97 100 102 103]
[0 4 11 21 32 45 60 103]
[0 4 11 21 32 45 60 93 102 103]
[0 4 11 21 32 45 60 93 97 103]
[0 4 11 21 32 45 60 93 97 100 103]
[0 4 11 21 32 45 60 93 97 100 102 103]
[0 4 11 21 32 45 60 77 97 103]
[0 4 11 21 32 45 60 77 97 100 103]
[0 4 11 21 32 45 60 77 97 100 102 103]
[0 4 11 21 32 45 60 77 84 91 103]
[0 4 11 21 32 45 60 77 84 91 93 102 103]
[0 4 11 21 32 45 60 77 84 91 93 97 103]
[0 4 11 21 32 45 60 77 84 91 93 97 100 103]
[0 4 11 21 32 45 60 77 84 91 93 97 100 102 103]
[0 4 11 21 32 45 56 77 97 103]
[0 4 11 21 32 45 56 77 97 100 103]
[0 4 11 21 32 45 56 77 97 100 102 103]
[0 4 11 21 32 45 56 77 84 91 103]
[0 4 11 21 32 45 56 77 84 91 93 102 103]
[0 4 11 21 32 45 56 77 84 91 93 97 103]
[0 4 11 21 32 45 56 77 84 91 93 97 100 103]
[0 4 11 21 32 45 56 77 84 91 93 97 100 102 103]
[0 4 11 21 32 45 56 58 100 103]
[0 4 11 21 32 45 56 58 100 102 103]
[0 4 11 21 32 45 56 58 60 103]
[0 4 11 21 32 45 56 58 60 93 102 103]
[0 4 11 21 32 45 56 58 60 93 97 103]
[0 4 11 21 32 45 56 58 60 93 97 100 103]
[0 4 11 21 32 45 56 58 60 93 97 100 102 103]
[0 4 11 21 32 45 56 58 60 77 97 103]
[0 4 11 21 32 45 56 58 60 77 97 100 103]
[0 4 11 21 32 45 56 58 60 77 97 100 102 103]
[0 4 11 21 32 45 56 58 60 77 84 91 103]
[0 4 11 21 32 45 56 58 60 77 84 91 93 102 103]
[0 4 11 21 32 45 56 58 60 77 84 91 93 97 103]
[0 4 11 21 32 45 56 58 60 77 84 91 93 97 100 103]
[0 4 11 21 32 45 56 58 60 77 84 91 93 97 100 102 103]
|f267| = list_max([
  list_sum(25, 3, 11);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    13;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    13;
    3;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    13;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    13;
    3;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    56;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    56;
    17;
    3;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    56;
    17;
    13;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    56;
    17;
    13;
    13;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    56;
    17;
    13;
    13;
    3;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    56;
    20;
    13;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    56;
    20;
    13;
    13;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    56;
    20;
    13;
    13;
    3;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    56;
    20;
    (list_max([
      (33 + |f29|) * (N([pn1], [((((R(29, 0, i32, pn1)) + -48) < 10) || (((R(29, 0, i32, pn1)) + -65) < 26)) || (((R(29, 0, i32, pn1)) == 95) || (((R(29, 0, i32, pn1)) + -97) < 26))], [pn1], [pn1]));
      38 * (N([m[0]], [(((m[0] + -48) < 10) || ((m[0] + -65) < 26)) || ((m[0] == 95) || ((m[0] + -97) < 26))], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    7;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    56;
    20;
    (list_max([
      (33 + |f29|) * (N([pn1], [((((R(29, 0, i32, pn1)) + -48) < 10) || (((R(29, 0, i32, pn1)) + -65) < 26)) || (((R(29, 0, i32, pn1)) == 95) || (((R(29, 0, i32, pn1)) + -97) < 26))], [pn1], [pn1]));
      38 * (N([m[0]], [(((m[0] + -48) < 10) || ((m[0] + -65) < 26)) || ((m[0] == 95) || ((m[0] + -97) < 26))], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    7;
    17;
    3;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    56;
    20;
    (list_max([
      (33 + |f29|) * (N([pn1], [((((R(29, 0, i32, pn1)) + -48) < 10) || (((R(29, 0, i32, pn1)) + -65) < 26)) || (((R(29, 0, i32, pn1)) == 95) || (((R(29, 0, i32, pn1)) + -97) < 26))], [pn1], [pn1]));
      38 * (N([m[0]], [(((m[0] + -48) < 10) || ((m[0] + -65) < 26)) || ((m[0] == 95) || ((m[0] + -97) < 26))], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    7;
    17;
    13;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    56;
    20;
    (list_max([
      (33 + |f29|) * (N([pn1], [((((R(29, 0, i32, pn1)) + -48) < 10) || (((R(29, 0, i32, pn1)) + -65) < 26)) || (((R(29, 0, i32, pn1)) == 95) || (((R(29, 0, i32, pn1)) + -97) < 26))], [pn1], [pn1]));
      38 * (N([m[0]], [(((m[0] + -48) < 10) || ((m[0] + -65) < 26)) || ((m[0] == 95) || ((m[0] + -97) < 26))], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    7;
    17;
    13;
    13;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    56;
    20;
    (list_max([
      (33 + |f29|) * (N([pn1], [((((R(29, 0, i32, pn1)) + -48) < 10) || (((R(29, 0, i32, pn1)) + -65) < 26)) || (((R(29, 0, i32, pn1)) == 95) || (((R(29, 0, i32, pn1)) + -97) < 26))], [pn1], [pn1]));
      38 * (N([m[0]], [(((m[0] + -48) < 10) || ((m[0] + -65) < 26)) || ((m[0] == 95) || ((m[0] + -97) < 26))], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    7;
    17;
    13;
    13;
    3;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    5;
    13;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    5;
    13;
    3;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    5;
    56;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    5;
    56;
    17;
    3;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    5;
    56;
    17;
    13;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    5;
    56;
    17;
    13;
    13;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    5;
    56;
    17;
    13;
    13;
    3;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    5;
    56;
    20;
    13;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    5;
    56;
    20;
    13;
    13;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    5;
    56;
    20;
    13;
    13;
    3;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    5;
    56;
    20;
    (list_max([
      (33 + |f29|) * (N([pn1], [((((R(29, 0, i32, pn1)) + -48) < 10) || (((R(29, 0, i32, pn1)) + -65) < 26)) || (((R(29, 0, i32, pn1)) == 95) || (((R(29, 0, i32, pn1)) + -97) < 26))], [pn1], [pn1]));
      38 * (N([m[0]], [(((m[0] + -48) < 10) || ((m[0] + -65) < 26)) || ((m[0] == 95) || ((m[0] + -97) < 26))], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    7;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    5;
    56;
    20;
    (list_max([
      (33 + |f29|) * (N([pn1], [((((R(29, 0, i32, pn1)) + -48) < 10) || (((R(29, 0, i32, pn1)) + -65) < 26)) || (((R(29, 0, i32, pn1)) == 95) || (((R(29, 0, i32, pn1)) + -97) < 26))], [pn1], [pn1]));
      38 * (N([m[0]], [(((m[0] + -48) < 10) || ((m[0] + -65) < 26)) || ((m[0] == 95) || ((m[0] + -97) < 26))], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    7;
    17;
    3;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    5;
    56;
    20;
    (list_max([
      (33 + |f29|) * (N([pn1], [((((R(29, 0, i32, pn1)) + -48) < 10) || (((R(29, 0, i32, pn1)) + -65) < 26)) || (((R(29, 0, i32, pn1)) == 95) || (((R(29, 0, i32, pn1)) + -97) < 26))], [pn1], [pn1]));
      38 * (N([m[0]], [(((m[0] + -48) < 10) || ((m[0] + -65) < 26)) || ((m[0] == 95) || ((m[0] + -97) < 26))], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    7;
    17;
    13;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    5;
    56;
    20;
    (list_max([
      (33 + |f29|) * (N([pn1], [((((R(29, 0, i32, pn1)) + -48) < 10) || (((R(29, 0, i32, pn1)) + -65) < 26)) || (((R(29, 0, i32, pn1)) == 95) || (((R(29, 0, i32, pn1)) + -97) < 26))], [pn1], [pn1]));
      38 * (N([m[0]], [(((m[0] + -48) < 10) || ((m[0] + -65) < 26)) || ((m[0] == 95) || ((m[0] + -97) < 26))], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    7;
    17;
    13;
    13;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    5;
    56;
    20;
    (list_max([
      (33 + |f29|) * (N([pn1], [((((R(29, 0, i32, pn1)) + -48) < 10) || (((R(29, 0, i32, pn1)) + -65) < 26)) || (((R(29, 0, i32, pn1)) == 95) || (((R(29, 0, i32, pn1)) + -97) < 26))], [pn1], [pn1]));
      38 * (N([m[0]], [(((m[0] + -48) < 10) || ((m[0] + -65) < 26)) || ((m[0] == 95) || ((m[0] + -97) < 26))], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    7;
    17;
    13;
    13;
    3;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    (list_max([
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + (list_max(1, 1, 1, 3));
    56;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    (list_max([
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + (list_max(1, 1, 1, 3));
    56;
    17;
    3;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    (list_max([
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + (list_max(1, 1, 1, 3));
    56;
    17;
    13;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    (list_max([
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + (list_max(1, 1, 1, 3));
    56;
    17;
    13;
    13;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    (list_max([
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + (list_max(1, 1, 1, 3));
    56;
    17;
    13;
    13;
    3;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    (list_max([
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + (list_max(1, 1, 1, 3));
    56;
    20;
    13;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    (list_max([
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + (list_max(1, 1, 1, 3));
    56;
    20;
    13;
    13;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    (list_max([
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + (list_max(1, 1, 1, 3));
    56;
    20;
    13;
    13;
    3;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    (list_max([
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + (list_max(1, 1, 1, 3));
    56;
    20;
    (list_max([
      (33 + |f29|) * (N([pn1], [((((R(29, 0, i32, pn1)) + -48) < 10) || (((R(29, 0, i32, pn1)) + -65) < 26)) || (((R(29, 0, i32, pn1)) == 95) || (((R(29, 0, i32, pn1)) + -97) < 26))], [pn1], [pn1]));
      38 * (N([m[0]], [(((m[0] + -48) < 10) || ((m[0] + -65) < 26)) || ((m[0] == 95) || ((m[0] + -97) < 26))], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    7;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    (list_max([
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + (list_max(1, 1, 1, 3));
    56;
    20;
    (list_max([
      (33 + |f29|) * (N([pn1], [((((R(29, 0, i32, pn1)) + -48) < 10) || (((R(29, 0, i32, pn1)) + -65) < 26)) || (((R(29, 0, i32, pn1)) == 95) || (((R(29, 0, i32, pn1)) + -97) < 26))], [pn1], [pn1]));
      38 * (N([m[0]], [(((m[0] + -48) < 10) || ((m[0] + -65) < 26)) || ((m[0] == 95) || ((m[0] + -97) < 26))], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    7;
    17;
    3;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    (list_max([
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + (list_max(1, 1, 1, 3));
    56;
    20;
    (list_max([
      (33 + |f29|) * (N([pn1], [((((R(29, 0, i32, pn1)) + -48) < 10) || (((R(29, 0, i32, pn1)) + -65) < 26)) || (((R(29, 0, i32, pn1)) == 95) || (((R(29, 0, i32, pn1)) + -97) < 26))], [pn1], [pn1]));
      38 * (N([m[0]], [(((m[0] + -48) < 10) || ((m[0] + -65) < 26)) || ((m[0] == 95) || ((m[0] + -97) < 26))], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    7;
    17;
    13;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    (list_max([
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + (list_max(1, 1, 1, 3));
    56;
    20;
    (list_max([
      (33 + |f29|) * (N([pn1], [((((R(29, 0, i32, pn1)) + -48) < 10) || (((R(29, 0, i32, pn1)) + -65) < 26)) || (((R(29, 0, i32, pn1)) == 95) || (((R(29, 0, i32, pn1)) + -97) < 26))], [pn1], [pn1]));
      38 * (N([m[0]], [(((m[0] + -48) < 10) || ((m[0] + -65) < 26)) || ((m[0] == 95) || ((m[0] + -97) < 26))], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    7;
    17;
    13;
    13;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    (list_max([
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + (list_max(1, 1, 1, 3));
    56;
    20;
    (list_max([
      (33 + |f29|) * (N([pn1], [((((R(29, 0, i32, pn1)) + -48) < 10) || (((R(29, 0, i32, pn1)) + -65) < 26)) || (((R(29, 0, i32, pn1)) == 95) || (((R(29, 0, i32, pn1)) + -97) < 26))], [pn1], [pn1]));
      38 * (N([m[0]], [(((m[0] + -48) < 10) || ((m[0] + -65) < 26)) || ((m[0] == 95) || ((m[0] + -97) < 26))], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    7;
    17;
    13;
    13;
    3;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    (list_max([
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + (list_max(1, 1, 1, 3));
    1;
    20;
    13;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    (list_max([
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + (list_max(1, 1, 1, 3));
    1;
    20;
    13;
    13;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    (list_max([
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + (list_max(1, 1, 1, 3));
    1;
    20;
    13;
    13;
    3;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    (list_max([
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + (list_max(1, 1, 1, 3));
    1;
    20;
    (list_max([
      (33 + |f29|) * (N([pn1], [((((R(29, 0, i32, pn1)) + -48) < 10) || (((R(29, 0, i32, pn1)) + -65) < 26)) || (((R(29, 0, i32, pn1)) == 95) || (((R(29, 0, i32, pn1)) + -97) < 26))], [pn1], [pn1]));
      38 * (N([m[0]], [(((m[0] + -48) < 10) || ((m[0] + -65) < 26)) || ((m[0] == 95) || ((m[0] + -97) < 26))], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    7;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    (list_max([
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + (list_max(1, 1, 1, 3));
    1;
    20;
    (list_max([
      (33 + |f29|) * (N([pn1], [((((R(29, 0, i32, pn1)) + -48) < 10) || (((R(29, 0, i32, pn1)) + -65) < 26)) || (((R(29, 0, i32, pn1)) == 95) || (((R(29, 0, i32, pn1)) + -97) < 26))], [pn1], [pn1]));
      38 * (N([m[0]], [(((m[0] + -48) < 10) || ((m[0] + -65) < 26)) || ((m[0] == 95) || ((m[0] + -97) < 26))], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    7;
    17;
    3;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    (list_max([
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + (list_max(1, 1, 1, 3));
    1;
    20;
    (list_max([
      (33 + |f29|) * (N([pn1], [((((R(29, 0, i32, pn1)) + -48) < 10) || (((R(29, 0, i32, pn1)) + -65) < 26)) || (((R(29, 0, i32, pn1)) == 95) || (((R(29, 0, i32, pn1)) + -97) < 26))], [pn1], [pn1]));
      38 * (N([m[0]], [(((m[0] + -48) < 10) || ((m[0] + -65) < 26)) || ((m[0] == 95) || ((m[0] + -97) < 26))], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    7;
    17;
    13;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    (list_max([
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + (list_max(1, 1, 1, 3));
    1;
    20;
    (list_max([
      (33 + |f29|) * (N([pn1], [((((R(29, 0, i32, pn1)) + -48) < 10) || (((R(29, 0, i32, pn1)) + -65) < 26)) || (((R(29, 0, i32, pn1)) == 95) || (((R(29, 0, i32, pn1)) + -97) < 26))], [pn1], [pn1]));
      38 * (N([m[0]], [(((m[0] + -48) < 10) || ((m[0] + -65) < 26)) || ((m[0] == 95) || ((m[0] + -97) < 26))], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    7;
    17;
    13;
    13;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    (list_max([
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + (list_max(1, 1, 1, 3));
    1;
    20;
    (list_max([
      (33 + |f29|) * (N([pn1], [((((R(29, 0, i32, pn1)) + -48) < 10) || (((R(29, 0, i32, pn1)) + -65) < 26)) || (((R(29, 0, i32, pn1)) == 95) || (((R(29, 0, i32, pn1)) + -97) < 26))], [pn1], [pn1]));
      38 * (N([m[0]], [(((m[0] + -48) < 10) || ((m[0] + -65) < 26)) || ((m[0] == 95) || ((m[0] + -97) < 26))], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    7;
    17;
    13;
    13;
    3;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    (list_max([
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + (list_max(1, 1, 1, 3));
    1;
    5;
    13;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    (list_max([
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + (list_max(1, 1, 1, 3));
    1;
    5;
    13;
    3;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    (list_max([
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + (list_max(1, 1, 1, 3));
    1;
    5;
    56;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    (list_max([
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + (list_max(1, 1, 1, 3));
    1;
    5;
    56;
    17;
    3;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    (list_max([
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + (list_max(1, 1, 1, 3));
    1;
    5;
    56;
    17;
    13;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    (list_max([
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + (list_max(1, 1, 1, 3));
    1;
    5;
    56;
    17;
    13;
    13;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    (list_max([
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + (list_max(1, 1, 1, 3));
    1;
    5;
    56;
    17;
    13;
    13;
    3;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    (list_max([
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + (list_max(1, 1, 1, 3));
    1;
    5;
    56;
    20;
    13;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    (list_max([
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + (list_max(1, 1, 1, 3));
    1;
    5;
    56;
    20;
    13;
    13;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    (list_max([
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + (list_max(1, 1, 1, 3));
    1;
    5;
    56;
    20;
    13;
    13;
    3;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    (list_max([
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + (list_max(1, 1, 1, 3));
    1;
    5;
    56;
    20;
    (list_max([
      (33 + |f29|) * (N([pn1], [((((R(29, 0, i32, pn1)) + -48) < 10) || (((R(29, 0, i32, pn1)) + -65) < 26)) || (((R(29, 0, i32, pn1)) == 95) || (((R(29, 0, i32, pn1)) + -97) < 26))], [pn1], [pn1]));
      38 * (N([m[0]], [(((m[0] + -48) < 10) || ((m[0] + -65) < 26)) || ((m[0] == 95) || ((m[0] + -97) < 26))], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    7;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    (list_max([
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + (list_max(1, 1, 1, 3));
    1;
    5;
    56;
    20;
    (list_max([
      (33 + |f29|) * (N([pn1], [((((R(29, 0, i32, pn1)) + -48) < 10) || (((R(29, 0, i32, pn1)) + -65) < 26)) || (((R(29, 0, i32, pn1)) == 95) || (((R(29, 0, i32, pn1)) + -97) < 26))], [pn1], [pn1]));
      38 * (N([m[0]], [(((m[0] + -48) < 10) || ((m[0] + -65) < 26)) || ((m[0] == 95) || ((m[0] + -97) < 26))], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    7;
    17;
    3;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    (list_max([
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + (list_max(1, 1, 1, 3));
    1;
    5;
    56;
    20;
    (list_max([
      (33 + |f29|) * (N([pn1], [((((R(29, 0, i32, pn1)) + -48) < 10) || (((R(29, 0, i32, pn1)) + -65) < 26)) || (((R(29, 0, i32, pn1)) == 95) || (((R(29, 0, i32, pn1)) + -97) < 26))], [pn1], [pn1]));
      38 * (N([m[0]], [(((m[0] + -48) < 10) || ((m[0] + -65) < 26)) || ((m[0] == 95) || ((m[0] + -97) < 26))], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    7;
    17;
    13;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    (list_max([
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + (list_max(1, 1, 1, 3));
    1;
    5;
    56;
    20;
    (list_max([
      (33 + |f29|) * (N([pn1], [((((R(29, 0, i32, pn1)) + -48) < 10) || (((R(29, 0, i32, pn1)) + -65) < 26)) || (((R(29, 0, i32, pn1)) == 95) || (((R(29, 0, i32, pn1)) + -97) < 26))], [pn1], [pn1]));
      38 * (N([m[0]], [(((m[0] + -48) < 10) || ((m[0] + -65) < 26)) || ((m[0] == 95) || ((m[0] + -97) < 26))], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    7;
    17;
    13;
    13;
    11
  ]);
  list_sum([
    25;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn1], [R(56, 0, i32, R(29, 0, i32, pn1))], [pn1], [pn1]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    33;
    (list_max([
      21 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      (32 + |f29|) * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]));
      37 * (N([ln4], [(ln4 + 1) != 8], [0], [ln4 + 1]))
    ])) + (list_max(1, 1, 1, 1));
    20;
    (list_max([
      21 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      (32 + |f29|) * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]));
      37 * (N([ln5], [(ln5 + 1) != 3], [0], [ln5 + 1]))
    ])) + (list_max(1, 1, 1, 3));
    1;
    5;
    56;
    20;
    (list_max([
      (33 + |f29|) * (N([pn1], [((((R(29, 0, i32, pn1)) + -48) < 10) || (((R(29, 0, i32, pn1)) + -65) < 26)) || (((R(29, 0, i32, pn1)) == 95) || (((R(29, 0, i32, pn1)) + -97) < 26))], [pn1], [pn1]));
      38 * (N([m[0]], [(((m[0] + -48) < 10) || ((m[0] + -65) < 26)) || ((m[0] == 95) || ((m[0] + -97) < 26))], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    7;
    17;
    13;
    13;
    3;
    11
  ])
])
