ebb costs:
[0]: 138
[20]: (list_max((63 * N([ln4; m[60]], [((ln4 + 1) < m[60])], [0; m[60]], [(ln4 + 1); m[60]])), (46 * N([ln4; ln5], [((ln4 + 1) < ln5)], [0; m[60]], [(ln4 + 1); ln5])), (72 * N([ln4; m[60]], [((ln4 + 1) < m[60])], [0; m[60]], [(ln4 + 1); m[60]]))) + list_max(1, 1, 1))
[27]: 10
[29]: (((70 + |f53|) * N([ln3; m[60]], [((ln3 + 1) < m[60])], [0; m[60]], [(ln3 + 1); m[60]])) + 1)
[33]: 4
[34]: 64
[51]: (((16 + |f27|) * N([ln6; m[60]], [((ln6 + 1) < m[60])], [(0 + 1); m[60]], [(ln6 + 1); m[60]])) + 1)
[53]: 1
[55]: 19
[57]: 8
[59]: ((334 * N([ln2; m[168]], [(ln2 < m[168])], [1; m[168]], [(ln2 + 1); m[168]])) + list_max(31, 59, 73, 45, 73, 87, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 31, 59, 73, 45, 73, 87, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 31, 59, 73, 45, 73, 87, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 31, 59, 73, 45, 73, 87, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 31, 59, 73, 45, 73, 87, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 31, 59, 73, 45, 73, 87, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 31, 59, 73, 45, 73, 87, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 31, 59, 73, 45, 73, 87, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 31, 59, 73, 45, 73, 87, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 31, 59, 73, 45, 73, 87, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 31, 59, 73, 45, 73, 87, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 31, 59, 73, 45, 73, 87, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 31, 59, 73, 45, 73, 87, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 31, 59, 73, 45, 73, 87, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 31, 59, 73, 45, 73, 87, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 31, 59, 73, 45, 73, 87, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 31, 59, 73, 45, 73, 87, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 31, 59, 73, 45, 73, 87, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 31, 59, 73, 45, 73, 87, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 31, 59, 73, 45, 73, 87, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 31, 59, 73, 45, 73, 87, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 31, 59, 73, 45, 73, 87, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 31, 59, 73, 45, 73, 87, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 31, 59, 73, 45, 73, 87, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 31, 59, 73, 45, 73, 87, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 31, 59, 73, 45, 73, 87, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 31, 59, 73, 45, 73, 87, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 31, 59, 73, 45, 73, 87, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 31, 59, 73, 45, 73, 87, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 31, 59, 73, 45, 73, 87, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 31, 59, 73, 45, 73, 87, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 31, 59, 73, 45, 73, 87, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 31, 59, 73, 45, 73, 87, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 31, 59, 73, 45, 73, 87, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 31, 59, 73, 45, 73, 87, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 31, 59, 73, 45, 73, 87, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 31, 59, 73, 45, 73, 87, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 31, 59, 73, 45, 73, 87, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 31, 59, 73, 45, 73, 87, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 31, 59, 73, 45, 73, 87, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 31, 59, 73, 45, 73, 87, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 31, 59, 73, 45, 73, 87, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 1, 1, 62, 55, 69, 50, 1, 1, 49, 63, 1, 62, 55, 69, 50, 1, 1, 49, 63, 26, 71, 85, 85, 75, 89, 72, 86, 78, 20, 65, 108, 101, 115, 116, 106, 120, 101, 115, 79, 122, 115, 129, 130, 120, 134, 115, 129, 49, 94, 108, 108, 98, 112, 95, 109, 101, 34, 79, 122, 115, 129, 130, 120, 134, 115, 129, 93, 136, 129, 143, 144, 134, 148, 129, 143, 63, 108, 122, 122, 112, 126, 109, 123, 115, 50, 78, 92, 64, 92, 106, 67, 112, 155, 148, 162, 163, 153, 167, 148, 162, 126, 169, 162, 176, 177, 167, 181, 162, 176, 96, 141, 155, 155, 145, 159, 142, 156, 148, 81, 126, 169, 162, 176, 177, 167, 181, 162, 176, 140, 183, 176, 190, 191, 181, 195, 176, 190, 110, 155, 169, 169, 159, 173, 156, 170, 162, 66, 111, 154, 147, 161, 162, 152, 166, 147, 161, 125, 168, 161, 175, 176, 166, 180, 161, 175, 95, 140, 154, 154, 144, 158, 141, 155, 147, 80, 125, 168, 161, 175, 176, 166, 180, 161, 175, 139, 182, 175, 189, 190, 180, 194, 175, 189, 109, 154, 168, 168, 158, 172, 155, 169, 161, 81, 126, 169, 162, 176, 177, 167, 181, 162, 176, 140, 183, 176, 190, 191, 181, 195, 176, 190, 110, 155, 169, 169, 159, 173, 156, 170, 162, 95, 140, 183, 176, 190, 191, 181, 195, 176, 190, 154, 197, 190, 204, 205, 195, 209, 190, 204, 124, 169, 183, 183, 173, 187, 170, 184, 176, 80, 125, 168, 161, 175, 176, 166, 180, 161, 175, 139, 182, 175, 189, 190, 180, 194, 175, 189, 109, 154, 168, 168, 158, 172, 155, 169, 161, 94, 139, 182, 175, 189, 190, 180, 194, 175, 189, 153, 196, 189, 203, 204, 194, 208, 189, 203, 123, 168, 182, 182, 172, 186, 169, 183, 175))
[59]: 69
[72]: (list_max((38 * N([ln13; ln2], [((ln2 + 1) != ln13)], [51; 1], [ln13; (ln2 + 1)])), (52 * N([ln13; ln2], [((ln2 + 1) != ln13)], [51; 1], [ln13; (ln2 + 1)])), (29 * N([ln13; ln2], [((ln2 + 1) != ln13)], [51; 1], [ln13; (ln2 + 1)])), (43 * N([ln13; ln2], [((ln2 + 1) != ln13)], [51; 1], [ln13; (ln2 + 1)])), (44 * N([ln13; ln2], [((ln2 + 1) != ln13)], [51; 1], [ln13; (ln2 + 1)])), (58 * N([ln13; ln2], [((ln2 + 1) != ln13)], [51; 1], [ln13; (ln2 + 1)]))) + list_max(1, 1, 1, 1, 1, 1))
[81]: 1
[82]: 96
[96]: (list_max((10 * N([ln13; ln14], [((ln14 + 1) != ln13)], [0; 0], [ln13; (ln14 + 1)])), (55 * N([ln13; ln14], [((ln14 + 1) != ln13)], [0; 0], [ln13; (ln14 + 1)])), (69 * N([ln13; ln14], [((ln14 + 1) != ln13)], [0; 0], [ln13; (ln14 + 1)])), (69 * N([ln13; ln14], [((ln14 + 1) != ln13)], [0; 0], [ln13; (ln14 + 1)])), (59 * N([ln13; ln14], [((ln14 + 1) != ln13)], [0; 0], [ln13; (ln14 + 1)])), (73 * N([ln13; ln14], [((ln14 + 1) != ln13)], [0; 0], [ln13; (ln14 + 1)])), (56 * N([ln13; ln14], [((ln14 + 1) != ln13)], [0; 0], [ln13; (ln14 + 1)])), (70 * N([ln13; ln14], [((ln14 + 1) != ln13)], [0; 0], [ln13; (ln14 + 1)])), (62 * N([ln13; ln14], [((ln14 + 1) != ln13)], [0; 0], [ln13; (ln14 + 1)]))) + list_max(1, 1, 1, 1, 1, 1, 1, 1, 1))
[96]: 19
[101]: ((35 * N([ln1; ln6], [i32.eqz((ln1 == ln6))], [0; 0], [(ln1 + 1); ln6])) + 1)
[105]: 1
[108]: (list_max((28 * N([ln1; ln6], [i32.eqz((ln1 == ln6))], [0; 0], [(ln1 + 1); ln6])), (42 * N([ln1; ln6], [i32.eqz((ln1 == ln6))], [0; 0], [(ln1 + 1); ln6]))) + list_max(1, 1))
[112]: 1
[114]: 5
[116]: (list_max((42 * N([ln1; ln6], [(ln1 != ln6)], [0; 0], [(ln1 + 1); ln6])), (32 * N([ln1; ln6], [(ln1 != ln6)], [0; 0], [(ln1 + 1); ln6])), (46 * N([ln1; ln6], [(ln1 != ln6)], [0; 0], [(ln1 + 1); ln6]))) + list_max(1, 1, 1))
[126]: 1
[129]: (list_max((27 * N([ln1; ln6], [(ln1 != ln6)], [0; 0], [(ln1 + 1); ln6])), (41 * N([ln1; ln6], [(ln1 != ln6)], [0; 0], [(ln1 + 1); ln6]))) + list_max(1, 1))
[133]: 1
[134]: 8
[138]: 1
[141]: (list_max((25 * N([ln13; ln14], [((ln14 + 1) != ln13)], [0; 0], [ln13; (ln14 + 1)])), (68 * N([ln13; ln14], [((ln14 + 1) != ln13)], [0; 0], [ln13; (ln14 + 1)])), (61 * N([ln13; ln14], [((ln14 + 1) != ln13)], [0; 0], [ln13; (ln14 + 1)])), (75 * N([ln13; ln14], [((ln14 + 1) != ln13)], [0; 0], [ln13; (ln14 + 1)])), (76 * N([ln13; ln14], [((ln14 + 1) != ln13)], [0; 0], [ln13; (ln14 + 1)])), (66 * N([ln13; ln14], [((ln14 + 1) != ln13)], [0; 0], [ln13; (ln14 + 1)])), (80 * N([ln13; ln14], [((ln14 + 1) != ln13)], [0; 0], [ln13; (ln14 + 1)])), (61 * N([ln13; ln14], [((ln14 + 1) != ln13)], [0; 0], [ln13; (ln14 + 1)])), (75 * N([ln13; ln14], [((ln14 + 1) != ln13)], [0; 0], [ln13; (ln14 + 1)])), (39 * N([ln13; ln14], [((ln14 + 1) != ln13)], [0; 0], [ln13; (ln14 + 1)])), (82 * N([ln13; ln14], [((ln14 + 1) != ln13)], [0; 0], [ln13; (ln14 + 1)])), (75 * N([ln13; ln14], [((ln14 + 1) != ln13)], [0; 0], [ln13; (ln14 + 1)])), (89 * N([ln13; ln14], [((ln14 + 1) != ln13)], [0; 0], [ln13; (ln14 + 1)])), (90 * N([ln13; ln14], [((ln14 + 1) != ln13)], [0; 0], [ln13; (ln14 + 1)])), (80 * N([ln13; ln14], [((ln14 + 1) != ln13)], [0; 0], [ln13; (ln14 + 1)])), (94 * N([ln13; ln14], [((ln14 + 1) != ln13)], [0; 0], [ln13; (ln14 + 1)])), (75 * N([ln13; ln14], [((ln14 + 1) != ln13)], [0; 0], [ln13; (ln14 + 1)])), (89 * N([ln13; ln14], [((ln14 + 1) != ln13)], [0; 0], [ln13; (ln14 + 1)]))) + list_max(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1))
[141]: 43
[148]: (list_max((24 * N([ln1; ln6], [i32.eqz((ln1 == ln6))], [0; 0], [(ln1 + 1); ln6])), (38 * N([ln1; ln6], [i32.eqz((ln1 == ln6))], [0; 0], [(ln1 + 1); ln6]))) + list_max(1, 1))
[154]: 1
[157]: (list_max((38 * N([ln4; ln6], [(ln4 != ln6)], [0; 0], [(ln4 + 1); ln6])), (28 * N([ln4; ln6], [(ln4 != ln6)], [0; 0], [(ln4 + 1); ln6])), (42 * N([ln4; ln6], [(ln4 != ln6)], [0; 0], [(ln4 + 1); ln6]))) + list_max(1, 1, 1))
[165]: 1
[167]: 7
[169]: (list_max((24 * N([ln4; ln6], [i32.eqz((ln4 == ln6))], [0; 0], [(ln4 + 1); ln6])), (38 * N([ln4; ln6], [i32.eqz((ln4 == ln6))], [0; 0], [(ln4 + 1); ln6]))) + list_max(1, 1))
[175]: 1
[178]: ((30 * N([ln1; ln6], [(ln1 != ln6)], [0; 0], [(ln1 + 1); ln6])) + 1)
[180]: 1
[181]: 8
[183]: 1
[185]: 32
[189]: (list_max((25 * N([ln13; ln2], [((ln2 + 1) != ln13)], [0; 0], [ln13; (ln2 + 1)])), (39 * N([ln13; ln2], [((ln2 + 1) != ln13)], [0; 0], [ln13; (ln2 + 1)]))) + list_max(1, 1))
[193]: 1
[194]: 14
[196]: 4
[197]: 10
[200]: (list_max((16 * N([ln2; ln6], [((ln6 + 1) < ln2)], [0; 0], [ln2; (ln6 + 1)])), (29 * N([ln6; m[60]], [((ln6 + 1) < m[60])], [0; m[60]], [(ln6 + 1); m[60]]))) + list_max(1, 1))
[204]: 1
[206]: 7
[208]: (list_max((17 * N([ln2; ln6], [((ln6 + 1) < ln2)], [0; 0], [ln2; (ln6 + 1)])), (30 * N([ln6; m[60]], [((ln6 + 1) < m[60])], [0; m[60]], [(ln6 + 1); m[60]]))) + list_max(1, 1))
[212]: 1
[213]: 11
[217]: 7
[218]: 96
[236]: 0
2001 ebb paths found
[0 34 217 218]
[0 34 213 218]
[0 34 213 217 218]
[0 34 57 197 213 218]
[0 34 57 197 213 217 218]
[0 34 57 197 206 213 218]
[0 34 57 197 206 213 217 218]
[0 34 57 197 206 208 212 213 218]
[0 34 57 197 206 208 212 213 217 218]
[0 34 57 197 200 204 213 218]
[0 34 57 197 200 204 213 217 218]
[0 34 57 197 200 204 206 213 218]
[0 34 57 197 200 204 206 213 217 218]
[0 34 57 197 200 204 206 208 212 213 218]
[0 34 57 197 200 204 206 208 212 213 217 218]
[0 34 57 59 82 194 196 197 213 218]
[0 34 57 59 82 194 196 197 213 217 218]
[0 34 57 59 82 194 196 197 206 213 218]
[0 34 57 59 82 194 196 197 206 213 217 218]
[0 34 57 59 82 194 196 197 206 208 212 213 218]
[0 34 57 59 82 194 196 197 206 208 212 213 217 218]
[0 34 57 59 82 194 196 197 200 204 213 218]
[0 34 57 59 82 194 196 197 200 204 213 217 218]
[0 34 57 59 82 194 196 197 200 204 206 213 218]
[0 34 57 59 82 194 196 197 200 204 206 213 217 218]
[0 34 57 59 82 194 196 197 200 204 206 208 212 213 218]
[0 34 57 59 82 194 196 197 200 204 206 208 212 213 217 218]
[0 34 57 59 82 185 194 196 197 213 218]
[0 34 57 59 82 185 194 196 197 213 217 218]
[0 34 57 59 82 185 194 196 197 206 213 218]
[0 34 57 59 82 185 194 196 197 206 213 217 218]
[0 34 57 59 82 185 194 196 197 206 208 212 213 218]
[0 34 57 59 82 185 194 196 197 206 208 212 213 217 218]
[0 34 57 59 82 185 194 196 197 200 204 213 218]
[0 34 57 59 82 185 194 196 197 200 204 213 217 218]
[0 34 57 59 82 185 194 196 197 200 204 206 213 218]
[0 34 57 59 82 185 194 196 197 200 204 206 213 217 218]
[0 34 57 59 82 185 194 196 197 200 204 206 208 212 213 218]
[0 34 57 59 82 185 194 196 197 200 204 206 208 212 213 217 218]
[0 34 57 59 82 185 189 193 194 196 197 213 218]
[0 34 57 59 82 185 189 193 194 196 197 213 217 218]
[0 34 57 59 82 185 189 193 194 196 197 206 213 218]
[0 34 57 59 82 185 189 193 194 196 197 206 213 217 218]
[0 34 57 59 82 185 189 193 194 196 197 206 208 212 213 218]
[0 34 57 59 82 185 189 193 194 196 197 206 208 212 213 217 218]
[0 34 57 59 82 185 189 193 194 196 197 200 204 213 218]
[0 34 57 59 82 185 189 193 194 196 197 200 204 213 217 218]
[0 34 57 59 82 185 189 193 194 196 197 200 204 206 213 218]
[0 34 57 59 82 185 189 193 194 196 197 200 204 206 213 217 218]
[0 34 57 59 82 185 189 193 194 196 197 200 204 206 208 212 213 218]
[0 34 57 59 82 185 189 193 194 196 197 200 204 206 208 212 213 217 218]
[0 34 57 59 82 96 134 236]
[0 34 57 59 82 96 134 194 196 197 213 218]
[0 34 57 59 82 96 134 194 196 197 213 217 218]
[0 34 57 59 82 96 134 194 196 197 206 213 218]
[0 34 57 59 82 96 134 194 196 197 206 213 217 218]
[0 34 57 59 82 96 134 194 196 197 206 208 212 213 218]
[0 34 57 59 82 96 134 194 196 197 206 208 212 213 217 218]
[0 34 57 59 82 96 134 194 196 197 200 204 213 218]
[0 34 57 59 82 96 134 194 196 197 200 204 213 217 218]
[0 34 57 59 82 96 134 194 196 197 200 204 206 213 218]
[0 34 57 59 82 96 134 194 196 197 200 204 206 213 217 218]
[0 34 57 59 82 96 134 194 196 197 200 204 206 208 212 213 218]
[0 34 57 59 82 96 134 194 196 197 200 204 206 208 212 213 217 218]
[0 34 57 59 82 96 114 116 236]
[0 34 57 59 82 96 114 116 134 236]
[0 34 57 59 82 96 114 116 134 194 196 197 213 218]
[0 34 57 59 82 96 114 116 134 194 196 197 213 217 218]
[0 34 57 59 82 96 114 116 134 194 196 197 206 213 218]
[0 34 57 59 82 96 114 116 134 194 196 197 206 213 217 218]
[0 34 57 59 82 96 114 116 134 194 196 197 206 208 212 213 218]
[0 34 57 59 82 96 114 116 134 194 196 197 206 208 212 213 217 218]
[0 34 57 59 82 96 114 116 134 194 196 197 200 204 213 218]
[0 34 57 59 82 96 114 116 134 194 196 197 200 204 213 217 218]
[0 34 57 59 82 96 114 116 134 194 196 197 200 204 206 213 218]
[0 34 57 59 82 96 114 116 134 194 196 197 200 204 206 213 217 218]
[0 34 57 59 82 96 114 116 134 194 196 197 200 204 206 208 212 213 218]
[0 34 57 59 82 96 114 116 134 194 196 197 200 204 206 208 212 213 217 218]
[0 34 57 59 82 96 101 236]
[0 34 57 59 82 96 101 134 236]
[0 34 57 59 82 96 101 134 194 196 197 213 218]
[0 34 57 59 82 96 101 134 194 196 197 213 217 218]
[0 34 57 59 82 96 101 134 194 196 197 206 213 218]
[0 34 57 59 82 96 101 134 194 196 197 206 213 217 218]
[0 34 57 59 82 96 101 134 194 196 197 206 208 212 213 218]
[0 34 57 59 82 96 101 134 194 196 197 206 208 212 213 217 218]
[0 34 57 59 82 96 101 134 194 196 197 200 204 213 218]
[0 34 57 59 82 96 101 134 194 196 197 200 204 213 217 218]
[0 34 57 59 82 96 101 134 194 196 197 200 204 206 213 218]
[0 34 57 59 82 96 101 134 194 196 197 200 204 206 213 217 218]
[0 34 57 59 82 96 101 134 194 196 197 200 204 206 208 212 213 218]
[0 34 57 59 82 96 101 134 194 196 197 200 204 206 208 212 213 217 218]
[0 34 57 59 72 81 82 194 196 197 213 218]
[0 34 57 59 72 81 82 194 196 197 213 217 218]
[0 34 57 59 72 81 82 194 196 197 206 213 218]
[0 34 57 59 72 81 82 194 196 197 206 213 217 218]
[0 34 57 59 72 81 82 194 196 197 206 208 212 213 218]
[0 34 57 59 72 81 82 194 196 197 206 208 212 213 217 218]
[0 34 57 59 72 81 82 194 196 197 200 204 213 218]
[0 34 57 59 72 81 82 194 196 197 200 204 213 217 218]
[0 34 57 59 72 81 82 194 196 197 200 204 206 213 218]
[0 34 57 59 72 81 82 194 196 197 200 204 206 213 217 218]
[0 34 57 59 72 81 82 194 196 197 200 204 206 208 212 213 218]
[0 34 57 59 72 81 82 194 196 197 200 204 206 208 212 213 217 218]
[0 34 57 59 72 81 82 185 194 196 197 213 218]
[0 34 57 59 72 81 82 185 194 196 197 213 217 218]
[0 34 57 59 72 81 82 185 194 196 197 206 213 218]
[0 34 57 59 72 81 82 185 194 196 197 206 213 217 218]
[0 34 57 59 72 81 82 185 194 196 197 206 208 212 213 218]
[0 34 57 59 72 81 82 185 194 196 197 206 208 212 213 217 218]
[0 34 57 59 72 81 82 185 194 196 197 200 204 213 218]
[0 34 57 59 72 81 82 185 194 196 197 200 204 213 217 218]
[0 34 57 59 72 81 82 185 194 196 197 200 204 206 213 218]
[0 34 57 59 72 81 82 185 194 196 197 200 204 206 213 217 218]
[0 34 57 59 72 81 82 185 194 196 197 200 204 206 208 212 213 218]
[0 34 57 59 72 81 82 185 194 196 197 200 204 206 208 212 213 217 218]
[0 34 57 59 72 81 82 185 189 193 194 196 197 213 218]
[0 34 57 59 72 81 82 185 189 193 194 196 197 213 217 218]
[0 34 57 59 72 81 82 185 189 193 194 196 197 206 213 218]
[0 34 57 59 72 81 82 185 189 193 194 196 197 206 213 217 218]
[0 34 57 59 72 81 82 185 189 193 194 196 197 206 208 212 213 218]
[0 34 57 59 72 81 82 185 189 193 194 196 197 206 208 212 213 217 218]
[0 34 57 59 72 81 82 185 189 193 194 196 197 200 204 213 218]
[0 34 57 59 72 81 82 185 189 193 194 196 197 200 204 213 217 218]
[0 34 57 59 72 81 82 185 189 193 194 196 197 200 204 206 213 218]
[0 34 57 59 72 81 82 185 189 193 194 196 197 200 204 206 213 217 218]
[0 34 57 59 72 81 82 185 189 193 194 196 197 200 204 206 208 212 213 218]
[0 34 57 59 72 81 82 185 189 193 194 196 197 200 204 206 208 212 213 217 218]
[0 34 57 59 72 81 82 96 134 236]
[0 34 57 59 72 81 82 96 134 194 196 197 213 218]
[0 34 57 59 72 81 82 96 134 194 196 197 213 217 218]
[0 34 57 59 72 81 82 96 134 194 196 197 206 213 218]
[0 34 57 59 72 81 82 96 134 194 196 197 206 213 217 218]
[0 34 57 59 72 81 82 96 134 194 196 197 206 208 212 213 218]
[0 34 57 59 72 81 82 96 134 194 196 197 206 208 212 213 217 218]
[0 34 57 59 72 81 82 96 134 194 196 197 200 204 213 218]
[0 34 57 59 72 81 82 96 134 194 196 197 200 204 213 217 218]
[0 34 57 59 72 81 82 96 134 194 196 197 200 204 206 213 218]
[0 34 57 59 72 81 82 96 134 194 196 197 200 204 206 213 217 218]
[0 34 57 59 72 81 82 96 134 194 196 197 200 204 206 208 212 213 218]
[0 34 57 59 72 81 82 96 134 194 196 197 200 204 206 208 212 213 217 218]
[0 34 57 59 72 81 82 96 114 116 236]
[0 34 57 59 72 81 82 96 114 116 134 236]
[0 34 57 59 72 81 82 96 114 116 134 194 196 197 213 218]
[0 34 57 59 72 81 82 96 114 116 134 194 196 197 213 217 218]
[0 34 57 59 72 81 82 96 114 116 134 194 196 197 206 213 218]
[0 34 57 59 72 81 82 96 114 116 134 194 196 197 206 213 217 218]
[0 34 57 59 72 81 82 96 114 116 134 194 196 197 206 208 212 213 218]
[0 34 57 59 72 81 82 96 114 116 134 194 196 197 206 208 212 213 217 218]
[0 34 57 59 72 81 82 96 114 116 134 194 196 197 200 204 213 218]
[0 34 57 59 72 81 82 96 114 116 134 194 196 197 200 204 213 217 218]
[0 34 57 59 72 81 82 96 114 116 134 194 196 197 200 204 206 213 218]
[0 34 57 59 72 81 82 96 114 116 134 194 196 197 200 204 206 213 217 218]
[0 34 57 59 72 81 82 96 114 116 134 194 196 197 200 204 206 208 212 213 218]
[0 34 57 59 72 81 82 96 114 116 134 194 196 197 200 204 206 208 212 213 217 218]
[0 34 57 59 72 81 82 96 101 236]
[0 34 57 59 72 81 82 96 101 134 236]
[0 34 57 59 72 81 82 96 101 134 194 196 197 213 218]
[0 34 57 59 72 81 82 96 101 134 194 196 197 213 217 218]
[0 34 57 59 72 81 82 96 101 134 194 196 197 206 213 218]
[0 34 57 59 72 81 82 96 101 134 194 196 197 206 213 217 218]
[0 34 57 59 72 81 82 96 101 134 194 196 197 206 208 212 213 218]
[0 34 57 59 72 81 82 96 101 134 194 196 197 206 208 212 213 217 218]
[0 34 57 59 72 81 82 96 101 134 194 196 197 200 204 213 218]
[0 34 57 59 72 81 82 96 101 134 194 196 197 200 204 213 217 218]
[0 34 57 59 72 81 82 96 101 134 194 196 197 200 204 206 213 218]
[0 34 57 59 72 81 82 96 101 134 194 196 197 200 204 206 213 217 218]
[0 34 57 59 72 81 82 96 101 134 194 196 197 200 204 206 208 212 213 218]
[0 34 57 59 72 81 82 96 101 134 194 196 197 200 204 206 208 212 213 217 218]
[0 34 55 57 197 213 218]
[0 34 55 57 197 213 217 218]
[0 34 55 57 197 206 213 218]
[0 34 55 57 197 206 213 217 218]
[0 34 55 57 197 206 208 212 213 218]
[0 34 55 57 197 206 208 212 213 217 218]
[0 34 55 57 197 200 204 213 218]
[0 34 55 57 197 200 204 213 217 218]
[0 34 55 57 197 200 204 206 213 218]
[0 34 55 57 197 200 204 206 213 217 218]
[0 34 55 57 197 200 204 206 208 212 213 218]
[0 34 55 57 197 200 204 206 208 212 213 217 218]
[0 34 55 57 59 82 194 196 197 213 218]
[0 34 55 57 59 82 194 196 197 213 217 218]
[0 34 55 57 59 82 194 196 197 206 213 218]
[0 34 55 57 59 82 194 196 197 206 213 217 218]
[0 34 55 57 59 82 194 196 197 206 208 212 213 218]
[0 34 55 57 59 82 194 196 197 206 208 212 213 217 218]
[0 34 55 57 59 82 194 196 197 200 204 213 218]
[0 34 55 57 59 82 194 196 197 200 204 213 217 218]
[0 34 55 57 59 82 194 196 197 200 204 206 213 218]
[0 34 55 57 59 82 194 196 197 200 204 206 213 217 218]
[0 34 55 57 59 82 194 196 197 200 204 206 208 212 213 218]
[0 34 55 57 59 82 194 196 197 200 204 206 208 212 213 217 218]
[0 34 55 57 59 82 185 194 196 197 213 218]
[0 34 55 57 59 82 185 194 196 197 213 217 218]
[0 34 55 57 59 82 185 194 196 197 206 213 218]
[0 34 55 57 59 82 185 194 196 197 206 213 217 218]
[0 34 55 57 59 82 185 194 196 197 206 208 212 213 218]
[0 34 55 57 59 82 185 194 196 197 206 208 212 213 217 218]
[0 34 55 57 59 82 185 194 196 197 200 204 213 218]
[0 34 55 57 59 82 185 194 196 197 200 204 213 217 218]
[0 34 55 57 59 82 185 194 196 197 200 204 206 213 218]
[0 34 55 57 59 82 185 194 196 197 200 204 206 213 217 218]
[0 34 55 57 59 82 185 194 196 197 200 204 206 208 212 213 218]
[0 34 55 57 59 82 185 194 196 197 200 204 206 208 212 213 217 218]
[0 34 55 57 59 82 185 189 193 194 196 197 213 218]
[0 34 55 57 59 82 185 189 193 194 196 197 213 217 218]
[0 34 55 57 59 82 185 189 193 194 196 197 206 213 218]
[0 34 55 57 59 82 185 189 193 194 196 197 206 213 217 218]
[0 34 55 57 59 82 185 189 193 194 196 197 206 208 212 213 218]
[0 34 55 57 59 82 185 189 193 194 196 197 206 208 212 213 217 218]
[0 34 55 57 59 82 185 189 193 194 196 197 200 204 213 218]
[0 34 55 57 59 82 185 189 193 194 196 197 200 204 213 217 218]
[0 34 55 57 59 82 185 189 193 194 196 197 200 204 206 213 218]
[0 34 55 57 59 82 185 189 193 194 196 197 200 204 206 213 217 218]
[0 34 55 57 59 82 185 189 193 194 196 197 200 204 206 208 212 213 218]
[0 34 55 57 59 82 185 189 193 194 196 197 200 204 206 208 212 213 217 218]
[0 34 55 57 59 82 96 134 236]
[0 34 55 57 59 82 96 134 194 196 197 213 218]
[0 34 55 57 59 82 96 134 194 196 197 213 217 218]
[0 34 55 57 59 82 96 134 194 196 197 206 213 218]
[0 34 55 57 59 82 96 134 194 196 197 206 213 217 218]
[0 34 55 57 59 82 96 134 194 196 197 206 208 212 213 218]
[0 34 55 57 59 82 96 134 194 196 197 206 208 212 213 217 218]
[0 34 55 57 59 82 96 134 194 196 197 200 204 213 218]
[0 34 55 57 59 82 96 134 194 196 197 200 204 213 217 218]
[0 34 55 57 59 82 96 134 194 196 197 200 204 206 213 218]
[0 34 55 57 59 82 96 134 194 196 197 200 204 206 213 217 218]
[0 34 55 57 59 82 96 134 194 196 197 200 204 206 208 212 213 218]
[0 34 55 57 59 82 96 134 194 196 197 200 204 206 208 212 213 217 218]
[0 34 55 57 59 82 96 114 116 236]
[0 34 55 57 59 82 96 114 116 134 236]
[0 34 55 57 59 82 96 114 116 134 194 196 197 213 218]
[0 34 55 57 59 82 96 114 116 134 194 196 197 213 217 218]
[0 34 55 57 59 82 96 114 116 134 194 196 197 206 213 218]
[0 34 55 57 59 82 96 114 116 134 194 196 197 206 213 217 218]
[0 34 55 57 59 82 96 114 116 134 194 196 197 206 208 212 213 218]
[0 34 55 57 59 82 96 114 116 134 194 196 197 206 208 212 213 217 218]
[0 34 55 57 59 82 96 114 116 134 194 196 197 200 204 213 218]
[0 34 55 57 59 82 96 114 116 134 194 196 197 200 204 213 217 218]
[0 34 55 57 59 82 96 114 116 134 194 196 197 200 204 206 213 218]
[0 34 55 57 59 82 96 114 116 134 194 196 197 200 204 206 213 217 218]
[0 34 55 57 59 82 96 114 116 134 194 196 197 200 204 206 208 212 213 218]
[0 34 55 57 59 82 96 114 116 134 194 196 197 200 204 206 208 212 213 217 218]
[0 34 55 57 59 82 96 101 236]
[0 34 55 57 59 82 96 101 134 236]
[0 34 55 57 59 82 96 101 134 194 196 197 213 218]
[0 34 55 57 59 82 96 101 134 194 196 197 213 217 218]
[0 34 55 57 59 82 96 101 134 194 196 197 206 213 218]
[0 34 55 57 59 82 96 101 134 194 196 197 206 213 217 218]
[0 34 55 57 59 82 96 101 134 194 196 197 206 208 212 213 218]
[0 34 55 57 59 82 96 101 134 194 196 197 206 208 212 213 217 218]
[0 34 55 57 59 82 96 101 134 194 196 197 200 204 213 218]
[0 34 55 57 59 82 96 101 134 194 196 197 200 204 213 217 218]
[0 34 55 57 59 82 96 101 134 194 196 197 200 204 206 213 218]
[0 34 55 57 59 82 96 101 134 194 196 197 200 204 206 213 217 218]
[0 34 55 57 59 82 96 101 134 194 196 197 200 204 206 208 212 213 218]
[0 34 55 57 59 82 96 101 134 194 196 197 200 204 206 208 212 213 217 218]
[0 34 55 57 59 72 81 82 194 196 197 213 218]
[0 34 55 57 59 72 81 82 194 196 197 213 217 218]
[0 34 55 57 59 72 81 82 194 196 197 206 213 218]
[0 34 55 57 59 72 81 82 194 196 197 206 213 217 218]
[0 34 55 57 59 72 81 82 194 196 197 206 208 212 213 218]
[0 34 55 57 59 72 81 82 194 196 197 206 208 212 213 217 218]
[0 34 55 57 59 72 81 82 194 196 197 200 204 213 218]
[0 34 55 57 59 72 81 82 194 196 197 200 204 213 217 218]
[0 34 55 57 59 72 81 82 194 196 197 200 204 206 213 218]
[0 34 55 57 59 72 81 82 194 196 197 200 204 206 213 217 218]
[0 34 55 57 59 72 81 82 194 196 197 200 204 206 208 212 213 218]
[0 34 55 57 59 72 81 82 194 196 197 200 204 206 208 212 213 217 218]
[0 34 55 57 59 72 81 82 185 194 196 197 213 218]
[0 34 55 57 59 72 81 82 185 194 196 197 213 217 218]
[0 34 55 57 59 72 81 82 185 194 196 197 206 213 218]
[0 34 55 57 59 72 81 82 185 194 196 197 206 213 217 218]
[0 34 55 57 59 72 81 82 185 194 196 197 206 208 212 213 218]
[0 34 55 57 59 72 81 82 185 194 196 197 206 208 212 213 217 218]
[0 34 55 57 59 72 81 82 185 194 196 197 200 204 213 218]
[0 34 55 57 59 72 81 82 185 194 196 197 200 204 213 217 218]
[0 34 55 57 59 72 81 82 185 194 196 197 200 204 206 213 218]
[0 34 55 57 59 72 81 82 185 194 196 197 200 204 206 213 217 218]
[0 34 55 57 59 72 81 82 185 194 196 197 200 204 206 208 212 213 218]
[0 34 55 57 59 72 81 82 185 194 196 197 200 204 206 208 212 213 217 218]
[0 34 55 57 59 72 81 82 185 189 193 194 196 197 213 218]
[0 34 55 57 59 72 81 82 185 189 193 194 196 197 213 217 218]
[0 34 55 57 59 72 81 82 185 189 193 194 196 197 206 213 218]
[0 34 55 57 59 72 81 82 185 189 193 194 196 197 206 213 217 218]
[0 34 55 57 59 72 81 82 185 189 193 194 196 197 206 208 212 213 218]
[0 34 55 57 59 72 81 82 185 189 193 194 196 197 206 208 212 213 217 218]
[0 34 55 57 59 72 81 82 185 189 193 194 196 197 200 204 213 218]
[0 34 55 57 59 72 81 82 185 189 193 194 196 197 200 204 213 217 218]
[0 34 55 57 59 72 81 82 185 189 193 194 196 197 200 204 206 213 218]
[0 34 55 57 59 72 81 82 185 189 193 194 196 197 200 204 206 213 217 218]
[0 34 55 57 59 72 81 82 185 189 193 194 196 197 200 204 206 208 212 213 218]
[0 34 55 57 59 72 81 82 185 189 193 194 196 197 200 204 206 208 212 213 217 218]
[0 34 55 57 59 72 81 82 96 134 236]
[0 34 55 57 59 72 81 82 96 134 194 196 197 213 218]
[0 34 55 57 59 72 81 82 96 134 194 196 197 213 217 218]
[0 34 55 57 59 72 81 82 96 134 194 196 197 206 213 218]
[0 34 55 57 59 72 81 82 96 134 194 196 197 206 213 217 218]
[0 34 55 57 59 72 81 82 96 134 194 196 197 206 208 212 213 218]
[0 34 55 57 59 72 81 82 96 134 194 196 197 206 208 212 213 217 218]
[0 34 55 57 59 72 81 82 96 134 194 196 197 200 204 213 218]
[0 34 55 57 59 72 81 82 96 134 194 196 197 200 204 213 217 218]
[0 34 55 57 59 72 81 82 96 134 194 196 197 200 204 206 213 218]
[0 34 55 57 59 72 81 82 96 134 194 196 197 200 204 206 213 217 218]
[0 34 55 57 59 72 81 82 96 134 194 196 197 200 204 206 208 212 213 218]
[0 34 55 57 59 72 81 82 96 134 194 196 197 200 204 206 208 212 213 217 218]
[0 34 55 57 59 72 81 82 96 114 116 236]
[0 34 55 57 59 72 81 82 96 114 116 134 236]
[0 34 55 57 59 72 81 82 96 114 116 134 194 196 197 213 218]
[0 34 55 57 59 72 81 82 96 114 116 134 194 196 197 213 217 218]
[0 34 55 57 59 72 81 82 96 114 116 134 194 196 197 206 213 218]
[0 34 55 57 59 72 81 82 96 114 116 134 194 196 197 206 213 217 218]
[0 34 55 57 59 72 81 82 96 114 116 134 194 196 197 206 208 212 213 218]
[0 34 55 57 59 72 81 82 96 114 116 134 194 196 197 206 208 212 213 217 218]
[0 34 55 57 59 72 81 82 96 114 116 134 194 196 197 200 204 213 218]
[0 34 55 57 59 72 81 82 96 114 116 134 194 196 197 200 204 213 217 218]
[0 34 55 57 59 72 81 82 96 114 116 134 194 196 197 200 204 206 213 218]
[0 34 55 57 59 72 81 82 96 114 116 134 194 196 197 200 204 206 213 217 218]
[0 34 55 57 59 72 81 82 96 114 116 134 194 196 197 200 204 206 208 212 213 218]
[0 34 55 57 59 72 81 82 96 114 116 134 194 196 197 200 204 206 208 212 213 217 218]
[0 34 55 57 59 72 81 82 96 101 236]
[0 34 55 57 59 72 81 82 96 101 134 236]
[0 34 55 57 59 72 81 82 96 101 134 194 196 197 213 218]
[0 34 55 57 59 72 81 82 96 101 134 194 196 197 213 217 218]
[0 34 55 57 59 72 81 82 96 101 134 194 196 197 206 213 218]
[0 34 55 57 59 72 81 82 96 101 134 194 196 197 206 213 217 218]
[0 34 55 57 59 72 81 82 96 101 134 194 196 197 206 208 212 213 218]
[0 34 55 57 59 72 81 82 96 101 134 194 196 197 206 208 212 213 217 218]
[0 34 55 57 59 72 81 82 96 101 134 194 196 197 200 204 213 218]
[0 34 55 57 59 72 81 82 96 101 134 194 196 197 200 204 213 217 218]
[0 34 55 57 59 72 81 82 96 101 134 194 196 197 200 204 206 213 218]
[0 34 55 57 59 72 81 82 96 101 134 194 196 197 200 204 206 213 217 218]
[0 34 55 57 59 72 81 82 96 101 134 194 196 197 200 204 206 208 212 213 218]
[0 34 55 57 59 72 81 82 96 101 134 194 196 197 200 204 206 208 212 213 217 218]
[0 34 51 53 57 197 213 218]
[0 34 51 53 57 197 213 217 218]
[0 34 51 53 57 197 206 213 218]
[0 34 51 53 57 197 206 213 217 218]
[0 34 51 53 57 197 206 208 212 213 218]
[0 34 51 53 57 197 206 208 212 213 217 218]
[0 34 51 53 57 197 200 204 213 218]
[0 34 51 53 57 197 200 204 213 217 218]
[0 34 51 53 57 197 200 204 206 213 218]
[0 34 51 53 57 197 200 204 206 213 217 218]
[0 34 51 53 57 197 200 204 206 208 212 213 218]
[0 34 51 53 57 197 200 204 206 208 212 213 217 218]
[0 34 51 53 57 59 82 194 196 197 213 218]
[0 34 51 53 57 59 82 194 196 197 213 217 218]
[0 34 51 53 57 59 82 194 196 197 206 213 218]
[0 34 51 53 57 59 82 194 196 197 206 213 217 218]
[0 34 51 53 57 59 82 194 196 197 206 208 212 213 218]
[0 34 51 53 57 59 82 194 196 197 206 208 212 213 217 218]
[0 34 51 53 57 59 82 194 196 197 200 204 213 218]
[0 34 51 53 57 59 82 194 196 197 200 204 213 217 218]
[0 34 51 53 57 59 82 194 196 197 200 204 206 213 218]
[0 34 51 53 57 59 82 194 196 197 200 204 206 213 217 218]
[0 34 51 53 57 59 82 194 196 197 200 204 206 208 212 213 218]
[0 34 51 53 57 59 82 194 196 197 200 204 206 208 212 213 217 218]
[0 34 51 53 57 59 82 185 194 196 197 213 218]
[0 34 51 53 57 59 82 185 194 196 197 213 217 218]
[0 34 51 53 57 59 82 185 194 196 197 206 213 218]
[0 34 51 53 57 59 82 185 194 196 197 206 213 217 218]
[0 34 51 53 57 59 82 185 194 196 197 206 208 212 213 218]
[0 34 51 53 57 59 82 185 194 196 197 206 208 212 213 217 218]
[0 34 51 53 57 59 82 185 194 196 197 200 204 213 218]
[0 34 51 53 57 59 82 185 194 196 197 200 204 213 217 218]
[0 34 51 53 57 59 82 185 194 196 197 200 204 206 213 218]
[0 34 51 53 57 59 82 185 194 196 197 200 204 206 213 217 218]
[0 34 51 53 57 59 82 185 194 196 197 200 204 206 208 212 213 218]
[0 34 51 53 57 59 82 185 194 196 197 200 204 206 208 212 213 217 218]
[0 34 51 53 57 59 82 185 189 193 194 196 197 213 218]
[0 34 51 53 57 59 82 185 189 193 194 196 197 213 217 218]
[0 34 51 53 57 59 82 185 189 193 194 196 197 206 213 218]
[0 34 51 53 57 59 82 185 189 193 194 196 197 206 213 217 218]
[0 34 51 53 57 59 82 185 189 193 194 196 197 206 208 212 213 218]
[0 34 51 53 57 59 82 185 189 193 194 196 197 206 208 212 213 217 218]
[0 34 51 53 57 59 82 185 189 193 194 196 197 200 204 213 218]
[0 34 51 53 57 59 82 185 189 193 194 196 197 200 204 213 217 218]
[0 34 51 53 57 59 82 185 189 193 194 196 197 200 204 206 213 218]
[0 34 51 53 57 59 82 185 189 193 194 196 197 200 204 206 213 217 218]
[0 34 51 53 57 59 82 185 189 193 194 196 197 200 204 206 208 212 213 218]
[0 34 51 53 57 59 82 185 189 193 194 196 197 200 204 206 208 212 213 217 218]
[0 34 51 53 57 59 82 96 134 236]
[0 34 51 53 57 59 82 96 134 194 196 197 213 218]
[0 34 51 53 57 59 82 96 134 194 196 197 213 217 218]
[0 34 51 53 57 59 82 96 134 194 196 197 206 213 218]
[0 34 51 53 57 59 82 96 134 194 196 197 206 213 217 218]
[0 34 51 53 57 59 82 96 134 194 196 197 206 208 212 213 218]
[0 34 51 53 57 59 82 96 134 194 196 197 206 208 212 213 217 218]
[0 34 51 53 57 59 82 96 134 194 196 197 200 204 213 218]
[0 34 51 53 57 59 82 96 134 194 196 197 200 204 213 217 218]
[0 34 51 53 57 59 82 96 134 194 196 197 200 204 206 213 218]
[0 34 51 53 57 59 82 96 134 194 196 197 200 204 206 213 217 218]
[0 34 51 53 57 59 82 96 134 194 196 197 200 204 206 208 212 213 218]
[0 34 51 53 57 59 82 96 134 194 196 197 200 204 206 208 212 213 217 218]
[0 34 51 53 57 59 82 96 114 116 236]
[0 34 51 53 57 59 82 96 114 116 134 236]
[0 34 51 53 57 59 82 96 114 116 134 194 196 197 213 218]
[0 34 51 53 57 59 82 96 114 116 134 194 196 197 213 217 218]
[0 34 51 53 57 59 82 96 114 116 134 194 196 197 206 213 218]
[0 34 51 53 57 59 82 96 114 116 134 194 196 197 206 213 217 218]
[0 34 51 53 57 59 82 96 114 116 134 194 196 197 206 208 212 213 218]
[0 34 51 53 57 59 82 96 114 116 134 194 196 197 206 208 212 213 217 218]
[0 34 51 53 57 59 82 96 114 116 134 194 196 197 200 204 213 218]
[0 34 51 53 57 59 82 96 114 116 134 194 196 197 200 204 213 217 218]
[0 34 51 53 57 59 82 96 114 116 134 194 196 197 200 204 206 213 218]
[0 34 51 53 57 59 82 96 114 116 134 194 196 197 200 204 206 213 217 218]
[0 34 51 53 57 59 82 96 114 116 134 194 196 197 200 204 206 208 212 213 218]
[0 34 51 53 57 59 82 96 114 116 134 194 196 197 200 204 206 208 212 213 217 218]
[0 34 51 53 57 59 82 96 101 236]
[0 34 51 53 57 59 82 96 101 134 236]
[0 34 51 53 57 59 82 96 101 134 194 196 197 213 218]
[0 34 51 53 57 59 82 96 101 134 194 196 197 213 217 218]
[0 34 51 53 57 59 82 96 101 134 194 196 197 206 213 218]
[0 34 51 53 57 59 82 96 101 134 194 196 197 206 213 217 218]
[0 34 51 53 57 59 82 96 101 134 194 196 197 206 208 212 213 218]
[0 34 51 53 57 59 82 96 101 134 194 196 197 206 208 212 213 217 218]
[0 34 51 53 57 59 82 96 101 134 194 196 197 200 204 213 218]
[0 34 51 53 57 59 82 96 101 134 194 196 197 200 204 213 217 218]
[0 34 51 53 57 59 82 96 101 134 194 196 197 200 204 206 213 218]
[0 34 51 53 57 59 82 96 101 134 194 196 197 200 204 206 213 217 218]
[0 34 51 53 57 59 82 96 101 134 194 196 197 200 204 206 208 212 213 218]
[0 34 51 53 57 59 82 96 101 134 194 196 197 200 204 206 208 212 213 217 218]
[0 34 51 53 57 59 72 81 82 194 196 197 213 218]
[0 34 51 53 57 59 72 81 82 194 196 197 213 217 218]
[0 34 51 53 57 59 72 81 82 194 196 197 206 213 218]
[0 34 51 53 57 59 72 81 82 194 196 197 206 213 217 218]
[0 34 51 53 57 59 72 81 82 194 196 197 206 208 212 213 218]
[0 34 51 53 57 59 72 81 82 194 196 197 206 208 212 213 217 218]
[0 34 51 53 57 59 72 81 82 194 196 197 200 204 213 218]
[0 34 51 53 57 59 72 81 82 194 196 197 200 204 213 217 218]
[0 34 51 53 57 59 72 81 82 194 196 197 200 204 206 213 218]
[0 34 51 53 57 59 72 81 82 194 196 197 200 204 206 213 217 218]
[0 34 51 53 57 59 72 81 82 194 196 197 200 204 206 208 212 213 218]
[0 34 51 53 57 59 72 81 82 194 196 197 200 204 206 208 212 213 217 218]
[0 34 51 53 57 59 72 81 82 185 194 196 197 213 218]
[0 34 51 53 57 59 72 81 82 185 194 196 197 213 217 218]
[0 34 51 53 57 59 72 81 82 185 194 196 197 206 213 218]
[0 34 51 53 57 59 72 81 82 185 194 196 197 206 213 217 218]
[0 34 51 53 57 59 72 81 82 185 194 196 197 206 208 212 213 218]
[0 34 51 53 57 59 72 81 82 185 194 196 197 206 208 212 213 217 218]
[0 34 51 53 57 59 72 81 82 185 194 196 197 200 204 213 218]
[0 34 51 53 57 59 72 81 82 185 194 196 197 200 204 213 217 218]
[0 34 51 53 57 59 72 81 82 185 194 196 197 200 204 206 213 218]
[0 34 51 53 57 59 72 81 82 185 194 196 197 200 204 206 213 217 218]
[0 34 51 53 57 59 72 81 82 185 194 196 197 200 204 206 208 212 213 218]
[0 34 51 53 57 59 72 81 82 185 194 196 197 200 204 206 208 212 213 217 218]
[0 34 51 53 57 59 72 81 82 185 189 193 194 196 197 213 218]
[0 34 51 53 57 59 72 81 82 185 189 193 194 196 197 213 217 218]
[0 34 51 53 57 59 72 81 82 185 189 193 194 196 197 206 213 218]
[0 34 51 53 57 59 72 81 82 185 189 193 194 196 197 206 213 217 218]
[0 34 51 53 57 59 72 81 82 185 189 193 194 196 197 206 208 212 213 218]
[0 34 51 53 57 59 72 81 82 185 189 193 194 196 197 206 208 212 213 217 218]
[0 34 51 53 57 59 72 81 82 185 189 193 194 196 197 200 204 213 218]
[0 34 51 53 57 59 72 81 82 185 189 193 194 196 197 200 204 213 217 218]
[0 34 51 53 57 59 72 81 82 185 189 193 194 196 197 200 204 206 213 218]
[0 34 51 53 57 59 72 81 82 185 189 193 194 196 197 200 204 206 213 217 218]
[0 34 51 53 57 59 72 81 82 185 189 193 194 196 197 200 204 206 208 212 213 218]
[0 34 51 53 57 59 72 81 82 185 189 193 194 196 197 200 204 206 208 212 213 217 218]
[0 34 51 53 57 59 72 81 82 96 134 236]
[0 34 51 53 57 59 72 81 82 96 134 194 196 197 213 218]
[0 34 51 53 57 59 72 81 82 96 134 194 196 197 213 217 218]
[0 34 51 53 57 59 72 81 82 96 134 194 196 197 206 213 218]
[0 34 51 53 57 59 72 81 82 96 134 194 196 197 206 213 217 218]
[0 34 51 53 57 59 72 81 82 96 134 194 196 197 206 208 212 213 218]
[0 34 51 53 57 59 72 81 82 96 134 194 196 197 206 208 212 213 217 218]
[0 34 51 53 57 59 72 81 82 96 134 194 196 197 200 204 213 218]
[0 34 51 53 57 59 72 81 82 96 134 194 196 197 200 204 213 217 218]
[0 34 51 53 57 59 72 81 82 96 134 194 196 197 200 204 206 213 218]
[0 34 51 53 57 59 72 81 82 96 134 194 196 197 200 204 206 213 217 218]
[0 34 51 53 57 59 72 81 82 96 134 194 196 197 200 204 206 208 212 213 218]
[0 34 51 53 57 59 72 81 82 96 134 194 196 197 200 204 206 208 212 213 217 218]
[0 34 51 53 57 59 72 81 82 96 114 116 236]
[0 34 51 53 57 59 72 81 82 96 114 116 134 236]
[0 34 51 53 57 59 72 81 82 96 114 116 134 194 196 197 213 218]
[0 34 51 53 57 59 72 81 82 96 114 116 134 194 196 197 213 217 218]
[0 34 51 53 57 59 72 81 82 96 114 116 134 194 196 197 206 213 218]
[0 34 51 53 57 59 72 81 82 96 114 116 134 194 196 197 206 213 217 218]
[0 34 51 53 57 59 72 81 82 96 114 116 134 194 196 197 206 208 212 213 218]
[0 34 51 53 57 59 72 81 82 96 114 116 134 194 196 197 206 208 212 213 217 218]
[0 34 51 53 57 59 72 81 82 96 114 116 134 194 196 197 200 204 213 218]
[0 34 51 53 57 59 72 81 82 96 114 116 134 194 196 197 200 204 213 217 218]
[0 34 51 53 57 59 72 81 82 96 114 116 134 194 196 197 200 204 206 213 218]
[0 34 51 53 57 59 72 81 82 96 114 116 134 194 196 197 200 204 206 213 217 218]
[0 34 51 53 57 59 72 81 82 96 114 116 134 194 196 197 200 204 206 208 212 213 218]
[0 34 51 53 57 59 72 81 82 96 114 116 134 194 196 197 200 204 206 208 212 213 217 218]
[0 34 51 53 57 59 72 81 82 96 101 236]
[0 34 51 53 57 59 72 81 82 96 101 134 236]
[0 34 51 53 57 59 72 81 82 96 101 134 194 196 197 213 218]
[0 34 51 53 57 59 72 81 82 96 101 134 194 196 197 213 217 218]
[0 34 51 53 57 59 72 81 82 96 101 134 194 196 197 206 213 218]
[0 34 51 53 57 59 72 81 82 96 101 134 194 196 197 206 213 217 218]
[0 34 51 53 57 59 72 81 82 96 101 134 194 196 197 206 208 212 213 218]
[0 34 51 53 57 59 72 81 82 96 101 134 194 196 197 206 208 212 213 217 218]
[0 34 51 53 57 59 72 81 82 96 101 134 194 196 197 200 204 213 218]
[0 34 51 53 57 59 72 81 82 96 101 134 194 196 197 200 204 213 217 218]
[0 34 51 53 57 59 72 81 82 96 101 134 194 196 197 200 204 206 213 218]
[0 34 51 53 57 59 72 81 82 96 101 134 194 196 197 200 204 206 213 217 218]
[0 34 51 53 57 59 72 81 82 96 101 134 194 196 197 200 204 206 208 212 213 218]
[0 34 51 53 57 59 72 81 82 96 101 134 194 196 197 200 204 206 208 212 213 217 218]
[0 34 51 53 55 57 197 213 218]
[0 34 51 53 55 57 197 213 217 218]
[0 34 51 53 55 57 197 206 213 218]
[0 34 51 53 55 57 197 206 213 217 218]
[0 34 51 53 55 57 197 206 208 212 213 218]
[0 34 51 53 55 57 197 206 208 212 213 217 218]
[0 34 51 53 55 57 197 200 204 213 218]
[0 34 51 53 55 57 197 200 204 213 217 218]
[0 34 51 53 55 57 197 200 204 206 213 218]
[0 34 51 53 55 57 197 200 204 206 213 217 218]
[0 34 51 53 55 57 197 200 204 206 208 212 213 218]
[0 34 51 53 55 57 197 200 204 206 208 212 213 217 218]
[0 34 51 53 55 57 59 82 194 196 197 213 218]
[0 34 51 53 55 57 59 82 194 196 197 213 217 218]
[0 34 51 53 55 57 59 82 194 196 197 206 213 218]
[0 34 51 53 55 57 59 82 194 196 197 206 213 217 218]
[0 34 51 53 55 57 59 82 194 196 197 206 208 212 213 218]
[0 34 51 53 55 57 59 82 194 196 197 206 208 212 213 217 218]
[0 34 51 53 55 57 59 82 194 196 197 200 204 213 218]
[0 34 51 53 55 57 59 82 194 196 197 200 204 213 217 218]
[0 34 51 53 55 57 59 82 194 196 197 200 204 206 213 218]
[0 34 51 53 55 57 59 82 194 196 197 200 204 206 213 217 218]
[0 34 51 53 55 57 59 82 194 196 197 200 204 206 208 212 213 218]
[0 34 51 53 55 57 59 82 194 196 197 200 204 206 208 212 213 217 218]
[0 34 51 53 55 57 59 82 185 194 196 197 213 218]
[0 34 51 53 55 57 59 82 185 194 196 197 213 217 218]
[0 34 51 53 55 57 59 82 185 194 196 197 206 213 218]
[0 34 51 53 55 57 59 82 185 194 196 197 206 213 217 218]
[0 34 51 53 55 57 59 82 185 194 196 197 206 208 212 213 218]
[0 34 51 53 55 57 59 82 185 194 196 197 206 208 212 213 217 218]
[0 34 51 53 55 57 59 82 185 194 196 197 200 204 213 218]
[0 34 51 53 55 57 59 82 185 194 196 197 200 204 213 217 218]
[0 34 51 53 55 57 59 82 185 194 196 197 200 204 206 213 218]
[0 34 51 53 55 57 59 82 185 194 196 197 200 204 206 213 217 218]
[0 34 51 53 55 57 59 82 185 194 196 197 200 204 206 208 212 213 218]
[0 34 51 53 55 57 59 82 185 194 196 197 200 204 206 208 212 213 217 218]
[0 34 51 53 55 57 59 82 185 189 193 194 196 197 213 218]
[0 34 51 53 55 57 59 82 185 189 193 194 196 197 213 217 218]
[0 34 51 53 55 57 59 82 185 189 193 194 196 197 206 213 218]
[0 34 51 53 55 57 59 82 185 189 193 194 196 197 206 213 217 218]
[0 34 51 53 55 57 59 82 185 189 193 194 196 197 206 208 212 213 218]
[0 34 51 53 55 57 59 82 185 189 193 194 196 197 206 208 212 213 217 218]
[0 34 51 53 55 57 59 82 185 189 193 194 196 197 200 204 213 218]
[0 34 51 53 55 57 59 82 185 189 193 194 196 197 200 204 213 217 218]
[0 34 51 53 55 57 59 82 185 189 193 194 196 197 200 204 206 213 218]
[0 34 51 53 55 57 59 82 185 189 193 194 196 197 200 204 206 213 217 218]
[0 34 51 53 55 57 59 82 185 189 193 194 196 197 200 204 206 208 212 213 218]
[0 34 51 53 55 57 59 82 185 189 193 194 196 197 200 204 206 208 212 213 217 218]
[0 34 51 53 55 57 59 82 96 134 236]
[0 34 51 53 55 57 59 82 96 134 194 196 197 213 218]
[0 34 51 53 55 57 59 82 96 134 194 196 197 213 217 218]
[0 34 51 53 55 57 59 82 96 134 194 196 197 206 213 218]
[0 34 51 53 55 57 59 82 96 134 194 196 197 206 213 217 218]
[0 34 51 53 55 57 59 82 96 134 194 196 197 206 208 212 213 218]
[0 34 51 53 55 57 59 82 96 134 194 196 197 206 208 212 213 217 218]
[0 34 51 53 55 57 59 82 96 134 194 196 197 200 204 213 218]
[0 34 51 53 55 57 59 82 96 134 194 196 197 200 204 213 217 218]
[0 34 51 53 55 57 59 82 96 134 194 196 197 200 204 206 213 218]
[0 34 51 53 55 57 59 82 96 134 194 196 197 200 204 206 213 217 218]
[0 34 51 53 55 57 59 82 96 134 194 196 197 200 204 206 208 212 213 218]
[0 34 51 53 55 57 59 82 96 134 194 196 197 200 204 206 208 212 213 217 218]
[0 34 51 53 55 57 59 82 96 114 116 236]
[0 34 51 53 55 57 59 82 96 114 116 134 236]
[0 34 51 53 55 57 59 82 96 114 116 134 194 196 197 213 218]
[0 34 51 53 55 57 59 82 96 114 116 134 194 196 197 213 217 218]
[0 34 51 53 55 57 59 82 96 114 116 134 194 196 197 206 213 218]
[0 34 51 53 55 57 59 82 96 114 116 134 194 196 197 206 213 217 218]
[0 34 51 53 55 57 59 82 96 114 116 134 194 196 197 206 208 212 213 218]
[0 34 51 53 55 57 59 82 96 114 116 134 194 196 197 206 208 212 213 217 218]
[0 34 51 53 55 57 59 82 96 114 116 134 194 196 197 200 204 213 218]
[0 34 51 53 55 57 59 82 96 114 116 134 194 196 197 200 204 213 217 218]
[0 34 51 53 55 57 59 82 96 114 116 134 194 196 197 200 204 206 213 218]
[0 34 51 53 55 57 59 82 96 114 116 134 194 196 197 200 204 206 213 217 218]
[0 34 51 53 55 57 59 82 96 114 116 134 194 196 197 200 204 206 208 212 213 218]
[0 34 51 53 55 57 59 82 96 114 116 134 194 196 197 200 204 206 208 212 213 217 218]
[0 34 51 53 55 57 59 82 96 101 236]
[0 34 51 53 55 57 59 82 96 101 134 236]
[0 34 51 53 55 57 59 82 96 101 134 194 196 197 213 218]
[0 34 51 53 55 57 59 82 96 101 134 194 196 197 213 217 218]
[0 34 51 53 55 57 59 82 96 101 134 194 196 197 206 213 218]
[0 34 51 53 55 57 59 82 96 101 134 194 196 197 206 213 217 218]
[0 34 51 53 55 57 59 82 96 101 134 194 196 197 206 208 212 213 218]
[0 34 51 53 55 57 59 82 96 101 134 194 196 197 206 208 212 213 217 218]
[0 34 51 53 55 57 59 82 96 101 134 194 196 197 200 204 213 218]
[0 34 51 53 55 57 59 82 96 101 134 194 196 197 200 204 213 217 218]
[0 34 51 53 55 57 59 82 96 101 134 194 196 197 200 204 206 213 218]
[0 34 51 53 55 57 59 82 96 101 134 194 196 197 200 204 206 213 217 218]
[0 34 51 53 55 57 59 82 96 101 134 194 196 197 200 204 206 208 212 213 218]
[0 34 51 53 55 57 59 82 96 101 134 194 196 197 200 204 206 208 212 213 217 218]
[0 34 51 53 55 57 59 72 81 82 194 196 197 213 218]
[0 34 51 53 55 57 59 72 81 82 194 196 197 213 217 218]
[0 34 51 53 55 57 59 72 81 82 194 196 197 206 213 218]
[0 34 51 53 55 57 59 72 81 82 194 196 197 206 213 217 218]
[0 34 51 53 55 57 59 72 81 82 194 196 197 206 208 212 213 218]
[0 34 51 53 55 57 59 72 81 82 194 196 197 206 208 212 213 217 218]
[0 34 51 53 55 57 59 72 81 82 194 196 197 200 204 213 218]
[0 34 51 53 55 57 59 72 81 82 194 196 197 200 204 213 217 218]
[0 34 51 53 55 57 59 72 81 82 194 196 197 200 204 206 213 218]
[0 34 51 53 55 57 59 72 81 82 194 196 197 200 204 206 213 217 218]
[0 34 51 53 55 57 59 72 81 82 194 196 197 200 204 206 208 212 213 218]
[0 34 51 53 55 57 59 72 81 82 194 196 197 200 204 206 208 212 213 217 218]
[0 34 51 53 55 57 59 72 81 82 185 194 196 197 213 218]
[0 34 51 53 55 57 59 72 81 82 185 194 196 197 213 217 218]
[0 34 51 53 55 57 59 72 81 82 185 194 196 197 206 213 218]
[0 34 51 53 55 57 59 72 81 82 185 194 196 197 206 213 217 218]
[0 34 51 53 55 57 59 72 81 82 185 194 196 197 206 208 212 213 218]
[0 34 51 53 55 57 59 72 81 82 185 194 196 197 206 208 212 213 217 218]
[0 34 51 53 55 57 59 72 81 82 185 194 196 197 200 204 213 218]
[0 34 51 53 55 57 59 72 81 82 185 194 196 197 200 204 213 217 218]
[0 34 51 53 55 57 59 72 81 82 185 194 196 197 200 204 206 213 218]
[0 34 51 53 55 57 59 72 81 82 185 194 196 197 200 204 206 213 217 218]
[0 34 51 53 55 57 59 72 81 82 185 194 196 197 200 204 206 208 212 213 218]
[0 34 51 53 55 57 59 72 81 82 185 194 196 197 200 204 206 208 212 213 217 218]
[0 34 51 53 55 57 59 72 81 82 185 189 193 194 196 197 213 218]
[0 34 51 53 55 57 59 72 81 82 185 189 193 194 196 197 213 217 218]
[0 34 51 53 55 57 59 72 81 82 185 189 193 194 196 197 206 213 218]
[0 34 51 53 55 57 59 72 81 82 185 189 193 194 196 197 206 213 217 218]
[0 34 51 53 55 57 59 72 81 82 185 189 193 194 196 197 206 208 212 213 218]
[0 34 51 53 55 57 59 72 81 82 185 189 193 194 196 197 206 208 212 213 217 218]
[0 34 51 53 55 57 59 72 81 82 185 189 193 194 196 197 200 204 213 218]
[0 34 51 53 55 57 59 72 81 82 185 189 193 194 196 197 200 204 213 217 218]
[0 34 51 53 55 57 59 72 81 82 185 189 193 194 196 197 200 204 206 213 218]
[0 34 51 53 55 57 59 72 81 82 185 189 193 194 196 197 200 204 206 213 217 218]
[0 34 51 53 55 57 59 72 81 82 185 189 193 194 196 197 200 204 206 208 212 213 218]
[0 34 51 53 55 57 59 72 81 82 185 189 193 194 196 197 200 204 206 208 212 213 217 218]
[0 34 51 53 55 57 59 72 81 82 96 134 236]
[0 34 51 53 55 57 59 72 81 82 96 134 194 196 197 213 218]
[0 34 51 53 55 57 59 72 81 82 96 134 194 196 197 213 217 218]
[0 34 51 53 55 57 59 72 81 82 96 134 194 196 197 206 213 218]
[0 34 51 53 55 57 59 72 81 82 96 134 194 196 197 206 213 217 218]
[0 34 51 53 55 57 59 72 81 82 96 134 194 196 197 206 208 212 213 218]
[0 34 51 53 55 57 59 72 81 82 96 134 194 196 197 206 208 212 213 217 218]
[0 34 51 53 55 57 59 72 81 82 96 134 194 196 197 200 204 213 218]
[0 34 51 53 55 57 59 72 81 82 96 134 194 196 197 200 204 213 217 218]
[0 34 51 53 55 57 59 72 81 82 96 134 194 196 197 200 204 206 213 218]
[0 34 51 53 55 57 59 72 81 82 96 134 194 196 197 200 204 206 213 217 218]
[0 34 51 53 55 57 59 72 81 82 96 134 194 196 197 200 204 206 208 212 213 218]
[0 34 51 53 55 57 59 72 81 82 96 134 194 196 197 200 204 206 208 212 213 217 218]
[0 34 51 53 55 57 59 72 81 82 96 114 116 236]
[0 34 51 53 55 57 59 72 81 82 96 114 116 134 236]
[0 34 51 53 55 57 59 72 81 82 96 114 116 134 194 196 197 213 218]
[0 34 51 53 55 57 59 72 81 82 96 114 116 134 194 196 197 213 217 218]
[0 34 51 53 55 57 59 72 81 82 96 114 116 134 194 196 197 206 213 218]
[0 34 51 53 55 57 59 72 81 82 96 114 116 134 194 196 197 206 213 217 218]
[0 34 51 53 55 57 59 72 81 82 96 114 116 134 194 196 197 206 208 212 213 218]
[0 34 51 53 55 57 59 72 81 82 96 114 116 134 194 196 197 206 208 212 213 217 218]
[0 34 51 53 55 57 59 72 81 82 96 114 116 134 194 196 197 200 204 213 218]
[0 34 51 53 55 57 59 72 81 82 96 114 116 134 194 196 197 200 204 213 217 218]
[0 34 51 53 55 57 59 72 81 82 96 114 116 134 194 196 197 200 204 206 213 218]
[0 34 51 53 55 57 59 72 81 82 96 114 116 134 194 196 197 200 204 206 213 217 218]
[0 34 51 53 55 57 59 72 81 82 96 114 116 134 194 196 197 200 204 206 208 212 213 218]
[0 34 51 53 55 57 59 72 81 82 96 114 116 134 194 196 197 200 204 206 208 212 213 217 218]
[0 34 51 53 55 57 59 72 81 82 96 101 236]
[0 34 51 53 55 57 59 72 81 82 96 101 134 236]
[0 34 51 53 55 57 59 72 81 82 96 101 134 194 196 197 213 218]
[0 34 51 53 55 57 59 72 81 82 96 101 134 194 196 197 213 217 218]
[0 34 51 53 55 57 59 72 81 82 96 101 134 194 196 197 206 213 218]
[0 34 51 53 55 57 59 72 81 82 96 101 134 194 196 197 206 213 217 218]
[0 34 51 53 55 57 59 72 81 82 96 101 134 194 196 197 206 208 212 213 218]
[0 34 51 53 55 57 59 72 81 82 96 101 134 194 196 197 206 208 212 213 217 218]
[0 34 51 53 55 57 59 72 81 82 96 101 134 194 196 197 200 204 213 218]
[0 34 51 53 55 57 59 72 81 82 96 101 134 194 196 197 200 204 213 217 218]
[0 34 51 53 55 57 59 72 81 82 96 101 134 194 196 197 200 204 206 213 218]
[0 34 51 53 55 57 59 72 81 82 96 101 134 194 196 197 200 204 206 213 217 218]
[0 34 51 53 55 57 59 72 81 82 96 101 134 194 196 197 200 204 206 208 212 213 218]
[0 34 51 53 55 57 59 72 81 82 96 101 134 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 34 217 218]
[0 20 27 34 213 218]
[0 20 27 34 213 217 218]
[0 20 27 34 57 197 213 218]
[0 20 27 34 57 197 213 217 218]
[0 20 27 34 57 197 206 213 218]
[0 20 27 34 57 197 206 213 217 218]
[0 20 27 34 57 197 206 208 212 213 218]
[0 20 27 34 57 197 206 208 212 213 217 218]
[0 20 27 34 57 197 200 204 213 218]
[0 20 27 34 57 197 200 204 213 217 218]
[0 20 27 34 57 197 200 204 206 213 218]
[0 20 27 34 57 197 200 204 206 213 217 218]
[0 20 27 34 57 197 200 204 206 208 212 213 218]
[0 20 27 34 57 197 200 204 206 208 212 213 217 218]
[0 20 27 34 57 59 82 194 196 197 213 218]
[0 20 27 34 57 59 82 194 196 197 213 217 218]
[0 20 27 34 57 59 82 194 196 197 206 213 218]
[0 20 27 34 57 59 82 194 196 197 206 213 217 218]
[0 20 27 34 57 59 82 194 196 197 206 208 212 213 218]
[0 20 27 34 57 59 82 194 196 197 206 208 212 213 217 218]
[0 20 27 34 57 59 82 194 196 197 200 204 213 218]
[0 20 27 34 57 59 82 194 196 197 200 204 213 217 218]
[0 20 27 34 57 59 82 194 196 197 200 204 206 213 218]
[0 20 27 34 57 59 82 194 196 197 200 204 206 213 217 218]
[0 20 27 34 57 59 82 194 196 197 200 204 206 208 212 213 218]
[0 20 27 34 57 59 82 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 34 57 59 82 185 194 196 197 213 218]
[0 20 27 34 57 59 82 185 194 196 197 213 217 218]
[0 20 27 34 57 59 82 185 194 196 197 206 213 218]
[0 20 27 34 57 59 82 185 194 196 197 206 213 217 218]
[0 20 27 34 57 59 82 185 194 196 197 206 208 212 213 218]
[0 20 27 34 57 59 82 185 194 196 197 206 208 212 213 217 218]
[0 20 27 34 57 59 82 185 194 196 197 200 204 213 218]
[0 20 27 34 57 59 82 185 194 196 197 200 204 213 217 218]
[0 20 27 34 57 59 82 185 194 196 197 200 204 206 213 218]
[0 20 27 34 57 59 82 185 194 196 197 200 204 206 213 217 218]
[0 20 27 34 57 59 82 185 194 196 197 200 204 206 208 212 213 218]
[0 20 27 34 57 59 82 185 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 34 57 59 82 185 189 193 194 196 197 213 218]
[0 20 27 34 57 59 82 185 189 193 194 196 197 213 217 218]
[0 20 27 34 57 59 82 185 189 193 194 196 197 206 213 218]
[0 20 27 34 57 59 82 185 189 193 194 196 197 206 213 217 218]
[0 20 27 34 57 59 82 185 189 193 194 196 197 206 208 212 213 218]
[0 20 27 34 57 59 82 185 189 193 194 196 197 206 208 212 213 217 218]
[0 20 27 34 57 59 82 185 189 193 194 196 197 200 204 213 218]
[0 20 27 34 57 59 82 185 189 193 194 196 197 200 204 213 217 218]
[0 20 27 34 57 59 82 185 189 193 194 196 197 200 204 206 213 218]
[0 20 27 34 57 59 82 185 189 193 194 196 197 200 204 206 213 217 218]
[0 20 27 34 57 59 82 185 189 193 194 196 197 200 204 206 208 212 213 218]
[0 20 27 34 57 59 82 185 189 193 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 34 57 59 82 96 134 236]
[0 20 27 34 57 59 82 96 134 194 196 197 213 218]
[0 20 27 34 57 59 82 96 134 194 196 197 213 217 218]
[0 20 27 34 57 59 82 96 134 194 196 197 206 213 218]
[0 20 27 34 57 59 82 96 134 194 196 197 206 213 217 218]
[0 20 27 34 57 59 82 96 134 194 196 197 206 208 212 213 218]
[0 20 27 34 57 59 82 96 134 194 196 197 206 208 212 213 217 218]
[0 20 27 34 57 59 82 96 134 194 196 197 200 204 213 218]
[0 20 27 34 57 59 82 96 134 194 196 197 200 204 213 217 218]
[0 20 27 34 57 59 82 96 134 194 196 197 200 204 206 213 218]
[0 20 27 34 57 59 82 96 134 194 196 197 200 204 206 213 217 218]
[0 20 27 34 57 59 82 96 134 194 196 197 200 204 206 208 212 213 218]
[0 20 27 34 57 59 82 96 134 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 34 57 59 82 96 114 116 236]
[0 20 27 34 57 59 82 96 114 116 134 236]
[0 20 27 34 57 59 82 96 114 116 134 194 196 197 213 218]
[0 20 27 34 57 59 82 96 114 116 134 194 196 197 213 217 218]
[0 20 27 34 57 59 82 96 114 116 134 194 196 197 206 213 218]
[0 20 27 34 57 59 82 96 114 116 134 194 196 197 206 213 217 218]
[0 20 27 34 57 59 82 96 114 116 134 194 196 197 206 208 212 213 218]
[0 20 27 34 57 59 82 96 114 116 134 194 196 197 206 208 212 213 217 218]
[0 20 27 34 57 59 82 96 114 116 134 194 196 197 200 204 213 218]
[0 20 27 34 57 59 82 96 114 116 134 194 196 197 200 204 213 217 218]
[0 20 27 34 57 59 82 96 114 116 134 194 196 197 200 204 206 213 218]
[0 20 27 34 57 59 82 96 114 116 134 194 196 197 200 204 206 213 217 218]
[0 20 27 34 57 59 82 96 114 116 134 194 196 197 200 204 206 208 212 213 218]
[0 20 27 34 57 59 82 96 114 116 134 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 34 57 59 82 96 101 236]
[0 20 27 34 57 59 82 96 101 134 236]
[0 20 27 34 57 59 82 96 101 134 194 196 197 213 218]
[0 20 27 34 57 59 82 96 101 134 194 196 197 213 217 218]
[0 20 27 34 57 59 82 96 101 134 194 196 197 206 213 218]
[0 20 27 34 57 59 82 96 101 134 194 196 197 206 213 217 218]
[0 20 27 34 57 59 82 96 101 134 194 196 197 206 208 212 213 218]
[0 20 27 34 57 59 82 96 101 134 194 196 197 206 208 212 213 217 218]
[0 20 27 34 57 59 82 96 101 134 194 196 197 200 204 213 218]
[0 20 27 34 57 59 82 96 101 134 194 196 197 200 204 213 217 218]
[0 20 27 34 57 59 82 96 101 134 194 196 197 200 204 206 213 218]
[0 20 27 34 57 59 82 96 101 134 194 196 197 200 204 206 213 217 218]
[0 20 27 34 57 59 82 96 101 134 194 196 197 200 204 206 208 212 213 218]
[0 20 27 34 57 59 82 96 101 134 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 34 57 59 72 81 82 194 196 197 213 218]
[0 20 27 34 57 59 72 81 82 194 196 197 213 217 218]
[0 20 27 34 57 59 72 81 82 194 196 197 206 213 218]
[0 20 27 34 57 59 72 81 82 194 196 197 206 213 217 218]
[0 20 27 34 57 59 72 81 82 194 196 197 206 208 212 213 218]
[0 20 27 34 57 59 72 81 82 194 196 197 206 208 212 213 217 218]
[0 20 27 34 57 59 72 81 82 194 196 197 200 204 213 218]
[0 20 27 34 57 59 72 81 82 194 196 197 200 204 213 217 218]
[0 20 27 34 57 59 72 81 82 194 196 197 200 204 206 213 218]
[0 20 27 34 57 59 72 81 82 194 196 197 200 204 206 213 217 218]
[0 20 27 34 57 59 72 81 82 194 196 197 200 204 206 208 212 213 218]
[0 20 27 34 57 59 72 81 82 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 34 57 59 72 81 82 185 194 196 197 213 218]
[0 20 27 34 57 59 72 81 82 185 194 196 197 213 217 218]
[0 20 27 34 57 59 72 81 82 185 194 196 197 206 213 218]
[0 20 27 34 57 59 72 81 82 185 194 196 197 206 213 217 218]
[0 20 27 34 57 59 72 81 82 185 194 196 197 206 208 212 213 218]
[0 20 27 34 57 59 72 81 82 185 194 196 197 206 208 212 213 217 218]
[0 20 27 34 57 59 72 81 82 185 194 196 197 200 204 213 218]
[0 20 27 34 57 59 72 81 82 185 194 196 197 200 204 213 217 218]
[0 20 27 34 57 59 72 81 82 185 194 196 197 200 204 206 213 218]
[0 20 27 34 57 59 72 81 82 185 194 196 197 200 204 206 213 217 218]
[0 20 27 34 57 59 72 81 82 185 194 196 197 200 204 206 208 212 213 218]
[0 20 27 34 57 59 72 81 82 185 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 34 57 59 72 81 82 185 189 193 194 196 197 213 218]
[0 20 27 34 57 59 72 81 82 185 189 193 194 196 197 213 217 218]
[0 20 27 34 57 59 72 81 82 185 189 193 194 196 197 206 213 218]
[0 20 27 34 57 59 72 81 82 185 189 193 194 196 197 206 213 217 218]
[0 20 27 34 57 59 72 81 82 185 189 193 194 196 197 206 208 212 213 218]
[0 20 27 34 57 59 72 81 82 185 189 193 194 196 197 206 208 212 213 217 218]
[0 20 27 34 57 59 72 81 82 185 189 193 194 196 197 200 204 213 218]
[0 20 27 34 57 59 72 81 82 185 189 193 194 196 197 200 204 213 217 218]
[0 20 27 34 57 59 72 81 82 185 189 193 194 196 197 200 204 206 213 218]
[0 20 27 34 57 59 72 81 82 185 189 193 194 196 197 200 204 206 213 217 218]
[0 20 27 34 57 59 72 81 82 185 189 193 194 196 197 200 204 206 208 212 213 218]
[0 20 27 34 57 59 72 81 82 185 189 193 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 34 57 59 72 81 82 96 134 236]
[0 20 27 34 57 59 72 81 82 96 134 194 196 197 213 218]
[0 20 27 34 57 59 72 81 82 96 134 194 196 197 213 217 218]
[0 20 27 34 57 59 72 81 82 96 134 194 196 197 206 213 218]
[0 20 27 34 57 59 72 81 82 96 134 194 196 197 206 213 217 218]
[0 20 27 34 57 59 72 81 82 96 134 194 196 197 206 208 212 213 218]
[0 20 27 34 57 59 72 81 82 96 134 194 196 197 206 208 212 213 217 218]
[0 20 27 34 57 59 72 81 82 96 134 194 196 197 200 204 213 218]
[0 20 27 34 57 59 72 81 82 96 134 194 196 197 200 204 213 217 218]
[0 20 27 34 57 59 72 81 82 96 134 194 196 197 200 204 206 213 218]
[0 20 27 34 57 59 72 81 82 96 134 194 196 197 200 204 206 213 217 218]
[0 20 27 34 57 59 72 81 82 96 134 194 196 197 200 204 206 208 212 213 218]
[0 20 27 34 57 59 72 81 82 96 134 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 34 57 59 72 81 82 96 114 116 236]
[0 20 27 34 57 59 72 81 82 96 114 116 134 236]
[0 20 27 34 57 59 72 81 82 96 114 116 134 194 196 197 213 218]
[0 20 27 34 57 59 72 81 82 96 114 116 134 194 196 197 213 217 218]
[0 20 27 34 57 59 72 81 82 96 114 116 134 194 196 197 206 213 218]
[0 20 27 34 57 59 72 81 82 96 114 116 134 194 196 197 206 213 217 218]
[0 20 27 34 57 59 72 81 82 96 114 116 134 194 196 197 206 208 212 213 218]
[0 20 27 34 57 59 72 81 82 96 114 116 134 194 196 197 206 208 212 213 217 218]
[0 20 27 34 57 59 72 81 82 96 114 116 134 194 196 197 200 204 213 218]
[0 20 27 34 57 59 72 81 82 96 114 116 134 194 196 197 200 204 213 217 218]
[0 20 27 34 57 59 72 81 82 96 114 116 134 194 196 197 200 204 206 213 218]
[0 20 27 34 57 59 72 81 82 96 114 116 134 194 196 197 200 204 206 213 217 218]
[0 20 27 34 57 59 72 81 82 96 114 116 134 194 196 197 200 204 206 208 212 213 218]
[0 20 27 34 57 59 72 81 82 96 114 116 134 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 34 57 59 72 81 82 96 101 236]
[0 20 27 34 57 59 72 81 82 96 101 134 236]
[0 20 27 34 57 59 72 81 82 96 101 134 194 196 197 213 218]
[0 20 27 34 57 59 72 81 82 96 101 134 194 196 197 213 217 218]
[0 20 27 34 57 59 72 81 82 96 101 134 194 196 197 206 213 218]
[0 20 27 34 57 59 72 81 82 96 101 134 194 196 197 206 213 217 218]
[0 20 27 34 57 59 72 81 82 96 101 134 194 196 197 206 208 212 213 218]
[0 20 27 34 57 59 72 81 82 96 101 134 194 196 197 206 208 212 213 217 218]
[0 20 27 34 57 59 72 81 82 96 101 134 194 196 197 200 204 213 218]
[0 20 27 34 57 59 72 81 82 96 101 134 194 196 197 200 204 213 217 218]
[0 20 27 34 57 59 72 81 82 96 101 134 194 196 197 200 204 206 213 218]
[0 20 27 34 57 59 72 81 82 96 101 134 194 196 197 200 204 206 213 217 218]
[0 20 27 34 57 59 72 81 82 96 101 134 194 196 197 200 204 206 208 212 213 218]
[0 20 27 34 57 59 72 81 82 96 101 134 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 34 55 57 197 213 218]
[0 20 27 34 55 57 197 213 217 218]
[0 20 27 34 55 57 197 206 213 218]
[0 20 27 34 55 57 197 206 213 217 218]
[0 20 27 34 55 57 197 206 208 212 213 218]
[0 20 27 34 55 57 197 206 208 212 213 217 218]
[0 20 27 34 55 57 197 200 204 213 218]
[0 20 27 34 55 57 197 200 204 213 217 218]
[0 20 27 34 55 57 197 200 204 206 213 218]
[0 20 27 34 55 57 197 200 204 206 213 217 218]
[0 20 27 34 55 57 197 200 204 206 208 212 213 218]
[0 20 27 34 55 57 197 200 204 206 208 212 213 217 218]
[0 20 27 34 55 57 59 82 194 196 197 213 218]
[0 20 27 34 55 57 59 82 194 196 197 213 217 218]
[0 20 27 34 55 57 59 82 194 196 197 206 213 218]
[0 20 27 34 55 57 59 82 194 196 197 206 213 217 218]
[0 20 27 34 55 57 59 82 194 196 197 206 208 212 213 218]
[0 20 27 34 55 57 59 82 194 196 197 206 208 212 213 217 218]
[0 20 27 34 55 57 59 82 194 196 197 200 204 213 218]
[0 20 27 34 55 57 59 82 194 196 197 200 204 213 217 218]
[0 20 27 34 55 57 59 82 194 196 197 200 204 206 213 218]
[0 20 27 34 55 57 59 82 194 196 197 200 204 206 213 217 218]
[0 20 27 34 55 57 59 82 194 196 197 200 204 206 208 212 213 218]
[0 20 27 34 55 57 59 82 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 34 55 57 59 82 185 194 196 197 213 218]
[0 20 27 34 55 57 59 82 185 194 196 197 213 217 218]
[0 20 27 34 55 57 59 82 185 194 196 197 206 213 218]
[0 20 27 34 55 57 59 82 185 194 196 197 206 213 217 218]
[0 20 27 34 55 57 59 82 185 194 196 197 206 208 212 213 218]
[0 20 27 34 55 57 59 82 185 194 196 197 206 208 212 213 217 218]
[0 20 27 34 55 57 59 82 185 194 196 197 200 204 213 218]
[0 20 27 34 55 57 59 82 185 194 196 197 200 204 213 217 218]
[0 20 27 34 55 57 59 82 185 194 196 197 200 204 206 213 218]
[0 20 27 34 55 57 59 82 185 194 196 197 200 204 206 213 217 218]
[0 20 27 34 55 57 59 82 185 194 196 197 200 204 206 208 212 213 218]
[0 20 27 34 55 57 59 82 185 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 34 55 57 59 82 185 189 193 194 196 197 213 218]
[0 20 27 34 55 57 59 82 185 189 193 194 196 197 213 217 218]
[0 20 27 34 55 57 59 82 185 189 193 194 196 197 206 213 218]
[0 20 27 34 55 57 59 82 185 189 193 194 196 197 206 213 217 218]
[0 20 27 34 55 57 59 82 185 189 193 194 196 197 206 208 212 213 218]
[0 20 27 34 55 57 59 82 185 189 193 194 196 197 206 208 212 213 217 218]
[0 20 27 34 55 57 59 82 185 189 193 194 196 197 200 204 213 218]
[0 20 27 34 55 57 59 82 185 189 193 194 196 197 200 204 213 217 218]
[0 20 27 34 55 57 59 82 185 189 193 194 196 197 200 204 206 213 218]
[0 20 27 34 55 57 59 82 185 189 193 194 196 197 200 204 206 213 217 218]
[0 20 27 34 55 57 59 82 185 189 193 194 196 197 200 204 206 208 212 213 218]
[0 20 27 34 55 57 59 82 185 189 193 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 34 55 57 59 82 96 134 236]
[0 20 27 34 55 57 59 82 96 134 194 196 197 213 218]
[0 20 27 34 55 57 59 82 96 134 194 196 197 213 217 218]
[0 20 27 34 55 57 59 82 96 134 194 196 197 206 213 218]
[0 20 27 34 55 57 59 82 96 134 194 196 197 206 213 217 218]
[0 20 27 34 55 57 59 82 96 134 194 196 197 206 208 212 213 218]
[0 20 27 34 55 57 59 82 96 134 194 196 197 206 208 212 213 217 218]
[0 20 27 34 55 57 59 82 96 134 194 196 197 200 204 213 218]
[0 20 27 34 55 57 59 82 96 134 194 196 197 200 204 213 217 218]
[0 20 27 34 55 57 59 82 96 134 194 196 197 200 204 206 213 218]
[0 20 27 34 55 57 59 82 96 134 194 196 197 200 204 206 213 217 218]
[0 20 27 34 55 57 59 82 96 134 194 196 197 200 204 206 208 212 213 218]
[0 20 27 34 55 57 59 82 96 134 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 34 55 57 59 82 96 114 116 236]
[0 20 27 34 55 57 59 82 96 114 116 134 236]
[0 20 27 34 55 57 59 82 96 114 116 134 194 196 197 213 218]
[0 20 27 34 55 57 59 82 96 114 116 134 194 196 197 213 217 218]
[0 20 27 34 55 57 59 82 96 114 116 134 194 196 197 206 213 218]
[0 20 27 34 55 57 59 82 96 114 116 134 194 196 197 206 213 217 218]
[0 20 27 34 55 57 59 82 96 114 116 134 194 196 197 206 208 212 213 218]
[0 20 27 34 55 57 59 82 96 114 116 134 194 196 197 206 208 212 213 217 218]
[0 20 27 34 55 57 59 82 96 114 116 134 194 196 197 200 204 213 218]
[0 20 27 34 55 57 59 82 96 114 116 134 194 196 197 200 204 213 217 218]
[0 20 27 34 55 57 59 82 96 114 116 134 194 196 197 200 204 206 213 218]
[0 20 27 34 55 57 59 82 96 114 116 134 194 196 197 200 204 206 213 217 218]
[0 20 27 34 55 57 59 82 96 114 116 134 194 196 197 200 204 206 208 212 213 218]
[0 20 27 34 55 57 59 82 96 114 116 134 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 34 55 57 59 82 96 101 236]
[0 20 27 34 55 57 59 82 96 101 134 236]
[0 20 27 34 55 57 59 82 96 101 134 194 196 197 213 218]
[0 20 27 34 55 57 59 82 96 101 134 194 196 197 213 217 218]
[0 20 27 34 55 57 59 82 96 101 134 194 196 197 206 213 218]
[0 20 27 34 55 57 59 82 96 101 134 194 196 197 206 213 217 218]
[0 20 27 34 55 57 59 82 96 101 134 194 196 197 206 208 212 213 218]
[0 20 27 34 55 57 59 82 96 101 134 194 196 197 206 208 212 213 217 218]
[0 20 27 34 55 57 59 82 96 101 134 194 196 197 200 204 213 218]
[0 20 27 34 55 57 59 82 96 101 134 194 196 197 200 204 213 217 218]
[0 20 27 34 55 57 59 82 96 101 134 194 196 197 200 204 206 213 218]
[0 20 27 34 55 57 59 82 96 101 134 194 196 197 200 204 206 213 217 218]
[0 20 27 34 55 57 59 82 96 101 134 194 196 197 200 204 206 208 212 213 218]
[0 20 27 34 55 57 59 82 96 101 134 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 34 55 57 59 72 81 82 194 196 197 213 218]
[0 20 27 34 55 57 59 72 81 82 194 196 197 213 217 218]
[0 20 27 34 55 57 59 72 81 82 194 196 197 206 213 218]
[0 20 27 34 55 57 59 72 81 82 194 196 197 206 213 217 218]
[0 20 27 34 55 57 59 72 81 82 194 196 197 206 208 212 213 218]
[0 20 27 34 55 57 59 72 81 82 194 196 197 206 208 212 213 217 218]
[0 20 27 34 55 57 59 72 81 82 194 196 197 200 204 213 218]
[0 20 27 34 55 57 59 72 81 82 194 196 197 200 204 213 217 218]
[0 20 27 34 55 57 59 72 81 82 194 196 197 200 204 206 213 218]
[0 20 27 34 55 57 59 72 81 82 194 196 197 200 204 206 213 217 218]
[0 20 27 34 55 57 59 72 81 82 194 196 197 200 204 206 208 212 213 218]
[0 20 27 34 55 57 59 72 81 82 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 34 55 57 59 72 81 82 185 194 196 197 213 218]
[0 20 27 34 55 57 59 72 81 82 185 194 196 197 213 217 218]
[0 20 27 34 55 57 59 72 81 82 185 194 196 197 206 213 218]
[0 20 27 34 55 57 59 72 81 82 185 194 196 197 206 213 217 218]
[0 20 27 34 55 57 59 72 81 82 185 194 196 197 206 208 212 213 218]
[0 20 27 34 55 57 59 72 81 82 185 194 196 197 206 208 212 213 217 218]
[0 20 27 34 55 57 59 72 81 82 185 194 196 197 200 204 213 218]
[0 20 27 34 55 57 59 72 81 82 185 194 196 197 200 204 213 217 218]
[0 20 27 34 55 57 59 72 81 82 185 194 196 197 200 204 206 213 218]
[0 20 27 34 55 57 59 72 81 82 185 194 196 197 200 204 206 213 217 218]
[0 20 27 34 55 57 59 72 81 82 185 194 196 197 200 204 206 208 212 213 218]
[0 20 27 34 55 57 59 72 81 82 185 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 34 55 57 59 72 81 82 185 189 193 194 196 197 213 218]
[0 20 27 34 55 57 59 72 81 82 185 189 193 194 196 197 213 217 218]
[0 20 27 34 55 57 59 72 81 82 185 189 193 194 196 197 206 213 218]
[0 20 27 34 55 57 59 72 81 82 185 189 193 194 196 197 206 213 217 218]
[0 20 27 34 55 57 59 72 81 82 185 189 193 194 196 197 206 208 212 213 218]
[0 20 27 34 55 57 59 72 81 82 185 189 193 194 196 197 206 208 212 213 217 218]
[0 20 27 34 55 57 59 72 81 82 185 189 193 194 196 197 200 204 213 218]
[0 20 27 34 55 57 59 72 81 82 185 189 193 194 196 197 200 204 213 217 218]
[0 20 27 34 55 57 59 72 81 82 185 189 193 194 196 197 200 204 206 213 218]
[0 20 27 34 55 57 59 72 81 82 185 189 193 194 196 197 200 204 206 213 217 218]
[0 20 27 34 55 57 59 72 81 82 185 189 193 194 196 197 200 204 206 208 212 213 218]
[0 20 27 34 55 57 59 72 81 82 185 189 193 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 34 55 57 59 72 81 82 96 134 236]
[0 20 27 34 55 57 59 72 81 82 96 134 194 196 197 213 218]
[0 20 27 34 55 57 59 72 81 82 96 134 194 196 197 213 217 218]
[0 20 27 34 55 57 59 72 81 82 96 134 194 196 197 206 213 218]
[0 20 27 34 55 57 59 72 81 82 96 134 194 196 197 206 213 217 218]
[0 20 27 34 55 57 59 72 81 82 96 134 194 196 197 206 208 212 213 218]
[0 20 27 34 55 57 59 72 81 82 96 134 194 196 197 206 208 212 213 217 218]
[0 20 27 34 55 57 59 72 81 82 96 134 194 196 197 200 204 213 218]
[0 20 27 34 55 57 59 72 81 82 96 134 194 196 197 200 204 213 217 218]
[0 20 27 34 55 57 59 72 81 82 96 134 194 196 197 200 204 206 213 218]
[0 20 27 34 55 57 59 72 81 82 96 134 194 196 197 200 204 206 213 217 218]
[0 20 27 34 55 57 59 72 81 82 96 134 194 196 197 200 204 206 208 212 213 218]
[0 20 27 34 55 57 59 72 81 82 96 134 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 34 55 57 59 72 81 82 96 114 116 236]
[0 20 27 34 55 57 59 72 81 82 96 114 116 134 236]
[0 20 27 34 55 57 59 72 81 82 96 114 116 134 194 196 197 213 218]
[0 20 27 34 55 57 59 72 81 82 96 114 116 134 194 196 197 213 217 218]
[0 20 27 34 55 57 59 72 81 82 96 114 116 134 194 196 197 206 213 218]
[0 20 27 34 55 57 59 72 81 82 96 114 116 134 194 196 197 206 213 217 218]
[0 20 27 34 55 57 59 72 81 82 96 114 116 134 194 196 197 206 208 212 213 218]
[0 20 27 34 55 57 59 72 81 82 96 114 116 134 194 196 197 206 208 212 213 217 218]
[0 20 27 34 55 57 59 72 81 82 96 114 116 134 194 196 197 200 204 213 218]
[0 20 27 34 55 57 59 72 81 82 96 114 116 134 194 196 197 200 204 213 217 218]
[0 20 27 34 55 57 59 72 81 82 96 114 116 134 194 196 197 200 204 206 213 218]
[0 20 27 34 55 57 59 72 81 82 96 114 116 134 194 196 197 200 204 206 213 217 218]
[0 20 27 34 55 57 59 72 81 82 96 114 116 134 194 196 197 200 204 206 208 212 213 218]
[0 20 27 34 55 57 59 72 81 82 96 114 116 134 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 34 55 57 59 72 81 82 96 101 236]
[0 20 27 34 55 57 59 72 81 82 96 101 134 236]
[0 20 27 34 55 57 59 72 81 82 96 101 134 194 196 197 213 218]
[0 20 27 34 55 57 59 72 81 82 96 101 134 194 196 197 213 217 218]
[0 20 27 34 55 57 59 72 81 82 96 101 134 194 196 197 206 213 218]
[0 20 27 34 55 57 59 72 81 82 96 101 134 194 196 197 206 213 217 218]
[0 20 27 34 55 57 59 72 81 82 96 101 134 194 196 197 206 208 212 213 218]
[0 20 27 34 55 57 59 72 81 82 96 101 134 194 196 197 206 208 212 213 217 218]
[0 20 27 34 55 57 59 72 81 82 96 101 134 194 196 197 200 204 213 218]
[0 20 27 34 55 57 59 72 81 82 96 101 134 194 196 197 200 204 213 217 218]
[0 20 27 34 55 57 59 72 81 82 96 101 134 194 196 197 200 204 206 213 218]
[0 20 27 34 55 57 59 72 81 82 96 101 134 194 196 197 200 204 206 213 217 218]
[0 20 27 34 55 57 59 72 81 82 96 101 134 194 196 197 200 204 206 208 212 213 218]
[0 20 27 34 55 57 59 72 81 82 96 101 134 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 34 51 53 57 197 213 218]
[0 20 27 34 51 53 57 197 213 217 218]
[0 20 27 34 51 53 57 197 206 213 218]
[0 20 27 34 51 53 57 197 206 213 217 218]
[0 20 27 34 51 53 57 197 206 208 212 213 218]
[0 20 27 34 51 53 57 197 206 208 212 213 217 218]
[0 20 27 34 51 53 57 197 200 204 213 218]
[0 20 27 34 51 53 57 197 200 204 213 217 218]
[0 20 27 34 51 53 57 197 200 204 206 213 218]
[0 20 27 34 51 53 57 197 200 204 206 213 217 218]
[0 20 27 34 51 53 57 197 200 204 206 208 212 213 218]
[0 20 27 34 51 53 57 197 200 204 206 208 212 213 217 218]
[0 20 27 34 51 53 57 59 82 194 196 197 213 218]
[0 20 27 34 51 53 57 59 82 194 196 197 213 217 218]
[0 20 27 34 51 53 57 59 82 194 196 197 206 213 218]
[0 20 27 34 51 53 57 59 82 194 196 197 206 213 217 218]
[0 20 27 34 51 53 57 59 82 194 196 197 206 208 212 213 218]
[0 20 27 34 51 53 57 59 82 194 196 197 206 208 212 213 217 218]
[0 20 27 34 51 53 57 59 82 194 196 197 200 204 213 218]
[0 20 27 34 51 53 57 59 82 194 196 197 200 204 213 217 218]
[0 20 27 34 51 53 57 59 82 194 196 197 200 204 206 213 218]
[0 20 27 34 51 53 57 59 82 194 196 197 200 204 206 213 217 218]
[0 20 27 34 51 53 57 59 82 194 196 197 200 204 206 208 212 213 218]
[0 20 27 34 51 53 57 59 82 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 34 51 53 57 59 82 185 194 196 197 213 218]
[0 20 27 34 51 53 57 59 82 185 194 196 197 213 217 218]
[0 20 27 34 51 53 57 59 82 185 194 196 197 206 213 218]
[0 20 27 34 51 53 57 59 82 185 194 196 197 206 213 217 218]
[0 20 27 34 51 53 57 59 82 185 194 196 197 206 208 212 213 218]
[0 20 27 34 51 53 57 59 82 185 194 196 197 206 208 212 213 217 218]
[0 20 27 34 51 53 57 59 82 185 194 196 197 200 204 213 218]
[0 20 27 34 51 53 57 59 82 185 194 196 197 200 204 213 217 218]
[0 20 27 34 51 53 57 59 82 185 194 196 197 200 204 206 213 218]
[0 20 27 34 51 53 57 59 82 185 194 196 197 200 204 206 213 217 218]
[0 20 27 34 51 53 57 59 82 185 194 196 197 200 204 206 208 212 213 218]
[0 20 27 34 51 53 57 59 82 185 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 34 51 53 57 59 82 185 189 193 194 196 197 213 218]
[0 20 27 34 51 53 57 59 82 185 189 193 194 196 197 213 217 218]
[0 20 27 34 51 53 57 59 82 185 189 193 194 196 197 206 213 218]
[0 20 27 34 51 53 57 59 82 185 189 193 194 196 197 206 213 217 218]
[0 20 27 34 51 53 57 59 82 185 189 193 194 196 197 206 208 212 213 218]
[0 20 27 34 51 53 57 59 82 185 189 193 194 196 197 206 208 212 213 217 218]
[0 20 27 34 51 53 57 59 82 185 189 193 194 196 197 200 204 213 218]
[0 20 27 34 51 53 57 59 82 185 189 193 194 196 197 200 204 213 217 218]
[0 20 27 34 51 53 57 59 82 185 189 193 194 196 197 200 204 206 213 218]
[0 20 27 34 51 53 57 59 82 185 189 193 194 196 197 200 204 206 213 217 218]
[0 20 27 34 51 53 57 59 82 185 189 193 194 196 197 200 204 206 208 212 213 218]
[0 20 27 34 51 53 57 59 82 185 189 193 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 34 51 53 57 59 82 96 134 236]
[0 20 27 34 51 53 57 59 82 96 134 194 196 197 213 218]
[0 20 27 34 51 53 57 59 82 96 134 194 196 197 213 217 218]
[0 20 27 34 51 53 57 59 82 96 134 194 196 197 206 213 218]
[0 20 27 34 51 53 57 59 82 96 134 194 196 197 206 213 217 218]
[0 20 27 34 51 53 57 59 82 96 134 194 196 197 206 208 212 213 218]
[0 20 27 34 51 53 57 59 82 96 134 194 196 197 206 208 212 213 217 218]
[0 20 27 34 51 53 57 59 82 96 134 194 196 197 200 204 213 218]
[0 20 27 34 51 53 57 59 82 96 134 194 196 197 200 204 213 217 218]
[0 20 27 34 51 53 57 59 82 96 134 194 196 197 200 204 206 213 218]
[0 20 27 34 51 53 57 59 82 96 134 194 196 197 200 204 206 213 217 218]
[0 20 27 34 51 53 57 59 82 96 134 194 196 197 200 204 206 208 212 213 218]
[0 20 27 34 51 53 57 59 82 96 134 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 34 51 53 57 59 82 96 114 116 236]
[0 20 27 34 51 53 57 59 82 96 114 116 134 236]
[0 20 27 34 51 53 57 59 82 96 114 116 134 194 196 197 213 218]
[0 20 27 34 51 53 57 59 82 96 114 116 134 194 196 197 213 217 218]
[0 20 27 34 51 53 57 59 82 96 114 116 134 194 196 197 206 213 218]
[0 20 27 34 51 53 57 59 82 96 114 116 134 194 196 197 206 213 217 218]
[0 20 27 34 51 53 57 59 82 96 114 116 134 194 196 197 206 208 212 213 218]
[0 20 27 34 51 53 57 59 82 96 114 116 134 194 196 197 206 208 212 213 217 218]
[0 20 27 34 51 53 57 59 82 96 114 116 134 194 196 197 200 204 213 218]
[0 20 27 34 51 53 57 59 82 96 114 116 134 194 196 197 200 204 213 217 218]
[0 20 27 34 51 53 57 59 82 96 114 116 134 194 196 197 200 204 206 213 218]
[0 20 27 34 51 53 57 59 82 96 114 116 134 194 196 197 200 204 206 213 217 218]
[0 20 27 34 51 53 57 59 82 96 114 116 134 194 196 197 200 204 206 208 212 213 218]
[0 20 27 34 51 53 57 59 82 96 114 116 134 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 34 51 53 57 59 82 96 101 236]
[0 20 27 34 51 53 57 59 82 96 101 134 236]
[0 20 27 34 51 53 57 59 82 96 101 134 194 196 197 213 218]
[0 20 27 34 51 53 57 59 82 96 101 134 194 196 197 213 217 218]
[0 20 27 34 51 53 57 59 82 96 101 134 194 196 197 206 213 218]
[0 20 27 34 51 53 57 59 82 96 101 134 194 196 197 206 213 217 218]
[0 20 27 34 51 53 57 59 82 96 101 134 194 196 197 206 208 212 213 218]
[0 20 27 34 51 53 57 59 82 96 101 134 194 196 197 206 208 212 213 217 218]
[0 20 27 34 51 53 57 59 82 96 101 134 194 196 197 200 204 213 218]
[0 20 27 34 51 53 57 59 82 96 101 134 194 196 197 200 204 213 217 218]
[0 20 27 34 51 53 57 59 82 96 101 134 194 196 197 200 204 206 213 218]
[0 20 27 34 51 53 57 59 82 96 101 134 194 196 197 200 204 206 213 217 218]
[0 20 27 34 51 53 57 59 82 96 101 134 194 196 197 200 204 206 208 212 213 218]
[0 20 27 34 51 53 57 59 82 96 101 134 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 34 51 53 57 59 72 81 82 194 196 197 213 218]
[0 20 27 34 51 53 57 59 72 81 82 194 196 197 213 217 218]
[0 20 27 34 51 53 57 59 72 81 82 194 196 197 206 213 218]
[0 20 27 34 51 53 57 59 72 81 82 194 196 197 206 213 217 218]
[0 20 27 34 51 53 57 59 72 81 82 194 196 197 206 208 212 213 218]
[0 20 27 34 51 53 57 59 72 81 82 194 196 197 206 208 212 213 217 218]
[0 20 27 34 51 53 57 59 72 81 82 194 196 197 200 204 213 218]
[0 20 27 34 51 53 57 59 72 81 82 194 196 197 200 204 213 217 218]
[0 20 27 34 51 53 57 59 72 81 82 194 196 197 200 204 206 213 218]
[0 20 27 34 51 53 57 59 72 81 82 194 196 197 200 204 206 213 217 218]
[0 20 27 34 51 53 57 59 72 81 82 194 196 197 200 204 206 208 212 213 218]
[0 20 27 34 51 53 57 59 72 81 82 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 34 51 53 57 59 72 81 82 185 194 196 197 213 218]
[0 20 27 34 51 53 57 59 72 81 82 185 194 196 197 213 217 218]
[0 20 27 34 51 53 57 59 72 81 82 185 194 196 197 206 213 218]
[0 20 27 34 51 53 57 59 72 81 82 185 194 196 197 206 213 217 218]
[0 20 27 34 51 53 57 59 72 81 82 185 194 196 197 206 208 212 213 218]
[0 20 27 34 51 53 57 59 72 81 82 185 194 196 197 206 208 212 213 217 218]
[0 20 27 34 51 53 57 59 72 81 82 185 194 196 197 200 204 213 218]
[0 20 27 34 51 53 57 59 72 81 82 185 194 196 197 200 204 213 217 218]
[0 20 27 34 51 53 57 59 72 81 82 185 194 196 197 200 204 206 213 218]
[0 20 27 34 51 53 57 59 72 81 82 185 194 196 197 200 204 206 213 217 218]
[0 20 27 34 51 53 57 59 72 81 82 185 194 196 197 200 204 206 208 212 213 218]
[0 20 27 34 51 53 57 59 72 81 82 185 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 34 51 53 57 59 72 81 82 185 189 193 194 196 197 213 218]
[0 20 27 34 51 53 57 59 72 81 82 185 189 193 194 196 197 213 217 218]
[0 20 27 34 51 53 57 59 72 81 82 185 189 193 194 196 197 206 213 218]
[0 20 27 34 51 53 57 59 72 81 82 185 189 193 194 196 197 206 213 217 218]
[0 20 27 34 51 53 57 59 72 81 82 185 189 193 194 196 197 206 208 212 213 218]
[0 20 27 34 51 53 57 59 72 81 82 185 189 193 194 196 197 206 208 212 213 217 218]
[0 20 27 34 51 53 57 59 72 81 82 185 189 193 194 196 197 200 204 213 218]
[0 20 27 34 51 53 57 59 72 81 82 185 189 193 194 196 197 200 204 213 217 218]
[0 20 27 34 51 53 57 59 72 81 82 185 189 193 194 196 197 200 204 206 213 218]
[0 20 27 34 51 53 57 59 72 81 82 185 189 193 194 196 197 200 204 206 213 217 218]
[0 20 27 34 51 53 57 59 72 81 82 185 189 193 194 196 197 200 204 206 208 212 213 218]
[0 20 27 34 51 53 57 59 72 81 82 185 189 193 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 34 51 53 57 59 72 81 82 96 134 236]
[0 20 27 34 51 53 57 59 72 81 82 96 134 194 196 197 213 218]
[0 20 27 34 51 53 57 59 72 81 82 96 134 194 196 197 213 217 218]
[0 20 27 34 51 53 57 59 72 81 82 96 134 194 196 197 206 213 218]
[0 20 27 34 51 53 57 59 72 81 82 96 134 194 196 197 206 213 217 218]
[0 20 27 34 51 53 57 59 72 81 82 96 134 194 196 197 206 208 212 213 218]
[0 20 27 34 51 53 57 59 72 81 82 96 134 194 196 197 206 208 212 213 217 218]
[0 20 27 34 51 53 57 59 72 81 82 96 134 194 196 197 200 204 213 218]
[0 20 27 34 51 53 57 59 72 81 82 96 134 194 196 197 200 204 213 217 218]
[0 20 27 34 51 53 57 59 72 81 82 96 134 194 196 197 200 204 206 213 218]
[0 20 27 34 51 53 57 59 72 81 82 96 134 194 196 197 200 204 206 213 217 218]
[0 20 27 34 51 53 57 59 72 81 82 96 134 194 196 197 200 204 206 208 212 213 218]
[0 20 27 34 51 53 57 59 72 81 82 96 134 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 34 51 53 57 59 72 81 82 96 114 116 236]
[0 20 27 34 51 53 57 59 72 81 82 96 114 116 134 236]
[0 20 27 34 51 53 57 59 72 81 82 96 114 116 134 194 196 197 213 218]
[0 20 27 34 51 53 57 59 72 81 82 96 114 116 134 194 196 197 213 217 218]
[0 20 27 34 51 53 57 59 72 81 82 96 114 116 134 194 196 197 206 213 218]
[0 20 27 34 51 53 57 59 72 81 82 96 114 116 134 194 196 197 206 213 217 218]
[0 20 27 34 51 53 57 59 72 81 82 96 114 116 134 194 196 197 206 208 212 213 218]
[0 20 27 34 51 53 57 59 72 81 82 96 114 116 134 194 196 197 206 208 212 213 217 218]
[0 20 27 34 51 53 57 59 72 81 82 96 114 116 134 194 196 197 200 204 213 218]
[0 20 27 34 51 53 57 59 72 81 82 96 114 116 134 194 196 197 200 204 213 217 218]
[0 20 27 34 51 53 57 59 72 81 82 96 114 116 134 194 196 197 200 204 206 213 218]
[0 20 27 34 51 53 57 59 72 81 82 96 114 116 134 194 196 197 200 204 206 213 217 218]
[0 20 27 34 51 53 57 59 72 81 82 96 114 116 134 194 196 197 200 204 206 208 212 213 218]
[0 20 27 34 51 53 57 59 72 81 82 96 114 116 134 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 34 51 53 57 59 72 81 82 96 101 236]
[0 20 27 34 51 53 57 59 72 81 82 96 101 134 236]
[0 20 27 34 51 53 57 59 72 81 82 96 101 134 194 196 197 213 218]
[0 20 27 34 51 53 57 59 72 81 82 96 101 134 194 196 197 213 217 218]
[0 20 27 34 51 53 57 59 72 81 82 96 101 134 194 196 197 206 213 218]
[0 20 27 34 51 53 57 59 72 81 82 96 101 134 194 196 197 206 213 217 218]
[0 20 27 34 51 53 57 59 72 81 82 96 101 134 194 196 197 206 208 212 213 218]
[0 20 27 34 51 53 57 59 72 81 82 96 101 134 194 196 197 206 208 212 213 217 218]
[0 20 27 34 51 53 57 59 72 81 82 96 101 134 194 196 197 200 204 213 218]
[0 20 27 34 51 53 57 59 72 81 82 96 101 134 194 196 197 200 204 213 217 218]
[0 20 27 34 51 53 57 59 72 81 82 96 101 134 194 196 197 200 204 206 213 218]
[0 20 27 34 51 53 57 59 72 81 82 96 101 134 194 196 197 200 204 206 213 217 218]
[0 20 27 34 51 53 57 59 72 81 82 96 101 134 194 196 197 200 204 206 208 212 213 218]
[0 20 27 34 51 53 57 59 72 81 82 96 101 134 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 34 51 53 55 57 197 213 218]
[0 20 27 34 51 53 55 57 197 213 217 218]
[0 20 27 34 51 53 55 57 197 206 213 218]
[0 20 27 34 51 53 55 57 197 206 213 217 218]
[0 20 27 34 51 53 55 57 197 206 208 212 213 218]
[0 20 27 34 51 53 55 57 197 206 208 212 213 217 218]
[0 20 27 34 51 53 55 57 197 200 204 213 218]
[0 20 27 34 51 53 55 57 197 200 204 213 217 218]
[0 20 27 34 51 53 55 57 197 200 204 206 213 218]
[0 20 27 34 51 53 55 57 197 200 204 206 213 217 218]
[0 20 27 34 51 53 55 57 197 200 204 206 208 212 213 218]
[0 20 27 34 51 53 55 57 197 200 204 206 208 212 213 217 218]
[0 20 27 34 51 53 55 57 59 82 194 196 197 213 218]
[0 20 27 34 51 53 55 57 59 82 194 196 197 213 217 218]
[0 20 27 34 51 53 55 57 59 82 194 196 197 206 213 218]
[0 20 27 34 51 53 55 57 59 82 194 196 197 206 213 217 218]
[0 20 27 34 51 53 55 57 59 82 194 196 197 206 208 212 213 218]
[0 20 27 34 51 53 55 57 59 82 194 196 197 206 208 212 213 217 218]
[0 20 27 34 51 53 55 57 59 82 194 196 197 200 204 213 218]
[0 20 27 34 51 53 55 57 59 82 194 196 197 200 204 213 217 218]
[0 20 27 34 51 53 55 57 59 82 194 196 197 200 204 206 213 218]
[0 20 27 34 51 53 55 57 59 82 194 196 197 200 204 206 213 217 218]
[0 20 27 34 51 53 55 57 59 82 194 196 197 200 204 206 208 212 213 218]
[0 20 27 34 51 53 55 57 59 82 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 34 51 53 55 57 59 82 185 194 196 197 213 218]
[0 20 27 34 51 53 55 57 59 82 185 194 196 197 213 217 218]
[0 20 27 34 51 53 55 57 59 82 185 194 196 197 206 213 218]
[0 20 27 34 51 53 55 57 59 82 185 194 196 197 206 213 217 218]
[0 20 27 34 51 53 55 57 59 82 185 194 196 197 206 208 212 213 218]
[0 20 27 34 51 53 55 57 59 82 185 194 196 197 206 208 212 213 217 218]
[0 20 27 34 51 53 55 57 59 82 185 194 196 197 200 204 213 218]
[0 20 27 34 51 53 55 57 59 82 185 194 196 197 200 204 213 217 218]
[0 20 27 34 51 53 55 57 59 82 185 194 196 197 200 204 206 213 218]
[0 20 27 34 51 53 55 57 59 82 185 194 196 197 200 204 206 213 217 218]
[0 20 27 34 51 53 55 57 59 82 185 194 196 197 200 204 206 208 212 213 218]
[0 20 27 34 51 53 55 57 59 82 185 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 34 51 53 55 57 59 82 185 189 193 194 196 197 213 218]
[0 20 27 34 51 53 55 57 59 82 185 189 193 194 196 197 213 217 218]
[0 20 27 34 51 53 55 57 59 82 185 189 193 194 196 197 206 213 218]
[0 20 27 34 51 53 55 57 59 82 185 189 193 194 196 197 206 213 217 218]
[0 20 27 34 51 53 55 57 59 82 185 189 193 194 196 197 206 208 212 213 218]
[0 20 27 34 51 53 55 57 59 82 185 189 193 194 196 197 206 208 212 213 217 218]
[0 20 27 34 51 53 55 57 59 82 185 189 193 194 196 197 200 204 213 218]
[0 20 27 34 51 53 55 57 59 82 185 189 193 194 196 197 200 204 213 217 218]
[0 20 27 34 51 53 55 57 59 82 185 189 193 194 196 197 200 204 206 213 218]
[0 20 27 34 51 53 55 57 59 82 185 189 193 194 196 197 200 204 206 213 217 218]
[0 20 27 34 51 53 55 57 59 82 185 189 193 194 196 197 200 204 206 208 212 213 218]
[0 20 27 34 51 53 55 57 59 82 185 189 193 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 34 51 53 55 57 59 82 96 134 236]
[0 20 27 34 51 53 55 57 59 82 96 134 194 196 197 213 218]
[0 20 27 34 51 53 55 57 59 82 96 134 194 196 197 213 217 218]
[0 20 27 34 51 53 55 57 59 82 96 134 194 196 197 206 213 218]
[0 20 27 34 51 53 55 57 59 82 96 134 194 196 197 206 213 217 218]
[0 20 27 34 51 53 55 57 59 82 96 134 194 196 197 206 208 212 213 218]
[0 20 27 34 51 53 55 57 59 82 96 134 194 196 197 206 208 212 213 217 218]
[0 20 27 34 51 53 55 57 59 82 96 134 194 196 197 200 204 213 218]
[0 20 27 34 51 53 55 57 59 82 96 134 194 196 197 200 204 213 217 218]
[0 20 27 34 51 53 55 57 59 82 96 134 194 196 197 200 204 206 213 218]
[0 20 27 34 51 53 55 57 59 82 96 134 194 196 197 200 204 206 213 217 218]
[0 20 27 34 51 53 55 57 59 82 96 134 194 196 197 200 204 206 208 212 213 218]
[0 20 27 34 51 53 55 57 59 82 96 134 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 34 51 53 55 57 59 82 96 114 116 236]
[0 20 27 34 51 53 55 57 59 82 96 114 116 134 236]
[0 20 27 34 51 53 55 57 59 82 96 114 116 134 194 196 197 213 218]
[0 20 27 34 51 53 55 57 59 82 96 114 116 134 194 196 197 213 217 218]
[0 20 27 34 51 53 55 57 59 82 96 114 116 134 194 196 197 206 213 218]
[0 20 27 34 51 53 55 57 59 82 96 114 116 134 194 196 197 206 213 217 218]
[0 20 27 34 51 53 55 57 59 82 96 114 116 134 194 196 197 206 208 212 213 218]
[0 20 27 34 51 53 55 57 59 82 96 114 116 134 194 196 197 206 208 212 213 217 218]
[0 20 27 34 51 53 55 57 59 82 96 114 116 134 194 196 197 200 204 213 218]
[0 20 27 34 51 53 55 57 59 82 96 114 116 134 194 196 197 200 204 213 217 218]
[0 20 27 34 51 53 55 57 59 82 96 114 116 134 194 196 197 200 204 206 213 218]
[0 20 27 34 51 53 55 57 59 82 96 114 116 134 194 196 197 200 204 206 213 217 218]
[0 20 27 34 51 53 55 57 59 82 96 114 116 134 194 196 197 200 204 206 208 212 213 218]
[0 20 27 34 51 53 55 57 59 82 96 114 116 134 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 34 51 53 55 57 59 82 96 101 236]
[0 20 27 34 51 53 55 57 59 82 96 101 134 236]
[0 20 27 34 51 53 55 57 59 82 96 101 134 194 196 197 213 218]
[0 20 27 34 51 53 55 57 59 82 96 101 134 194 196 197 213 217 218]
[0 20 27 34 51 53 55 57 59 82 96 101 134 194 196 197 206 213 218]
[0 20 27 34 51 53 55 57 59 82 96 101 134 194 196 197 206 213 217 218]
[0 20 27 34 51 53 55 57 59 82 96 101 134 194 196 197 206 208 212 213 218]
[0 20 27 34 51 53 55 57 59 82 96 101 134 194 196 197 206 208 212 213 217 218]
[0 20 27 34 51 53 55 57 59 82 96 101 134 194 196 197 200 204 213 218]
[0 20 27 34 51 53 55 57 59 82 96 101 134 194 196 197 200 204 213 217 218]
[0 20 27 34 51 53 55 57 59 82 96 101 134 194 196 197 200 204 206 213 218]
[0 20 27 34 51 53 55 57 59 82 96 101 134 194 196 197 200 204 206 213 217 218]
[0 20 27 34 51 53 55 57 59 82 96 101 134 194 196 197 200 204 206 208 212 213 218]
[0 20 27 34 51 53 55 57 59 82 96 101 134 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 34 51 53 55 57 59 72 81 82 194 196 197 213 218]
[0 20 27 34 51 53 55 57 59 72 81 82 194 196 197 213 217 218]
[0 20 27 34 51 53 55 57 59 72 81 82 194 196 197 206 213 218]
[0 20 27 34 51 53 55 57 59 72 81 82 194 196 197 206 213 217 218]
[0 20 27 34 51 53 55 57 59 72 81 82 194 196 197 206 208 212 213 218]
[0 20 27 34 51 53 55 57 59 72 81 82 194 196 197 206 208 212 213 217 218]
[0 20 27 34 51 53 55 57 59 72 81 82 194 196 197 200 204 213 218]
[0 20 27 34 51 53 55 57 59 72 81 82 194 196 197 200 204 213 217 218]
[0 20 27 34 51 53 55 57 59 72 81 82 194 196 197 200 204 206 213 218]
[0 20 27 34 51 53 55 57 59 72 81 82 194 196 197 200 204 206 213 217 218]
[0 20 27 34 51 53 55 57 59 72 81 82 194 196 197 200 204 206 208 212 213 218]
[0 20 27 34 51 53 55 57 59 72 81 82 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 34 51 53 55 57 59 72 81 82 185 194 196 197 213 218]
[0 20 27 34 51 53 55 57 59 72 81 82 185 194 196 197 213 217 218]
[0 20 27 34 51 53 55 57 59 72 81 82 185 194 196 197 206 213 218]
[0 20 27 34 51 53 55 57 59 72 81 82 185 194 196 197 206 213 217 218]
[0 20 27 34 51 53 55 57 59 72 81 82 185 194 196 197 206 208 212 213 218]
[0 20 27 34 51 53 55 57 59 72 81 82 185 194 196 197 206 208 212 213 217 218]
[0 20 27 34 51 53 55 57 59 72 81 82 185 194 196 197 200 204 213 218]
[0 20 27 34 51 53 55 57 59 72 81 82 185 194 196 197 200 204 213 217 218]
[0 20 27 34 51 53 55 57 59 72 81 82 185 194 196 197 200 204 206 213 218]
[0 20 27 34 51 53 55 57 59 72 81 82 185 194 196 197 200 204 206 213 217 218]
[0 20 27 34 51 53 55 57 59 72 81 82 185 194 196 197 200 204 206 208 212 213 218]
[0 20 27 34 51 53 55 57 59 72 81 82 185 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 34 51 53 55 57 59 72 81 82 185 189 193 194 196 197 213 218]
[0 20 27 34 51 53 55 57 59 72 81 82 185 189 193 194 196 197 213 217 218]
[0 20 27 34 51 53 55 57 59 72 81 82 185 189 193 194 196 197 206 213 218]
[0 20 27 34 51 53 55 57 59 72 81 82 185 189 193 194 196 197 206 213 217 218]
[0 20 27 34 51 53 55 57 59 72 81 82 185 189 193 194 196 197 206 208 212 213 218]
[0 20 27 34 51 53 55 57 59 72 81 82 185 189 193 194 196 197 206 208 212 213 217 218]
[0 20 27 34 51 53 55 57 59 72 81 82 185 189 193 194 196 197 200 204 213 218]
[0 20 27 34 51 53 55 57 59 72 81 82 185 189 193 194 196 197 200 204 213 217 218]
[0 20 27 34 51 53 55 57 59 72 81 82 185 189 193 194 196 197 200 204 206 213 218]
[0 20 27 34 51 53 55 57 59 72 81 82 185 189 193 194 196 197 200 204 206 213 217 218]
[0 20 27 34 51 53 55 57 59 72 81 82 185 189 193 194 196 197 200 204 206 208 212 213 218]
[0 20 27 34 51 53 55 57 59 72 81 82 185 189 193 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 34 51 53 55 57 59 72 81 82 96 134 236]
[0 20 27 34 51 53 55 57 59 72 81 82 96 134 194 196 197 213 218]
[0 20 27 34 51 53 55 57 59 72 81 82 96 134 194 196 197 213 217 218]
[0 20 27 34 51 53 55 57 59 72 81 82 96 134 194 196 197 206 213 218]
[0 20 27 34 51 53 55 57 59 72 81 82 96 134 194 196 197 206 213 217 218]
[0 20 27 34 51 53 55 57 59 72 81 82 96 134 194 196 197 206 208 212 213 218]
[0 20 27 34 51 53 55 57 59 72 81 82 96 134 194 196 197 206 208 212 213 217 218]
[0 20 27 34 51 53 55 57 59 72 81 82 96 134 194 196 197 200 204 213 218]
[0 20 27 34 51 53 55 57 59 72 81 82 96 134 194 196 197 200 204 213 217 218]
[0 20 27 34 51 53 55 57 59 72 81 82 96 134 194 196 197 200 204 206 213 218]
[0 20 27 34 51 53 55 57 59 72 81 82 96 134 194 196 197 200 204 206 213 217 218]
[0 20 27 34 51 53 55 57 59 72 81 82 96 134 194 196 197 200 204 206 208 212 213 218]
[0 20 27 34 51 53 55 57 59 72 81 82 96 134 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 34 51 53 55 57 59 72 81 82 96 114 116 236]
[0 20 27 34 51 53 55 57 59 72 81 82 96 114 116 134 236]
[0 20 27 34 51 53 55 57 59 72 81 82 96 114 116 134 194 196 197 213 218]
[0 20 27 34 51 53 55 57 59 72 81 82 96 114 116 134 194 196 197 213 217 218]
[0 20 27 34 51 53 55 57 59 72 81 82 96 114 116 134 194 196 197 206 213 218]
[0 20 27 34 51 53 55 57 59 72 81 82 96 114 116 134 194 196 197 206 213 217 218]
[0 20 27 34 51 53 55 57 59 72 81 82 96 114 116 134 194 196 197 206 208 212 213 218]
[0 20 27 34 51 53 55 57 59 72 81 82 96 114 116 134 194 196 197 206 208 212 213 217 218]
[0 20 27 34 51 53 55 57 59 72 81 82 96 114 116 134 194 196 197 200 204 213 218]
[0 20 27 34 51 53 55 57 59 72 81 82 96 114 116 134 194 196 197 200 204 213 217 218]
[0 20 27 34 51 53 55 57 59 72 81 82 96 114 116 134 194 196 197 200 204 206 213 218]
[0 20 27 34 51 53 55 57 59 72 81 82 96 114 116 134 194 196 197 200 204 206 213 217 218]
[0 20 27 34 51 53 55 57 59 72 81 82 96 114 116 134 194 196 197 200 204 206 208 212 213 218]
[0 20 27 34 51 53 55 57 59 72 81 82 96 114 116 134 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 34 51 53 55 57 59 72 81 82 96 101 236]
[0 20 27 34 51 53 55 57 59 72 81 82 96 101 134 236]
[0 20 27 34 51 53 55 57 59 72 81 82 96 101 134 194 196 197 213 218]
[0 20 27 34 51 53 55 57 59 72 81 82 96 101 134 194 196 197 213 217 218]
[0 20 27 34 51 53 55 57 59 72 81 82 96 101 134 194 196 197 206 213 218]
[0 20 27 34 51 53 55 57 59 72 81 82 96 101 134 194 196 197 206 213 217 218]
[0 20 27 34 51 53 55 57 59 72 81 82 96 101 134 194 196 197 206 208 212 213 218]
[0 20 27 34 51 53 55 57 59 72 81 82 96 101 134 194 196 197 206 208 212 213 217 218]
[0 20 27 34 51 53 55 57 59 72 81 82 96 101 134 194 196 197 200 204 213 218]
[0 20 27 34 51 53 55 57 59 72 81 82 96 101 134 194 196 197 200 204 213 217 218]
[0 20 27 34 51 53 55 57 59 72 81 82 96 101 134 194 196 197 200 204 206 213 218]
[0 20 27 34 51 53 55 57 59 72 81 82 96 101 134 194 196 197 200 204 206 213 217 218]
[0 20 27 34 51 53 55 57 59 72 81 82 96 101 134 194 196 197 200 204 206 208 212 213 218]
[0 20 27 34 51 53 55 57 59 72 81 82 96 101 134 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 29 33 34 217 218]
[0 20 27 29 33 34 213 218]
[0 20 27 29 33 34 213 217 218]
[0 20 27 29 33 34 57 197 213 218]
[0 20 27 29 33 34 57 197 213 217 218]
[0 20 27 29 33 34 57 197 206 213 218]
[0 20 27 29 33 34 57 197 206 213 217 218]
[0 20 27 29 33 34 57 197 206 208 212 213 218]
[0 20 27 29 33 34 57 197 206 208 212 213 217 218]
[0 20 27 29 33 34 57 197 200 204 213 218]
[0 20 27 29 33 34 57 197 200 204 213 217 218]
[0 20 27 29 33 34 57 197 200 204 206 213 218]
[0 20 27 29 33 34 57 197 200 204 206 213 217 218]
[0 20 27 29 33 34 57 197 200 204 206 208 212 213 218]
[0 20 27 29 33 34 57 197 200 204 206 208 212 213 217 218]
[0 20 27 29 33 34 57 59 82 194 196 197 213 218]
[0 20 27 29 33 34 57 59 82 194 196 197 213 217 218]
[0 20 27 29 33 34 57 59 82 194 196 197 206 213 218]
[0 20 27 29 33 34 57 59 82 194 196 197 206 213 217 218]
[0 20 27 29 33 34 57 59 82 194 196 197 206 208 212 213 218]
[0 20 27 29 33 34 57 59 82 194 196 197 206 208 212 213 217 218]
[0 20 27 29 33 34 57 59 82 194 196 197 200 204 213 218]
[0 20 27 29 33 34 57 59 82 194 196 197 200 204 213 217 218]
[0 20 27 29 33 34 57 59 82 194 196 197 200 204 206 213 218]
[0 20 27 29 33 34 57 59 82 194 196 197 200 204 206 213 217 218]
[0 20 27 29 33 34 57 59 82 194 196 197 200 204 206 208 212 213 218]
[0 20 27 29 33 34 57 59 82 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 29 33 34 57 59 82 185 194 196 197 213 218]
[0 20 27 29 33 34 57 59 82 185 194 196 197 213 217 218]
[0 20 27 29 33 34 57 59 82 185 194 196 197 206 213 218]
[0 20 27 29 33 34 57 59 82 185 194 196 197 206 213 217 218]
[0 20 27 29 33 34 57 59 82 185 194 196 197 206 208 212 213 218]
[0 20 27 29 33 34 57 59 82 185 194 196 197 206 208 212 213 217 218]
[0 20 27 29 33 34 57 59 82 185 194 196 197 200 204 213 218]
[0 20 27 29 33 34 57 59 82 185 194 196 197 200 204 213 217 218]
[0 20 27 29 33 34 57 59 82 185 194 196 197 200 204 206 213 218]
[0 20 27 29 33 34 57 59 82 185 194 196 197 200 204 206 213 217 218]
[0 20 27 29 33 34 57 59 82 185 194 196 197 200 204 206 208 212 213 218]
[0 20 27 29 33 34 57 59 82 185 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 29 33 34 57 59 82 185 189 193 194 196 197 213 218]
[0 20 27 29 33 34 57 59 82 185 189 193 194 196 197 213 217 218]
[0 20 27 29 33 34 57 59 82 185 189 193 194 196 197 206 213 218]
[0 20 27 29 33 34 57 59 82 185 189 193 194 196 197 206 213 217 218]
[0 20 27 29 33 34 57 59 82 185 189 193 194 196 197 206 208 212 213 218]
[0 20 27 29 33 34 57 59 82 185 189 193 194 196 197 206 208 212 213 217 218]
[0 20 27 29 33 34 57 59 82 185 189 193 194 196 197 200 204 213 218]
[0 20 27 29 33 34 57 59 82 185 189 193 194 196 197 200 204 213 217 218]
[0 20 27 29 33 34 57 59 82 185 189 193 194 196 197 200 204 206 213 218]
[0 20 27 29 33 34 57 59 82 185 189 193 194 196 197 200 204 206 213 217 218]
[0 20 27 29 33 34 57 59 82 185 189 193 194 196 197 200 204 206 208 212 213 218]
[0 20 27 29 33 34 57 59 82 185 189 193 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 29 33 34 57 59 82 96 134 236]
[0 20 27 29 33 34 57 59 82 96 134 194 196 197 213 218]
[0 20 27 29 33 34 57 59 82 96 134 194 196 197 213 217 218]
[0 20 27 29 33 34 57 59 82 96 134 194 196 197 206 213 218]
[0 20 27 29 33 34 57 59 82 96 134 194 196 197 206 213 217 218]
[0 20 27 29 33 34 57 59 82 96 134 194 196 197 206 208 212 213 218]
[0 20 27 29 33 34 57 59 82 96 134 194 196 197 206 208 212 213 217 218]
[0 20 27 29 33 34 57 59 82 96 134 194 196 197 200 204 213 218]
[0 20 27 29 33 34 57 59 82 96 134 194 196 197 200 204 213 217 218]
[0 20 27 29 33 34 57 59 82 96 134 194 196 197 200 204 206 213 218]
[0 20 27 29 33 34 57 59 82 96 134 194 196 197 200 204 206 213 217 218]
[0 20 27 29 33 34 57 59 82 96 134 194 196 197 200 204 206 208 212 213 218]
[0 20 27 29 33 34 57 59 82 96 134 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 29 33 34 57 59 82 96 114 116 236]
[0 20 27 29 33 34 57 59 82 96 114 116 134 236]
[0 20 27 29 33 34 57 59 82 96 114 116 134 194 196 197 213 218]
[0 20 27 29 33 34 57 59 82 96 114 116 134 194 196 197 213 217 218]
[0 20 27 29 33 34 57 59 82 96 114 116 134 194 196 197 206 213 218]
[0 20 27 29 33 34 57 59 82 96 114 116 134 194 196 197 206 213 217 218]
[0 20 27 29 33 34 57 59 82 96 114 116 134 194 196 197 206 208 212 213 218]
[0 20 27 29 33 34 57 59 82 96 114 116 134 194 196 197 206 208 212 213 217 218]
[0 20 27 29 33 34 57 59 82 96 114 116 134 194 196 197 200 204 213 218]
[0 20 27 29 33 34 57 59 82 96 114 116 134 194 196 197 200 204 213 217 218]
[0 20 27 29 33 34 57 59 82 96 114 116 134 194 196 197 200 204 206 213 218]
[0 20 27 29 33 34 57 59 82 96 114 116 134 194 196 197 200 204 206 213 217 218]
[0 20 27 29 33 34 57 59 82 96 114 116 134 194 196 197 200 204 206 208 212 213 218]
[0 20 27 29 33 34 57 59 82 96 114 116 134 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 29 33 34 57 59 82 96 101 236]
[0 20 27 29 33 34 57 59 82 96 101 134 236]
[0 20 27 29 33 34 57 59 82 96 101 134 194 196 197 213 218]
[0 20 27 29 33 34 57 59 82 96 101 134 194 196 197 213 217 218]
[0 20 27 29 33 34 57 59 82 96 101 134 194 196 197 206 213 218]
[0 20 27 29 33 34 57 59 82 96 101 134 194 196 197 206 213 217 218]
[0 20 27 29 33 34 57 59 82 96 101 134 194 196 197 206 208 212 213 218]
[0 20 27 29 33 34 57 59 82 96 101 134 194 196 197 206 208 212 213 217 218]
[0 20 27 29 33 34 57 59 82 96 101 134 194 196 197 200 204 213 218]
[0 20 27 29 33 34 57 59 82 96 101 134 194 196 197 200 204 213 217 218]
[0 20 27 29 33 34 57 59 82 96 101 134 194 196 197 200 204 206 213 218]
[0 20 27 29 33 34 57 59 82 96 101 134 194 196 197 200 204 206 213 217 218]
[0 20 27 29 33 34 57 59 82 96 101 134 194 196 197 200 204 206 208 212 213 218]
[0 20 27 29 33 34 57 59 82 96 101 134 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 29 33 34 57 59 72 81 82 194 196 197 213 218]
[0 20 27 29 33 34 57 59 72 81 82 194 196 197 213 217 218]
[0 20 27 29 33 34 57 59 72 81 82 194 196 197 206 213 218]
[0 20 27 29 33 34 57 59 72 81 82 194 196 197 206 213 217 218]
[0 20 27 29 33 34 57 59 72 81 82 194 196 197 206 208 212 213 218]
[0 20 27 29 33 34 57 59 72 81 82 194 196 197 206 208 212 213 217 218]
[0 20 27 29 33 34 57 59 72 81 82 194 196 197 200 204 213 218]
[0 20 27 29 33 34 57 59 72 81 82 194 196 197 200 204 213 217 218]
[0 20 27 29 33 34 57 59 72 81 82 194 196 197 200 204 206 213 218]
[0 20 27 29 33 34 57 59 72 81 82 194 196 197 200 204 206 213 217 218]
[0 20 27 29 33 34 57 59 72 81 82 194 196 197 200 204 206 208 212 213 218]
[0 20 27 29 33 34 57 59 72 81 82 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 29 33 34 57 59 72 81 82 185 194 196 197 213 218]
[0 20 27 29 33 34 57 59 72 81 82 185 194 196 197 213 217 218]
[0 20 27 29 33 34 57 59 72 81 82 185 194 196 197 206 213 218]
[0 20 27 29 33 34 57 59 72 81 82 185 194 196 197 206 213 217 218]
[0 20 27 29 33 34 57 59 72 81 82 185 194 196 197 206 208 212 213 218]
[0 20 27 29 33 34 57 59 72 81 82 185 194 196 197 206 208 212 213 217 218]
[0 20 27 29 33 34 57 59 72 81 82 185 194 196 197 200 204 213 218]
[0 20 27 29 33 34 57 59 72 81 82 185 194 196 197 200 204 213 217 218]
[0 20 27 29 33 34 57 59 72 81 82 185 194 196 197 200 204 206 213 218]
[0 20 27 29 33 34 57 59 72 81 82 185 194 196 197 200 204 206 213 217 218]
[0 20 27 29 33 34 57 59 72 81 82 185 194 196 197 200 204 206 208 212 213 218]
[0 20 27 29 33 34 57 59 72 81 82 185 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 29 33 34 57 59 72 81 82 185 189 193 194 196 197 213 218]
[0 20 27 29 33 34 57 59 72 81 82 185 189 193 194 196 197 213 217 218]
[0 20 27 29 33 34 57 59 72 81 82 185 189 193 194 196 197 206 213 218]
[0 20 27 29 33 34 57 59 72 81 82 185 189 193 194 196 197 206 213 217 218]
[0 20 27 29 33 34 57 59 72 81 82 185 189 193 194 196 197 206 208 212 213 218]
[0 20 27 29 33 34 57 59 72 81 82 185 189 193 194 196 197 206 208 212 213 217 218]
[0 20 27 29 33 34 57 59 72 81 82 185 189 193 194 196 197 200 204 213 218]
[0 20 27 29 33 34 57 59 72 81 82 185 189 193 194 196 197 200 204 213 217 218]
[0 20 27 29 33 34 57 59 72 81 82 185 189 193 194 196 197 200 204 206 213 218]
[0 20 27 29 33 34 57 59 72 81 82 185 189 193 194 196 197 200 204 206 213 217 218]
[0 20 27 29 33 34 57 59 72 81 82 185 189 193 194 196 197 200 204 206 208 212 213 218]
[0 20 27 29 33 34 57 59 72 81 82 185 189 193 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 29 33 34 57 59 72 81 82 96 134 236]
[0 20 27 29 33 34 57 59 72 81 82 96 134 194 196 197 213 218]
[0 20 27 29 33 34 57 59 72 81 82 96 134 194 196 197 213 217 218]
[0 20 27 29 33 34 57 59 72 81 82 96 134 194 196 197 206 213 218]
[0 20 27 29 33 34 57 59 72 81 82 96 134 194 196 197 206 213 217 218]
[0 20 27 29 33 34 57 59 72 81 82 96 134 194 196 197 206 208 212 213 218]
[0 20 27 29 33 34 57 59 72 81 82 96 134 194 196 197 206 208 212 213 217 218]
[0 20 27 29 33 34 57 59 72 81 82 96 134 194 196 197 200 204 213 218]
[0 20 27 29 33 34 57 59 72 81 82 96 134 194 196 197 200 204 213 217 218]
[0 20 27 29 33 34 57 59 72 81 82 96 134 194 196 197 200 204 206 213 218]
[0 20 27 29 33 34 57 59 72 81 82 96 134 194 196 197 200 204 206 213 217 218]
[0 20 27 29 33 34 57 59 72 81 82 96 134 194 196 197 200 204 206 208 212 213 218]
[0 20 27 29 33 34 57 59 72 81 82 96 134 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 29 33 34 57 59 72 81 82 96 114 116 236]
[0 20 27 29 33 34 57 59 72 81 82 96 114 116 134 236]
[0 20 27 29 33 34 57 59 72 81 82 96 114 116 134 194 196 197 213 218]
[0 20 27 29 33 34 57 59 72 81 82 96 114 116 134 194 196 197 213 217 218]
[0 20 27 29 33 34 57 59 72 81 82 96 114 116 134 194 196 197 206 213 218]
[0 20 27 29 33 34 57 59 72 81 82 96 114 116 134 194 196 197 206 213 217 218]
[0 20 27 29 33 34 57 59 72 81 82 96 114 116 134 194 196 197 206 208 212 213 218]
[0 20 27 29 33 34 57 59 72 81 82 96 114 116 134 194 196 197 206 208 212 213 217 218]
[0 20 27 29 33 34 57 59 72 81 82 96 114 116 134 194 196 197 200 204 213 218]
[0 20 27 29 33 34 57 59 72 81 82 96 114 116 134 194 196 197 200 204 213 217 218]
[0 20 27 29 33 34 57 59 72 81 82 96 114 116 134 194 196 197 200 204 206 213 218]
[0 20 27 29 33 34 57 59 72 81 82 96 114 116 134 194 196 197 200 204 206 213 217 218]
[0 20 27 29 33 34 57 59 72 81 82 96 114 116 134 194 196 197 200 204 206 208 212 213 218]
[0 20 27 29 33 34 57 59 72 81 82 96 114 116 134 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 29 33 34 57 59 72 81 82 96 101 236]
[0 20 27 29 33 34 57 59 72 81 82 96 101 134 236]
[0 20 27 29 33 34 57 59 72 81 82 96 101 134 194 196 197 213 218]
[0 20 27 29 33 34 57 59 72 81 82 96 101 134 194 196 197 213 217 218]
[0 20 27 29 33 34 57 59 72 81 82 96 101 134 194 196 197 206 213 218]
[0 20 27 29 33 34 57 59 72 81 82 96 101 134 194 196 197 206 213 217 218]
[0 20 27 29 33 34 57 59 72 81 82 96 101 134 194 196 197 206 208 212 213 218]
[0 20 27 29 33 34 57 59 72 81 82 96 101 134 194 196 197 206 208 212 213 217 218]
[0 20 27 29 33 34 57 59 72 81 82 96 101 134 194 196 197 200 204 213 218]
[0 20 27 29 33 34 57 59 72 81 82 96 101 134 194 196 197 200 204 213 217 218]
[0 20 27 29 33 34 57 59 72 81 82 96 101 134 194 196 197 200 204 206 213 218]
[0 20 27 29 33 34 57 59 72 81 82 96 101 134 194 196 197 200 204 206 213 217 218]
[0 20 27 29 33 34 57 59 72 81 82 96 101 134 194 196 197 200 204 206 208 212 213 218]
[0 20 27 29 33 34 57 59 72 81 82 96 101 134 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 29 33 34 55 57 197 213 218]
[0 20 27 29 33 34 55 57 197 213 217 218]
[0 20 27 29 33 34 55 57 197 206 213 218]
[0 20 27 29 33 34 55 57 197 206 213 217 218]
[0 20 27 29 33 34 55 57 197 206 208 212 213 218]
[0 20 27 29 33 34 55 57 197 206 208 212 213 217 218]
[0 20 27 29 33 34 55 57 197 200 204 213 218]
[0 20 27 29 33 34 55 57 197 200 204 213 217 218]
[0 20 27 29 33 34 55 57 197 200 204 206 213 218]
[0 20 27 29 33 34 55 57 197 200 204 206 213 217 218]
[0 20 27 29 33 34 55 57 197 200 204 206 208 212 213 218]
[0 20 27 29 33 34 55 57 197 200 204 206 208 212 213 217 218]
[0 20 27 29 33 34 55 57 59 82 194 196 197 213 218]
[0 20 27 29 33 34 55 57 59 82 194 196 197 213 217 218]
[0 20 27 29 33 34 55 57 59 82 194 196 197 206 213 218]
[0 20 27 29 33 34 55 57 59 82 194 196 197 206 213 217 218]
[0 20 27 29 33 34 55 57 59 82 194 196 197 206 208 212 213 218]
[0 20 27 29 33 34 55 57 59 82 194 196 197 206 208 212 213 217 218]
[0 20 27 29 33 34 55 57 59 82 194 196 197 200 204 213 218]
[0 20 27 29 33 34 55 57 59 82 194 196 197 200 204 213 217 218]
[0 20 27 29 33 34 55 57 59 82 194 196 197 200 204 206 213 218]
[0 20 27 29 33 34 55 57 59 82 194 196 197 200 204 206 213 217 218]
[0 20 27 29 33 34 55 57 59 82 194 196 197 200 204 206 208 212 213 218]
[0 20 27 29 33 34 55 57 59 82 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 29 33 34 55 57 59 82 185 194 196 197 213 218]
[0 20 27 29 33 34 55 57 59 82 185 194 196 197 213 217 218]
[0 20 27 29 33 34 55 57 59 82 185 194 196 197 206 213 218]
[0 20 27 29 33 34 55 57 59 82 185 194 196 197 206 213 217 218]
[0 20 27 29 33 34 55 57 59 82 185 194 196 197 206 208 212 213 218]
[0 20 27 29 33 34 55 57 59 82 185 194 196 197 206 208 212 213 217 218]
[0 20 27 29 33 34 55 57 59 82 185 194 196 197 200 204 213 218]
[0 20 27 29 33 34 55 57 59 82 185 194 196 197 200 204 213 217 218]
[0 20 27 29 33 34 55 57 59 82 185 194 196 197 200 204 206 213 218]
[0 20 27 29 33 34 55 57 59 82 185 194 196 197 200 204 206 213 217 218]
[0 20 27 29 33 34 55 57 59 82 185 194 196 197 200 204 206 208 212 213 218]
[0 20 27 29 33 34 55 57 59 82 185 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 29 33 34 55 57 59 82 185 189 193 194 196 197 213 218]
[0 20 27 29 33 34 55 57 59 82 185 189 193 194 196 197 213 217 218]
[0 20 27 29 33 34 55 57 59 82 185 189 193 194 196 197 206 213 218]
[0 20 27 29 33 34 55 57 59 82 185 189 193 194 196 197 206 213 217 218]
[0 20 27 29 33 34 55 57 59 82 185 189 193 194 196 197 206 208 212 213 218]
[0 20 27 29 33 34 55 57 59 82 185 189 193 194 196 197 206 208 212 213 217 218]
[0 20 27 29 33 34 55 57 59 82 185 189 193 194 196 197 200 204 213 218]
[0 20 27 29 33 34 55 57 59 82 185 189 193 194 196 197 200 204 213 217 218]
[0 20 27 29 33 34 55 57 59 82 185 189 193 194 196 197 200 204 206 213 218]
[0 20 27 29 33 34 55 57 59 82 185 189 193 194 196 197 200 204 206 213 217 218]
[0 20 27 29 33 34 55 57 59 82 185 189 193 194 196 197 200 204 206 208 212 213 218]
[0 20 27 29 33 34 55 57 59 82 185 189 193 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 29 33 34 55 57 59 82 96 134 236]
[0 20 27 29 33 34 55 57 59 82 96 134 194 196 197 213 218]
[0 20 27 29 33 34 55 57 59 82 96 134 194 196 197 213 217 218]
[0 20 27 29 33 34 55 57 59 82 96 134 194 196 197 206 213 218]
[0 20 27 29 33 34 55 57 59 82 96 134 194 196 197 206 213 217 218]
[0 20 27 29 33 34 55 57 59 82 96 134 194 196 197 206 208 212 213 218]
[0 20 27 29 33 34 55 57 59 82 96 134 194 196 197 206 208 212 213 217 218]
[0 20 27 29 33 34 55 57 59 82 96 134 194 196 197 200 204 213 218]
[0 20 27 29 33 34 55 57 59 82 96 134 194 196 197 200 204 213 217 218]
[0 20 27 29 33 34 55 57 59 82 96 134 194 196 197 200 204 206 213 218]
[0 20 27 29 33 34 55 57 59 82 96 134 194 196 197 200 204 206 213 217 218]
[0 20 27 29 33 34 55 57 59 82 96 134 194 196 197 200 204 206 208 212 213 218]
[0 20 27 29 33 34 55 57 59 82 96 134 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 29 33 34 55 57 59 82 96 114 116 236]
[0 20 27 29 33 34 55 57 59 82 96 114 116 134 236]
[0 20 27 29 33 34 55 57 59 82 96 114 116 134 194 196 197 213 218]
[0 20 27 29 33 34 55 57 59 82 96 114 116 134 194 196 197 213 217 218]
[0 20 27 29 33 34 55 57 59 82 96 114 116 134 194 196 197 206 213 218]
[0 20 27 29 33 34 55 57 59 82 96 114 116 134 194 196 197 206 213 217 218]
[0 20 27 29 33 34 55 57 59 82 96 114 116 134 194 196 197 206 208 212 213 218]
[0 20 27 29 33 34 55 57 59 82 96 114 116 134 194 196 197 206 208 212 213 217 218]
[0 20 27 29 33 34 55 57 59 82 96 114 116 134 194 196 197 200 204 213 218]
[0 20 27 29 33 34 55 57 59 82 96 114 116 134 194 196 197 200 204 213 217 218]
[0 20 27 29 33 34 55 57 59 82 96 114 116 134 194 196 197 200 204 206 213 218]
[0 20 27 29 33 34 55 57 59 82 96 114 116 134 194 196 197 200 204 206 213 217 218]
[0 20 27 29 33 34 55 57 59 82 96 114 116 134 194 196 197 200 204 206 208 212 213 218]
[0 20 27 29 33 34 55 57 59 82 96 114 116 134 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 29 33 34 55 57 59 82 96 101 236]
[0 20 27 29 33 34 55 57 59 82 96 101 134 236]
[0 20 27 29 33 34 55 57 59 82 96 101 134 194 196 197 213 218]
[0 20 27 29 33 34 55 57 59 82 96 101 134 194 196 197 213 217 218]
[0 20 27 29 33 34 55 57 59 82 96 101 134 194 196 197 206 213 218]
[0 20 27 29 33 34 55 57 59 82 96 101 134 194 196 197 206 213 217 218]
[0 20 27 29 33 34 55 57 59 82 96 101 134 194 196 197 206 208 212 213 218]
[0 20 27 29 33 34 55 57 59 82 96 101 134 194 196 197 206 208 212 213 217 218]
[0 20 27 29 33 34 55 57 59 82 96 101 134 194 196 197 200 204 213 218]
[0 20 27 29 33 34 55 57 59 82 96 101 134 194 196 197 200 204 213 217 218]
[0 20 27 29 33 34 55 57 59 82 96 101 134 194 196 197 200 204 206 213 218]
[0 20 27 29 33 34 55 57 59 82 96 101 134 194 196 197 200 204 206 213 217 218]
[0 20 27 29 33 34 55 57 59 82 96 101 134 194 196 197 200 204 206 208 212 213 218]
[0 20 27 29 33 34 55 57 59 82 96 101 134 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 29 33 34 55 57 59 72 81 82 194 196 197 213 218]
[0 20 27 29 33 34 55 57 59 72 81 82 194 196 197 213 217 218]
[0 20 27 29 33 34 55 57 59 72 81 82 194 196 197 206 213 218]
[0 20 27 29 33 34 55 57 59 72 81 82 194 196 197 206 213 217 218]
[0 20 27 29 33 34 55 57 59 72 81 82 194 196 197 206 208 212 213 218]
[0 20 27 29 33 34 55 57 59 72 81 82 194 196 197 206 208 212 213 217 218]
[0 20 27 29 33 34 55 57 59 72 81 82 194 196 197 200 204 213 218]
[0 20 27 29 33 34 55 57 59 72 81 82 194 196 197 200 204 213 217 218]
[0 20 27 29 33 34 55 57 59 72 81 82 194 196 197 200 204 206 213 218]
[0 20 27 29 33 34 55 57 59 72 81 82 194 196 197 200 204 206 213 217 218]
[0 20 27 29 33 34 55 57 59 72 81 82 194 196 197 200 204 206 208 212 213 218]
[0 20 27 29 33 34 55 57 59 72 81 82 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 29 33 34 55 57 59 72 81 82 185 194 196 197 213 218]
[0 20 27 29 33 34 55 57 59 72 81 82 185 194 196 197 213 217 218]
[0 20 27 29 33 34 55 57 59 72 81 82 185 194 196 197 206 213 218]
[0 20 27 29 33 34 55 57 59 72 81 82 185 194 196 197 206 213 217 218]
[0 20 27 29 33 34 55 57 59 72 81 82 185 194 196 197 206 208 212 213 218]
[0 20 27 29 33 34 55 57 59 72 81 82 185 194 196 197 206 208 212 213 217 218]
[0 20 27 29 33 34 55 57 59 72 81 82 185 194 196 197 200 204 213 218]
[0 20 27 29 33 34 55 57 59 72 81 82 185 194 196 197 200 204 213 217 218]
[0 20 27 29 33 34 55 57 59 72 81 82 185 194 196 197 200 204 206 213 218]
[0 20 27 29 33 34 55 57 59 72 81 82 185 194 196 197 200 204 206 213 217 218]
[0 20 27 29 33 34 55 57 59 72 81 82 185 194 196 197 200 204 206 208 212 213 218]
[0 20 27 29 33 34 55 57 59 72 81 82 185 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 29 33 34 55 57 59 72 81 82 185 189 193 194 196 197 213 218]
[0 20 27 29 33 34 55 57 59 72 81 82 185 189 193 194 196 197 213 217 218]
[0 20 27 29 33 34 55 57 59 72 81 82 185 189 193 194 196 197 206 213 218]
[0 20 27 29 33 34 55 57 59 72 81 82 185 189 193 194 196 197 206 213 217 218]
[0 20 27 29 33 34 55 57 59 72 81 82 185 189 193 194 196 197 206 208 212 213 218]
[0 20 27 29 33 34 55 57 59 72 81 82 185 189 193 194 196 197 206 208 212 213 217 218]
[0 20 27 29 33 34 55 57 59 72 81 82 185 189 193 194 196 197 200 204 213 218]
[0 20 27 29 33 34 55 57 59 72 81 82 185 189 193 194 196 197 200 204 213 217 218]
[0 20 27 29 33 34 55 57 59 72 81 82 185 189 193 194 196 197 200 204 206 213 218]
[0 20 27 29 33 34 55 57 59 72 81 82 185 189 193 194 196 197 200 204 206 213 217 218]
[0 20 27 29 33 34 55 57 59 72 81 82 185 189 193 194 196 197 200 204 206 208 212 213 218]
[0 20 27 29 33 34 55 57 59 72 81 82 185 189 193 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 29 33 34 55 57 59 72 81 82 96 134 236]
[0 20 27 29 33 34 55 57 59 72 81 82 96 134 194 196 197 213 218]
[0 20 27 29 33 34 55 57 59 72 81 82 96 134 194 196 197 213 217 218]
[0 20 27 29 33 34 55 57 59 72 81 82 96 134 194 196 197 206 213 218]
[0 20 27 29 33 34 55 57 59 72 81 82 96 134 194 196 197 206 213 217 218]
[0 20 27 29 33 34 55 57 59 72 81 82 96 134 194 196 197 206 208 212 213 218]
[0 20 27 29 33 34 55 57 59 72 81 82 96 134 194 196 197 206 208 212 213 217 218]
[0 20 27 29 33 34 55 57 59 72 81 82 96 134 194 196 197 200 204 213 218]
[0 20 27 29 33 34 55 57 59 72 81 82 96 134 194 196 197 200 204 213 217 218]
[0 20 27 29 33 34 55 57 59 72 81 82 96 134 194 196 197 200 204 206 213 218]
[0 20 27 29 33 34 55 57 59 72 81 82 96 134 194 196 197 200 204 206 213 217 218]
[0 20 27 29 33 34 55 57 59 72 81 82 96 134 194 196 197 200 204 206 208 212 213 218]
[0 20 27 29 33 34 55 57 59 72 81 82 96 134 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 29 33 34 55 57 59 72 81 82 96 114 116 236]
[0 20 27 29 33 34 55 57 59 72 81 82 96 114 116 134 236]
[0 20 27 29 33 34 55 57 59 72 81 82 96 114 116 134 194 196 197 213 218]
[0 20 27 29 33 34 55 57 59 72 81 82 96 114 116 134 194 196 197 213 217 218]
[0 20 27 29 33 34 55 57 59 72 81 82 96 114 116 134 194 196 197 206 213 218]
[0 20 27 29 33 34 55 57 59 72 81 82 96 114 116 134 194 196 197 206 213 217 218]
[0 20 27 29 33 34 55 57 59 72 81 82 96 114 116 134 194 196 197 206 208 212 213 218]
[0 20 27 29 33 34 55 57 59 72 81 82 96 114 116 134 194 196 197 206 208 212 213 217 218]
[0 20 27 29 33 34 55 57 59 72 81 82 96 114 116 134 194 196 197 200 204 213 218]
[0 20 27 29 33 34 55 57 59 72 81 82 96 114 116 134 194 196 197 200 204 213 217 218]
[0 20 27 29 33 34 55 57 59 72 81 82 96 114 116 134 194 196 197 200 204 206 213 218]
[0 20 27 29 33 34 55 57 59 72 81 82 96 114 116 134 194 196 197 200 204 206 213 217 218]
[0 20 27 29 33 34 55 57 59 72 81 82 96 114 116 134 194 196 197 200 204 206 208 212 213 218]
[0 20 27 29 33 34 55 57 59 72 81 82 96 114 116 134 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 29 33 34 55 57 59 72 81 82 96 101 236]
[0 20 27 29 33 34 55 57 59 72 81 82 96 101 134 236]
[0 20 27 29 33 34 55 57 59 72 81 82 96 101 134 194 196 197 213 218]
[0 20 27 29 33 34 55 57 59 72 81 82 96 101 134 194 196 197 213 217 218]
[0 20 27 29 33 34 55 57 59 72 81 82 96 101 134 194 196 197 206 213 218]
[0 20 27 29 33 34 55 57 59 72 81 82 96 101 134 194 196 197 206 213 217 218]
[0 20 27 29 33 34 55 57 59 72 81 82 96 101 134 194 196 197 206 208 212 213 218]
[0 20 27 29 33 34 55 57 59 72 81 82 96 101 134 194 196 197 206 208 212 213 217 218]
[0 20 27 29 33 34 55 57 59 72 81 82 96 101 134 194 196 197 200 204 213 218]
[0 20 27 29 33 34 55 57 59 72 81 82 96 101 134 194 196 197 200 204 213 217 218]
[0 20 27 29 33 34 55 57 59 72 81 82 96 101 134 194 196 197 200 204 206 213 218]
[0 20 27 29 33 34 55 57 59 72 81 82 96 101 134 194 196 197 200 204 206 213 217 218]
[0 20 27 29 33 34 55 57 59 72 81 82 96 101 134 194 196 197 200 204 206 208 212 213 218]
[0 20 27 29 33 34 55 57 59 72 81 82 96 101 134 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 29 33 34 51 53 57 197 213 218]
[0 20 27 29 33 34 51 53 57 197 213 217 218]
[0 20 27 29 33 34 51 53 57 197 206 213 218]
[0 20 27 29 33 34 51 53 57 197 206 213 217 218]
[0 20 27 29 33 34 51 53 57 197 206 208 212 213 218]
[0 20 27 29 33 34 51 53 57 197 206 208 212 213 217 218]
[0 20 27 29 33 34 51 53 57 197 200 204 213 218]
[0 20 27 29 33 34 51 53 57 197 200 204 213 217 218]
[0 20 27 29 33 34 51 53 57 197 200 204 206 213 218]
[0 20 27 29 33 34 51 53 57 197 200 204 206 213 217 218]
[0 20 27 29 33 34 51 53 57 197 200 204 206 208 212 213 218]
[0 20 27 29 33 34 51 53 57 197 200 204 206 208 212 213 217 218]
[0 20 27 29 33 34 51 53 57 59 82 194 196 197 213 218]
[0 20 27 29 33 34 51 53 57 59 82 194 196 197 213 217 218]
[0 20 27 29 33 34 51 53 57 59 82 194 196 197 206 213 218]
[0 20 27 29 33 34 51 53 57 59 82 194 196 197 206 213 217 218]
[0 20 27 29 33 34 51 53 57 59 82 194 196 197 206 208 212 213 218]
[0 20 27 29 33 34 51 53 57 59 82 194 196 197 206 208 212 213 217 218]
[0 20 27 29 33 34 51 53 57 59 82 194 196 197 200 204 213 218]
[0 20 27 29 33 34 51 53 57 59 82 194 196 197 200 204 213 217 218]
[0 20 27 29 33 34 51 53 57 59 82 194 196 197 200 204 206 213 218]
[0 20 27 29 33 34 51 53 57 59 82 194 196 197 200 204 206 213 217 218]
[0 20 27 29 33 34 51 53 57 59 82 194 196 197 200 204 206 208 212 213 218]
[0 20 27 29 33 34 51 53 57 59 82 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 29 33 34 51 53 57 59 82 185 194 196 197 213 218]
[0 20 27 29 33 34 51 53 57 59 82 185 194 196 197 213 217 218]
[0 20 27 29 33 34 51 53 57 59 82 185 194 196 197 206 213 218]
[0 20 27 29 33 34 51 53 57 59 82 185 194 196 197 206 213 217 218]
[0 20 27 29 33 34 51 53 57 59 82 185 194 196 197 206 208 212 213 218]
[0 20 27 29 33 34 51 53 57 59 82 185 194 196 197 206 208 212 213 217 218]
[0 20 27 29 33 34 51 53 57 59 82 185 194 196 197 200 204 213 218]
[0 20 27 29 33 34 51 53 57 59 82 185 194 196 197 200 204 213 217 218]
[0 20 27 29 33 34 51 53 57 59 82 185 194 196 197 200 204 206 213 218]
[0 20 27 29 33 34 51 53 57 59 82 185 194 196 197 200 204 206 213 217 218]
[0 20 27 29 33 34 51 53 57 59 82 185 194 196 197 200 204 206 208 212 213 218]
[0 20 27 29 33 34 51 53 57 59 82 185 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 29 33 34 51 53 57 59 82 185 189 193 194 196 197 213 218]
[0 20 27 29 33 34 51 53 57 59 82 185 189 193 194 196 197 213 217 218]
[0 20 27 29 33 34 51 53 57 59 82 185 189 193 194 196 197 206 213 218]
[0 20 27 29 33 34 51 53 57 59 82 185 189 193 194 196 197 206 213 217 218]
[0 20 27 29 33 34 51 53 57 59 82 185 189 193 194 196 197 206 208 212 213 218]
[0 20 27 29 33 34 51 53 57 59 82 185 189 193 194 196 197 206 208 212 213 217 218]
[0 20 27 29 33 34 51 53 57 59 82 185 189 193 194 196 197 200 204 213 218]
[0 20 27 29 33 34 51 53 57 59 82 185 189 193 194 196 197 200 204 213 217 218]
[0 20 27 29 33 34 51 53 57 59 82 185 189 193 194 196 197 200 204 206 213 218]
[0 20 27 29 33 34 51 53 57 59 82 185 189 193 194 196 197 200 204 206 213 217 218]
[0 20 27 29 33 34 51 53 57 59 82 185 189 193 194 196 197 200 204 206 208 212 213 218]
[0 20 27 29 33 34 51 53 57 59 82 185 189 193 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 29 33 34 51 53 57 59 82 96 134 236]
[0 20 27 29 33 34 51 53 57 59 82 96 134 194 196 197 213 218]
[0 20 27 29 33 34 51 53 57 59 82 96 134 194 196 197 213 217 218]
[0 20 27 29 33 34 51 53 57 59 82 96 134 194 196 197 206 213 218]
[0 20 27 29 33 34 51 53 57 59 82 96 134 194 196 197 206 213 217 218]
[0 20 27 29 33 34 51 53 57 59 82 96 134 194 196 197 206 208 212 213 218]
[0 20 27 29 33 34 51 53 57 59 82 96 134 194 196 197 206 208 212 213 217 218]
[0 20 27 29 33 34 51 53 57 59 82 96 134 194 196 197 200 204 213 218]
[0 20 27 29 33 34 51 53 57 59 82 96 134 194 196 197 200 204 213 217 218]
[0 20 27 29 33 34 51 53 57 59 82 96 134 194 196 197 200 204 206 213 218]
[0 20 27 29 33 34 51 53 57 59 82 96 134 194 196 197 200 204 206 213 217 218]
[0 20 27 29 33 34 51 53 57 59 82 96 134 194 196 197 200 204 206 208 212 213 218]
[0 20 27 29 33 34 51 53 57 59 82 96 134 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 29 33 34 51 53 57 59 82 96 114 116 236]
[0 20 27 29 33 34 51 53 57 59 82 96 114 116 134 236]
[0 20 27 29 33 34 51 53 57 59 82 96 114 116 134 194 196 197 213 218]
[0 20 27 29 33 34 51 53 57 59 82 96 114 116 134 194 196 197 213 217 218]
[0 20 27 29 33 34 51 53 57 59 82 96 114 116 134 194 196 197 206 213 218]
[0 20 27 29 33 34 51 53 57 59 82 96 114 116 134 194 196 197 206 213 217 218]
[0 20 27 29 33 34 51 53 57 59 82 96 114 116 134 194 196 197 206 208 212 213 218]
[0 20 27 29 33 34 51 53 57 59 82 96 114 116 134 194 196 197 206 208 212 213 217 218]
[0 20 27 29 33 34 51 53 57 59 82 96 114 116 134 194 196 197 200 204 213 218]
[0 20 27 29 33 34 51 53 57 59 82 96 114 116 134 194 196 197 200 204 213 217 218]
[0 20 27 29 33 34 51 53 57 59 82 96 114 116 134 194 196 197 200 204 206 213 218]
[0 20 27 29 33 34 51 53 57 59 82 96 114 116 134 194 196 197 200 204 206 213 217 218]
[0 20 27 29 33 34 51 53 57 59 82 96 114 116 134 194 196 197 200 204 206 208 212 213 218]
[0 20 27 29 33 34 51 53 57 59 82 96 114 116 134 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 29 33 34 51 53 57 59 82 96 101 236]
[0 20 27 29 33 34 51 53 57 59 82 96 101 134 236]
[0 20 27 29 33 34 51 53 57 59 82 96 101 134 194 196 197 213 218]
[0 20 27 29 33 34 51 53 57 59 82 96 101 134 194 196 197 213 217 218]
[0 20 27 29 33 34 51 53 57 59 82 96 101 134 194 196 197 206 213 218]
[0 20 27 29 33 34 51 53 57 59 82 96 101 134 194 196 197 206 213 217 218]
[0 20 27 29 33 34 51 53 57 59 82 96 101 134 194 196 197 206 208 212 213 218]
[0 20 27 29 33 34 51 53 57 59 82 96 101 134 194 196 197 206 208 212 213 217 218]
[0 20 27 29 33 34 51 53 57 59 82 96 101 134 194 196 197 200 204 213 218]
[0 20 27 29 33 34 51 53 57 59 82 96 101 134 194 196 197 200 204 213 217 218]
[0 20 27 29 33 34 51 53 57 59 82 96 101 134 194 196 197 200 204 206 213 218]
[0 20 27 29 33 34 51 53 57 59 82 96 101 134 194 196 197 200 204 206 213 217 218]
[0 20 27 29 33 34 51 53 57 59 82 96 101 134 194 196 197 200 204 206 208 212 213 218]
[0 20 27 29 33 34 51 53 57 59 82 96 101 134 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 194 196 197 213 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 194 196 197 213 217 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 194 196 197 206 213 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 194 196 197 206 213 217 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 194 196 197 206 208 212 213 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 194 196 197 206 208 212 213 217 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 194 196 197 200 204 213 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 194 196 197 200 204 213 217 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 194 196 197 200 204 206 213 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 194 196 197 200 204 206 213 217 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 194 196 197 200 204 206 208 212 213 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 185 194 196 197 213 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 185 194 196 197 213 217 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 185 194 196 197 206 213 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 185 194 196 197 206 213 217 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 185 194 196 197 206 208 212 213 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 185 194 196 197 206 208 212 213 217 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 185 194 196 197 200 204 213 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 185 194 196 197 200 204 213 217 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 185 194 196 197 200 204 206 213 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 185 194 196 197 200 204 206 213 217 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 185 194 196 197 200 204 206 208 212 213 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 185 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 185 189 193 194 196 197 213 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 185 189 193 194 196 197 213 217 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 185 189 193 194 196 197 206 213 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 185 189 193 194 196 197 206 213 217 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 185 189 193 194 196 197 206 208 212 213 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 185 189 193 194 196 197 206 208 212 213 217 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 185 189 193 194 196 197 200 204 213 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 185 189 193 194 196 197 200 204 213 217 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 185 189 193 194 196 197 200 204 206 213 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 185 189 193 194 196 197 200 204 206 213 217 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 185 189 193 194 196 197 200 204 206 208 212 213 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 185 189 193 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 96 134 236]
[0 20 27 29 33 34 51 53 57 59 72 81 82 96 134 194 196 197 213 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 96 134 194 196 197 213 217 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 96 134 194 196 197 206 213 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 96 134 194 196 197 206 213 217 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 96 134 194 196 197 206 208 212 213 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 96 134 194 196 197 206 208 212 213 217 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 96 134 194 196 197 200 204 213 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 96 134 194 196 197 200 204 213 217 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 96 134 194 196 197 200 204 206 213 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 96 134 194 196 197 200 204 206 213 217 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 96 134 194 196 197 200 204 206 208 212 213 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 96 134 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 96 114 116 236]
[0 20 27 29 33 34 51 53 57 59 72 81 82 96 114 116 134 236]
[0 20 27 29 33 34 51 53 57 59 72 81 82 96 114 116 134 194 196 197 213 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 96 114 116 134 194 196 197 213 217 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 96 114 116 134 194 196 197 206 213 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 96 114 116 134 194 196 197 206 213 217 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 96 114 116 134 194 196 197 206 208 212 213 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 96 114 116 134 194 196 197 206 208 212 213 217 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 96 114 116 134 194 196 197 200 204 213 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 96 114 116 134 194 196 197 200 204 213 217 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 96 114 116 134 194 196 197 200 204 206 213 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 96 114 116 134 194 196 197 200 204 206 213 217 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 96 114 116 134 194 196 197 200 204 206 208 212 213 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 96 114 116 134 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 96 101 236]
[0 20 27 29 33 34 51 53 57 59 72 81 82 96 101 134 236]
[0 20 27 29 33 34 51 53 57 59 72 81 82 96 101 134 194 196 197 213 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 96 101 134 194 196 197 213 217 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 96 101 134 194 196 197 206 213 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 96 101 134 194 196 197 206 213 217 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 96 101 134 194 196 197 206 208 212 213 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 96 101 134 194 196 197 206 208 212 213 217 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 96 101 134 194 196 197 200 204 213 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 96 101 134 194 196 197 200 204 213 217 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 96 101 134 194 196 197 200 204 206 213 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 96 101 134 194 196 197 200 204 206 213 217 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 96 101 134 194 196 197 200 204 206 208 212 213 218]
[0 20 27 29 33 34 51 53 57 59 72 81 82 96 101 134 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 29 33 34 51 53 55 57 197 213 218]
[0 20 27 29 33 34 51 53 55 57 197 213 217 218]
[0 20 27 29 33 34 51 53 55 57 197 206 213 218]
[0 20 27 29 33 34 51 53 55 57 197 206 213 217 218]
[0 20 27 29 33 34 51 53 55 57 197 206 208 212 213 218]
[0 20 27 29 33 34 51 53 55 57 197 206 208 212 213 217 218]
[0 20 27 29 33 34 51 53 55 57 197 200 204 213 218]
[0 20 27 29 33 34 51 53 55 57 197 200 204 213 217 218]
[0 20 27 29 33 34 51 53 55 57 197 200 204 206 213 218]
[0 20 27 29 33 34 51 53 55 57 197 200 204 206 213 217 218]
[0 20 27 29 33 34 51 53 55 57 197 200 204 206 208 212 213 218]
[0 20 27 29 33 34 51 53 55 57 197 200 204 206 208 212 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 82 194 196 197 213 218]
[0 20 27 29 33 34 51 53 55 57 59 82 194 196 197 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 82 194 196 197 206 213 218]
[0 20 27 29 33 34 51 53 55 57 59 82 194 196 197 206 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 82 194 196 197 206 208 212 213 218]
[0 20 27 29 33 34 51 53 55 57 59 82 194 196 197 206 208 212 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 82 194 196 197 200 204 213 218]
[0 20 27 29 33 34 51 53 55 57 59 82 194 196 197 200 204 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 82 194 196 197 200 204 206 213 218]
[0 20 27 29 33 34 51 53 55 57 59 82 194 196 197 200 204 206 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 82 194 196 197 200 204 206 208 212 213 218]
[0 20 27 29 33 34 51 53 55 57 59 82 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 82 185 194 196 197 213 218]
[0 20 27 29 33 34 51 53 55 57 59 82 185 194 196 197 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 82 185 194 196 197 206 213 218]
[0 20 27 29 33 34 51 53 55 57 59 82 185 194 196 197 206 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 82 185 194 196 197 206 208 212 213 218]
[0 20 27 29 33 34 51 53 55 57 59 82 185 194 196 197 206 208 212 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 82 185 194 196 197 200 204 213 218]
[0 20 27 29 33 34 51 53 55 57 59 82 185 194 196 197 200 204 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 82 185 194 196 197 200 204 206 213 218]
[0 20 27 29 33 34 51 53 55 57 59 82 185 194 196 197 200 204 206 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 82 185 194 196 197 200 204 206 208 212 213 218]
[0 20 27 29 33 34 51 53 55 57 59 82 185 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 82 185 189 193 194 196 197 213 218]
[0 20 27 29 33 34 51 53 55 57 59 82 185 189 193 194 196 197 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 82 185 189 193 194 196 197 206 213 218]
[0 20 27 29 33 34 51 53 55 57 59 82 185 189 193 194 196 197 206 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 82 185 189 193 194 196 197 206 208 212 213 218]
[0 20 27 29 33 34 51 53 55 57 59 82 185 189 193 194 196 197 206 208 212 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 82 185 189 193 194 196 197 200 204 213 218]
[0 20 27 29 33 34 51 53 55 57 59 82 185 189 193 194 196 197 200 204 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 82 185 189 193 194 196 197 200 204 206 213 218]
[0 20 27 29 33 34 51 53 55 57 59 82 185 189 193 194 196 197 200 204 206 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 82 185 189 193 194 196 197 200 204 206 208 212 213 218]
[0 20 27 29 33 34 51 53 55 57 59 82 185 189 193 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 82 96 134 236]
[0 20 27 29 33 34 51 53 55 57 59 82 96 134 194 196 197 213 218]
[0 20 27 29 33 34 51 53 55 57 59 82 96 134 194 196 197 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 82 96 134 194 196 197 206 213 218]
[0 20 27 29 33 34 51 53 55 57 59 82 96 134 194 196 197 206 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 82 96 134 194 196 197 206 208 212 213 218]
[0 20 27 29 33 34 51 53 55 57 59 82 96 134 194 196 197 206 208 212 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 82 96 134 194 196 197 200 204 213 218]
[0 20 27 29 33 34 51 53 55 57 59 82 96 134 194 196 197 200 204 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 82 96 134 194 196 197 200 204 206 213 218]
[0 20 27 29 33 34 51 53 55 57 59 82 96 134 194 196 197 200 204 206 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 82 96 134 194 196 197 200 204 206 208 212 213 218]
[0 20 27 29 33 34 51 53 55 57 59 82 96 134 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 82 96 114 116 236]
[0 20 27 29 33 34 51 53 55 57 59 82 96 114 116 134 236]
[0 20 27 29 33 34 51 53 55 57 59 82 96 114 116 134 194 196 197 213 218]
[0 20 27 29 33 34 51 53 55 57 59 82 96 114 116 134 194 196 197 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 82 96 114 116 134 194 196 197 206 213 218]
[0 20 27 29 33 34 51 53 55 57 59 82 96 114 116 134 194 196 197 206 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 82 96 114 116 134 194 196 197 206 208 212 213 218]
[0 20 27 29 33 34 51 53 55 57 59 82 96 114 116 134 194 196 197 206 208 212 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 82 96 114 116 134 194 196 197 200 204 213 218]
[0 20 27 29 33 34 51 53 55 57 59 82 96 114 116 134 194 196 197 200 204 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 82 96 114 116 134 194 196 197 200 204 206 213 218]
[0 20 27 29 33 34 51 53 55 57 59 82 96 114 116 134 194 196 197 200 204 206 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 82 96 114 116 134 194 196 197 200 204 206 208 212 213 218]
[0 20 27 29 33 34 51 53 55 57 59 82 96 114 116 134 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 82 96 101 236]
[0 20 27 29 33 34 51 53 55 57 59 82 96 101 134 236]
[0 20 27 29 33 34 51 53 55 57 59 82 96 101 134 194 196 197 213 218]
[0 20 27 29 33 34 51 53 55 57 59 82 96 101 134 194 196 197 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 82 96 101 134 194 196 197 206 213 218]
[0 20 27 29 33 34 51 53 55 57 59 82 96 101 134 194 196 197 206 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 82 96 101 134 194 196 197 206 208 212 213 218]
[0 20 27 29 33 34 51 53 55 57 59 82 96 101 134 194 196 197 206 208 212 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 82 96 101 134 194 196 197 200 204 213 218]
[0 20 27 29 33 34 51 53 55 57 59 82 96 101 134 194 196 197 200 204 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 82 96 101 134 194 196 197 200 204 206 213 218]
[0 20 27 29 33 34 51 53 55 57 59 82 96 101 134 194 196 197 200 204 206 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 82 96 101 134 194 196 197 200 204 206 208 212 213 218]
[0 20 27 29 33 34 51 53 55 57 59 82 96 101 134 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 194 196 197 213 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 194 196 197 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 194 196 197 206 213 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 194 196 197 206 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 194 196 197 206 208 212 213 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 194 196 197 206 208 212 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 194 196 197 200 204 213 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 194 196 197 200 204 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 194 196 197 200 204 206 213 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 194 196 197 200 204 206 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 194 196 197 200 204 206 208 212 213 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 185 194 196 197 213 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 185 194 196 197 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 185 194 196 197 206 213 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 185 194 196 197 206 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 185 194 196 197 206 208 212 213 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 185 194 196 197 206 208 212 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 185 194 196 197 200 204 213 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 185 194 196 197 200 204 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 185 194 196 197 200 204 206 213 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 185 194 196 197 200 204 206 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 185 194 196 197 200 204 206 208 212 213 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 185 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 185 189 193 194 196 197 213 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 185 189 193 194 196 197 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 185 189 193 194 196 197 206 213 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 185 189 193 194 196 197 206 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 185 189 193 194 196 197 206 208 212 213 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 185 189 193 194 196 197 206 208 212 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 185 189 193 194 196 197 200 204 213 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 185 189 193 194 196 197 200 204 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 185 189 193 194 196 197 200 204 206 213 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 185 189 193 194 196 197 200 204 206 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 185 189 193 194 196 197 200 204 206 208 212 213 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 185 189 193 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 96 134 236]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 96 134 194 196 197 213 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 96 134 194 196 197 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 96 134 194 196 197 206 213 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 96 134 194 196 197 206 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 96 134 194 196 197 206 208 212 213 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 96 134 194 196 197 206 208 212 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 96 134 194 196 197 200 204 213 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 96 134 194 196 197 200 204 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 96 134 194 196 197 200 204 206 213 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 96 134 194 196 197 200 204 206 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 96 134 194 196 197 200 204 206 208 212 213 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 96 134 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 96 114 116 236]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 96 114 116 134 236]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 96 114 116 134 194 196 197 213 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 96 114 116 134 194 196 197 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 96 114 116 134 194 196 197 206 213 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 96 114 116 134 194 196 197 206 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 96 114 116 134 194 196 197 206 208 212 213 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 96 114 116 134 194 196 197 206 208 212 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 96 114 116 134 194 196 197 200 204 213 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 96 114 116 134 194 196 197 200 204 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 96 114 116 134 194 196 197 200 204 206 213 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 96 114 116 134 194 196 197 200 204 206 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 96 114 116 134 194 196 197 200 204 206 208 212 213 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 96 114 116 134 194 196 197 200 204 206 208 212 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 96 101 236]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 96 101 134 236]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 96 101 134 194 196 197 213 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 96 101 134 194 196 197 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 96 101 134 194 196 197 206 213 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 96 101 134 194 196 197 206 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 96 101 134 194 196 197 206 208 212 213 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 96 101 134 194 196 197 206 208 212 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 96 101 134 194 196 197 200 204 213 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 96 101 134 194 196 197 200 204 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 96 101 134 194 196 197 200 204 206 213 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 96 101 134 194 196 197 200 204 206 213 217 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 96 101 134 194 196 197 200 204 206 208 212 213 218]
[0 20 27 29 33 34 51 53 55 57 59 72 81 82 96 101 134 194 196 197 200 204 206 208 212 213 217 218]
|f185| = list_max([
  list_sum(138, 64, 7, 96);
  list_sum(138, 64, 11, 96);
  list_sum(138, 64, 11, 7, 96);
  list_sum(138, 64, 8, 10, 11, 96);
  list_sum(138, 64, 8, 10, 11, 7, 96);
  list_sum(138, 64, 8, 10, 7, 11, 96);
  list_sum(138, 64, 8, 10, 7, 11, 7, 96);
  list_sum([
    138;
    64;
    8;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum(138, 64, 8, 69, 96, 14, 4, 10, 11, 96);
  list_sum(138, 64, 8, 69, 96, 14, 4, 10, 11, 7, 96);
  list_sum(138, 64, 8, 69, 96, 14, 4, 10, 7, 11, 96);
  list_sum(138, 64, 8, 69, 96, 14, 4, 10, 7, 11, 7, 96);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum(138, 64, 8, 69, 96, 32, 14, 4, 10, 11, 96);
  list_sum(138, 64, 8, 69, 96, 32, 14, 4, 10, 11, 7, 96);
  list_sum(138, 64, 8, 69, 96, 32, 14, 4, 10, 7, 11, 96);
  list_sum(138, 64, 8, 69, 96, 32, 14, 4, 10, 7, 11, 7, 96);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum(138, 64, 8, 69, 96, 19, 8, 0);
  list_sum(138, 64, 8, 69, 96, 19, 8, 14, 4, 10, 11, 96);
  list_sum(138, 64, 8, 69, 96, 19, 8, 14, 4, 10, 11, 7, 96);
  list_sum(138, 64, 8, 69, 96, 19, 8, 14, 4, 10, 7, 11, 96);
  list_sum(138, 64, 8, 69, 96, 19, 8, 14, 4, 10, 7, 11, 7, 96);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    0
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    0
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    0
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    0
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    0
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    0
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    0
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    0
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    0
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum(138, 64, 19, 8, 10, 11, 96);
  list_sum(138, 64, 19, 8, 10, 11, 7, 96);
  list_sum(138, 64, 19, 8, 10, 7, 11, 96);
  list_sum(138, 64, 19, 8, 10, 7, 11, 7, 96);
  list_sum([
    138;
    64;
    19;
    8;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum(138, 64, 19, 8, 69, 96, 14, 4, 10, 11, 96);
  list_sum(138, 64, 19, 8, 69, 96, 14, 4, 10, 11, 7, 96);
  list_sum(138, 64, 19, 8, 69, 96, 14, 4, 10, 7, 11, 96);
  list_sum(138, 64, 19, 8, 69, 96, 14, 4, 10, 7, 11, 7, 96);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum(138, 64, 19, 8, 69, 96, 32, 14, 4, 10, 11, 96);
  list_sum(138, 64, 19, 8, 69, 96, 32, 14, 4, 10, 11, 7, 96);
  list_sum(138, 64, 19, 8, 69, 96, 32, 14, 4, 10, 7, 11, 96);
  list_sum(138, 64, 19, 8, 69, 96, 32, 14, 4, 10, 7, 11, 7, 96);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum(138, 64, 19, 8, 69, 96, 19, 8, 0);
  list_sum(138, 64, 19, 8, 69, 96, 19, 8, 14, 4, 10, 11, 96);
  list_sum(138, 64, 19, 8, 69, 96, 19, 8, 14, 4, 10, 11, 7, 96);
  list_sum(138, 64, 19, 8, 69, 96, 19, 8, 14, 4, 10, 7, 11, 96);
  list_sum(138, 64, 19, 8, 69, 96, 19, 8, 14, 4, 10, 7, 11, 7, 96);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    0
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    0
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    0
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    0
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    0
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    0
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    0
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    0
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    0
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    8;
    0
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    0
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    0
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    0
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    0
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    0
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    0
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    0
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    0
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    0
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    8;
    0
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    0
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    0
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    0
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    0
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    0
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    0
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    0
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    0
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    0
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    19;
    8;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    19;
    8;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    8;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    8;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    19;
    8;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    19;
    8;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    8;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    8;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    32;
    (list_max([
      25 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]));
      39 * (N([ln13; ln2], [(ln2 + 1) != ln13], [0; 0], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1));
    1;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    5;
    (list_max([
      42 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      32 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]));
      46 * (N([ln1; ln6], [ln1 != ln6], [0; 0], [ln1 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    0
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    11;
    7;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    96
  ]);
  list_sum([
    138;
    (list_max([
      63 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]));
      46 * (N([ln4; ln5], [(ln4 + 1) < ln5], [0; m[60]], [ln4 + 1; ln5]));
      72 * (N([ln4; m[60]], [(ln4 + 1) < m[60]], [0; m[60]], [ln4 + 1; m[60]]))
    ])) + (list_max(1, 1, 1));
    10;
    ((70 + |f53|) * (N([ln3; m[60]], [(ln3 + 1) < m[60]], [0; m[60]], [ln3 + 1; m[60]]))) + 1;
    4;
    64;
    ((16 + |f27|) * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0 + 1; m[60]], [ln6 + 1; m[60]]))) + 1;
    1;
    19;
    8;
    69;
    (list_max([
      38 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      52 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      29 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      43 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      44 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]));
      58 * (N([ln13; ln2], [(ln2 + 1) != ln13], [51; 1], [ln13; ln2 + 1]))
    ])) + (list_max(1, 1, 1, 1, 1, 1));
    1;
    96;
    19;
    (35 * (N([ln1; ln6], [i32.eqz(ln1 == ln6)], [0; 0], [ln1 + 1; ln6]))) + 1;
    8;
    14;
    4;
    10;
    (list_max([
      16 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      29 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    7;
    (list_max([
      17 * (N([ln2; ln6], [(ln6 + 1) < ln2], [0; 0], [ln2; ln6 + 1]));
      30 * (N([ln6; m[60]], [(ln6 + 1) < m[60]], [0; m[60]], [ln6 + 1; m[60]]))
    ])) + (list_max(1, 1));
    1;
    11;
    7;
    96
  ])
])
