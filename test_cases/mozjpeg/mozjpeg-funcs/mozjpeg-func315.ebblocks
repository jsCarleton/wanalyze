ebb entry:  0
  ebb type:   block
  ebb blocks: [0 1]
  ebb cost:   12
  ebb exits:  [2 68]
  ebb succs:  [2 68]
ebb entry:  2
  ebb type:   loop
  ebb blocks: [2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66]
  ebb cost:   (list_max([
  58 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  277 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  288 * (N([ln12], [(ln12 + 1) < 256], [0], [ln12 + 1]));
  214 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  214 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  213 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  123 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  127 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  158 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  158 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  157 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  225 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  225 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  224 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  134 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  138 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  169 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  169 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  168 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  146 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  146 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  145 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  204 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  204 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  203 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  157 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  157 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  156 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  215 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  215 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  214 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  45 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  264 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  275 * (N([ln12], [(ln12 + 1) < 256], [0], [ln12 + 1]));
  201 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  201 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  200 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  110 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  114 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  145 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  145 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  144 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  212 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  212 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  211 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  121 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  125 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  156 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  156 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  155 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  133 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  133 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  132 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  191 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  191 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  190 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  144 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  144 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  143 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  202 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  202 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  201 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  67 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  286 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  297 * (N([ln12], [(ln12 + 1) < 256], [0], [ln12 + 1]));
  223 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  223 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  222 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  132 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  136 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  167 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  167 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  166 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  234 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  234 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  233 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  143 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  147 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  178 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  178 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  177 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  155 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  155 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  154 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  213 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  213 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  212 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  166 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  166 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  165 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  224 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  224 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]));
  223 * (N([ln12; m[60]], [(ln12 + 1) < m[60]], [0; m[60]], [ln12 + 1; m[60]]))
])) + (list_max(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1))
  ebb exits:  [67]
  ebb succs:  []
  93 paths to exit 67
  [2 3 6 7 8 9 10 11 12 64 65 66]
  [2 3 6 7 8 9 10 11 12 57 59 60 61 62 65 66]
  [2 3 6 7 8 9 10 11 12 57 58 59 60 61 62 65 66]
  [2 3 6 7 8 9 10 11 12 31 33 34 35 36 37 38 40 41 42 45 48 49 53 54 55 65 66]
  [2 3 6 7 8 9 10 11 12 31 33 34 35 36 37 38 40 41 42 45 46 49 53 54 55 65 66]
  [2 3 6 7 8 9 10 11 12 31 33 34 35 36 37 38 40 41 42 43 49 53 54 55 65 66]
  [2 3 6 7 8 9 10 11 12 31 33 34 35 36 37 38 51 53 54 55 65 66]
  [2 3 6 7 8 9 10 11 12 31 33 34 35 36 37 38 51 52 53 54 55 65 66]
  [2 3 6 7 8 9 10 11 12 31 33 34 35 36 37 38 41 42 45 48 49 53 54 55 65 66]
  [2 3 6 7 8 9 10 11 12 31 33 34 35 36 37 38 41 42 45 46 49 53 54 55 65 66]
  [2 3 6 7 8 9 10 11 12 31 33 34 35 36 37 38 41 42 43 49 53 54 55 65 66]
  [2 3 6 7 8 9 10 11 12 31 32 33 34 35 36 37 38 40 41 42 45 48 49 53 54 55 65 66]
  [2 3 6 7 8 9 10 11 12 31 32 33 34 35 36 37 38 40 41 42 45 46 49 53 54 55 65 66]
  [2 3 6 7 8 9 10 11 12 31 32 33 34 35 36 37 38 40 41 42 43 49 53 54 55 65 66]
  [2 3 6 7 8 9 10 11 12 31 32 33 34 35 36 37 38 51 53 54 55 65 66]
  [2 3 6 7 8 9 10 11 12 31 32 33 34 35 36 37 38 51 52 53 54 55 65 66]
  [2 3 6 7 8 9 10 11 12 31 32 33 34 35 36 37 38 41 42 45 48 49 53 54 55 65 66]
  [2 3 6 7 8 9 10 11 12 31 32 33 34 35 36 37 38 41 42 45 46 49 53 54 55 65 66]
  [2 3 6 7 8 9 10 11 12 31 32 33 34 35 36 37 38 41 42 43 49 53 54 55 65 66]
  [2 3 6 7 8 9 10 11 12 14 16 17 19 20 23 26 27 28 29 65 66]
  [2 3 6 7 8 9 10 11 12 14 16 17 19 20 23 24 27 28 29 65 66]
  [2 3 6 7 8 9 10 11 12 14 16 17 19 20 21 27 28 29 65 66]
  [2 3 6 7 8 9 10 11 12 14 16 17 18 19 20 23 26 27 28 29 65 66]
  [2 3 6 7 8 9 10 11 12 14 16 17 18 19 20 23 24 27 28 29 65 66]
  [2 3 6 7 8 9 10 11 12 14 16 17 18 19 20 21 27 28 29 65 66]
  [2 3 6 7 8 9 10 11 12 14 15 16 17 19 20 23 26 27 28 29 65 66]
  [2 3 6 7 8 9 10 11 12 14 15 16 17 19 20 23 24 27 28 29 65 66]
  [2 3 6 7 8 9 10 11 12 14 15 16 17 19 20 21 27 28 29 65 66]
  [2 3 6 7 8 9 10 11 12 14 15 16 17 18 19 20 23 26 27 28 29 65 66]
  [2 3 6 7 8 9 10 11 12 14 15 16 17 18 19 20 23 24 27 28 29 65 66]
  [2 3 6 7 8 9 10 11 12 14 15 16 17 18 19 20 21 27 28 29 65 66]
  [2 3 4 7 8 9 10 11 12 64 65 66]
  [2 3 4 7 8 9 10 11 12 57 59 60 61 62 65 66]
  [2 3 4 7 8 9 10 11 12 57 58 59 60 61 62 65 66]
  [2 3 4 7 8 9 10 11 12 31 33 34 35 36 37 38 40 41 42 45 48 49 53 54 55 65 66]
  [2 3 4 7 8 9 10 11 12 31 33 34 35 36 37 38 40 41 42 45 46 49 53 54 55 65 66]
  [2 3 4 7 8 9 10 11 12 31 33 34 35 36 37 38 40 41 42 43 49 53 54 55 65 66]
  [2 3 4 7 8 9 10 11 12 31 33 34 35 36 37 38 51 53 54 55 65 66]
  [2 3 4 7 8 9 10 11 12 31 33 34 35 36 37 38 51 52 53 54 55 65 66]
  [2 3 4 7 8 9 10 11 12 31 33 34 35 36 37 38 41 42 45 48 49 53 54 55 65 66]
  [2 3 4 7 8 9 10 11 12 31 33 34 35 36 37 38 41 42 45 46 49 53 54 55 65 66]
  [2 3 4 7 8 9 10 11 12 31 33 34 35 36 37 38 41 42 43 49 53 54 55 65 66]
  [2 3 4 7 8 9 10 11 12 31 32 33 34 35 36 37 38 40 41 42 45 48 49 53 54 55 65 66]
  [2 3 4 7 8 9 10 11 12 31 32 33 34 35 36 37 38 40 41 42 45 46 49 53 54 55 65 66]
  [2 3 4 7 8 9 10 11 12 31 32 33 34 35 36 37 38 40 41 42 43 49 53 54 55 65 66]
  [2 3 4 7 8 9 10 11 12 31 32 33 34 35 36 37 38 51 53 54 55 65 66]
  [2 3 4 7 8 9 10 11 12 31 32 33 34 35 36 37 38 51 52 53 54 55 65 66]
  [2 3 4 7 8 9 10 11 12 31 32 33 34 35 36 37 38 41 42 45 48 49 53 54 55 65 66]
  [2 3 4 7 8 9 10 11 12 31 32 33 34 35 36 37 38 41 42 45 46 49 53 54 55 65 66]
  [2 3 4 7 8 9 10 11 12 31 32 33 34 35 36 37 38 41 42 43 49 53 54 55 65 66]
  [2 3 4 7 8 9 10 11 12 14 16 17 19 20 23 26 27 28 29 65 66]
  [2 3 4 7 8 9 10 11 12 14 16 17 19 20 23 24 27 28 29 65 66]
  [2 3 4 7 8 9 10 11 12 14 16 17 19 20 21 27 28 29 65 66]
  [2 3 4 7 8 9 10 11 12 14 16 17 18 19 20 23 26 27 28 29 65 66]
  [2 3 4 7 8 9 10 11 12 14 16 17 18 19 20 23 24 27 28 29 65 66]
  [2 3 4 7 8 9 10 11 12 14 16 17 18 19 20 21 27 28 29 65 66]
  [2 3 4 7 8 9 10 11 12 14 15 16 17 19 20 23 26 27 28 29 65 66]
  [2 3 4 7 8 9 10 11 12 14 15 16 17 19 20 23 24 27 28 29 65 66]
  [2 3 4 7 8 9 10 11 12 14 15 16 17 19 20 21 27 28 29 65 66]
  [2 3 4 7 8 9 10 11 12 14 15 16 17 18 19 20 23 26 27 28 29 65 66]
  [2 3 4 7 8 9 10 11 12 14 15 16 17 18 19 20 23 24 27 28 29 65 66]
  [2 3 4 7 8 9 10 11 12 14 15 16 17 18 19 20 21 27 28 29 65 66]
  [2 3 4 5 6 7 8 9 10 11 12 64 65 66]
  [2 3 4 5 6 7 8 9 10 11 12 57 59 60 61 62 65 66]
  [2 3 4 5 6 7 8 9 10 11 12 57 58 59 60 61 62 65 66]
  [2 3 4 5 6 7 8 9 10 11 12 31 33 34 35 36 37 38 40 41 42 45 48 49 53 54 55 65 66]
  [2 3 4 5 6 7 8 9 10 11 12 31 33 34 35 36 37 38 40 41 42 45 46 49 53 54 55 65 66]
  [2 3 4 5 6 7 8 9 10 11 12 31 33 34 35 36 37 38 40 41 42 43 49 53 54 55 65 66]
  [2 3 4 5 6 7 8 9 10 11 12 31 33 34 35 36 37 38 51 53 54 55 65 66]
  [2 3 4 5 6 7 8 9 10 11 12 31 33 34 35 36 37 38 51 52 53 54 55 65 66]
  [2 3 4 5 6 7 8 9 10 11 12 31 33 34 35 36 37 38 41 42 45 48 49 53 54 55 65 66]
  [2 3 4 5 6 7 8 9 10 11 12 31 33 34 35 36 37 38 41 42 45 46 49 53 54 55 65 66]
  [2 3 4 5 6 7 8 9 10 11 12 31 33 34 35 36 37 38 41 42 43 49 53 54 55 65 66]
  [2 3 4 5 6 7 8 9 10 11 12 31 32 33 34 35 36 37 38 40 41 42 45 48 49 53 54 55 65 66]
  [2 3 4 5 6 7 8 9 10 11 12 31 32 33 34 35 36 37 38 40 41 42 45 46 49 53 54 55 65 66]
  [2 3 4 5 6 7 8 9 10 11 12 31 32 33 34 35 36 37 38 40 41 42 43 49 53 54 55 65 66]
  [2 3 4 5 6 7 8 9 10 11 12 31 32 33 34 35 36 37 38 51 53 54 55 65 66]
  [2 3 4 5 6 7 8 9 10 11 12 31 32 33 34 35 36 37 38 51 52 53 54 55 65 66]
  [2 3 4 5 6 7 8 9 10 11 12 31 32 33 34 35 36 37 38 41 42 45 48 49 53 54 55 65 66]
  [2 3 4 5 6 7 8 9 10 11 12 31 32 33 34 35 36 37 38 41 42 45 46 49 53 54 55 65 66]
  [2 3 4 5 6 7 8 9 10 11 12 31 32 33 34 35 36 37 38 41 42 43 49 53 54 55 65 66]
  [2 3 4 5 6 7 8 9 10 11 12 14 16 17 19 20 23 26 27 28 29 65 66]
  [2 3 4 5 6 7 8 9 10 11 12 14 16 17 19 20 23 24 27 28 29 65 66]
  [2 3 4 5 6 7 8 9 10 11 12 14 16 17 19 20 21 27 28 29 65 66]
  [2 3 4 5 6 7 8 9 10 11 12 14 16 17 18 19 20 23 26 27 28 29 65 66]
  [2 3 4 5 6 7 8 9 10 11 12 14 16 17 18 19 20 23 24 27 28 29 65 66]
  [2 3 4 5 6 7 8 9 10 11 12 14 16 17 18 19 20 21 27 28 29 65 66]
  [2 3 4 5 6 7 8 9 10 11 12 14 15 16 17 19 20 23 26 27 28 29 65 66]
  [2 3 4 5 6 7 8 9 10 11 12 14 15 16 17 19 20 23 24 27 28 29 65 66]
  [2 3 4 5 6 7 8 9 10 11 12 14 15 16 17 19 20 21 27 28 29 65 66]
  [2 3 4 5 6 7 8 9 10 11 12 14 15 16 17 18 19 20 23 26 27 28 29 65 66]
  [2 3 4 5 6 7 8 9 10 11 12 14 15 16 17 18 19 20 23 24 27 28 29 65 66]
  [2 3 4 5 6 7 8 9 10 11 12 14 15 16 17 18 19 20 21 27 28 29 65 66]
  93 loop paths
  [2 3 6 7 8 9 10 11 12 64 65]  [2 3 6 7 8 9 10 11 12 57 59 60 61 62 65]  [2 3 6 7 8 9 10 11 12 57 58 59 60 61 62 65]  [2 3 6 7 8 9 10 11 12 31 33 34 35 36 37 38 40 41 42 45 48 49 53 54 55 65]  [2 3 6 7 8 9 10 11 12 31 33 34 35 36 37 38 40 41 42 45 46 49 53 54 55 65]  [2 3 6 7 8 9 10 11 12 31 33 34 35 36 37 38 40 41 42 43 49 53 54 55 65]  [2 3 6 7 8 9 10 11 12 31 33 34 35 36 37 38 51 53 54 55 65]  [2 3 6 7 8 9 10 11 12 31 33 34 35 36 37 38 51 52 53 54 55 65]  [2 3 6 7 8 9 10 11 12 31 33 34 35 36 37 38 41 42 45 48 49 53 54 55 65]  [2 3 6 7 8 9 10 11 12 31 33 34 35 36 37 38 41 42 45 46 49 53 54 55 65]  [2 3 6 7 8 9 10 11 12 31 33 34 35 36 37 38 41 42 43 49 53 54 55 65]  [2 3 6 7 8 9 10 11 12 31 32 33 34 35 36 37 38 40 41 42 45 48 49 53 54 55 65]  [2 3 6 7 8 9 10 11 12 31 32 33 34 35 36 37 38 40 41 42 45 46 49 53 54 55 65]  [2 3 6 7 8 9 10 11 12 31 32 33 34 35 36 37 38 40 41 42 43 49 53 54 55 65]  [2 3 6 7 8 9 10 11 12 31 32 33 34 35 36 37 38 51 53 54 55 65]  [2 3 6 7 8 9 10 11 12 31 32 33 34 35 36 37 38 51 52 53 54 55 65]  [2 3 6 7 8 9 10 11 12 31 32 33 34 35 36 37 38 41 42 45 48 49 53 54 55 65]  [2 3 6 7 8 9 10 11 12 31 32 33 34 35 36 37 38 41 42 45 46 49 53 54 55 65]  [2 3 6 7 8 9 10 11 12 31 32 33 34 35 36 37 38 41 42 43 49 53 54 55 65]  [2 3 6 7 8 9 10 11 12 14 16 17 19 20 23 26 27 28 29 65]  [2 3 6 7 8 9 10 11 12 14 16 17 19 20 23 24 27 28 29 65]  [2 3 6 7 8 9 10 11 12 14 16 17 19 20 21 27 28 29 65]  [2 3 6 7 8 9 10 11 12 14 16 17 18 19 20 23 26 27 28 29 65]  [2 3 6 7 8 9 10 11 12 14 16 17 18 19 20 23 24 27 28 29 65]  [2 3 6 7 8 9 10 11 12 14 16 17 18 19 20 21 27 28 29 65]  [2 3 6 7 8 9 10 11 12 14 15 16 17 19 20 23 26 27 28 29 65]  [2 3 6 7 8 9 10 11 12 14 15 16 17 19 20 23 24 27 28 29 65]  [2 3 6 7 8 9 10 11 12 14 15 16 17 19 20 21 27 28 29 65]  [2 3 6 7 8 9 10 11 12 14 15 16 17 18 19 20 23 26 27 28 29 65]  [2 3 6 7 8 9 10 11 12 14 15 16 17 18 19 20 23 24 27 28 29 65]  [2 3 6 7 8 9 10 11 12 14 15 16 17 18 19 20 21 27 28 29 65]  [2 3 4 7 8 9 10 11 12 64 65]  [2 3 4 7 8 9 10 11 12 57 59 60 61 62 65]  [2 3 4 7 8 9 10 11 12 57 58 59 60 61 62 65]  [2 3 4 7 8 9 10 11 12 31 33 34 35 36 37 38 40 41 42 45 48 49 53 54 55 65]  [2 3 4 7 8 9 10 11 12 31 33 34 35 36 37 38 40 41 42 45 46 49 53 54 55 65]  [2 3 4 7 8 9 10 11 12 31 33 34 35 36 37 38 40 41 42 43 49 53 54 55 65]  [2 3 4 7 8 9 10 11 12 31 33 34 35 36 37 38 51 53 54 55 65]  [2 3 4 7 8 9 10 11 12 31 33 34 35 36 37 38 51 52 53 54 55 65]  [2 3 4 7 8 9 10 11 12 31 33 34 35 36 37 38 41 42 45 48 49 53 54 55 65]  [2 3 4 7 8 9 10 11 12 31 33 34 35 36 37 38 41 42 45 46 49 53 54 55 65]  [2 3 4 7 8 9 10 11 12 31 33 34 35 36 37 38 41 42 43 49 53 54 55 65]  [2 3 4 7 8 9 10 11 12 31 32 33 34 35 36 37 38 40 41 42 45 48 49 53 54 55 65]  [2 3 4 7 8 9 10 11 12 31 32 33 34 35 36 37 38 40 41 42 45 46 49 53 54 55 65]  [2 3 4 7 8 9 10 11 12 31 32 33 34 35 36 37 38 40 41 42 43 49 53 54 55 65]  [2 3 4 7 8 9 10 11 12 31 32 33 34 35 36 37 38 51 53 54 55 65]  [2 3 4 7 8 9 10 11 12 31 32 33 34 35 36 37 38 51 52 53 54 55 65]  [2 3 4 7 8 9 10 11 12 31 32 33 34 35 36 37 38 41 42 45 48 49 53 54 55 65]  [2 3 4 7 8 9 10 11 12 31 32 33 34 35 36 37 38 41 42 45 46 49 53 54 55 65]  [2 3 4 7 8 9 10 11 12 31 32 33 34 35 36 37 38 41 42 43 49 53 54 55 65]  [2 3 4 7 8 9 10 11 12 14 16 17 19 20 23 26 27 28 29 65]  [2 3 4 7 8 9 10 11 12 14 16 17 19 20 23 24 27 28 29 65]  [2 3 4 7 8 9 10 11 12 14 16 17 19 20 21 27 28 29 65]  [2 3 4 7 8 9 10 11 12 14 16 17 18 19 20 23 26 27 28 29 65]  [2 3 4 7 8 9 10 11 12 14 16 17 18 19 20 23 24 27 28 29 65]  [2 3 4 7 8 9 10 11 12 14 16 17 18 19 20 21 27 28 29 65]  [2 3 4 7 8 9 10 11 12 14 15 16 17 19 20 23 26 27 28 29 65]  [2 3 4 7 8 9 10 11 12 14 15 16 17 19 20 23 24 27 28 29 65]  [2 3 4 7 8 9 10 11 12 14 15 16 17 19 20 21 27 28 29 65]  [2 3 4 7 8 9 10 11 12 14 15 16 17 18 19 20 23 26 27 28 29 65]  [2 3 4 7 8 9 10 11 12 14 15 16 17 18 19 20 23 24 27 28 29 65]  [2 3 4 7 8 9 10 11 12 14 15 16 17 18 19 20 21 27 28 29 65]  [2 3 4 5 6 7 8 9 10 11 12 64 65]  [2 3 4 5 6 7 8 9 10 11 12 57 59 60 61 62 65]  [2 3 4 5 6 7 8 9 10 11 12 57 58 59 60 61 62 65]  [2 3 4 5 6 7 8 9 10 11 12 31 33 34 35 36 37 38 40 41 42 45 48 49 53 54 55 65]  [2 3 4 5 6 7 8 9 10 11 12 31 33 34 35 36 37 38 40 41 42 45 46 49 53 54 55 65]  [2 3 4 5 6 7 8 9 10 11 12 31 33 34 35 36 37 38 40 41 42 43 49 53 54 55 65]  [2 3 4 5 6 7 8 9 10 11 12 31 33 34 35 36 37 38 51 53 54 55 65]  [2 3 4 5 6 7 8 9 10 11 12 31 33 34 35 36 37 38 51 52 53 54 55 65]  [2 3 4 5 6 7 8 9 10 11 12 31 33 34 35 36 37 38 41 42 45 48 49 53 54 55 65]  [2 3 4 5 6 7 8 9 10 11 12 31 33 34 35 36 37 38 41 42 45 46 49 53 54 55 65]  [2 3 4 5 6 7 8 9 10 11 12 31 33 34 35 36 37 38 41 42 43 49 53 54 55 65]  [2 3 4 5 6 7 8 9 10 11 12 31 32 33 34 35 36 37 38 40 41 42 45 48 49 53 54 55 65]  [2 3 4 5 6 7 8 9 10 11 12 31 32 33 34 35 36 37 38 40 41 42 45 46 49 53 54 55 65]  [2 3 4 5 6 7 8 9 10 11 12 31 32 33 34 35 36 37 38 40 41 42 43 49 53 54 55 65]  [2 3 4 5 6 7 8 9 10 11 12 31 32 33 34 35 36 37 38 51 53 54 55 65]  [2 3 4 5 6 7 8 9 10 11 12 31 32 33 34 35 36 37 38 51 52 53 54 55 65]  [2 3 4 5 6 7 8 9 10 11 12 31 32 33 34 35 36 37 38 41 42 45 48 49 53 54 55 65]  [2 3 4 5 6 7 8 9 10 11 12 31 32 33 34 35 36 37 38 41 42 45 46 49 53 54 55 65]  [2 3 4 5 6 7 8 9 10 11 12 31 32 33 34 35 36 37 38 41 42 43 49 53 54 55 65]  [2 3 4 5 6 7 8 9 10 11 12 14 16 17 19 20 23 26 27 28 29 65]  [2 3 4 5 6 7 8 9 10 11 12 14 16 17 19 20 23 24 27 28 29 65]  [2 3 4 5 6 7 8 9 10 11 12 14 16 17 19 20 21 27 28 29 65]  [2 3 4 5 6 7 8 9 10 11 12 14 16 17 18 19 20 23 26 27 28 29 65]  [2 3 4 5 6 7 8 9 10 11 12 14 16 17 18 19 20 23 24 27 28 29 65]  [2 3 4 5 6 7 8 9 10 11 12 14 16 17 18 19 20 21 27 28 29 65]  [2 3 4 5 6 7 8 9 10 11 12 14 15 16 17 19 20 23 26 27 28 29 65]  [2 3 4 5 6 7 8 9 10 11 12 14 15 16 17 19 20 23 24 27 28 29 65]  [2 3 4 5 6 7 8 9 10 11 12 14 15 16 17 19 20 21 27 28 29 65]  [2 3 4 5 6 7 8 9 10 11 12 14 15 16 17 18 19 20 23 26 27 28 29 65]  [2 3 4 5 6 7 8 9 10 11 12 14 15 16 17 18 19 20 23 24 27 28 29 65]  [2 3 4 5 6 7 8 9 10 11 12 14 15 16 17 18 19 20 21 27 28 29 65]
  93 post loop exit paths

nested ebbs:
  ebb entry:  2
    ebb type:   block
    ebb blocks: [2 3 4 5 6 7 8 9 10 11 12 13 14 15 16]
    ebb cost:   71
    ebb exits:  [17 31 57 64]
    ebb succs:  [17 31 57 64]
  ebb entry:  17
    ebb type:   loop
    ebb blocks: [17 18 19 20 21 22 23 24 25 26 27 28]
    ebb cost:   (list_max([
  81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
  81 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
  80 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
  139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
  139 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
  138 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
])) + (list_max(1, 1, 1, 1, 1, 1))
    ebb exits:  [29]
    ebb succs:  [29]
    6 paths to exit 29
    [17 19 20 23 26 27 28]
    [17 19 20 23 24 27 28]
    [17 19 20 21 27 28]
    [17 18 19 20 23 26 27 28]
    [17 18 19 20 23 24 27 28]
    [17 18 19 20 21 27 28]
    6 loop paths
    [17 19 20 23 26 27]    [17 19 20 23 24 27]    [17 19 20 21 27]    [17 18 19 20 23 26 27]    [17 18 19 20 23 24 27]    [17 18 19 20 21 27]
    6 post loop exit paths
    [28]    [28]    [28]    [28]    [28]    [28]
  ebb entry:  29
    ebb type:   block
    ebb blocks: [29 30]
    ebb cost:   1
    ebb exits:  [31 65]
    ebb succs:  [31 65]
  ebb entry:  31
    ebb type:   block
    ebb blocks: [31 32 33]
    ebb cost:   26
    ebb exits:  [34]
    ebb succs:  [34]
  ebb entry:  34
    ebb type:   loop
    ebb blocks: [34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54]
    ebb cost:   (list_max([
  149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
  149 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
  148 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
  58 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
  62 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
  93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
  93 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]));
  92 * (N([ln3], [(ln3 + 1) != 64], [0], [ln3 + 1]))
])) + (list_max(1, 1, 1, 1, 1, 1, 1, 1))
    ebb exits:  [55]
    ebb succs:  [55]
    8 paths to exit 55
    [34 35 36 37 38 40 41 42 45 48 49 53 54]
    [34 35 36 37 38 40 41 42 45 46 49 53 54]
    [34 35 36 37 38 40 41 42 43 49 53 54]
    [34 35 36 37 38 51 53 54]
    [34 35 36 37 38 51 52 53 54]
    [34 35 36 37 38 41 42 45 48 49 53 54]
    [34 35 36 37 38 41 42 45 46 49 53 54]
    [34 35 36 37 38 41 42 43 49 53 54]
    8 loop paths
    [34 35 36 37 38 40 41 42 45 48 49 53]    [34 35 36 37 38 40 41 42 45 46 49 53]    [34 35 36 37 38 40 41 42 43 49 53]    [34 35 36 37 38 51 53]    [34 35 36 37 38 51 52 53]    [34 35 36 37 38 41 42 45 48 49 53]    [34 35 36 37 38 41 42 45 46 49 53]    [34 35 36 37 38 41 42 43 49 53]
    8 post loop exit paths
    [54]    [54]    [54]    [54]    [54]    [54]    [54]    [54]
  ebb entry:  55
    ebb type:   block
    ebb blocks: [55 56]
    ebb cost:   1
    ebb exits:  [57 65]
    ebb succs:  [57 65]
  ebb entry:  57
    ebb type:   block
    ebb blocks: [57 58 59]
    ebb cost:   28
    ebb exits:  [60]
    ebb succs:  [60]
  ebb entry:  60
    ebb type:   loop
    ebb blocks: [60 61]
    ebb cost:   (210 * (N([ln4], [(ln4 + 1) != 8], [0 + 1], [ln4 + 1]))) + 1
    ebb exits:  [62]
    ebb succs:  [62]
    1 paths to exit 62
    [60 61]
    1 loop paths
    [60]
    1 post loop exit paths
    [61]
  ebb entry:  62
    ebb type:   block
    ebb blocks: [62 63]
    ebb cost:   1
    ebb exits:  [64 65]
    ebb succs:  [64 65]
  ebb entry:  64
    ebb type:   block
    ebb blocks: [64]
    ebb cost:   10
    ebb exits:  [65]
    ebb succs:  [65]
  ebb entry:  65
    ebb type:   block
    ebb blocks: [65 66]
    ebb cost:   13
    ebb exits:  [2 67]
    ebb succs:  [2 67]
ebb entry:  67
  ebb type:   block
  ebb blocks: [67]
  ebb cost:   1
  ebb exits:  [68]
  ebb succs:  [68]
ebb entry:  68
  ebb type:   block
  ebb blocks: [68 69]
  ebb cost:   1
  ebb exits:  [69]
  ebb succs:  []
