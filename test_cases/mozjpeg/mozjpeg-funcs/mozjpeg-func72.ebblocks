ebb entry:  0
  ebb type:   block
  ebb blocks: [0]
  ebb cost:   46
  ebb exits:  [1]
  ebb succs:  [1]
ebb entry:  1
  ebb type:   loop
  ebb blocks: [1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51]
  ebb cost:   list_MAX([
  (list_sum([
    116;
    (33 * (N([ln3], [(ln3 + 1) != 257], [0 + 1], [ln3 + 1]))) + 1;
    (22 * (N([ln3; ln5], [((ln3 shl 2) + (ln5 + 1040)) > -1], [((select(((i32.eqz(0)) | (0 > 1000000000)) | (0 == (select((i32.eqz(0)) | (0 > 1000000000), 0, -1))), 0, -1)) + 1) + 1; R(27, 43, i32, 1028, 255, gn0 - 2128)], [m[0] + 1; ln5]))) + 1
  ])) * (N([ln6], [(ln6 + 1) != 257], [0 + 1], [0]));
  (list_sum([
    115;
    (33 * (N([ln3], [(ln3 + 1) != 257], [0 + 1], [ln3 + 1]))) + 1
  ])) * (N([ln6], [(ln6 + 1) != 257], [0 + 1], [0]));
  (list_sum([
    117;
    (33 * (N([ln3], [(ln3 + 1) != 257], [0 + 1], [ln3 + 1]))) + 1;
    (23 * (N([ln3; ln5], [((ln3 shl 2) + (ln5 + 1040)) > -1], [(0 + 1) + 1; R(27, 43, i32, 1028, 255, gn0 - 2128)], [m[0] + 1; ln5]))) + 1;
    (22 * (N([ln3; ln5], [((ln3 shl 2) + (ln5 + 1040)) > -1], [((select(((i32.eqz(0)) | (0 > 1000000000)) | (0 == (select((i32.eqz(0)) | (0 > 1000000000), 0, -1))), 0, -1)) + 1) + 1; R(27, 43, i32, 1028, 255, gn0 - 2128)], [m[0] + 1; ln5]))) + 1
  ])) * (N([ln6], [(ln6 + 1) != 257], [0 + 1], [0]));
  (list_sum([
    116;
    (33 * (N([ln3], [(ln3 + 1) != 257], [0 + 1], [ln3 + 1]))) + 1;
    (23 * (N([ln3; ln5], [((ln3 shl 2) + (ln5 + 1040)) > -1], [(0 + 1) + 1; R(27, 43, i32, 1028, 255, gn0 - 2128)], [m[0] + 1; ln5]))) + 1
  ])) * (N([ln6], [(ln6 + 1) != 257], [0 + 1], [0]));
  36 * (N([ln6], [(ln6 + 1) != 257], [0 + 1], [ln6 + 1]))
])
  ebb exits:  [55 56]
  ebb succs:  [55 56]
  12 paths to exit 55
  [1 2 3 4 5 6 7 11 12 13 14 15 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 34 35 36 37 38]
  [1 2 3 4 5 6 7 11 12 13 14 15 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38]
  [1 2 3 4 5 6 7 11 12 13 14 15 16 25 26 27 28 29 30 31 32 34 35 36 37 38]
  [1 2 3 4 5 6 7 11 12 13 14 15 16 25 26 27 28 29 30 31 32 33 34 35 36 37 38]
  [1 2 3 4 5 6 7 8 10 11 12 13 14 15 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 34 35 36 37 38]
  [1 2 3 4 5 6 7 8 10 11 12 13 14 15 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38]
  [1 2 3 4 5 6 7 8 10 11 12 13 14 15 16 25 26 27 28 29 30 31 32 34 35 36 37 38]
  [1 2 3 4 5 6 7 8 10 11 12 13 14 15 16 25 26 27 28 29 30 31 32 33 34 35 36 37 38]
  [1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 34 35 36 37 38]
  [1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38]
  [1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 25 26 27 28 29 30 31 32 34 35 36 37 38]
  [1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 25 26 27 28 29 30 31 32 33 34 35 36 37 38]
  0 paths to exit 56

  5 loop paths
  [1 2 3 4 5 40 45 46 47 48 49]  [1 2 3 4 5 40 45]  [1 2 3 4 5 40 41 42 43 44 45 46 47 48 49]  [1 2 3 4 5 40 41 42 43 44 45]  [1]
  12 post loop exit paths
  [6 7 11 12 13 14 15 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 34 35 36 37 38]  [6 7 11 12 13 14 15 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38]  [6 7 11 12 13 14 15 16 25 26 27 28 29 30 31 32 34 35 36 37 38]  [6 7 11 12 13 14 15 16 25 26 27 28 29 30 31 32 33 34 35 36 37 38]  [6 7 8 10 11 12 13 14 15 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 34 35 36 37 38]  [6 7 8 10 11 12 13 14 15 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38]  [6 7 8 10 11 12 13 14 15 16 25 26 27 28 29 30 31 32 34 35 36 37 38]  [6 7 8 10 11 12 13 14 15 16 25 26 27 28 29 30 31 32 33 34 35 36 37 38]  [6 7 8 9 10 11 12 13 14 15 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 34 35 36 37 38]  [6 7 8 9 10 11 12 13 14 15 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38]  [6 7 8 9 10 11 12 13 14 15 16 25 26 27 28 29 30 31 32 34 35 36 37 38]  [6 7 8 9 10 11 12 13 14 15 16 25 26 27 28 29 30 31 32 33 34 35 36 37 38]
nested ebbs:
  ebb entry:  1
    ebb type:   block
    ebb blocks: [1 2]
    ebb cost:   36
    ebb exits:  [3]
    ebb succs:  [3]
  ebb entry:  3
    ebb type:   loop
    ebb blocks: [3 4]
    ebb cost:   (33 * (N([ln3], [(ln3 + 1) != 257], [0 + 1], [ln3 + 1]))) + 1
    ebb exits:  [5]
    ebb succs:  [5]
    1 paths to exit 5
    [3 4]
    1 loop paths
    [3]
    1 post loop exit paths
    [4]
  ebb entry:  5
    ebb type:   block
    ebb blocks: [5 6]
    ebb cost:   7
    ebb exits:  [7 40]
    ebb succs:  [7 40]
  ebb entry:  7
    ebb type:   loop
    ebb blocks: [7 8 9 10 11 12]
    ebb cost:   (list_max([
  43 * (N([ln3], [(ln3 + 1) != 257], [0], [ln3 + 1]));
  33 * (N([ln3], [(ln3 + 1) != 257], [0], [ln3 + 1]));
  17 * (N([ln3], [(ln3 + 1) != 257], [0], [ln3 + 1]))
])) + 1
    ebb exits:  [13]
    ebb succs:  [13]
    3 paths to exit 13
    [7 11 12]
    [7 8 10 11 12]
    [7 8 9 10 11 12]
    3 loop paths
    [7 11]    [7 8 10 11]    [7 8 9 10 11]
    3 post loop exit paths
    [12]    [12]    [12]
  ebb entry:  13
    ebb type:   block
    ebb blocks: [13]
    ebb cost:   3
    ebb exits:  [14]
    ebb succs:  [14]
  ebb entry:  14
    ebb type:   loop
    ebb blocks: [14 15 16 17 18 19 20 21 22 23 24 25 26]
    ebb cost:   list_MAX([
  (list_sum([
    35;
    list_MAX([
      (list_sum([
        36;
        (14 * (N([m[0]], [i32.eqz(m[0])], [0], [m[0]]))) + 1
      ])) * (N([ln5; ln6], [ln6 + (ln5 + 2080)], [R(27, 43, i32, 1028, 255, gn0 - 2128); 32 + -2], [ln5; ln6]))
    ])
  ])) * (N([pn2], [pn2 > 17], [32], [pn2 + -1]));
  34 * (N([pn2], [pn2 > 17], [32], [pn2 + -1]))
])
    ebb exits:  [27]
    ebb succs:  [27]
    2 paths to exit 27
    [14 15 18 19 20 21 22 23 24 25 26]
    [14 15 16 25 26]
    2 loop paths
    [14 15 18 19 20 21 22 23 24 25]    [14 15 16 25]
    2 post loop exit paths
    [26]    [26]
nested ebbs:
    ebb entry:  14
      ebb type:   block
      ebb blocks: [14 15 16 17 18]
      ebb cost:   25
      ebb exits:  [19 25]
      ebb succs:  [19 25]
    ebb entry:  19
      ebb type:   loop
      ebb blocks: [19 20 21 22 23]
      ebb cost:   list_MAX([
  (list_sum([
    36;
    (14 * (N([m[0]], [i32.eqz(m[0])], [0], [m[0]]))) + 1
  ])) * (N([ln5; ln6], [ln6 + (ln5 + 2080)], [R(27, 43, i32, 1028, 255, gn0 - 2128); 32 + -2], [ln5; ln6]))
])
      ebb exits:  [24]
      ebb succs:  [24]
      1 paths to exit 24
      [19 20 21 22 23]
      1 loop paths
      [19 20 21 22]
      1 post loop exit paths
      [23]
nested ebbs:
      ebb entry:  19
        ebb type:   block
        ebb blocks: [19]
        ebb cost:   3
        ebb exits:  [20]
        ebb succs:  [20]
      ebb entry:  20
        ebb type:   loop
        ebb blocks: [20 21]
        ebb cost:   (14 * (N([m[0]], [i32.eqz(m[0])], [0], [m[0]]))) + 1
        ebb exits:  [22]
        ebb succs:  [22]
        1 paths to exit 22
        [20 21]
        1 loop paths
        [20]
        1 post loop exit paths
        [21]
      ebb entry:  22
        ebb type:   block
        ebb blocks: [22 23]
        ebb cost:   33
        ebb exits:  [19 24]
        ebb succs:  [19 24]
    ebb entry:  24
      ebb type:   block
      ebb blocks: [24]
      ebb cost:   1
      ebb exits:  [25]
      ebb succs:  [25]
    ebb entry:  25
      ebb type:   block
      ebb blocks: [25 26]
      ebb cost:   9
      ebb exits:  [14 27]
      ebb succs:  [14 27]
  ebb entry:  27
    ebb type:   block
    ebb blocks: [27]
    ebb cost:   3
    ebb exits:  [28]
    ebb succs:  [28]
  ebb entry:  28
    ebb type:   loop
    ebb blocks: [28 29]
    ebb cost:   (15 * (N([m[0]], [i32.eqz(m[0])], [(((0 + -2) + 1) + 2) + -1], [m[0]]))) + 1
    ebb exits:  [30]
    ebb succs:  [30]
    1 paths to exit 30
    [28 29]
    1 loop paths
    [28]
    1 post loop exit paths
    [29]
  ebb entry:  30
    ebb type:   block
    ebb blocks: [30]
    ebb cost:   24
    ebb exits:  [31]
    ebb succs:  [31]
  ebb entry:  31
    ebb type:   loop
    ebb blocks: [31 32 33 34 35 36 37]
    ebb cost:   list_MAX([
  (list_sum([
    11;
    (list_max([
      28 * (N([ln3], [(ln3 + 1) != 256], [0], [ln3 + 1]));
      18 * (N([ln3], [(ln3 + 1) != 256], [0], [ln3 + 1]))
    ])) + 1
  ])) * (N([ln6], [(ln6 + 1) != 33], [1], [ln6 + 1]));
  (list_sum([
    11;
    (list_max([
      28 * (N([ln3], [(ln3 + 1) != 256], [0], [ln3 + 1]));
      18 * (N([ln3], [(ln3 + 1) != 256], [0], [ln3 + 1]))
    ])) + 1
  ])) * (N([ln6], [(ln6 + 1) != 33], [1], [ln6 + 1]))
])
    ebb exits:  [38]
    ebb succs:  [38]
    2 paths to exit 38
    [31 32 34 35 36 37]
    [31 32 33 34 35 36 37]
    2 loop paths
    [31 32 34 35 36]    [31 32 33 34 35 36]
    2 post loop exit paths
    [37]    [37]
nested ebbs:
    ebb entry:  31
      ebb type:   block
      ebb blocks: [31]
      ebb cost:   3
      ebb exits:  [32]
      ebb succs:  [32]
    ebb entry:  32
      ebb type:   loop
      ebb blocks: [32 33 34 35]
      ebb cost:   (list_max([
  28 * (N([ln3], [(ln3 + 1) != 256], [0], [ln3 + 1]));
  18 * (N([ln3], [(ln3 + 1) != 256], [0], [ln3 + 1]))
])) + 1
      ebb exits:  [36]
      ebb succs:  [36]
      2 paths to exit 36
      [32 34 35]
      [32 33 34 35]
      2 loop paths
      [32 34]      [32 33 34]
      2 post loop exit paths
      [35]      [35]
    ebb entry:  36
      ebb type:   block
      ebb blocks: [36 37]
      ebb cost:   8
      ebb exits:  [31 38]
      ebb succs:  [31 38]
  ebb entry:  38
    ebb type:   block
    ebb blocks: [38 39]
    ebb cost:   8
    ebb exits:  [40 55]
    ebb succs:  [40 55]
  ebb entry:  40
    ebb type:   block
    ebb blocks: [40 41]
    ebb cost:   43
    ebb exits:  [42 45]
    ebb succs:  [42 45]
  ebb entry:  42
    ebb type:   loop
    ebb blocks: [42 43]
    ebb cost:   (23 * (N([ln3; ln5], [((ln3 shl 2) + (ln5 + 1040)) > -1], [(0 + 1) + 1; R(27, 43, i32, 1028, 255, gn0 - 2128)], [m[0] + 1; ln5]))) + 1
    ebb exits:  [44]
    ebb succs:  [44]
    1 paths to exit 44
    [42 43]
    1 loop paths
    [42]
    1 post loop exit paths
    [43]
  ebb entry:  44
    ebb type:   block
    ebb blocks: [44]
    ebb cost:   1
    ebb exits:  [45]
    ebb succs:  [45]
  ebb entry:  45
    ebb type:   block
    ebb blocks: [45 46]
    ebb cost:   29
    ebb exits:  [1 47]
    ebb succs:  [1 47]
  ebb entry:  47
    ebb type:   loop
    ebb blocks: [47 48]
    ebb cost:   (22 * (N([ln3; ln5], [((ln3 shl 2) + (ln5 + 1040)) > -1], [((select(((i32.eqz(0)) | (0 > 1000000000)) | (0 == (select((i32.eqz(0)) | (0 > 1000000000), 0, -1))), 0, -1)) + 1) + 1; R(27, 43, i32, 1028, 255, gn0 - 2128)], [m[0] + 1; ln5]))) + 1
    ebb exits:  [49]
    ebb succs:  [49]
    1 paths to exit 49
    [47 48]
    1 loop paths
    [47]
    1 post loop exit paths
    [48]
  ebb entry:  49
    ebb type:   block
    ebb blocks: [49 50 51]
    ebb cost:   1
    ebb exits:  [1 56]
    ebb succs:  [1 56]
ebb entry:  52
  ebb type:   block
  ebb blocks: [52 53 54]
  ebb cost:   1
  ebb exits:  [54 56]
  ebb succs:  [56]
ebb entry:  55
  ebb type:   block
  ebb blocks: [55]
  ebb cost:   0
  ebb exits:  []
  ebb succs:  []
ebb entry:  56
  ebb type:   block
  ebb blocks: [56]
  ebb cost:   0
  ebb exits:  []
  ebb succs:  []
ebb costs:
[0]: 46
[1]: list_MAX((list_sum(116, ((33 * N([ln3], [((ln3 + 1) != 257)], [(0 + 1)], [(ln3 + 1)])) + 1), ((22 * N([ln3; ln5], [(((ln3 shl 2) + (ln5 + 1040)) > -1)], [((select(((i32.eqz0 | (0 > 1000000000)) | (0 == select((i32.eqz0 | (0 > 1000000000)), 0, -1))), 0, -1) + 1) + 1); R(27, 43, i32, 1028, 255, (gn0 - 2128))], [(m[0] + 1); ln5])) + 1)) * N([ln6], [((ln6 + 1) != 257)], [(0 + 1)], [0])), (list_sum(115, ((33 * N([ln3], [((ln3 + 1) != 257)], [(0 + 1)], [(ln3 + 1)])) + 1)) * N([ln6], [((ln6 + 1) != 257)], [(0 + 1)], [0])), (list_sum(117, ((33 * N([ln3], [((ln3 + 1) != 257)], [(0 + 1)], [(ln3 + 1)])) + 1), ((23 * N([ln3; ln5], [(((ln3 shl 2) + (ln5 + 1040)) > -1)], [((0 + 1) + 1); R(27, 43, i32, 1028, 255, (gn0 - 2128))], [(m[0] + 1); ln5])) + 1), ((22 * N([ln3; ln5], [(((ln3 shl 2) + (ln5 + 1040)) > -1)], [((select(((i32.eqz0 | (0 > 1000000000)) | (0 == select((i32.eqz0 | (0 > 1000000000)), 0, -1))), 0, -1) + 1) + 1); R(27, 43, i32, 1028, 255, (gn0 - 2128))], [(m[0] + 1); ln5])) + 1)) * N([ln6], [((ln6 + 1) != 257)], [(0 + 1)], [0])), (list_sum(116, ((33 * N([ln3], [((ln3 + 1) != 257)], [(0 + 1)], [(ln3 + 1)])) + 1), ((23 * N([ln3; ln5], [(((ln3 shl 2) + (ln5 + 1040)) > -1)], [((0 + 1) + 1); R(27, 43, i32, 1028, 255, (gn0 - 2128))], [(m[0] + 1); ln5])) + 1)) * N([ln6], [((ln6 + 1) != 257)], [(0 + 1)], [0])), (36 * N([ln6], [((ln6 + 1) != 257)], [(0 + 1)], [(ln6 + 1)])))
[1]: 36
[3]: ((33 * N([ln3], [((ln3 + 1) != 257)], [(0 + 1)], [(ln3 + 1)])) + 1)
[5]: 7
[7]: (list_max((43 * N([ln3], [((ln3 + 1) != 257)], [0], [(ln3 + 1)])), (33 * N([ln3], [((ln3 + 1) != 257)], [0], [(ln3 + 1)])), (17 * N([ln3], [((ln3 + 1) != 257)], [0], [(ln3 + 1)]))) + 1)
[13]: 3
[14]: list_MAX((list_sum(35, list_MAX((list_sum(36, ((14 * N([m[0]], [i32.eqz(m[0])], [0], [m[0]])) + 1)) * N([ln5; ln6], [(ln6 + (ln5 + 2080))], [R(27, 43, i32, 1028, 255, (gn0 - 2128)); (32 + -2)], [ln5; ln6])))) * N([pn2], [(pn2 > 17)], [32], [(pn2 + -1)])), (34 * N([pn2], [(pn2 > 17)], [32], [(pn2 + -1)])))
[14]: 25
[19]: list_MAX((list_sum(36, ((14 * N([m[0]], [i32.eqz(m[0])], [0], [m[0]])) + 1)) * N([ln5; ln6], [(ln6 + (ln5 + 2080))], [R(27, 43, i32, 1028, 255, (gn0 - 2128)); (32 + -2)], [ln5; ln6])))
[19]: 3
[20]: ((14 * N([m[0]], [i32.eqz(m[0])], [0], [m[0]])) + 1)
[22]: 33
[24]: 1
[25]: 9
[27]: 3
[28]: ((15 * N([m[0]], [i32.eqz(m[0])], [((((0 + -2) + 1) + 2) + -1)], [m[0]])) + 1)
[30]: 24
[31]: list_MAX((list_sum(11, (list_max((28 * N([ln3], [((ln3 + 1) != 256)], [0], [(ln3 + 1)])), (18 * N([ln3], [((ln3 + 1) != 256)], [0], [(ln3 + 1)]))) + 1)) * N([ln6], [((ln6 + 1) != 33)], [1], [(ln6 + 1)])), (list_sum(11, (list_max((28 * N([ln3], [((ln3 + 1) != 256)], [0], [(ln3 + 1)])), (18 * N([ln3], [((ln3 + 1) != 256)], [0], [(ln3 + 1)]))) + 1)) * N([ln6], [((ln6 + 1) != 33)], [1], [(ln6 + 1)])))
[31]: 3
[32]: (list_max((28 * N([ln3], [((ln3 + 1) != 256)], [0], [(ln3 + 1)])), (18 * N([ln3], [((ln3 + 1) != 256)], [0], [(ln3 + 1)]))) + 1)
[36]: 8
[38]: 8
[40]: 43
[42]: ((23 * N([ln3; ln5], [(((ln3 shl 2) + (ln5 + 1040)) > -1)], [((0 + 1) + 1); R(27, 43, i32, 1028, 255, (gn0 - 2128))], [(m[0] + 1); ln5])) + 1)
[44]: 1
[45]: 29
[47]: ((22 * N([ln3; ln5], [(((ln3 shl 2) + (ln5 + 1040)) > -1)], [((select(((i32.eqz0 | (0 > 1000000000)) | (0 == select((i32.eqz0 | (0 > 1000000000)), 0, -1))), 0, -1) + 1) + 1); R(27, 43, i32, 1028, 255, (gn0 - 2128))], [(m[0] + 1); ln5])) + 1)
[49]: 1
[52]: 1
[55]: 0
[56]: 0
2 ebb paths found
[0 1 56]
[0 1 55]
