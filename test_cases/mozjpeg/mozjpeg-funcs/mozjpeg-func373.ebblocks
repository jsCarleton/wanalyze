ebb entry:  0
  ebb type:   block
  ebb blocks: [0 1 2 3]
  ebb cost:   43
  ebb exits:  [4 7]
  ebb succs:  [4 7]
ebb entry:  4
  ebb type:   loop
  ebb blocks: [4 5]
  ebb cost:   ((23 + |f27|) * (N([ln4; pn0], [(pn0 + 1) != ln4], [m[236]; 0 + 1], [ln4; pn0 + 1]))) + 1
  ebb exits:  [6]
  ebb succs:  [6]
  1 paths to exit 6
  [4 5]
  1 loop paths
  [4]
  1 post loop exit paths
  [5]
ebb entry:  6
  ebb type:   block
  ebb blocks: [6]
  ebb cost:   4
  ebb exits:  [7]
  ebb succs:  [7]
ebb entry:  7
  ebb type:   block
  ebb blocks: [7 8]
  ebb cost:   9
  ebb exits:  [9 32]
  ebb succs:  [9 32]
ebb entry:  9
  ebb type:   loop
  ebb blocks: [9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30]
  ebb cost:   list_MAX([
  33 * (N([ln7; m[12]], [(ln7 + 1) < m[12]], [0; m[12]], [ln7 + 1; m[12]]));
  (list_sum([
    34;
    (14 * (N([ln8; pn0], [(pn0 + 1) != ln8], [m[28] shl 3; 0 + 1], [ln8; pn0 + 1]))) + 1
  ])) * (N([ln7; m[12]], [(ln7 + 1) < m[12]], [0; m[12]], [ln7 + 1; m[12]]));
  (list_sum([
    34;
    list_MAX([
      32 * (N([ln16; ln8], [(ln16 + 1) != ln8], [0; m[28] shl 3], [ln16 + 1; ln8]));
      (list_sum([
        33;
        list_MAX([
          (list_sum([
            22;
            (16 * (N([ln5; ln9], [(ln5 + 1) != ln9], [0 + 1; pn1 /s m[8]], [ln5 + 1; ln9]))) + 1
          ])) * (N([ln10; ln13], [(ln13 + 1) != ln10], [pn1 /s m[12]; 0], [ln10; ln13 + 1]))
        ])
      ])) * (N([ln16; ln8], [(ln16 + 1) != ln8], [0; m[28] shl 3], [ln16 + 1; ln8]))
    ])
  ])) * (N([ln7; m[12]], [(ln7 + 1) < m[12]], [0; m[12]], [ln7 + 1; m[12]]));
  (list_sum([
    34;
    list_MAX([
      32 * (N([ln16; ln8], [(ln16 + 1) != ln8], [0; m[28] shl 3], [ln16 + 1; ln8]));
      (list_sum([
        33;
        list_MAX([
          (list_sum([
            22;
            (16 * (N([ln5; ln9], [(ln5 + 1) != ln9], [0 + 1; pn1 /s m[8]], [ln5 + 1; ln9]))) + 1
          ])) * (N([ln10; ln13], [(ln13 + 1) != ln10], [pn1 /s m[12]; 0], [ln10; ln13 + 1]))
        ])
      ])) * (N([ln16; ln8], [(ln16 + 1) != ln8], [0; m[28] shl 3], [ln16 + 1; ln8]))
    ])
  ])) * (N([ln7; m[12]], [(ln7 + 1) < m[12]], [0; m[12]], [ln7 + 1; m[12]]))
])
  ebb exits:  [31]
  ebb succs:  [31]
  4 paths to exit 31
  [9 10 29 30]
  [9 10 11 25 26 27 28 29 30]
  [9 10 11 12 13 21 22 23 29 30]
  [9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 29 30]
  4 loop paths
  [9 10 29]  [9 10 11 25 26 27 28 29]  [9 10 11 12 13 21 22 23 29]  [9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 29]
  4 post loop exit paths
  [30]  [30]  [30]  [30]
nested ebbs:
  ebb entry:  9
    ebb type:   block
    ebb blocks: [9 10 11 12]
    ebb cost:   20
    ebb exits:  [13 25 29]
    ebb succs:  [13 29]
  ebb entry:  13
    ebb type:   loop
    ebb blocks: [13 14 15 16 17 18 19 20 21 22]
    ebb cost:   list_MAX([
  32 * (N([ln16; ln8], [(ln16 + 1) != ln8], [0; m[28] shl 3], [ln16 + 1; ln8]));
  (list_sum([
    33;
    list_MAX([
      (list_sum([
        22;
        (16 * (N([ln5; ln9], [(ln5 + 1) != ln9], [0 + 1; pn1 /s m[8]], [ln5 + 1; ln9]))) + 1
      ])) * (N([ln10; ln13], [(ln13 + 1) != ln10], [pn1 /s m[12]; 0], [ln10; ln13 + 1]))
    ])
  ])) * (N([ln16; ln8], [(ln16 + 1) != ln8], [0; m[28] shl 3], [ln16 + 1; ln8]))
])
    ebb exits:  [23]
    ebb succs:  [23]
    2 paths to exit 23
    [13 21 22]
    [13 14 15 16 17 18 19 20 21 22]
    2 loop paths
    [13 21]    [13 14 15 16 17 18 19 20 21]
    2 post loop exit paths
    [22]    [22]
nested ebbs:
    ebb entry:  13
      ebb type:   block
      ebb blocks: [13 14]
      ebb cost:   9
      ebb exits:  [15 21]
      ebb succs:  [15 21]
    ebb entry:  15
      ebb type:   loop
      ebb blocks: [15 16 17 18 19]
      ebb cost:   list_MAX([
  (list_sum([
    22;
    (16 * (N([ln5; ln9], [(ln5 + 1) != ln9], [0 + 1; pn1 /s m[8]], [ln5 + 1; ln9]))) + 1
  ])) * (N([ln10; ln13], [(ln13 + 1) != ln10], [pn1 /s m[12]; 0], [ln10; ln13 + 1]))
])
      ebb exits:  [20]
      ebb succs:  [20]
      1 paths to exit 20
      [15 16 17 18 19]
      1 loop paths
      [15 16 17 18]
      1 post loop exit paths
      [19]
nested ebbs:
      ebb entry:  15
        ebb type:   block
        ebb blocks: [15]
        ebb cost:   14
        ebb exits:  [16]
        ebb succs:  [16]
      ebb entry:  16
        ebb type:   loop
        ebb blocks: [16 17]
        ebb cost:   (16 * (N([ln5; ln9], [(ln5 + 1) != ln9], [0 + 1; pn1 /s m[8]], [ln5 + 1; ln9]))) + 1
        ebb exits:  [18]
        ebb succs:  [18]
        1 paths to exit 18
        [16 17]
        1 loop paths
        [16]
        1 post loop exit paths
        [17]
      ebb entry:  18
        ebb type:   block
        ebb blocks: [18 19]
        ebb cost:   8
        ebb exits:  [15 20]
        ebb succs:  [15 20]
    ebb entry:  20
      ebb type:   block
      ebb blocks: [20]
      ebb cost:   1
      ebb exits:  [21]
      ebb succs:  [21]
    ebb entry:  21
      ebb type:   block
      ebb blocks: [21 22]
      ebb cost:   23
      ebb exits:  [13 23]
      ebb succs:  [13 23]
  ebb entry:  23
    ebb type:   block
    ebb blocks: [23 24 25]
    ebb cost:   1
    ebb exits:  [26 29]
    ebb succs:  [26 29]
  ebb entry:  26
    ebb type:   loop
    ebb blocks: [26 27]
    ebb cost:   (14 * (N([ln8; pn0], [(pn0 + 1) != ln8], [m[28] shl 3; 0 + 1], [ln8; pn0 + 1]))) + 1
    ebb exits:  [28]
    ebb succs:  [28]
    1 paths to exit 28
    [26 27]
    1 loop paths
    [26]
    1 post loop exit paths
    [27]
  ebb entry:  28
    ebb type:   block
    ebb blocks: [28]
    ebb cost:   1
    ebb exits:  [29]
    ebb succs:  [29]
  ebb entry:  29
    ebb type:   block
    ebb blocks: [29 30]
    ebb cost:   13
    ebb exits:  [9 31]
    ebb succs:  [9 31]
ebb entry:  31
  ebb type:   block
  ebb blocks: [31]
  ebb cost:   1
  ebb exits:  [32]
  ebb succs:  [32]
ebb entry:  32
  ebb type:   block
  ebb blocks: [32 33]
  ebb cost:   1
  ebb exits:  [33]
  ebb succs:  []
ebb costs:
[0]: 43
[4]: (((23 + |f27|) * N([ln4; pn0], [((pn0 + 1) != ln4)], [m[236]; (0 + 1)], [ln4; (pn0 + 1)])) + 1)
[6]: 4
[7]: 9
[9]: list_MAX((33 * N([ln7; m[12]], [((ln7 + 1) < m[12])], [0; m[12]], [(ln7 + 1); m[12]])), (list_sum(34, ((14 * N([ln8; pn0], [((pn0 + 1) != ln8)], [(m[28] shl 3); (0 + 1)], [ln8; (pn0 + 1)])) + 1)) * N([ln7; m[12]], [((ln7 + 1) < m[12])], [0; m[12]], [(ln7 + 1); m[12]])), (list_sum(34, list_MAX((32 * N([ln16; ln8], [((ln16 + 1) != ln8)], [0; (m[28] shl 3)], [(ln16 + 1); ln8])), (list_sum(33, list_MAX((list_sum(22, ((16 * N([ln5; ln9], [((ln5 + 1) != ln9)], [(0 + 1); (pn1 /s m[8])], [(ln5 + 1); ln9])) + 1)) * N([ln10; ln13], [((ln13 + 1) != ln10)], [(pn1 /s m[12]); 0], [ln10; (ln13 + 1)])))) * N([ln16; ln8], [((ln16 + 1) != ln8)], [0; (m[28] shl 3)], [(ln16 + 1); ln8])))) * N([ln7; m[12]], [((ln7 + 1) < m[12])], [0; m[12]], [(ln7 + 1); m[12]])), (list_sum(34, list_MAX((32 * N([ln16; ln8], [((ln16 + 1) != ln8)], [0; (m[28] shl 3)], [(ln16 + 1); ln8])), (list_sum(33, list_MAX((list_sum(22, ((16 * N([ln5; ln9], [((ln5 + 1) != ln9)], [(0 + 1); (pn1 /s m[8])], [(ln5 + 1); ln9])) + 1)) * N([ln10; ln13], [((ln13 + 1) != ln10)], [(pn1 /s m[12]); 0], [ln10; (ln13 + 1)])))) * N([ln16; ln8], [((ln16 + 1) != ln8)], [0; (m[28] shl 3)], [(ln16 + 1); ln8])))) * N([ln7; m[12]], [((ln7 + 1) < m[12])], [0; m[12]], [(ln7 + 1); m[12]])))
[9]: 20
[13]: list_MAX((32 * N([ln16; ln8], [((ln16 + 1) != ln8)], [0; (m[28] shl 3)], [(ln16 + 1); ln8])), (list_sum(33, list_MAX((list_sum(22, ((16 * N([ln5; ln9], [((ln5 + 1) != ln9)], [(0 + 1); (pn1 /s m[8])], [(ln5 + 1); ln9])) + 1)) * N([ln10; ln13], [((ln13 + 1) != ln10)], [(pn1 /s m[12]); 0], [ln10; (ln13 + 1)])))) * N([ln16; ln8], [((ln16 + 1) != ln8)], [0; (m[28] shl 3)], [(ln16 + 1); ln8])))
[13]: 9
[15]: list_MAX((list_sum(22, ((16 * N([ln5; ln9], [((ln5 + 1) != ln9)], [(0 + 1); (pn1 /s m[8])], [(ln5 + 1); ln9])) + 1)) * N([ln10; ln13], [((ln13 + 1) != ln10)], [(pn1 /s m[12]); 0], [ln10; (ln13 + 1)])))
[15]: 14
[16]: ((16 * N([ln5; ln9], [((ln5 + 1) != ln9)], [(0 + 1); (pn1 /s m[8])], [(ln5 + 1); ln9])) + 1)
[18]: 8
[20]: 1
[21]: 23
[23]: 1
[26]: ((14 * N([ln8; pn0], [((pn0 + 1) != ln8)], [(m[28] shl 3); (0 + 1)], [ln8; (pn0 + 1)])) + 1)
[28]: 1
[29]: 13
[31]: 1
[32]: 1
4 ebb paths found
[0 7 32]
[0 7 9 31 32]
[0 4 6 7 32]
[0 4 6 7 9 31 32]
