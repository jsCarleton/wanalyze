ebb entry:  0
  ebb type:   block
  ebb blocks: [0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15]
  ebb cost:   54
  ebb exits:  [16 36 53]
  ebb succs:  [53 16]
ebb entry:  16
  ebb type:   loop
  ebb blocks: [16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33]
  ebb cost:   (list_max([
  25 * (N([ln6; m[244]], [(ln6 + 1) < m[244]], [0; m[244]], [ln6 + 1; m[244]]));
  (57 + |f27|) * (N([ln6; m[244]], [(ln6 + 1) < m[244]], [0; m[244]], [ln6 + 1; m[244]]));
  (157 + |f27|) * (N([ln6; m[244]], [(ln6 + 1) < m[244]], [0; m[244]], [ln6 + 1; m[244]]));
  (68 + |f27|) * (N([ln6; m[244]], [(ln6 + 1) < m[244]], [0; m[244]], [ln6 + 1; m[244]]));
  (168 + |f27|) * (N([ln6; m[244]], [(ln6 + 1) < m[244]], [0; m[244]], [ln6 + 1; m[244]]));
  (71 + |f27|) * (N([ln6; m[244]], [(ln6 + 1) < m[244]], [0; m[244]], [ln6 + 1; m[244]]));
  (171 + |f27|) * (N([ln6; m[244]], [(ln6 + 1) < m[244]], [0; m[244]], [ln6 + 1; m[244]]));
  (82 + |f27|) * (N([ln6; m[244]], [(ln6 + 1) < m[244]], [0; m[244]], [ln6 + 1; m[244]]));
  (182 + |f27|) * (N([ln6; m[244]], [(ln6 + 1) < m[244]], [0; m[244]], [ln6 + 1; m[244]]));
  (43 + |f54|) * (N([ln6; m[244]], [(ln6 + 1) < m[244]], [0; m[244]], [ln6 + 1; m[244]]))
])) + (list_max(1, 1, 1, 1, 1, 1, 1, 1, 1, 1))
  ebb exits:  [53 55]
  ebb succs:  []
  10 paths to exit 53
  [16 17 30 31]
  [16 17 18 21 23 25 30 31]
  [16 17 18 21 23 25 26 27 28 29 30 31]
  [16 17 18 21 23 24 25 30 31]
  [16 17 18 21 23 24 25 26 27 28 29 30 31]
  [16 17 18 21 22 23 25 30 31]
  [16 17 18 21 22 23 25 26 27 28 29 30 31]
  [16 17 18 21 22 23 24 25 30 31]
  [16 17 18 21 22 23 24 25 26 27 28 29 30 31]
  [16 17 18 19 30 31]
  0 paths to exit 55

  10 loop paths
  [16 17 30]  [16 17 18 21 23 25 30]  [16 17 18 21 23 25 26 27 28 29 30]  [16 17 18 21 23 24 25 30]  [16 17 18 21 23 24 25 26 27 28 29 30]  [16 17 18 21 22 23 25 30]  [16 17 18 21 22 23 25 26 27 28 29 30]  [16 17 18 21 22 23 24 25 30]  [16 17 18 21 22 23 24 25 26 27 28 29 30]  [16 17 18 19 30]
  10 post loop exit paths
  [31]  [31]  [31]  [31]  [31]  [31]  [31]  [31]  [31]  [31]
nested ebbs:
  ebb entry:  16
    ebb type:   block
    ebb blocks: [16 17 18 19 20 21 22 23 24 25 26]
    ebb cost:   80
    ebb exits:  [27 30]
    ebb succs:  [30 27 30 27]
  ebb entry:  27
    ebb type:   loop
    ebb blocks: [27 28]
    ebb cost:   (92 * (N([ln5], [(ln5 + 1) != 16], [0 + 1], [ln5 + 1]))) + 1
    ebb exits:  [29]
    ebb succs:  [29 29]
    1 paths to exit 29
    [27 28]
    1 loop paths
    [27]
    1 post loop exit paths
    [28]
  ebb entry:  29
    ebb type:   block
    ebb blocks: [29]
    ebb cost:   1
    ebb exits:  [30]
    ebb succs:  [30 30]
  ebb entry:  30
    ebb type:   block
    ebb blocks: [30 31 32 33]
    ebb cost:   9
    ebb exits:  [16 53 55]
    ebb succs:  [55 53 16 16]
ebb entry:  34
  ebb type:   block
  ebb blocks: [34 35 36]
  ebb cost:   1
  ebb exits:  [37 55]
  ebb succs:  [55 37]
ebb entry:  37
  ebb type:   loop
  ebb blocks: [37 38 39 40 41 42 43 44 45 46 47 48 49 50 51]
  ebb cost:   (list_max([
  (41 + |f54|) * (N([ln6; m[244]], [(ln6 + 1) < m[244]], [0; m[244]], [ln6 + 1; m[244]]));
  (55 + |f27|) * (N([ln6; m[244]], [(ln6 + 1) < m[244]], [0; m[244]], [ln6 + 1; m[244]]));
  (155 + |f27|) * (N([ln6; m[244]], [(ln6 + 1) < m[244]], [0; m[244]], [ln6 + 1; m[244]]));
  (66 + |f27|) * (N([ln6; m[244]], [(ln6 + 1) < m[244]], [0; m[244]], [ln6 + 1; m[244]]));
  (166 + |f27|) * (N([ln6; m[244]], [(ln6 + 1) < m[244]], [0; m[244]], [ln6 + 1; m[244]]));
  (69 + |f27|) * (N([ln6; m[244]], [(ln6 + 1) < m[244]], [0; m[244]], [ln6 + 1; m[244]]));
  (169 + |f27|) * (N([ln6; m[244]], [(ln6 + 1) < m[244]], [0; m[244]], [ln6 + 1; m[244]]));
  (80 + |f27|) * (N([ln6; m[244]], [(ln6 + 1) < m[244]], [0; m[244]], [ln6 + 1; m[244]]));
  (180 + |f27|) * (N([ln6; m[244]], [(ln6 + 1) < m[244]], [0; m[244]], [ln6 + 1; m[244]]))
])) + (list_max(1, 1, 1, 1, 1, 1, 1, 1, 1))
  ebb exits:  [52]
  ebb succs:  []
  9 paths to exit 52
  [37 38 49 50 51]
  [37 38 39 41 43 50 51]
  [37 38 39 41 43 44 45 46 47 50 51]
  [37 38 39 41 42 43 50 51]
  [37 38 39 41 42 43 44 45 46 47 50 51]
  [37 38 39 40 41 43 50 51]
  [37 38 39 40 41 43 44 45 46 47 50 51]
  [37 38 39 40 41 42 43 50 51]
  [37 38 39 40 41 42 43 44 45 46 47 50 51]
  9 loop paths
  [37 38 49 50]  [37 38 39 41 43 50]  [37 38 39 41 43 44 45 46 47 50]  [37 38 39 41 42 43 50]  [37 38 39 41 42 43 44 45 46 47 50]  [37 38 39 40 41 43 50]  [37 38 39 40 41 43 44 45 46 47 50]  [37 38 39 40 41 42 43 50]  [37 38 39 40 41 42 43 44 45 46 47 50]
  9 post loop exit paths
  [51]  [51]  [51]  [51]  [51]  [51]  [51]  [51]  [51]
nested ebbs:
  ebb entry:  37
    ebb type:   block
    ebb blocks: [37 38 39 40 41 42 43 44]
    ebb cost:   78
    ebb exits:  [45 49 50]
    ebb succs:  [50 49 45 50 49 45]
  ebb entry:  45
    ebb type:   loop
    ebb blocks: [45 46]
    ebb cost:   (92 * (N([ln5], [(ln5 + 1) != 16], [0 + 1], [ln5 + 1]))) + 1
    ebb exits:  [47]
    ebb succs:  [47 47]
    1 paths to exit 47
    [45 46]
    1 loop paths
    [45]
    1 post loop exit paths
    [46]
  ebb entry:  47
    ebb type:   block
    ebb blocks: [47 48]
    ebb cost:   1
    ebb exits:  [49 50]
    ebb succs:  [50 49 50 49]
  ebb entry:  49
    ebb type:   block
    ebb blocks: [49]
    ebb cost:   12
    ebb exits:  [50]
    ebb succs:  [50 50]
  ebb entry:  50
    ebb type:   block
    ebb blocks: [50 51]
    ebb cost:   9
    ebb exits:  [37 52]
    ebb succs:  [52 37 37]
ebb entry:  52
  ebb type:   block
  ebb blocks: [52]
  ebb cost:   1
  ebb exits:  [53]
  ebb succs:  [53]
ebb entry:  53
  ebb type:   block
  ebb blocks: [53 54]
  ebb cost:   16
  ebb exits:  [54]
  ebb succs:  []
ebb entry:  55
  ebb type:   block
  ebb blocks: [55]
  ebb cost:   0
  ebb exits:  []
  ebb succs:  []
