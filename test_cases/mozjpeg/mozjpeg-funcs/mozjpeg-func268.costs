|f268| = list_max([
  list_sum([
    247;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    239;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    246;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    238;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    246;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    238;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    243;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    235;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    242;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    234;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    242;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    234;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    208;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    200;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    207;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    199;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    207;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    199;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    243;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    235;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    242;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    234;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    242;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    234;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    239;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    231;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    238;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    230;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    238;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    230;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    204;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    196;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    203;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    195;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    203;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    195;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    234;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    226;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    233;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    225;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    233;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    225;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    230;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    222;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    229;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    221;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    229;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    221;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    180;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    172;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    164;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    173;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    165;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    244;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    236;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    243;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    235;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    243;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    235;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    240;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    232;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    239;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    231;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    239;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    231;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    205;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    197;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    204;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    196;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    204;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    196;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    240;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    232;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    239;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    231;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    239;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    231;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    236;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    228;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    235;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    227;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    235;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    227;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    201;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    193;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    200;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    192;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    200;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    192;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    231;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    223;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    230;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    222;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    230;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    222;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    227;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    219;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    226;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    218;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    226;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    218;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    177;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    169;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    161;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    244;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    236;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    243;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    235;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    243;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    235;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    240;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    232;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    239;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    231;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    239;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    231;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    205;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    197;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    204;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    196;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    204;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    196;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    240;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    232;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    239;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    231;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    239;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    231;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    236;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    228;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    235;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    227;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    235;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    227;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    201;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    193;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    200;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    192;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    200;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    192;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    231;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    223;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    230;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    222;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    230;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    222;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    227;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    219;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    226;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    218;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    226;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    218;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    177;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    169;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    161;
    (list_max([
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]));
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    243;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    235;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    242;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    234;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    242;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    234;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    239;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    231;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    238;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    230;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    238;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    230;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    204;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    196;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    203;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    195;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    203;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    195;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    239;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    231;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    238;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    230;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    238;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    230;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    235;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    227;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    234;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    226;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    234;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    226;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    200;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    192;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    199;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    191;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    199;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    191;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    230;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    222;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    229;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    221;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    229;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    221;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    226;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    218;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    225;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    217;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    225;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    217;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    176;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    168;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    160;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    169;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    161;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    240;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    232;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    239;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    231;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    239;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    231;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    236;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    228;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    235;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    227;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    235;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    227;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    201;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    193;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    200;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    192;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    200;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    192;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    236;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    228;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    235;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    227;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    235;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    227;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    232;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    224;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    231;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    223;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    231;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    223;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    197;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    189;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    196;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    188;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    196;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    188;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    227;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    219;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    226;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    218;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    226;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    218;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    223;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    215;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    222;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    214;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    222;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    214;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    173;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    165;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    157;
    (list_max([
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]));
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    240;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    232;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    239;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    231;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    239;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    231;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    236;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    228;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    235;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    227;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    235;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    227;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    201;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    193;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    200;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    192;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    200;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    192;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    236;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    228;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    235;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    227;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    235;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    227;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    232;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    224;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    231;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    223;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    231;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    223;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    197;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    189;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    196;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    188;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    196;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    188;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    227;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    219;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    226;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    218;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    226;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    218;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    223;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    215;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    222;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    214;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    222;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    214;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    173;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    165;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    157;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    220;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    212;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    219;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    211;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    219;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    211;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    216;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    208;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    215;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    207;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    215;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    207;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    181;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    173;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    180;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    172;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    180;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    172;
    (list_max([
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    216;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    208;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    215;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    207;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    215;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    207;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    212;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    204;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    211;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    203;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    211;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    203;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    177;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    169;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    176;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    168;
    (list_max([
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f41|, |f29|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    176;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    168;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    207;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    199;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    206;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    198;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    206;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    198;
    (list_max([
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    203;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    195;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    202;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    194;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    202;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    194;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    119;
    (list_max([
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f56|, |f29|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ])
])
