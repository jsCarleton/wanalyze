ebb costs:
[0]: 6
[1]: (list_max(((14 + list_sum(|f29|, |f56|)) * N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0])), ((19 + |f56|) * N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))) + list_max(1, 1))
[8]: 106
[49]: (list_max(((32 + |f29|) * N([ln3; pn0; pn1], [select(((ln3 + (pn1 * 10)) < 429496729), 0, ((R(29, 0, i32, pn0) + -48) <= 9))], [(R(29, 22, i32, pn0) + -48); pn0; 0], [(R(29, 11, i32, pn0) + -48); pn0; (ln3 + (pn1 * 10))])), (37 * N([ln3; m[0]; pn1], [select(((ln3 + (pn1 * 10)) < 429496729), 0, ((m[0] + -48) <= 9))], [(R(29, 22, i32, pn0) + -48); m[0]; 0], [(m[0] + -48); m[0]; (ln3 + (pn1 * 10))]))) + list_max(1, 1))
[56]: 4
[57]: 13
[60]: (list_max(((36 + |f29|) * N([lN10; lN9; pn0], [(((lN9 + lN10) * 10) <= (i64.extend_i32_u((R(29, 0, i32, pn0) + -48)) xor -1))], [i64.extend_i32_u(R(29, 22, i32, pn0) + -48); (0 * 10); pn0], [i64.extend_i32_u(R(29, 7, i32, pn0) + -48); ((lN9 + lN10) * 10); pn0])), (41 * N([lN10; lN9; m[0]], [(((lN9 + lN10) * 10) <= (i64.extend_i32_u((m[0] + -48)) xor -1))], [i64.extend_i32_u(R(29, 22, i32, pn0) + -48); (0 * 10); m[0]], [i64.extend_i32_u(m[0] + -48); ((lN9 + lN10) * 10); m[0]]))) + list_max(1, 1))
[68]: 3
[70]: 7
[73]: 15
[76]: (list_max(((29 + |f29|) * N([ln3; ln4; m[0]; pn1], [select((pn1 > m[0]), 0, ((ln3 + (pn1 * ln4)) <= 119304646))], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; (ln3 + (pn1 * ln4)); m[0]; pn1])), (34 * N([ln3; ln4; m[0]; pn1], [select((pn1 > m[0]), 0, ((ln3 + (pn1 * ln4)) <= 119304646))], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; (ln3 + (pn1 * ln4)); m[0]; pn1]))) + list_max(1, 1))
[83]: 4
[84]: 8
[86]: (list_max(((44 + list_sum(|f29|, |f41|)) * N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]])), ((49 + |f41|) * N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))) + list_max(1, 1))
[95]: 1
[97]: 20
[99]: (list_max(((29 + |f29|) * N([ln3; ln4; ln7; m[0]; pn1], [select((pn1 > m[0]), 0, ((ln3 | (ln4 shl ln7)) <= 134217727))], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; (ln3 | (ln4 shl ln7)); ln7; m[0]; pn1])), (34 * N([ln3; ln4; ln7; m[0]; pn1], [select((pn1 > m[0]), 0, ((ln3 | (ln4 shl ln7)) <= 134217727))], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; (ln3 | (ln4 shl ln7)); ln7; m[0]; pn1]))) + list_max(1, 1))
[106]: 4
[107]: 14
[109]: (list_max(((33 + |f29|) * N([m[0]; pn1], [(pn1 > m[0])], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1])), (38 * N([m[0]; pn1], [(pn1 > m[0])], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))) + list_max(1, 1))
[117]: 1
[118]: 8
[120]: (list_max(((17 + |f29|) * N([m[0]; pn1], [(pn1 > m[0])], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1])), (22 * N([m[0]; pn1], [(pn1 > m[0])], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))) + list_max(1, 1))
[127]: 8
[128]: 18
[131]: 7
359 ebb paths found
[0 1 8 131]
[0 1 8 73 97 107 118 128 131]
[0 1 8 73 97 107 118 120 127 128 131]
[0 1 8 73 97 107 109 118 128 131]
[0 1 8 73 97 107 109 118 120 127 128 131]
[0 1 8 73 97 107 109 117 118 128 131]
[0 1 8 73 97 107 109 117 118 120 127 128 131]
[0 1 8 73 97 99 106 107 118 128 131]
[0 1 8 73 97 99 106 107 118 120 127 128 131]
[0 1 8 73 97 99 106 107 109 118 128 131]
[0 1 8 73 97 99 106 107 109 118 120 127 128 131]
[0 1 8 73 97 99 106 107 109 117 118 128 131]
[0 1 8 73 97 99 106 107 109 117 118 120 127 128 131]
[0 1 8 73 84 118 128 131]
[0 1 8 73 84 118 120 127 128 131]
[0 1 8 73 84 86 118 128 131]
[0 1 8 73 84 86 118 120 127 128 131]
[0 1 8 73 84 86 95 118 128 131]
[0 1 8 73 84 86 95 118 120 127 128 131]
[0 1 8 73 84 86 95 97 107 118 128 131]
[0 1 8 73 84 86 95 97 107 118 120 127 128 131]
[0 1 8 73 84 86 95 97 107 109 118 128 131]
[0 1 8 73 84 86 95 97 107 109 118 120 127 128 131]
[0 1 8 73 84 86 95 97 107 109 117 118 128 131]
[0 1 8 73 84 86 95 97 107 109 117 118 120 127 128 131]
[0 1 8 73 84 86 95 97 99 106 107 118 128 131]
[0 1 8 73 84 86 95 97 99 106 107 118 120 127 128 131]
[0 1 8 73 84 86 95 97 99 106 107 109 118 128 131]
[0 1 8 73 84 86 95 97 99 106 107 109 118 120 127 128 131]
[0 1 8 73 84 86 95 97 99 106 107 109 117 118 128 131]
[0 1 8 73 84 86 95 97 99 106 107 109 117 118 120 127 128 131]
[0 1 8 73 76 83 84 118 128 131]
[0 1 8 73 76 83 84 118 120 127 128 131]
[0 1 8 73 76 83 84 86 118 128 131]
[0 1 8 73 76 83 84 86 118 120 127 128 131]
[0 1 8 73 76 83 84 86 95 118 128 131]
[0 1 8 73 76 83 84 86 95 118 120 127 128 131]
[0 1 8 73 76 83 84 86 95 97 107 118 128 131]
[0 1 8 73 76 83 84 86 95 97 107 118 120 127 128 131]
[0 1 8 73 76 83 84 86 95 97 107 109 118 128 131]
[0 1 8 73 76 83 84 86 95 97 107 109 118 120 127 128 131]
[0 1 8 73 76 83 84 86 95 97 107 109 117 118 128 131]
[0 1 8 73 76 83 84 86 95 97 107 109 117 118 120 127 128 131]
[0 1 8 73 76 83 84 86 95 97 99 106 107 118 128 131]
[0 1 8 73 76 83 84 86 95 97 99 106 107 118 120 127 128 131]
[0 1 8 73 76 83 84 86 95 97 99 106 107 109 118 128 131]
[0 1 8 73 76 83 84 86 95 97 99 106 107 109 118 120 127 128 131]
[0 1 8 73 76 83 84 86 95 97 99 106 107 109 117 118 128 131]
[0 1 8 73 76 83 84 86 95 97 99 106 107 109 117 118 120 127 128 131]
[0 1 8 57 70 128 131]
[0 1 8 57 70 118 128 131]
[0 1 8 57 70 118 120 127 128 131]
[0 1 8 57 70 73 97 107 118 128 131]
[0 1 8 57 70 73 97 107 118 120 127 128 131]
[0 1 8 57 70 73 97 107 109 118 128 131]
[0 1 8 57 70 73 97 107 109 118 120 127 128 131]
[0 1 8 57 70 73 97 107 109 117 118 128 131]
[0 1 8 57 70 73 97 107 109 117 118 120 127 128 131]
[0 1 8 57 70 73 97 99 106 107 118 128 131]
[0 1 8 57 70 73 97 99 106 107 118 120 127 128 131]
[0 1 8 57 70 73 97 99 106 107 109 118 128 131]
[0 1 8 57 70 73 97 99 106 107 109 118 120 127 128 131]
[0 1 8 57 70 73 97 99 106 107 109 117 118 128 131]
[0 1 8 57 70 73 97 99 106 107 109 117 118 120 127 128 131]
[0 1 8 57 70 73 84 118 128 131]
[0 1 8 57 70 73 84 118 120 127 128 131]
[0 1 8 57 70 73 84 86 118 128 131]
[0 1 8 57 70 73 84 86 118 120 127 128 131]
[0 1 8 57 70 73 84 86 95 118 128 131]
[0 1 8 57 70 73 84 86 95 118 120 127 128 131]
[0 1 8 57 70 73 84 86 95 97 107 118 128 131]
[0 1 8 57 70 73 84 86 95 97 107 118 120 127 128 131]
[0 1 8 57 70 73 84 86 95 97 107 109 118 128 131]
[0 1 8 57 70 73 84 86 95 97 107 109 118 120 127 128 131]
[0 1 8 57 70 73 84 86 95 97 107 109 117 118 128 131]
[0 1 8 57 70 73 84 86 95 97 107 109 117 118 120 127 128 131]
[0 1 8 57 70 73 84 86 95 97 99 106 107 118 128 131]
[0 1 8 57 70 73 84 86 95 97 99 106 107 118 120 127 128 131]
[0 1 8 57 70 73 84 86 95 97 99 106 107 109 118 128 131]
[0 1 8 57 70 73 84 86 95 97 99 106 107 109 118 120 127 128 131]
[0 1 8 57 70 73 84 86 95 97 99 106 107 109 117 118 128 131]
[0 1 8 57 70 73 84 86 95 97 99 106 107 109 117 118 120 127 128 131]
[0 1 8 57 70 73 76 83 84 118 128 131]
[0 1 8 57 70 73 76 83 84 118 120 127 128 131]
[0 1 8 57 70 73 76 83 84 86 118 128 131]
[0 1 8 57 70 73 76 83 84 86 118 120 127 128 131]
[0 1 8 57 70 73 76 83 84 86 95 118 128 131]
[0 1 8 57 70 73 76 83 84 86 95 118 120 127 128 131]
[0 1 8 57 70 73 76 83 84 86 95 97 107 118 128 131]
[0 1 8 57 70 73 76 83 84 86 95 97 107 118 120 127 128 131]
[0 1 8 57 70 73 76 83 84 86 95 97 107 109 118 128 131]
[0 1 8 57 70 73 76 83 84 86 95 97 107 109 118 120 127 128 131]
[0 1 8 57 70 73 76 83 84 86 95 97 107 109 117 118 128 131]
[0 1 8 57 70 73 76 83 84 86 95 97 107 109 117 118 120 127 128 131]
[0 1 8 57 70 73 76 83 84 86 95 97 99 106 107 118 128 131]
[0 1 8 57 70 73 76 83 84 86 95 97 99 106 107 118 120 127 128 131]
[0 1 8 57 70 73 76 83 84 86 95 97 99 106 107 109 118 128 131]
[0 1 8 57 70 73 76 83 84 86 95 97 99 106 107 109 118 120 127 128 131]
[0 1 8 57 70 73 76 83 84 86 95 97 99 106 107 109 117 118 128 131]
[0 1 8 57 70 73 76 83 84 86 95 97 99 106 107 109 117 118 120 127 128 131]
[0 1 8 57 60 70 128 131]
[0 1 8 57 60 70 118 128 131]
[0 1 8 57 60 70 118 120 127 128 131]
[0 1 8 57 60 70 73 97 107 118 128 131]
[0 1 8 57 60 70 73 97 107 118 120 127 128 131]
[0 1 8 57 60 70 73 97 107 109 118 128 131]
[0 1 8 57 60 70 73 97 107 109 118 120 127 128 131]
[0 1 8 57 60 70 73 97 107 109 117 118 128 131]
[0 1 8 57 60 70 73 97 107 109 117 118 120 127 128 131]
[0 1 8 57 60 70 73 97 99 106 107 118 128 131]
[0 1 8 57 60 70 73 97 99 106 107 118 120 127 128 131]
[0 1 8 57 60 70 73 97 99 106 107 109 118 128 131]
[0 1 8 57 60 70 73 97 99 106 107 109 118 120 127 128 131]
[0 1 8 57 60 70 73 97 99 106 107 109 117 118 128 131]
[0 1 8 57 60 70 73 97 99 106 107 109 117 118 120 127 128 131]
[0 1 8 57 60 70 73 84 118 128 131]
[0 1 8 57 60 70 73 84 118 120 127 128 131]
[0 1 8 57 60 70 73 84 86 118 128 131]
[0 1 8 57 60 70 73 84 86 118 120 127 128 131]
[0 1 8 57 60 70 73 84 86 95 118 128 131]
[0 1 8 57 60 70 73 84 86 95 118 120 127 128 131]
[0 1 8 57 60 70 73 84 86 95 97 107 118 128 131]
[0 1 8 57 60 70 73 84 86 95 97 107 118 120 127 128 131]
[0 1 8 57 60 70 73 84 86 95 97 107 109 118 128 131]
[0 1 8 57 60 70 73 84 86 95 97 107 109 118 120 127 128 131]
[0 1 8 57 60 70 73 84 86 95 97 107 109 117 118 128 131]
[0 1 8 57 60 70 73 84 86 95 97 107 109 117 118 120 127 128 131]
[0 1 8 57 60 70 73 84 86 95 97 99 106 107 118 128 131]
[0 1 8 57 60 70 73 84 86 95 97 99 106 107 118 120 127 128 131]
[0 1 8 57 60 70 73 84 86 95 97 99 106 107 109 118 128 131]
[0 1 8 57 60 70 73 84 86 95 97 99 106 107 109 118 120 127 128 131]
[0 1 8 57 60 70 73 84 86 95 97 99 106 107 109 117 118 128 131]
[0 1 8 57 60 70 73 84 86 95 97 99 106 107 109 117 118 120 127 128 131]
[0 1 8 57 60 70 73 76 83 84 118 128 131]
[0 1 8 57 60 70 73 76 83 84 118 120 127 128 131]
[0 1 8 57 60 70 73 76 83 84 86 118 128 131]
[0 1 8 57 60 70 73 76 83 84 86 118 120 127 128 131]
[0 1 8 57 60 70 73 76 83 84 86 95 118 128 131]
[0 1 8 57 60 70 73 76 83 84 86 95 118 120 127 128 131]
[0 1 8 57 60 70 73 76 83 84 86 95 97 107 118 128 131]
[0 1 8 57 60 70 73 76 83 84 86 95 97 107 118 120 127 128 131]
[0 1 8 57 60 70 73 76 83 84 86 95 97 107 109 118 128 131]
[0 1 8 57 60 70 73 76 83 84 86 95 97 107 109 118 120 127 128 131]
[0 1 8 57 60 70 73 76 83 84 86 95 97 107 109 117 118 128 131]
[0 1 8 57 60 70 73 76 83 84 86 95 97 107 109 117 118 120 127 128 131]
[0 1 8 57 60 70 73 76 83 84 86 95 97 99 106 107 118 128 131]
[0 1 8 57 60 70 73 76 83 84 86 95 97 99 106 107 118 120 127 128 131]
[0 1 8 57 60 70 73 76 83 84 86 95 97 99 106 107 109 118 128 131]
[0 1 8 57 60 70 73 76 83 84 86 95 97 99 106 107 109 118 120 127 128 131]
[0 1 8 57 60 70 73 76 83 84 86 95 97 99 106 107 109 117 118 128 131]
[0 1 8 57 60 70 73 76 83 84 86 95 97 99 106 107 109 117 118 120 127 128 131]
[0 1 8 57 60 68 118 128 131]
[0 1 8 57 60 68 118 120 127 128 131]
[0 1 8 57 60 68 70 128 131]
[0 1 8 57 60 68 70 118 128 131]
[0 1 8 57 60 68 70 118 120 127 128 131]
[0 1 8 57 60 68 70 73 97 107 118 128 131]
[0 1 8 57 60 68 70 73 97 107 118 120 127 128 131]
[0 1 8 57 60 68 70 73 97 107 109 118 128 131]
[0 1 8 57 60 68 70 73 97 107 109 118 120 127 128 131]
[0 1 8 57 60 68 70 73 97 107 109 117 118 128 131]
[0 1 8 57 60 68 70 73 97 107 109 117 118 120 127 128 131]
[0 1 8 57 60 68 70 73 97 99 106 107 118 128 131]
[0 1 8 57 60 68 70 73 97 99 106 107 118 120 127 128 131]
[0 1 8 57 60 68 70 73 97 99 106 107 109 118 128 131]
[0 1 8 57 60 68 70 73 97 99 106 107 109 118 120 127 128 131]
[0 1 8 57 60 68 70 73 97 99 106 107 109 117 118 128 131]
[0 1 8 57 60 68 70 73 97 99 106 107 109 117 118 120 127 128 131]
[0 1 8 57 60 68 70 73 84 118 128 131]
[0 1 8 57 60 68 70 73 84 118 120 127 128 131]
[0 1 8 57 60 68 70 73 84 86 118 128 131]
[0 1 8 57 60 68 70 73 84 86 118 120 127 128 131]
[0 1 8 57 60 68 70 73 84 86 95 118 128 131]
[0 1 8 57 60 68 70 73 84 86 95 118 120 127 128 131]
[0 1 8 57 60 68 70 73 84 86 95 97 107 118 128 131]
[0 1 8 57 60 68 70 73 84 86 95 97 107 118 120 127 128 131]
[0 1 8 57 60 68 70 73 84 86 95 97 107 109 118 128 131]
[0 1 8 57 60 68 70 73 84 86 95 97 107 109 118 120 127 128 131]
[0 1 8 57 60 68 70 73 84 86 95 97 107 109 117 118 128 131]
[0 1 8 57 60 68 70 73 84 86 95 97 107 109 117 118 120 127 128 131]
[0 1 8 57 60 68 70 73 84 86 95 97 99 106 107 118 128 131]
[0 1 8 57 60 68 70 73 84 86 95 97 99 106 107 118 120 127 128 131]
[0 1 8 57 60 68 70 73 84 86 95 97 99 106 107 109 118 128 131]
[0 1 8 57 60 68 70 73 84 86 95 97 99 106 107 109 118 120 127 128 131]
[0 1 8 57 60 68 70 73 84 86 95 97 99 106 107 109 117 118 128 131]
[0 1 8 57 60 68 70 73 84 86 95 97 99 106 107 109 117 118 120 127 128 131]
[0 1 8 57 60 68 70 73 76 83 84 118 128 131]
[0 1 8 57 60 68 70 73 76 83 84 118 120 127 128 131]
[0 1 8 57 60 68 70 73 76 83 84 86 118 128 131]
[0 1 8 57 60 68 70 73 76 83 84 86 118 120 127 128 131]
[0 1 8 57 60 68 70 73 76 83 84 86 95 118 128 131]
[0 1 8 57 60 68 70 73 76 83 84 86 95 118 120 127 128 131]
[0 1 8 57 60 68 70 73 76 83 84 86 95 97 107 118 128 131]
[0 1 8 57 60 68 70 73 76 83 84 86 95 97 107 118 120 127 128 131]
[0 1 8 57 60 68 70 73 76 83 84 86 95 97 107 109 118 128 131]
[0 1 8 57 60 68 70 73 76 83 84 86 95 97 107 109 118 120 127 128 131]
[0 1 8 57 60 68 70 73 76 83 84 86 95 97 107 109 117 118 128 131]
[0 1 8 57 60 68 70 73 76 83 84 86 95 97 107 109 117 118 120 127 128 131]
[0 1 8 57 60 68 70 73 76 83 84 86 95 97 99 106 107 118 128 131]
[0 1 8 57 60 68 70 73 76 83 84 86 95 97 99 106 107 118 120 127 128 131]
[0 1 8 57 60 68 70 73 76 83 84 86 95 97 99 106 107 109 118 128 131]
[0 1 8 57 60 68 70 73 76 83 84 86 95 97 99 106 107 109 118 120 127 128 131]
[0 1 8 57 60 68 70 73 76 83 84 86 95 97 99 106 107 109 117 118 128 131]
[0 1 8 57 60 68 70 73 76 83 84 86 95 97 99 106 107 109 117 118 120 127 128 131]
[0 1 8 49 56 57 70 128 131]
[0 1 8 49 56 57 70 118 128 131]
[0 1 8 49 56 57 70 118 120 127 128 131]
[0 1 8 49 56 57 70 73 97 107 118 128 131]
[0 1 8 49 56 57 70 73 97 107 118 120 127 128 131]
[0 1 8 49 56 57 70 73 97 107 109 118 128 131]
[0 1 8 49 56 57 70 73 97 107 109 118 120 127 128 131]
[0 1 8 49 56 57 70 73 97 107 109 117 118 128 131]
[0 1 8 49 56 57 70 73 97 107 109 117 118 120 127 128 131]
[0 1 8 49 56 57 70 73 97 99 106 107 118 128 131]
[0 1 8 49 56 57 70 73 97 99 106 107 118 120 127 128 131]
[0 1 8 49 56 57 70 73 97 99 106 107 109 118 128 131]
[0 1 8 49 56 57 70 73 97 99 106 107 109 118 120 127 128 131]
[0 1 8 49 56 57 70 73 97 99 106 107 109 117 118 128 131]
[0 1 8 49 56 57 70 73 97 99 106 107 109 117 118 120 127 128 131]
[0 1 8 49 56 57 70 73 84 118 128 131]
[0 1 8 49 56 57 70 73 84 118 120 127 128 131]
[0 1 8 49 56 57 70 73 84 86 118 128 131]
[0 1 8 49 56 57 70 73 84 86 118 120 127 128 131]
[0 1 8 49 56 57 70 73 84 86 95 118 128 131]
[0 1 8 49 56 57 70 73 84 86 95 118 120 127 128 131]
[0 1 8 49 56 57 70 73 84 86 95 97 107 118 128 131]
[0 1 8 49 56 57 70 73 84 86 95 97 107 118 120 127 128 131]
[0 1 8 49 56 57 70 73 84 86 95 97 107 109 118 128 131]
[0 1 8 49 56 57 70 73 84 86 95 97 107 109 118 120 127 128 131]
[0 1 8 49 56 57 70 73 84 86 95 97 107 109 117 118 128 131]
[0 1 8 49 56 57 70 73 84 86 95 97 107 109 117 118 120 127 128 131]
[0 1 8 49 56 57 70 73 84 86 95 97 99 106 107 118 128 131]
[0 1 8 49 56 57 70 73 84 86 95 97 99 106 107 118 120 127 128 131]
[0 1 8 49 56 57 70 73 84 86 95 97 99 106 107 109 118 128 131]
[0 1 8 49 56 57 70 73 84 86 95 97 99 106 107 109 118 120 127 128 131]
[0 1 8 49 56 57 70 73 84 86 95 97 99 106 107 109 117 118 128 131]
[0 1 8 49 56 57 70 73 84 86 95 97 99 106 107 109 117 118 120 127 128 131]
[0 1 8 49 56 57 70 73 76 83 84 118 128 131]
[0 1 8 49 56 57 70 73 76 83 84 118 120 127 128 131]
[0 1 8 49 56 57 70 73 76 83 84 86 118 128 131]
[0 1 8 49 56 57 70 73 76 83 84 86 118 120 127 128 131]
[0 1 8 49 56 57 70 73 76 83 84 86 95 118 128 131]
[0 1 8 49 56 57 70 73 76 83 84 86 95 118 120 127 128 131]
[0 1 8 49 56 57 70 73 76 83 84 86 95 97 107 118 128 131]
[0 1 8 49 56 57 70 73 76 83 84 86 95 97 107 118 120 127 128 131]
[0 1 8 49 56 57 70 73 76 83 84 86 95 97 107 109 118 128 131]
[0 1 8 49 56 57 70 73 76 83 84 86 95 97 107 109 118 120 127 128 131]
[0 1 8 49 56 57 70 73 76 83 84 86 95 97 107 109 117 118 128 131]
[0 1 8 49 56 57 70 73 76 83 84 86 95 97 107 109 117 118 120 127 128 131]
[0 1 8 49 56 57 70 73 76 83 84 86 95 97 99 106 107 118 128 131]
[0 1 8 49 56 57 70 73 76 83 84 86 95 97 99 106 107 118 120 127 128 131]
[0 1 8 49 56 57 70 73 76 83 84 86 95 97 99 106 107 109 118 128 131]
[0 1 8 49 56 57 70 73 76 83 84 86 95 97 99 106 107 109 118 120 127 128 131]
[0 1 8 49 56 57 70 73 76 83 84 86 95 97 99 106 107 109 117 118 128 131]
[0 1 8 49 56 57 70 73 76 83 84 86 95 97 99 106 107 109 117 118 120 127 128 131]
[0 1 8 49 56 57 60 70 128 131]
[0 1 8 49 56 57 60 70 118 128 131]
[0 1 8 49 56 57 60 70 118 120 127 128 131]
[0 1 8 49 56 57 60 70 73 97 107 118 128 131]
[0 1 8 49 56 57 60 70 73 97 107 118 120 127 128 131]
[0 1 8 49 56 57 60 70 73 97 107 109 118 128 131]
[0 1 8 49 56 57 60 70 73 97 107 109 118 120 127 128 131]
[0 1 8 49 56 57 60 70 73 97 107 109 117 118 128 131]
[0 1 8 49 56 57 60 70 73 97 107 109 117 118 120 127 128 131]
[0 1 8 49 56 57 60 70 73 97 99 106 107 118 128 131]
[0 1 8 49 56 57 60 70 73 97 99 106 107 118 120 127 128 131]
[0 1 8 49 56 57 60 70 73 97 99 106 107 109 118 128 131]
[0 1 8 49 56 57 60 70 73 97 99 106 107 109 118 120 127 128 131]
[0 1 8 49 56 57 60 70 73 97 99 106 107 109 117 118 128 131]
[0 1 8 49 56 57 60 70 73 97 99 106 107 109 117 118 120 127 128 131]
[0 1 8 49 56 57 60 70 73 84 118 128 131]
[0 1 8 49 56 57 60 70 73 84 118 120 127 128 131]
[0 1 8 49 56 57 60 70 73 84 86 118 128 131]
[0 1 8 49 56 57 60 70 73 84 86 118 120 127 128 131]
[0 1 8 49 56 57 60 70 73 84 86 95 118 128 131]
[0 1 8 49 56 57 60 70 73 84 86 95 118 120 127 128 131]
[0 1 8 49 56 57 60 70 73 84 86 95 97 107 118 128 131]
[0 1 8 49 56 57 60 70 73 84 86 95 97 107 118 120 127 128 131]
[0 1 8 49 56 57 60 70 73 84 86 95 97 107 109 118 128 131]
[0 1 8 49 56 57 60 70 73 84 86 95 97 107 109 118 120 127 128 131]
[0 1 8 49 56 57 60 70 73 84 86 95 97 107 109 117 118 128 131]
[0 1 8 49 56 57 60 70 73 84 86 95 97 107 109 117 118 120 127 128 131]
[0 1 8 49 56 57 60 70 73 84 86 95 97 99 106 107 118 128 131]
[0 1 8 49 56 57 60 70 73 84 86 95 97 99 106 107 118 120 127 128 131]
[0 1 8 49 56 57 60 70 73 84 86 95 97 99 106 107 109 118 128 131]
[0 1 8 49 56 57 60 70 73 84 86 95 97 99 106 107 109 118 120 127 128 131]
[0 1 8 49 56 57 60 70 73 84 86 95 97 99 106 107 109 117 118 128 131]
[0 1 8 49 56 57 60 70 73 84 86 95 97 99 106 107 109 117 118 120 127 128 131]
[0 1 8 49 56 57 60 70 73 76 83 84 118 128 131]
[0 1 8 49 56 57 60 70 73 76 83 84 118 120 127 128 131]
[0 1 8 49 56 57 60 70 73 76 83 84 86 118 128 131]
[0 1 8 49 56 57 60 70 73 76 83 84 86 118 120 127 128 131]
[0 1 8 49 56 57 60 70 73 76 83 84 86 95 118 128 131]
[0 1 8 49 56 57 60 70 73 76 83 84 86 95 118 120 127 128 131]
[0 1 8 49 56 57 60 70 73 76 83 84 86 95 97 107 118 128 131]
[0 1 8 49 56 57 60 70 73 76 83 84 86 95 97 107 118 120 127 128 131]
[0 1 8 49 56 57 60 70 73 76 83 84 86 95 97 107 109 118 128 131]
[0 1 8 49 56 57 60 70 73 76 83 84 86 95 97 107 109 118 120 127 128 131]
[0 1 8 49 56 57 60 70 73 76 83 84 86 95 97 107 109 117 118 128 131]
[0 1 8 49 56 57 60 70 73 76 83 84 86 95 97 107 109 117 118 120 127 128 131]
[0 1 8 49 56 57 60 70 73 76 83 84 86 95 97 99 106 107 118 128 131]
[0 1 8 49 56 57 60 70 73 76 83 84 86 95 97 99 106 107 118 120 127 128 131]
[0 1 8 49 56 57 60 70 73 76 83 84 86 95 97 99 106 107 109 118 128 131]
[0 1 8 49 56 57 60 70 73 76 83 84 86 95 97 99 106 107 109 118 120 127 128 131]
[0 1 8 49 56 57 60 70 73 76 83 84 86 95 97 99 106 107 109 117 118 128 131]
[0 1 8 49 56 57 60 70 73 76 83 84 86 95 97 99 106 107 109 117 118 120 127 128 131]
[0 1 8 49 56 57 60 68 118 128 131]
[0 1 8 49 56 57 60 68 118 120 127 128 131]
[0 1 8 49 56 57 60 68 70 128 131]
[0 1 8 49 56 57 60 68 70 118 128 131]
[0 1 8 49 56 57 60 68 70 118 120 127 128 131]
[0 1 8 49 56 57 60 68 70 73 97 107 118 128 131]
[0 1 8 49 56 57 60 68 70 73 97 107 118 120 127 128 131]
[0 1 8 49 56 57 60 68 70 73 97 107 109 118 128 131]
[0 1 8 49 56 57 60 68 70 73 97 107 109 118 120 127 128 131]
[0 1 8 49 56 57 60 68 70 73 97 107 109 117 118 128 131]
[0 1 8 49 56 57 60 68 70 73 97 107 109 117 118 120 127 128 131]
[0 1 8 49 56 57 60 68 70 73 97 99 106 107 118 128 131]
[0 1 8 49 56 57 60 68 70 73 97 99 106 107 118 120 127 128 131]
[0 1 8 49 56 57 60 68 70 73 97 99 106 107 109 118 128 131]
[0 1 8 49 56 57 60 68 70 73 97 99 106 107 109 118 120 127 128 131]
[0 1 8 49 56 57 60 68 70 73 97 99 106 107 109 117 118 128 131]
[0 1 8 49 56 57 60 68 70 73 97 99 106 107 109 117 118 120 127 128 131]
[0 1 8 49 56 57 60 68 70 73 84 118 128 131]
[0 1 8 49 56 57 60 68 70 73 84 118 120 127 128 131]
[0 1 8 49 56 57 60 68 70 73 84 86 118 128 131]
[0 1 8 49 56 57 60 68 70 73 84 86 118 120 127 128 131]
[0 1 8 49 56 57 60 68 70 73 84 86 95 118 128 131]
[0 1 8 49 56 57 60 68 70 73 84 86 95 118 120 127 128 131]
[0 1 8 49 56 57 60 68 70 73 84 86 95 97 107 118 128 131]
[0 1 8 49 56 57 60 68 70 73 84 86 95 97 107 118 120 127 128 131]
[0 1 8 49 56 57 60 68 70 73 84 86 95 97 107 109 118 128 131]
[0 1 8 49 56 57 60 68 70 73 84 86 95 97 107 109 118 120 127 128 131]
[0 1 8 49 56 57 60 68 70 73 84 86 95 97 107 109 117 118 128 131]
[0 1 8 49 56 57 60 68 70 73 84 86 95 97 107 109 117 118 120 127 128 131]
[0 1 8 49 56 57 60 68 70 73 84 86 95 97 99 106 107 118 128 131]
[0 1 8 49 56 57 60 68 70 73 84 86 95 97 99 106 107 118 120 127 128 131]
[0 1 8 49 56 57 60 68 70 73 84 86 95 97 99 106 107 109 118 128 131]
[0 1 8 49 56 57 60 68 70 73 84 86 95 97 99 106 107 109 118 120 127 128 131]
[0 1 8 49 56 57 60 68 70 73 84 86 95 97 99 106 107 109 117 118 128 131]
[0 1 8 49 56 57 60 68 70 73 84 86 95 97 99 106 107 109 117 118 120 127 128 131]
[0 1 8 49 56 57 60 68 70 73 76 83 84 118 128 131]
[0 1 8 49 56 57 60 68 70 73 76 83 84 118 120 127 128 131]
[0 1 8 49 56 57 60 68 70 73 76 83 84 86 118 128 131]
[0 1 8 49 56 57 60 68 70 73 76 83 84 86 118 120 127 128 131]
[0 1 8 49 56 57 60 68 70 73 76 83 84 86 95 118 128 131]
[0 1 8 49 56 57 60 68 70 73 76 83 84 86 95 118 120 127 128 131]
[0 1 8 49 56 57 60 68 70 73 76 83 84 86 95 97 107 118 128 131]
[0 1 8 49 56 57 60 68 70 73 76 83 84 86 95 97 107 118 120 127 128 131]
[0 1 8 49 56 57 60 68 70 73 76 83 84 86 95 97 107 109 118 128 131]
[0 1 8 49 56 57 60 68 70 73 76 83 84 86 95 97 107 109 118 120 127 128 131]
[0 1 8 49 56 57 60 68 70 73 76 83 84 86 95 97 107 109 117 118 128 131]
[0 1 8 49 56 57 60 68 70 73 76 83 84 86 95 97 107 109 117 118 120 127 128 131]
[0 1 8 49 56 57 60 68 70 73 76 83 84 86 95 97 99 106 107 118 128 131]
[0 1 8 49 56 57 60 68 70 73 76 83 84 86 95 97 99 106 107 118 120 127 128 131]
[0 1 8 49 56 57 60 68 70 73 76 83 84 86 95 97 99 106 107 109 118 128 131]
[0 1 8 49 56 57 60 68 70 73 76 83 84 86 95 97 99 106 107 109 118 120 127 128 131]
[0 1 8 49 56 57 60 68 70 73 76 83 84 86 95 97 99 106 107 109 117 118 128 131]
[0 1 8 49 56 57 60 68 70 73 76 83 84 86 95 97 99 106 107 109 117 118 120 127 128 131]
|f268| = list_max([
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    15;
    20;
    14;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    15;
    20;
    14;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    15;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    15;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    15;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    15;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    15;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    15;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    15;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    15;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    15;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    15;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    15;
    8;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    15;
    8;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    7;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    7;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    7;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    7;
    15;
    20;
    14;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    7;
    15;
    20;
    14;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    7;
    15;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    7;
    15;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    7;
    15;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    7;
    15;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    7;
    15;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    7;
    15;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    7;
    15;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    7;
    15;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    7;
    15;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    7;
    15;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    7;
    15;
    8;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    7;
    15;
    8;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    20;
    14;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    20;
    14;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    8;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    8;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    20;
    14;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    20;
    14;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    8;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    8;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    7;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    7;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    7;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    7;
    15;
    20;
    14;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    7;
    15;
    20;
    14;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    7;
    15;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    7;
    15;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    7;
    15;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    7;
    15;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    7;
    15;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    7;
    15;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    7;
    15;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    7;
    15;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    7;
    15;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    7;
    15;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    7;
    15;
    8;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    7;
    15;
    8;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    20;
    14;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    20;
    14;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    8;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    8;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    20;
    14;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    20;
    14;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    8;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    8;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    18;
    7
  ]);
  list_sum([
    6;
    (list_max([
      (14 + (list_sum(|f29|, |f56|))) * (N([pn0], [R(56, 0, i32, R(29, 0, i32, pn0))], [pn0], [pn0]));
      (19 + |f56|) * (N([m[0]], [R(56, 0, i32, m[0])], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    106;
    (list_max([
      (32 + |f29|) * (N([ln3; pn0; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; pn0; 0], [(R(29, 11, i32, pn0)) + -48; pn0; ln3 + (pn1 * 10)]));
      37 * (N([ln3; m[0]; pn1], [select((ln3 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [(R(29, 22, i32, pn0)) + -48; m[0]; 0], [m[0] + -48; m[0]; ln3 + (pn1 * 10)]))
    ])) + (list_max(1, 1));
    4;
    13;
    (list_max([
      (36 + |f29|) * (N([lN10; lN9; pn0], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u((R(29, 0, i32, pn0)) + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; pn0], [i64.extend_i32_u((R(29, 7, i32, pn0)) + -48); (lN9 + lN10) * 10; pn0]));
      41 * (N([lN10; lN9; m[0]], [((lN9 + lN10) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [i64.extend_i32_u((R(29, 22, i32, pn0)) + -48); 0 * 10; m[0]], [i64.extend_i32_u(m[0] + -48); (lN9 + lN10) * 10; m[0]]))
    ])) + (list_max(1, 1));
    3;
    7;
    15;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]));
      34 * (N([ln3; ln4; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 + (pn1 * ln4)) <= 119304646)], [m[0]; 0; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 + (pn1 * ln4); m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    8;
    (list_max([
      (44 + (list_sum(|f29|, |f41|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (49 + |f41|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + (list_max(1, 1));
    1;
    20;
    (list_max([
      (29 + |f29|) * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]));
      34 * (N([ln3; ln4; ln7; m[0]; pn1], [select(pn1 > m[0], 0, (ln3 | (ln4 shl ln7)) <= 134217727)], [m[0]; 0; m[0]; m[0]; select(pn1, 10, pn1)], [m[0]; ln3 | (ln4 shl ln7); ln7; m[0]; pn1]))
    ])) + (list_max(1, 1));
    4;
    14;
    (list_max([
      (33 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    1;
    8;
    (list_max([
      (17 + |f29|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + (list_max(1, 1));
    8;
    18;
    7
  ])
])
