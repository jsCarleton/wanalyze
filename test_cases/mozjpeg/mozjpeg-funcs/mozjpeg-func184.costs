ebb costs:
[0]: 117
[22]: ((18 * N([ln4; ln7], [((ln4 + 1) != ln7)], [(0 + 1); (m[4220] /u 3)], [(ln4 + 1); ln7])) + 1)
[24]: 1
[25]: 36
[33]: 105
[66]: ((30 * N([ln11; ln4], [((ln4 + 1) != ln11)], [(((m[4220] + 1) - (m[332] + m[4172])) /s 6); (0 + 1)], [ln11; (ln4 + 1)])) + 1)
[68]: 1
[69]: 36
[77]: 108
[99]: 102
[116]: (((14 + |f35|) * N([ln1; ln4], [((ln1 + -1) > ln4)], [(m[5008] + -1); select((m[0] < m[5012]), m[5012], m[0])], [(ln1 + -1); ln4])) + 1)
[118]: 1
[119]: 67
[128]: (((22 + |f35|) * N([ln1; ln4], [((ln1 + -1) > ln4)], [(m[5012] + -1); select((m[0] < m[5012]), m[5012], m[0])], [(ln1 + -1); ln4])) + 1)
[130]: 1
[131]: 5
[133]: (list_max(((25 + |f35|) * N([ln4], [(ln4 > 1)], [select((m[0] < m[5012]), m[5012], m[0])], [(ln4 + -1)])), ((41 + |f35|) * N([ln4], [(ln4 > 1)], [select((m[0] < m[5012]), m[5012], m[0])], [(ln4 + -1)]))) + list_max(1, 1))
[137]: 1
[138]: 13
[140]: (list_max((15 * N([ln1; ln4], [((ln4 + 1) < ln1)], [m[168]; 0], [ln1; (ln4 + 1)])), ((21 + |f33|) * N([ln4; m[168]], [((ln4 + 1) < m[168])], [0; m[168]], [(ln4 + 1); m[168]]))) + list_max(1, 1))
[144]: 1
[145]: 7
[147]: 40
[153]: (list_max((20 * N([ln1], [((ln1 + 1) != 64)], [1], [(ln1 + 1)])), (54 * N([ln1], [((ln1 + 1) != 64)], [1], [(ln1 + 1)])), (55 * N([ln1], [((ln1 + 1) != 64)], [1], [(ln1 + 1)]))) + list_max(1, 1, 1))
[162]: 3
[163]: (list_max((20 * N([ln1], [((ln1 + 1) != 64)], [1], [(ln1 + 1)])), (54 * N([ln1], [((ln1 + 1) != 64)], [1], [(ln1 + 1)])), (55 * N([ln1], [((ln1 + 1) != 64)], [1], [(ln1 + 1)]))) + list_max(1, 1, 1))
[172]: 3
[173]: (list_max((20 * N([ln1], [((ln1 + 1) != 64)], [1], [(ln1 + 1)])), (56 * N([ln1], [((ln1 + 1) != 64)], [1], [(ln1 + 1)])), (57 * N([ln1], [((ln1 + 1) != 64)], [1], [(ln1 + 1)]))) + list_max(1, 1, 1))
[182]: 3
[183]: (list_max((20 * N([ln1], [((ln1 + 1) != 64)], [1], [(ln1 + 1)])), (56 * N([ln1], [((ln1 + 1) != 64)], [1], [(ln1 + 1)])), (57 * N([ln1], [((ln1 + 1) != 64)], [1], [(ln1 + 1)]))) + list_max(1, 1, 1))
[192]: 1
[194]: 13
[195]: 7
1437 ebb paths found
[0 195]
[0 194 195]
[0 147 195]
[0 147 153 162 163 172 173 182 183 192 195]
[0 147 153 162 163 172 173 182 183 192 194 195]
[0 145 195]
[0 145 147 195]
[0 145 147 153 162 163 172 173 182 183 192 195]
[0 145 147 153 162 163 172 173 182 183 192 194 195]
[0 99 145 195]
[0 99 145 147 195]
[0 99 145 147 153 162 163 172 173 182 183 192 195]
[0 99 145 147 153 162 163 172 173 182 183 192 194 195]
[0 99 119 131 138 145 195]
[0 99 119 131 138 145 147 195]
[0 99 119 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 99 119 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 99 119 131 138 140 144 145 195]
[0 99 119 131 138 140 144 145 147 195]
[0 99 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 99 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 99 119 131 133 137 138 145 195]
[0 99 119 131 133 137 138 145 147 195]
[0 99 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 99 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 99 119 131 133 137 138 140 144 145 195]
[0 99 119 131 133 137 138 140 144 145 147 195]
[0 99 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 99 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 99 119 128 130 131 138 145 195]
[0 99 119 128 130 131 138 145 147 195]
[0 99 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 99 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 99 119 128 130 131 138 140 144 145 195]
[0 99 119 128 130 131 138 140 144 145 147 195]
[0 99 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 99 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 99 119 128 130 131 133 137 138 145 195]
[0 99 119 128 130 131 133 137 138 145 147 195]
[0 99 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 99 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 99 119 128 130 131 133 137 138 140 144 145 195]
[0 99 119 128 130 131 133 137 138 140 144 145 147 195]
[0 99 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 99 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 99 116 118 119 131 138 145 195]
[0 99 116 118 119 131 138 145 147 195]
[0 99 116 118 119 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 99 116 118 119 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 99 116 118 119 131 138 140 144 145 195]
[0 99 116 118 119 131 138 140 144 145 147 195]
[0 99 116 118 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 99 116 118 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 99 116 118 119 131 133 137 138 145 195]
[0 99 116 118 119 131 133 137 138 145 147 195]
[0 99 116 118 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 99 116 118 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 99 116 118 119 131 133 137 138 140 144 145 195]
[0 99 116 118 119 131 133 137 138 140 144 145 147 195]
[0 99 116 118 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 99 116 118 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 99 116 118 119 128 130 131 138 145 195]
[0 99 116 118 119 128 130 131 138 145 147 195]
[0 99 116 118 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 99 116 118 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 99 116 118 119 128 130 131 138 140 144 145 195]
[0 99 116 118 119 128 130 131 138 140 144 145 147 195]
[0 99 116 118 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 99 116 118 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 99 116 118 119 128 130 131 133 137 138 145 195]
[0 99 116 118 119 128 130 131 133 137 138 145 147 195]
[0 99 116 118 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 99 116 118 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 99 116 118 119 128 130 131 133 137 138 140 144 145 195]
[0 99 116 118 119 128 130 131 133 137 138 140 144 145 147 195]
[0 99 116 118 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 99 116 118 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 99 145 195]
[0 33 99 145 147 195]
[0 33 99 145 147 153 162 163 172 173 182 183 192 195]
[0 33 99 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 99 119 131 138 145 195]
[0 33 99 119 131 138 145 147 195]
[0 33 99 119 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 33 99 119 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 99 119 131 138 140 144 145 195]
[0 33 99 119 131 138 140 144 145 147 195]
[0 33 99 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 33 99 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 99 119 131 133 137 138 145 195]
[0 33 99 119 131 133 137 138 145 147 195]
[0 33 99 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 33 99 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 99 119 131 133 137 138 140 144 145 195]
[0 33 99 119 131 133 137 138 140 144 145 147 195]
[0 33 99 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 33 99 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 99 119 128 130 131 138 145 195]
[0 33 99 119 128 130 131 138 145 147 195]
[0 33 99 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 33 99 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 99 119 128 130 131 138 140 144 145 195]
[0 33 99 119 128 130 131 138 140 144 145 147 195]
[0 33 99 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 33 99 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 99 119 128 130 131 133 137 138 145 195]
[0 33 99 119 128 130 131 133 137 138 145 147 195]
[0 33 99 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 33 99 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 99 119 128 130 131 133 137 138 140 144 145 195]
[0 33 99 119 128 130 131 133 137 138 140 144 145 147 195]
[0 33 99 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 33 99 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 99 116 118 119 131 138 145 195]
[0 33 99 116 118 119 131 138 145 147 195]
[0 33 99 116 118 119 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 33 99 116 118 119 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 99 116 118 119 131 138 140 144 145 195]
[0 33 99 116 118 119 131 138 140 144 145 147 195]
[0 33 99 116 118 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 33 99 116 118 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 99 116 118 119 131 133 137 138 145 195]
[0 33 99 116 118 119 131 133 137 138 145 147 195]
[0 33 99 116 118 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 33 99 116 118 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 99 116 118 119 131 133 137 138 140 144 145 195]
[0 33 99 116 118 119 131 133 137 138 140 144 145 147 195]
[0 33 99 116 118 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 33 99 116 118 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 99 116 118 119 128 130 131 138 145 195]
[0 33 99 116 118 119 128 130 131 138 145 147 195]
[0 33 99 116 118 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 33 99 116 118 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 99 116 118 119 128 130 131 138 140 144 145 195]
[0 33 99 116 118 119 128 130 131 138 140 144 145 147 195]
[0 33 99 116 118 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 33 99 116 118 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 99 116 118 119 128 130 131 133 137 138 145 195]
[0 33 99 116 118 119 128 130 131 133 137 138 145 147 195]
[0 33 99 116 118 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 33 99 116 118 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 99 116 118 119 128 130 131 133 137 138 140 144 145 195]
[0 33 99 116 118 119 128 130 131 133 137 138 140 144 145 147 195]
[0 33 99 116 118 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 33 99 116 118 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 77 99 145 195]
[0 33 77 99 145 147 195]
[0 33 77 99 145 147 153 162 163 172 173 182 183 192 195]
[0 33 77 99 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 77 99 119 131 138 145 195]
[0 33 77 99 119 131 138 145 147 195]
[0 33 77 99 119 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 33 77 99 119 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 77 99 119 131 138 140 144 145 195]
[0 33 77 99 119 131 138 140 144 145 147 195]
[0 33 77 99 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 33 77 99 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 77 99 119 131 133 137 138 145 195]
[0 33 77 99 119 131 133 137 138 145 147 195]
[0 33 77 99 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 33 77 99 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 77 99 119 131 133 137 138 140 144 145 195]
[0 33 77 99 119 131 133 137 138 140 144 145 147 195]
[0 33 77 99 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 33 77 99 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 77 99 119 128 130 131 138 145 195]
[0 33 77 99 119 128 130 131 138 145 147 195]
[0 33 77 99 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 33 77 99 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 77 99 119 128 130 131 138 140 144 145 195]
[0 33 77 99 119 128 130 131 138 140 144 145 147 195]
[0 33 77 99 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 33 77 99 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 77 99 119 128 130 131 133 137 138 145 195]
[0 33 77 99 119 128 130 131 133 137 138 145 147 195]
[0 33 77 99 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 33 77 99 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 77 99 119 128 130 131 133 137 138 140 144 145 195]
[0 33 77 99 119 128 130 131 133 137 138 140 144 145 147 195]
[0 33 77 99 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 33 77 99 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 77 99 116 118 119 131 138 145 195]
[0 33 77 99 116 118 119 131 138 145 147 195]
[0 33 77 99 116 118 119 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 33 77 99 116 118 119 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 77 99 116 118 119 131 138 140 144 145 195]
[0 33 77 99 116 118 119 131 138 140 144 145 147 195]
[0 33 77 99 116 118 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 33 77 99 116 118 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 77 99 116 118 119 131 133 137 138 145 195]
[0 33 77 99 116 118 119 131 133 137 138 145 147 195]
[0 33 77 99 116 118 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 33 77 99 116 118 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 77 99 116 118 119 131 133 137 138 140 144 145 195]
[0 33 77 99 116 118 119 131 133 137 138 140 144 145 147 195]
[0 33 77 99 116 118 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 33 77 99 116 118 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 77 99 116 118 119 128 130 131 138 145 195]
[0 33 77 99 116 118 119 128 130 131 138 145 147 195]
[0 33 77 99 116 118 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 33 77 99 116 118 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 77 99 116 118 119 128 130 131 138 140 144 145 195]
[0 33 77 99 116 118 119 128 130 131 138 140 144 145 147 195]
[0 33 77 99 116 118 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 33 77 99 116 118 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 77 99 116 118 119 128 130 131 133 137 138 145 195]
[0 33 77 99 116 118 119 128 130 131 133 137 138 145 147 195]
[0 33 77 99 116 118 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 33 77 99 116 118 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 77 99 116 118 119 128 130 131 133 137 138 140 144 145 195]
[0 33 77 99 116 118 119 128 130 131 133 137 138 140 144 145 147 195]
[0 33 77 99 116 118 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 33 77 99 116 118 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 69 99 145 195]
[0 33 69 99 145 147 195]
[0 33 69 99 145 147 153 162 163 172 173 182 183 192 195]
[0 33 69 99 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 69 99 119 131 138 145 195]
[0 33 69 99 119 131 138 145 147 195]
[0 33 69 99 119 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 33 69 99 119 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 69 99 119 131 138 140 144 145 195]
[0 33 69 99 119 131 138 140 144 145 147 195]
[0 33 69 99 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 33 69 99 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 69 99 119 131 133 137 138 145 195]
[0 33 69 99 119 131 133 137 138 145 147 195]
[0 33 69 99 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 33 69 99 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 69 99 119 131 133 137 138 140 144 145 195]
[0 33 69 99 119 131 133 137 138 140 144 145 147 195]
[0 33 69 99 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 33 69 99 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 69 99 119 128 130 131 138 145 195]
[0 33 69 99 119 128 130 131 138 145 147 195]
[0 33 69 99 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 33 69 99 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 69 99 119 128 130 131 138 140 144 145 195]
[0 33 69 99 119 128 130 131 138 140 144 145 147 195]
[0 33 69 99 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 33 69 99 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 69 99 119 128 130 131 133 137 138 145 195]
[0 33 69 99 119 128 130 131 133 137 138 145 147 195]
[0 33 69 99 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 33 69 99 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 69 99 119 128 130 131 133 137 138 140 144 145 195]
[0 33 69 99 119 128 130 131 133 137 138 140 144 145 147 195]
[0 33 69 99 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 33 69 99 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 69 99 116 118 119 131 138 145 195]
[0 33 69 99 116 118 119 131 138 145 147 195]
[0 33 69 99 116 118 119 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 33 69 99 116 118 119 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 69 99 116 118 119 131 138 140 144 145 195]
[0 33 69 99 116 118 119 131 138 140 144 145 147 195]
[0 33 69 99 116 118 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 33 69 99 116 118 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 69 99 116 118 119 131 133 137 138 145 195]
[0 33 69 99 116 118 119 131 133 137 138 145 147 195]
[0 33 69 99 116 118 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 33 69 99 116 118 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 69 99 116 118 119 131 133 137 138 140 144 145 195]
[0 33 69 99 116 118 119 131 133 137 138 140 144 145 147 195]
[0 33 69 99 116 118 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 33 69 99 116 118 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 69 99 116 118 119 128 130 131 138 145 195]
[0 33 69 99 116 118 119 128 130 131 138 145 147 195]
[0 33 69 99 116 118 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 33 69 99 116 118 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 69 99 116 118 119 128 130 131 138 140 144 145 195]
[0 33 69 99 116 118 119 128 130 131 138 140 144 145 147 195]
[0 33 69 99 116 118 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 33 69 99 116 118 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 69 99 116 118 119 128 130 131 133 137 138 145 195]
[0 33 69 99 116 118 119 128 130 131 133 137 138 145 147 195]
[0 33 69 99 116 118 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 33 69 99 116 118 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 69 99 116 118 119 128 130 131 133 137 138 140 144 145 195]
[0 33 69 99 116 118 119 128 130 131 133 137 138 140 144 145 147 195]
[0 33 69 99 116 118 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 33 69 99 116 118 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 69 77 99 145 195]
[0 33 69 77 99 145 147 195]
[0 33 69 77 99 145 147 153 162 163 172 173 182 183 192 195]
[0 33 69 77 99 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 69 77 99 119 131 138 145 195]
[0 33 69 77 99 119 131 138 145 147 195]
[0 33 69 77 99 119 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 33 69 77 99 119 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 69 77 99 119 131 138 140 144 145 195]
[0 33 69 77 99 119 131 138 140 144 145 147 195]
[0 33 69 77 99 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 33 69 77 99 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 69 77 99 119 131 133 137 138 145 195]
[0 33 69 77 99 119 131 133 137 138 145 147 195]
[0 33 69 77 99 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 33 69 77 99 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 69 77 99 119 131 133 137 138 140 144 145 195]
[0 33 69 77 99 119 131 133 137 138 140 144 145 147 195]
[0 33 69 77 99 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 33 69 77 99 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 69 77 99 119 128 130 131 138 145 195]
[0 33 69 77 99 119 128 130 131 138 145 147 195]
[0 33 69 77 99 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 33 69 77 99 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 69 77 99 119 128 130 131 138 140 144 145 195]
[0 33 69 77 99 119 128 130 131 138 140 144 145 147 195]
[0 33 69 77 99 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 33 69 77 99 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 69 77 99 119 128 130 131 133 137 138 145 195]
[0 33 69 77 99 119 128 130 131 133 137 138 145 147 195]
[0 33 69 77 99 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 33 69 77 99 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 69 77 99 119 128 130 131 133 137 138 140 144 145 195]
[0 33 69 77 99 119 128 130 131 133 137 138 140 144 145 147 195]
[0 33 69 77 99 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 33 69 77 99 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 69 77 99 116 118 119 131 138 145 195]
[0 33 69 77 99 116 118 119 131 138 145 147 195]
[0 33 69 77 99 116 118 119 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 33 69 77 99 116 118 119 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 69 77 99 116 118 119 131 138 140 144 145 195]
[0 33 69 77 99 116 118 119 131 138 140 144 145 147 195]
[0 33 69 77 99 116 118 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 33 69 77 99 116 118 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 69 77 99 116 118 119 131 133 137 138 145 195]
[0 33 69 77 99 116 118 119 131 133 137 138 145 147 195]
[0 33 69 77 99 116 118 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 33 69 77 99 116 118 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 69 77 99 116 118 119 131 133 137 138 140 144 145 195]
[0 33 69 77 99 116 118 119 131 133 137 138 140 144 145 147 195]
[0 33 69 77 99 116 118 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 33 69 77 99 116 118 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 69 77 99 116 118 119 128 130 131 138 145 195]
[0 33 69 77 99 116 118 119 128 130 131 138 145 147 195]
[0 33 69 77 99 116 118 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 33 69 77 99 116 118 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 69 77 99 116 118 119 128 130 131 138 140 144 145 195]
[0 33 69 77 99 116 118 119 128 130 131 138 140 144 145 147 195]
[0 33 69 77 99 116 118 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 33 69 77 99 116 118 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 69 77 99 116 118 119 128 130 131 133 137 138 145 195]
[0 33 69 77 99 116 118 119 128 130 131 133 137 138 145 147 195]
[0 33 69 77 99 116 118 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 33 69 77 99 116 118 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 69 77 99 116 118 119 128 130 131 133 137 138 140 144 145 195]
[0 33 69 77 99 116 118 119 128 130 131 133 137 138 140 144 145 147 195]
[0 33 69 77 99 116 118 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 33 69 77 99 116 118 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 66 68 69 99 145 195]
[0 33 66 68 69 99 145 147 195]
[0 33 66 68 69 99 145 147 153 162 163 172 173 182 183 192 195]
[0 33 66 68 69 99 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 66 68 69 99 119 131 138 145 195]
[0 33 66 68 69 99 119 131 138 145 147 195]
[0 33 66 68 69 99 119 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 33 66 68 69 99 119 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 66 68 69 99 119 131 138 140 144 145 195]
[0 33 66 68 69 99 119 131 138 140 144 145 147 195]
[0 33 66 68 69 99 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 33 66 68 69 99 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 66 68 69 99 119 131 133 137 138 145 195]
[0 33 66 68 69 99 119 131 133 137 138 145 147 195]
[0 33 66 68 69 99 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 33 66 68 69 99 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 66 68 69 99 119 131 133 137 138 140 144 145 195]
[0 33 66 68 69 99 119 131 133 137 138 140 144 145 147 195]
[0 33 66 68 69 99 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 33 66 68 69 99 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 66 68 69 99 119 128 130 131 138 145 195]
[0 33 66 68 69 99 119 128 130 131 138 145 147 195]
[0 33 66 68 69 99 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 33 66 68 69 99 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 66 68 69 99 119 128 130 131 138 140 144 145 195]
[0 33 66 68 69 99 119 128 130 131 138 140 144 145 147 195]
[0 33 66 68 69 99 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 33 66 68 69 99 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 66 68 69 99 119 128 130 131 133 137 138 145 195]
[0 33 66 68 69 99 119 128 130 131 133 137 138 145 147 195]
[0 33 66 68 69 99 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 33 66 68 69 99 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 66 68 69 99 119 128 130 131 133 137 138 140 144 145 195]
[0 33 66 68 69 99 119 128 130 131 133 137 138 140 144 145 147 195]
[0 33 66 68 69 99 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 33 66 68 69 99 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 66 68 69 99 116 118 119 131 138 145 195]
[0 33 66 68 69 99 116 118 119 131 138 145 147 195]
[0 33 66 68 69 99 116 118 119 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 33 66 68 69 99 116 118 119 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 66 68 69 99 116 118 119 131 138 140 144 145 195]
[0 33 66 68 69 99 116 118 119 131 138 140 144 145 147 195]
[0 33 66 68 69 99 116 118 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 33 66 68 69 99 116 118 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 66 68 69 99 116 118 119 131 133 137 138 145 195]
[0 33 66 68 69 99 116 118 119 131 133 137 138 145 147 195]
[0 33 66 68 69 99 116 118 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 33 66 68 69 99 116 118 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 66 68 69 99 116 118 119 131 133 137 138 140 144 145 195]
[0 33 66 68 69 99 116 118 119 131 133 137 138 140 144 145 147 195]
[0 33 66 68 69 99 116 118 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 33 66 68 69 99 116 118 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 66 68 69 99 116 118 119 128 130 131 138 145 195]
[0 33 66 68 69 99 116 118 119 128 130 131 138 145 147 195]
[0 33 66 68 69 99 116 118 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 33 66 68 69 99 116 118 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 66 68 69 99 116 118 119 128 130 131 138 140 144 145 195]
[0 33 66 68 69 99 116 118 119 128 130 131 138 140 144 145 147 195]
[0 33 66 68 69 99 116 118 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 33 66 68 69 99 116 118 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 66 68 69 99 116 118 119 128 130 131 133 137 138 145 195]
[0 33 66 68 69 99 116 118 119 128 130 131 133 137 138 145 147 195]
[0 33 66 68 69 99 116 118 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 33 66 68 69 99 116 118 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 66 68 69 99 116 118 119 128 130 131 133 137 138 140 144 145 195]
[0 33 66 68 69 99 116 118 119 128 130 131 133 137 138 140 144 145 147 195]
[0 33 66 68 69 99 116 118 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 33 66 68 69 99 116 118 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 66 68 69 77 99 145 195]
[0 33 66 68 69 77 99 145 147 195]
[0 33 66 68 69 77 99 145 147 153 162 163 172 173 182 183 192 195]
[0 33 66 68 69 77 99 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 66 68 69 77 99 119 131 138 145 195]
[0 33 66 68 69 77 99 119 131 138 145 147 195]
[0 33 66 68 69 77 99 119 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 33 66 68 69 77 99 119 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 66 68 69 77 99 119 131 138 140 144 145 195]
[0 33 66 68 69 77 99 119 131 138 140 144 145 147 195]
[0 33 66 68 69 77 99 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 33 66 68 69 77 99 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 66 68 69 77 99 119 131 133 137 138 145 195]
[0 33 66 68 69 77 99 119 131 133 137 138 145 147 195]
[0 33 66 68 69 77 99 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 33 66 68 69 77 99 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 66 68 69 77 99 119 131 133 137 138 140 144 145 195]
[0 33 66 68 69 77 99 119 131 133 137 138 140 144 145 147 195]
[0 33 66 68 69 77 99 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 33 66 68 69 77 99 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 66 68 69 77 99 119 128 130 131 138 145 195]
[0 33 66 68 69 77 99 119 128 130 131 138 145 147 195]
[0 33 66 68 69 77 99 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 33 66 68 69 77 99 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 66 68 69 77 99 119 128 130 131 138 140 144 145 195]
[0 33 66 68 69 77 99 119 128 130 131 138 140 144 145 147 195]
[0 33 66 68 69 77 99 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 33 66 68 69 77 99 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 66 68 69 77 99 119 128 130 131 133 137 138 145 195]
[0 33 66 68 69 77 99 119 128 130 131 133 137 138 145 147 195]
[0 33 66 68 69 77 99 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 33 66 68 69 77 99 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 66 68 69 77 99 119 128 130 131 133 137 138 140 144 145 195]
[0 33 66 68 69 77 99 119 128 130 131 133 137 138 140 144 145 147 195]
[0 33 66 68 69 77 99 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 33 66 68 69 77 99 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 66 68 69 77 99 116 118 119 131 138 145 195]
[0 33 66 68 69 77 99 116 118 119 131 138 145 147 195]
[0 33 66 68 69 77 99 116 118 119 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 33 66 68 69 77 99 116 118 119 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 66 68 69 77 99 116 118 119 131 138 140 144 145 195]
[0 33 66 68 69 77 99 116 118 119 131 138 140 144 145 147 195]
[0 33 66 68 69 77 99 116 118 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 33 66 68 69 77 99 116 118 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 66 68 69 77 99 116 118 119 131 133 137 138 145 195]
[0 33 66 68 69 77 99 116 118 119 131 133 137 138 145 147 195]
[0 33 66 68 69 77 99 116 118 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 33 66 68 69 77 99 116 118 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 66 68 69 77 99 116 118 119 131 133 137 138 140 144 145 195]
[0 33 66 68 69 77 99 116 118 119 131 133 137 138 140 144 145 147 195]
[0 33 66 68 69 77 99 116 118 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 33 66 68 69 77 99 116 118 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 66 68 69 77 99 116 118 119 128 130 131 138 145 195]
[0 33 66 68 69 77 99 116 118 119 128 130 131 138 145 147 195]
[0 33 66 68 69 77 99 116 118 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 33 66 68 69 77 99 116 118 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 66 68 69 77 99 116 118 119 128 130 131 138 140 144 145 195]
[0 33 66 68 69 77 99 116 118 119 128 130 131 138 140 144 145 147 195]
[0 33 66 68 69 77 99 116 118 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 33 66 68 69 77 99 116 118 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 66 68 69 77 99 116 118 119 128 130 131 133 137 138 145 195]
[0 33 66 68 69 77 99 116 118 119 128 130 131 133 137 138 145 147 195]
[0 33 66 68 69 77 99 116 118 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 33 66 68 69 77 99 116 118 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 33 66 68 69 77 99 116 118 119 128 130 131 133 137 138 140 144 145 195]
[0 33 66 68 69 77 99 116 118 119 128 130 131 133 137 138 140 144 145 147 195]
[0 33 66 68 69 77 99 116 118 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 33 66 68 69 77 99 116 118 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 99 145 195]
[0 25 99 145 147 195]
[0 25 99 145 147 153 162 163 172 173 182 183 192 195]
[0 25 99 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 99 119 131 138 145 195]
[0 25 99 119 131 138 145 147 195]
[0 25 99 119 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 25 99 119 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 99 119 131 138 140 144 145 195]
[0 25 99 119 131 138 140 144 145 147 195]
[0 25 99 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 25 99 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 99 119 131 133 137 138 145 195]
[0 25 99 119 131 133 137 138 145 147 195]
[0 25 99 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 25 99 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 99 119 131 133 137 138 140 144 145 195]
[0 25 99 119 131 133 137 138 140 144 145 147 195]
[0 25 99 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 25 99 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 99 119 128 130 131 138 145 195]
[0 25 99 119 128 130 131 138 145 147 195]
[0 25 99 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 25 99 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 99 119 128 130 131 138 140 144 145 195]
[0 25 99 119 128 130 131 138 140 144 145 147 195]
[0 25 99 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 25 99 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 99 119 128 130 131 133 137 138 145 195]
[0 25 99 119 128 130 131 133 137 138 145 147 195]
[0 25 99 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 25 99 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 99 119 128 130 131 133 137 138 140 144 145 195]
[0 25 99 119 128 130 131 133 137 138 140 144 145 147 195]
[0 25 99 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 25 99 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 99 116 118 119 131 138 145 195]
[0 25 99 116 118 119 131 138 145 147 195]
[0 25 99 116 118 119 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 25 99 116 118 119 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 99 116 118 119 131 138 140 144 145 195]
[0 25 99 116 118 119 131 138 140 144 145 147 195]
[0 25 99 116 118 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 25 99 116 118 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 99 116 118 119 131 133 137 138 145 195]
[0 25 99 116 118 119 131 133 137 138 145 147 195]
[0 25 99 116 118 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 25 99 116 118 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 99 116 118 119 131 133 137 138 140 144 145 195]
[0 25 99 116 118 119 131 133 137 138 140 144 145 147 195]
[0 25 99 116 118 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 25 99 116 118 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 99 116 118 119 128 130 131 138 145 195]
[0 25 99 116 118 119 128 130 131 138 145 147 195]
[0 25 99 116 118 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 25 99 116 118 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 99 116 118 119 128 130 131 138 140 144 145 195]
[0 25 99 116 118 119 128 130 131 138 140 144 145 147 195]
[0 25 99 116 118 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 25 99 116 118 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 99 116 118 119 128 130 131 133 137 138 145 195]
[0 25 99 116 118 119 128 130 131 133 137 138 145 147 195]
[0 25 99 116 118 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 25 99 116 118 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 99 116 118 119 128 130 131 133 137 138 140 144 145 195]
[0 25 99 116 118 119 128 130 131 133 137 138 140 144 145 147 195]
[0 25 99 116 118 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 25 99 116 118 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 99 145 195]
[0 25 33 99 145 147 195]
[0 25 33 99 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 99 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 99 119 131 138 145 195]
[0 25 33 99 119 131 138 145 147 195]
[0 25 33 99 119 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 99 119 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 99 119 131 138 140 144 145 195]
[0 25 33 99 119 131 138 140 144 145 147 195]
[0 25 33 99 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 99 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 99 119 131 133 137 138 145 195]
[0 25 33 99 119 131 133 137 138 145 147 195]
[0 25 33 99 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 99 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 99 119 131 133 137 138 140 144 145 195]
[0 25 33 99 119 131 133 137 138 140 144 145 147 195]
[0 25 33 99 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 99 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 99 119 128 130 131 138 145 195]
[0 25 33 99 119 128 130 131 138 145 147 195]
[0 25 33 99 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 99 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 99 119 128 130 131 138 140 144 145 195]
[0 25 33 99 119 128 130 131 138 140 144 145 147 195]
[0 25 33 99 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 99 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 99 119 128 130 131 133 137 138 145 195]
[0 25 33 99 119 128 130 131 133 137 138 145 147 195]
[0 25 33 99 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 99 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 99 119 128 130 131 133 137 138 140 144 145 195]
[0 25 33 99 119 128 130 131 133 137 138 140 144 145 147 195]
[0 25 33 99 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 99 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 99 116 118 119 131 138 145 195]
[0 25 33 99 116 118 119 131 138 145 147 195]
[0 25 33 99 116 118 119 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 99 116 118 119 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 99 116 118 119 131 138 140 144 145 195]
[0 25 33 99 116 118 119 131 138 140 144 145 147 195]
[0 25 33 99 116 118 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 99 116 118 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 99 116 118 119 131 133 137 138 145 195]
[0 25 33 99 116 118 119 131 133 137 138 145 147 195]
[0 25 33 99 116 118 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 99 116 118 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 99 116 118 119 131 133 137 138 140 144 145 195]
[0 25 33 99 116 118 119 131 133 137 138 140 144 145 147 195]
[0 25 33 99 116 118 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 99 116 118 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 99 116 118 119 128 130 131 138 145 195]
[0 25 33 99 116 118 119 128 130 131 138 145 147 195]
[0 25 33 99 116 118 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 99 116 118 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 99 116 118 119 128 130 131 138 140 144 145 195]
[0 25 33 99 116 118 119 128 130 131 138 140 144 145 147 195]
[0 25 33 99 116 118 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 99 116 118 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 99 116 118 119 128 130 131 133 137 138 145 195]
[0 25 33 99 116 118 119 128 130 131 133 137 138 145 147 195]
[0 25 33 99 116 118 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 99 116 118 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 99 116 118 119 128 130 131 133 137 138 140 144 145 195]
[0 25 33 99 116 118 119 128 130 131 133 137 138 140 144 145 147 195]
[0 25 33 99 116 118 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 99 116 118 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 77 99 145 195]
[0 25 33 77 99 145 147 195]
[0 25 33 77 99 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 77 99 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 77 99 119 131 138 145 195]
[0 25 33 77 99 119 131 138 145 147 195]
[0 25 33 77 99 119 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 77 99 119 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 77 99 119 131 138 140 144 145 195]
[0 25 33 77 99 119 131 138 140 144 145 147 195]
[0 25 33 77 99 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 77 99 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 77 99 119 131 133 137 138 145 195]
[0 25 33 77 99 119 131 133 137 138 145 147 195]
[0 25 33 77 99 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 77 99 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 77 99 119 131 133 137 138 140 144 145 195]
[0 25 33 77 99 119 131 133 137 138 140 144 145 147 195]
[0 25 33 77 99 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 77 99 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 77 99 119 128 130 131 138 145 195]
[0 25 33 77 99 119 128 130 131 138 145 147 195]
[0 25 33 77 99 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 77 99 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 77 99 119 128 130 131 138 140 144 145 195]
[0 25 33 77 99 119 128 130 131 138 140 144 145 147 195]
[0 25 33 77 99 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 77 99 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 77 99 119 128 130 131 133 137 138 145 195]
[0 25 33 77 99 119 128 130 131 133 137 138 145 147 195]
[0 25 33 77 99 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 77 99 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 77 99 119 128 130 131 133 137 138 140 144 145 195]
[0 25 33 77 99 119 128 130 131 133 137 138 140 144 145 147 195]
[0 25 33 77 99 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 77 99 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 77 99 116 118 119 131 138 145 195]
[0 25 33 77 99 116 118 119 131 138 145 147 195]
[0 25 33 77 99 116 118 119 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 77 99 116 118 119 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 77 99 116 118 119 131 138 140 144 145 195]
[0 25 33 77 99 116 118 119 131 138 140 144 145 147 195]
[0 25 33 77 99 116 118 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 77 99 116 118 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 77 99 116 118 119 131 133 137 138 145 195]
[0 25 33 77 99 116 118 119 131 133 137 138 145 147 195]
[0 25 33 77 99 116 118 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 77 99 116 118 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 77 99 116 118 119 131 133 137 138 140 144 145 195]
[0 25 33 77 99 116 118 119 131 133 137 138 140 144 145 147 195]
[0 25 33 77 99 116 118 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 77 99 116 118 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 77 99 116 118 119 128 130 131 138 145 195]
[0 25 33 77 99 116 118 119 128 130 131 138 145 147 195]
[0 25 33 77 99 116 118 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 77 99 116 118 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 77 99 116 118 119 128 130 131 138 140 144 145 195]
[0 25 33 77 99 116 118 119 128 130 131 138 140 144 145 147 195]
[0 25 33 77 99 116 118 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 77 99 116 118 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 77 99 116 118 119 128 130 131 133 137 138 145 195]
[0 25 33 77 99 116 118 119 128 130 131 133 137 138 145 147 195]
[0 25 33 77 99 116 118 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 77 99 116 118 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 77 99 116 118 119 128 130 131 133 137 138 140 144 145 195]
[0 25 33 77 99 116 118 119 128 130 131 133 137 138 140 144 145 147 195]
[0 25 33 77 99 116 118 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 77 99 116 118 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 69 99 145 195]
[0 25 33 69 99 145 147 195]
[0 25 33 69 99 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 69 99 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 69 99 119 131 138 145 195]
[0 25 33 69 99 119 131 138 145 147 195]
[0 25 33 69 99 119 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 69 99 119 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 69 99 119 131 138 140 144 145 195]
[0 25 33 69 99 119 131 138 140 144 145 147 195]
[0 25 33 69 99 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 69 99 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 69 99 119 131 133 137 138 145 195]
[0 25 33 69 99 119 131 133 137 138 145 147 195]
[0 25 33 69 99 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 69 99 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 69 99 119 131 133 137 138 140 144 145 195]
[0 25 33 69 99 119 131 133 137 138 140 144 145 147 195]
[0 25 33 69 99 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 69 99 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 69 99 119 128 130 131 138 145 195]
[0 25 33 69 99 119 128 130 131 138 145 147 195]
[0 25 33 69 99 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 69 99 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 69 99 119 128 130 131 138 140 144 145 195]
[0 25 33 69 99 119 128 130 131 138 140 144 145 147 195]
[0 25 33 69 99 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 69 99 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 69 99 119 128 130 131 133 137 138 145 195]
[0 25 33 69 99 119 128 130 131 133 137 138 145 147 195]
[0 25 33 69 99 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 69 99 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 69 99 119 128 130 131 133 137 138 140 144 145 195]
[0 25 33 69 99 119 128 130 131 133 137 138 140 144 145 147 195]
[0 25 33 69 99 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 69 99 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 69 99 116 118 119 131 138 145 195]
[0 25 33 69 99 116 118 119 131 138 145 147 195]
[0 25 33 69 99 116 118 119 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 69 99 116 118 119 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 69 99 116 118 119 131 138 140 144 145 195]
[0 25 33 69 99 116 118 119 131 138 140 144 145 147 195]
[0 25 33 69 99 116 118 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 69 99 116 118 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 69 99 116 118 119 131 133 137 138 145 195]
[0 25 33 69 99 116 118 119 131 133 137 138 145 147 195]
[0 25 33 69 99 116 118 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 69 99 116 118 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 69 99 116 118 119 131 133 137 138 140 144 145 195]
[0 25 33 69 99 116 118 119 131 133 137 138 140 144 145 147 195]
[0 25 33 69 99 116 118 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 69 99 116 118 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 69 99 116 118 119 128 130 131 138 145 195]
[0 25 33 69 99 116 118 119 128 130 131 138 145 147 195]
[0 25 33 69 99 116 118 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 69 99 116 118 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 69 99 116 118 119 128 130 131 138 140 144 145 195]
[0 25 33 69 99 116 118 119 128 130 131 138 140 144 145 147 195]
[0 25 33 69 99 116 118 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 69 99 116 118 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 69 99 116 118 119 128 130 131 133 137 138 145 195]
[0 25 33 69 99 116 118 119 128 130 131 133 137 138 145 147 195]
[0 25 33 69 99 116 118 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 69 99 116 118 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 69 99 116 118 119 128 130 131 133 137 138 140 144 145 195]
[0 25 33 69 99 116 118 119 128 130 131 133 137 138 140 144 145 147 195]
[0 25 33 69 99 116 118 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 69 99 116 118 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 69 77 99 145 195]
[0 25 33 69 77 99 145 147 195]
[0 25 33 69 77 99 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 69 77 99 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 69 77 99 119 131 138 145 195]
[0 25 33 69 77 99 119 131 138 145 147 195]
[0 25 33 69 77 99 119 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 69 77 99 119 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 69 77 99 119 131 138 140 144 145 195]
[0 25 33 69 77 99 119 131 138 140 144 145 147 195]
[0 25 33 69 77 99 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 69 77 99 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 69 77 99 119 131 133 137 138 145 195]
[0 25 33 69 77 99 119 131 133 137 138 145 147 195]
[0 25 33 69 77 99 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 69 77 99 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 69 77 99 119 131 133 137 138 140 144 145 195]
[0 25 33 69 77 99 119 131 133 137 138 140 144 145 147 195]
[0 25 33 69 77 99 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 69 77 99 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 69 77 99 119 128 130 131 138 145 195]
[0 25 33 69 77 99 119 128 130 131 138 145 147 195]
[0 25 33 69 77 99 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 69 77 99 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 69 77 99 119 128 130 131 138 140 144 145 195]
[0 25 33 69 77 99 119 128 130 131 138 140 144 145 147 195]
[0 25 33 69 77 99 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 69 77 99 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 69 77 99 119 128 130 131 133 137 138 145 195]
[0 25 33 69 77 99 119 128 130 131 133 137 138 145 147 195]
[0 25 33 69 77 99 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 69 77 99 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 69 77 99 119 128 130 131 133 137 138 140 144 145 195]
[0 25 33 69 77 99 119 128 130 131 133 137 138 140 144 145 147 195]
[0 25 33 69 77 99 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 69 77 99 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 69 77 99 116 118 119 131 138 145 195]
[0 25 33 69 77 99 116 118 119 131 138 145 147 195]
[0 25 33 69 77 99 116 118 119 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 69 77 99 116 118 119 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 69 77 99 116 118 119 131 138 140 144 145 195]
[0 25 33 69 77 99 116 118 119 131 138 140 144 145 147 195]
[0 25 33 69 77 99 116 118 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 69 77 99 116 118 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 69 77 99 116 118 119 131 133 137 138 145 195]
[0 25 33 69 77 99 116 118 119 131 133 137 138 145 147 195]
[0 25 33 69 77 99 116 118 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 69 77 99 116 118 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 69 77 99 116 118 119 131 133 137 138 140 144 145 195]
[0 25 33 69 77 99 116 118 119 131 133 137 138 140 144 145 147 195]
[0 25 33 69 77 99 116 118 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 69 77 99 116 118 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 69 77 99 116 118 119 128 130 131 138 145 195]
[0 25 33 69 77 99 116 118 119 128 130 131 138 145 147 195]
[0 25 33 69 77 99 116 118 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 69 77 99 116 118 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 69 77 99 116 118 119 128 130 131 138 140 144 145 195]
[0 25 33 69 77 99 116 118 119 128 130 131 138 140 144 145 147 195]
[0 25 33 69 77 99 116 118 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 69 77 99 116 118 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 69 77 99 116 118 119 128 130 131 133 137 138 145 195]
[0 25 33 69 77 99 116 118 119 128 130 131 133 137 138 145 147 195]
[0 25 33 69 77 99 116 118 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 69 77 99 116 118 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 69 77 99 116 118 119 128 130 131 133 137 138 140 144 145 195]
[0 25 33 69 77 99 116 118 119 128 130 131 133 137 138 140 144 145 147 195]
[0 25 33 69 77 99 116 118 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 69 77 99 116 118 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 66 68 69 99 145 195]
[0 25 33 66 68 69 99 145 147 195]
[0 25 33 66 68 69 99 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 66 68 69 99 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 66 68 69 99 119 131 138 145 195]
[0 25 33 66 68 69 99 119 131 138 145 147 195]
[0 25 33 66 68 69 99 119 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 66 68 69 99 119 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 66 68 69 99 119 131 138 140 144 145 195]
[0 25 33 66 68 69 99 119 131 138 140 144 145 147 195]
[0 25 33 66 68 69 99 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 66 68 69 99 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 66 68 69 99 119 131 133 137 138 145 195]
[0 25 33 66 68 69 99 119 131 133 137 138 145 147 195]
[0 25 33 66 68 69 99 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 66 68 69 99 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 66 68 69 99 119 131 133 137 138 140 144 145 195]
[0 25 33 66 68 69 99 119 131 133 137 138 140 144 145 147 195]
[0 25 33 66 68 69 99 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 66 68 69 99 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 66 68 69 99 119 128 130 131 138 145 195]
[0 25 33 66 68 69 99 119 128 130 131 138 145 147 195]
[0 25 33 66 68 69 99 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 66 68 69 99 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 66 68 69 99 119 128 130 131 138 140 144 145 195]
[0 25 33 66 68 69 99 119 128 130 131 138 140 144 145 147 195]
[0 25 33 66 68 69 99 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 66 68 69 99 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 66 68 69 99 119 128 130 131 133 137 138 145 195]
[0 25 33 66 68 69 99 119 128 130 131 133 137 138 145 147 195]
[0 25 33 66 68 69 99 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 66 68 69 99 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 66 68 69 99 119 128 130 131 133 137 138 140 144 145 195]
[0 25 33 66 68 69 99 119 128 130 131 133 137 138 140 144 145 147 195]
[0 25 33 66 68 69 99 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 66 68 69 99 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 66 68 69 99 116 118 119 131 138 145 195]
[0 25 33 66 68 69 99 116 118 119 131 138 145 147 195]
[0 25 33 66 68 69 99 116 118 119 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 66 68 69 99 116 118 119 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 66 68 69 99 116 118 119 131 138 140 144 145 195]
[0 25 33 66 68 69 99 116 118 119 131 138 140 144 145 147 195]
[0 25 33 66 68 69 99 116 118 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 66 68 69 99 116 118 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 66 68 69 99 116 118 119 131 133 137 138 145 195]
[0 25 33 66 68 69 99 116 118 119 131 133 137 138 145 147 195]
[0 25 33 66 68 69 99 116 118 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 66 68 69 99 116 118 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 66 68 69 99 116 118 119 131 133 137 138 140 144 145 195]
[0 25 33 66 68 69 99 116 118 119 131 133 137 138 140 144 145 147 195]
[0 25 33 66 68 69 99 116 118 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 66 68 69 99 116 118 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 66 68 69 99 116 118 119 128 130 131 138 145 195]
[0 25 33 66 68 69 99 116 118 119 128 130 131 138 145 147 195]
[0 25 33 66 68 69 99 116 118 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 66 68 69 99 116 118 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 66 68 69 99 116 118 119 128 130 131 138 140 144 145 195]
[0 25 33 66 68 69 99 116 118 119 128 130 131 138 140 144 145 147 195]
[0 25 33 66 68 69 99 116 118 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 66 68 69 99 116 118 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 66 68 69 99 116 118 119 128 130 131 133 137 138 145 195]
[0 25 33 66 68 69 99 116 118 119 128 130 131 133 137 138 145 147 195]
[0 25 33 66 68 69 99 116 118 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 66 68 69 99 116 118 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 66 68 69 99 116 118 119 128 130 131 133 137 138 140 144 145 195]
[0 25 33 66 68 69 99 116 118 119 128 130 131 133 137 138 140 144 145 147 195]
[0 25 33 66 68 69 99 116 118 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 66 68 69 99 116 118 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 66 68 69 77 99 145 195]
[0 25 33 66 68 69 77 99 145 147 195]
[0 25 33 66 68 69 77 99 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 66 68 69 77 99 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 66 68 69 77 99 119 131 138 145 195]
[0 25 33 66 68 69 77 99 119 131 138 145 147 195]
[0 25 33 66 68 69 77 99 119 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 66 68 69 77 99 119 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 66 68 69 77 99 119 131 138 140 144 145 195]
[0 25 33 66 68 69 77 99 119 131 138 140 144 145 147 195]
[0 25 33 66 68 69 77 99 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 66 68 69 77 99 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 66 68 69 77 99 119 131 133 137 138 145 195]
[0 25 33 66 68 69 77 99 119 131 133 137 138 145 147 195]
[0 25 33 66 68 69 77 99 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 66 68 69 77 99 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 66 68 69 77 99 119 131 133 137 138 140 144 145 195]
[0 25 33 66 68 69 77 99 119 131 133 137 138 140 144 145 147 195]
[0 25 33 66 68 69 77 99 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 66 68 69 77 99 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 66 68 69 77 99 119 128 130 131 138 145 195]
[0 25 33 66 68 69 77 99 119 128 130 131 138 145 147 195]
[0 25 33 66 68 69 77 99 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 66 68 69 77 99 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 66 68 69 77 99 119 128 130 131 138 140 144 145 195]
[0 25 33 66 68 69 77 99 119 128 130 131 138 140 144 145 147 195]
[0 25 33 66 68 69 77 99 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 66 68 69 77 99 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 66 68 69 77 99 119 128 130 131 133 137 138 145 195]
[0 25 33 66 68 69 77 99 119 128 130 131 133 137 138 145 147 195]
[0 25 33 66 68 69 77 99 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 66 68 69 77 99 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 66 68 69 77 99 119 128 130 131 133 137 138 140 144 145 195]
[0 25 33 66 68 69 77 99 119 128 130 131 133 137 138 140 144 145 147 195]
[0 25 33 66 68 69 77 99 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 66 68 69 77 99 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 66 68 69 77 99 116 118 119 131 138 145 195]
[0 25 33 66 68 69 77 99 116 118 119 131 138 145 147 195]
[0 25 33 66 68 69 77 99 116 118 119 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 66 68 69 77 99 116 118 119 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 66 68 69 77 99 116 118 119 131 138 140 144 145 195]
[0 25 33 66 68 69 77 99 116 118 119 131 138 140 144 145 147 195]
[0 25 33 66 68 69 77 99 116 118 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 66 68 69 77 99 116 118 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 66 68 69 77 99 116 118 119 131 133 137 138 145 195]
[0 25 33 66 68 69 77 99 116 118 119 131 133 137 138 145 147 195]
[0 25 33 66 68 69 77 99 116 118 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 66 68 69 77 99 116 118 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 66 68 69 77 99 116 118 119 131 133 137 138 140 144 145 195]
[0 25 33 66 68 69 77 99 116 118 119 131 133 137 138 140 144 145 147 195]
[0 25 33 66 68 69 77 99 116 118 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 66 68 69 77 99 116 118 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 66 68 69 77 99 116 118 119 128 130 131 138 145 195]
[0 25 33 66 68 69 77 99 116 118 119 128 130 131 138 145 147 195]
[0 25 33 66 68 69 77 99 116 118 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 66 68 69 77 99 116 118 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 66 68 69 77 99 116 118 119 128 130 131 138 140 144 145 195]
[0 25 33 66 68 69 77 99 116 118 119 128 130 131 138 140 144 145 147 195]
[0 25 33 66 68 69 77 99 116 118 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 66 68 69 77 99 116 118 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 66 68 69 77 99 116 118 119 128 130 131 133 137 138 145 195]
[0 25 33 66 68 69 77 99 116 118 119 128 130 131 133 137 138 145 147 195]
[0 25 33 66 68 69 77 99 116 118 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 66 68 69 77 99 116 118 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 25 33 66 68 69 77 99 116 118 119 128 130 131 133 137 138 140 144 145 195]
[0 25 33 66 68 69 77 99 116 118 119 128 130 131 133 137 138 140 144 145 147 195]
[0 25 33 66 68 69 77 99 116 118 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 25 33 66 68 69 77 99 116 118 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 99 145 195]
[0 22 24 25 99 145 147 195]
[0 22 24 25 99 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 99 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 99 119 131 138 145 195]
[0 22 24 25 99 119 131 138 145 147 195]
[0 22 24 25 99 119 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 99 119 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 99 119 131 138 140 144 145 195]
[0 22 24 25 99 119 131 138 140 144 145 147 195]
[0 22 24 25 99 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 99 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 99 119 131 133 137 138 145 195]
[0 22 24 25 99 119 131 133 137 138 145 147 195]
[0 22 24 25 99 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 99 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 99 119 131 133 137 138 140 144 145 195]
[0 22 24 25 99 119 131 133 137 138 140 144 145 147 195]
[0 22 24 25 99 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 99 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 99 119 128 130 131 138 145 195]
[0 22 24 25 99 119 128 130 131 138 145 147 195]
[0 22 24 25 99 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 99 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 99 119 128 130 131 138 140 144 145 195]
[0 22 24 25 99 119 128 130 131 138 140 144 145 147 195]
[0 22 24 25 99 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 99 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 99 119 128 130 131 133 137 138 145 195]
[0 22 24 25 99 119 128 130 131 133 137 138 145 147 195]
[0 22 24 25 99 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 99 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 99 119 128 130 131 133 137 138 140 144 145 195]
[0 22 24 25 99 119 128 130 131 133 137 138 140 144 145 147 195]
[0 22 24 25 99 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 99 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 99 116 118 119 131 138 145 195]
[0 22 24 25 99 116 118 119 131 138 145 147 195]
[0 22 24 25 99 116 118 119 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 99 116 118 119 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 99 116 118 119 131 138 140 144 145 195]
[0 22 24 25 99 116 118 119 131 138 140 144 145 147 195]
[0 22 24 25 99 116 118 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 99 116 118 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 99 116 118 119 131 133 137 138 145 195]
[0 22 24 25 99 116 118 119 131 133 137 138 145 147 195]
[0 22 24 25 99 116 118 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 99 116 118 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 99 116 118 119 131 133 137 138 140 144 145 195]
[0 22 24 25 99 116 118 119 131 133 137 138 140 144 145 147 195]
[0 22 24 25 99 116 118 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 99 116 118 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 99 116 118 119 128 130 131 138 145 195]
[0 22 24 25 99 116 118 119 128 130 131 138 145 147 195]
[0 22 24 25 99 116 118 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 99 116 118 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 99 116 118 119 128 130 131 138 140 144 145 195]
[0 22 24 25 99 116 118 119 128 130 131 138 140 144 145 147 195]
[0 22 24 25 99 116 118 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 99 116 118 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 99 116 118 119 128 130 131 133 137 138 145 195]
[0 22 24 25 99 116 118 119 128 130 131 133 137 138 145 147 195]
[0 22 24 25 99 116 118 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 99 116 118 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 99 116 118 119 128 130 131 133 137 138 140 144 145 195]
[0 22 24 25 99 116 118 119 128 130 131 133 137 138 140 144 145 147 195]
[0 22 24 25 99 116 118 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 99 116 118 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 99 145 195]
[0 22 24 25 33 99 145 147 195]
[0 22 24 25 33 99 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 99 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 99 119 131 138 145 195]
[0 22 24 25 33 99 119 131 138 145 147 195]
[0 22 24 25 33 99 119 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 99 119 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 99 119 131 138 140 144 145 195]
[0 22 24 25 33 99 119 131 138 140 144 145 147 195]
[0 22 24 25 33 99 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 99 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 99 119 131 133 137 138 145 195]
[0 22 24 25 33 99 119 131 133 137 138 145 147 195]
[0 22 24 25 33 99 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 99 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 99 119 131 133 137 138 140 144 145 195]
[0 22 24 25 33 99 119 131 133 137 138 140 144 145 147 195]
[0 22 24 25 33 99 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 99 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 99 119 128 130 131 138 145 195]
[0 22 24 25 33 99 119 128 130 131 138 145 147 195]
[0 22 24 25 33 99 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 99 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 99 119 128 130 131 138 140 144 145 195]
[0 22 24 25 33 99 119 128 130 131 138 140 144 145 147 195]
[0 22 24 25 33 99 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 99 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 99 119 128 130 131 133 137 138 145 195]
[0 22 24 25 33 99 119 128 130 131 133 137 138 145 147 195]
[0 22 24 25 33 99 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 99 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 99 119 128 130 131 133 137 138 140 144 145 195]
[0 22 24 25 33 99 119 128 130 131 133 137 138 140 144 145 147 195]
[0 22 24 25 33 99 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 99 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 99 116 118 119 131 138 145 195]
[0 22 24 25 33 99 116 118 119 131 138 145 147 195]
[0 22 24 25 33 99 116 118 119 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 99 116 118 119 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 99 116 118 119 131 138 140 144 145 195]
[0 22 24 25 33 99 116 118 119 131 138 140 144 145 147 195]
[0 22 24 25 33 99 116 118 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 99 116 118 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 99 116 118 119 131 133 137 138 145 195]
[0 22 24 25 33 99 116 118 119 131 133 137 138 145 147 195]
[0 22 24 25 33 99 116 118 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 99 116 118 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 99 116 118 119 131 133 137 138 140 144 145 195]
[0 22 24 25 33 99 116 118 119 131 133 137 138 140 144 145 147 195]
[0 22 24 25 33 99 116 118 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 99 116 118 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 99 116 118 119 128 130 131 138 145 195]
[0 22 24 25 33 99 116 118 119 128 130 131 138 145 147 195]
[0 22 24 25 33 99 116 118 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 99 116 118 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 99 116 118 119 128 130 131 138 140 144 145 195]
[0 22 24 25 33 99 116 118 119 128 130 131 138 140 144 145 147 195]
[0 22 24 25 33 99 116 118 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 99 116 118 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 99 116 118 119 128 130 131 133 137 138 145 195]
[0 22 24 25 33 99 116 118 119 128 130 131 133 137 138 145 147 195]
[0 22 24 25 33 99 116 118 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 99 116 118 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 99 116 118 119 128 130 131 133 137 138 140 144 145 195]
[0 22 24 25 33 99 116 118 119 128 130 131 133 137 138 140 144 145 147 195]
[0 22 24 25 33 99 116 118 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 99 116 118 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 77 99 145 195]
[0 22 24 25 33 77 99 145 147 195]
[0 22 24 25 33 77 99 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 77 99 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 77 99 119 131 138 145 195]
[0 22 24 25 33 77 99 119 131 138 145 147 195]
[0 22 24 25 33 77 99 119 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 77 99 119 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 77 99 119 131 138 140 144 145 195]
[0 22 24 25 33 77 99 119 131 138 140 144 145 147 195]
[0 22 24 25 33 77 99 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 77 99 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 77 99 119 131 133 137 138 145 195]
[0 22 24 25 33 77 99 119 131 133 137 138 145 147 195]
[0 22 24 25 33 77 99 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 77 99 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 77 99 119 131 133 137 138 140 144 145 195]
[0 22 24 25 33 77 99 119 131 133 137 138 140 144 145 147 195]
[0 22 24 25 33 77 99 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 77 99 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 77 99 119 128 130 131 138 145 195]
[0 22 24 25 33 77 99 119 128 130 131 138 145 147 195]
[0 22 24 25 33 77 99 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 77 99 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 77 99 119 128 130 131 138 140 144 145 195]
[0 22 24 25 33 77 99 119 128 130 131 138 140 144 145 147 195]
[0 22 24 25 33 77 99 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 77 99 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 77 99 119 128 130 131 133 137 138 145 195]
[0 22 24 25 33 77 99 119 128 130 131 133 137 138 145 147 195]
[0 22 24 25 33 77 99 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 77 99 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 77 99 119 128 130 131 133 137 138 140 144 145 195]
[0 22 24 25 33 77 99 119 128 130 131 133 137 138 140 144 145 147 195]
[0 22 24 25 33 77 99 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 77 99 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 77 99 116 118 119 131 138 145 195]
[0 22 24 25 33 77 99 116 118 119 131 138 145 147 195]
[0 22 24 25 33 77 99 116 118 119 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 77 99 116 118 119 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 77 99 116 118 119 131 138 140 144 145 195]
[0 22 24 25 33 77 99 116 118 119 131 138 140 144 145 147 195]
[0 22 24 25 33 77 99 116 118 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 77 99 116 118 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 77 99 116 118 119 131 133 137 138 145 195]
[0 22 24 25 33 77 99 116 118 119 131 133 137 138 145 147 195]
[0 22 24 25 33 77 99 116 118 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 77 99 116 118 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 77 99 116 118 119 131 133 137 138 140 144 145 195]
[0 22 24 25 33 77 99 116 118 119 131 133 137 138 140 144 145 147 195]
[0 22 24 25 33 77 99 116 118 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 77 99 116 118 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 77 99 116 118 119 128 130 131 138 145 195]
[0 22 24 25 33 77 99 116 118 119 128 130 131 138 145 147 195]
[0 22 24 25 33 77 99 116 118 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 77 99 116 118 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 77 99 116 118 119 128 130 131 138 140 144 145 195]
[0 22 24 25 33 77 99 116 118 119 128 130 131 138 140 144 145 147 195]
[0 22 24 25 33 77 99 116 118 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 77 99 116 118 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 77 99 116 118 119 128 130 131 133 137 138 145 195]
[0 22 24 25 33 77 99 116 118 119 128 130 131 133 137 138 145 147 195]
[0 22 24 25 33 77 99 116 118 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 77 99 116 118 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 77 99 116 118 119 128 130 131 133 137 138 140 144 145 195]
[0 22 24 25 33 77 99 116 118 119 128 130 131 133 137 138 140 144 145 147 195]
[0 22 24 25 33 77 99 116 118 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 77 99 116 118 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 69 99 145 195]
[0 22 24 25 33 69 99 145 147 195]
[0 22 24 25 33 69 99 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 69 99 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 69 99 119 131 138 145 195]
[0 22 24 25 33 69 99 119 131 138 145 147 195]
[0 22 24 25 33 69 99 119 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 69 99 119 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 69 99 119 131 138 140 144 145 195]
[0 22 24 25 33 69 99 119 131 138 140 144 145 147 195]
[0 22 24 25 33 69 99 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 69 99 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 69 99 119 131 133 137 138 145 195]
[0 22 24 25 33 69 99 119 131 133 137 138 145 147 195]
[0 22 24 25 33 69 99 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 69 99 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 69 99 119 131 133 137 138 140 144 145 195]
[0 22 24 25 33 69 99 119 131 133 137 138 140 144 145 147 195]
[0 22 24 25 33 69 99 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 69 99 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 69 99 119 128 130 131 138 145 195]
[0 22 24 25 33 69 99 119 128 130 131 138 145 147 195]
[0 22 24 25 33 69 99 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 69 99 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 69 99 119 128 130 131 138 140 144 145 195]
[0 22 24 25 33 69 99 119 128 130 131 138 140 144 145 147 195]
[0 22 24 25 33 69 99 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 69 99 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 69 99 119 128 130 131 133 137 138 145 195]
[0 22 24 25 33 69 99 119 128 130 131 133 137 138 145 147 195]
[0 22 24 25 33 69 99 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 69 99 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 69 99 119 128 130 131 133 137 138 140 144 145 195]
[0 22 24 25 33 69 99 119 128 130 131 133 137 138 140 144 145 147 195]
[0 22 24 25 33 69 99 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 69 99 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 69 99 116 118 119 131 138 145 195]
[0 22 24 25 33 69 99 116 118 119 131 138 145 147 195]
[0 22 24 25 33 69 99 116 118 119 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 69 99 116 118 119 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 69 99 116 118 119 131 138 140 144 145 195]
[0 22 24 25 33 69 99 116 118 119 131 138 140 144 145 147 195]
[0 22 24 25 33 69 99 116 118 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 69 99 116 118 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 69 99 116 118 119 131 133 137 138 145 195]
[0 22 24 25 33 69 99 116 118 119 131 133 137 138 145 147 195]
[0 22 24 25 33 69 99 116 118 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 69 99 116 118 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 69 99 116 118 119 131 133 137 138 140 144 145 195]
[0 22 24 25 33 69 99 116 118 119 131 133 137 138 140 144 145 147 195]
[0 22 24 25 33 69 99 116 118 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 69 99 116 118 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 69 99 116 118 119 128 130 131 138 145 195]
[0 22 24 25 33 69 99 116 118 119 128 130 131 138 145 147 195]
[0 22 24 25 33 69 99 116 118 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 69 99 116 118 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 69 99 116 118 119 128 130 131 138 140 144 145 195]
[0 22 24 25 33 69 99 116 118 119 128 130 131 138 140 144 145 147 195]
[0 22 24 25 33 69 99 116 118 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 69 99 116 118 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 69 99 116 118 119 128 130 131 133 137 138 145 195]
[0 22 24 25 33 69 99 116 118 119 128 130 131 133 137 138 145 147 195]
[0 22 24 25 33 69 99 116 118 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 69 99 116 118 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 69 99 116 118 119 128 130 131 133 137 138 140 144 145 195]
[0 22 24 25 33 69 99 116 118 119 128 130 131 133 137 138 140 144 145 147 195]
[0 22 24 25 33 69 99 116 118 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 69 99 116 118 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 69 77 99 145 195]
[0 22 24 25 33 69 77 99 145 147 195]
[0 22 24 25 33 69 77 99 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 69 77 99 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 69 77 99 119 131 138 145 195]
[0 22 24 25 33 69 77 99 119 131 138 145 147 195]
[0 22 24 25 33 69 77 99 119 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 69 77 99 119 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 69 77 99 119 131 138 140 144 145 195]
[0 22 24 25 33 69 77 99 119 131 138 140 144 145 147 195]
[0 22 24 25 33 69 77 99 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 69 77 99 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 69 77 99 119 131 133 137 138 145 195]
[0 22 24 25 33 69 77 99 119 131 133 137 138 145 147 195]
[0 22 24 25 33 69 77 99 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 69 77 99 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 69 77 99 119 131 133 137 138 140 144 145 195]
[0 22 24 25 33 69 77 99 119 131 133 137 138 140 144 145 147 195]
[0 22 24 25 33 69 77 99 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 69 77 99 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 69 77 99 119 128 130 131 138 145 195]
[0 22 24 25 33 69 77 99 119 128 130 131 138 145 147 195]
[0 22 24 25 33 69 77 99 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 69 77 99 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 69 77 99 119 128 130 131 138 140 144 145 195]
[0 22 24 25 33 69 77 99 119 128 130 131 138 140 144 145 147 195]
[0 22 24 25 33 69 77 99 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 69 77 99 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 69 77 99 119 128 130 131 133 137 138 145 195]
[0 22 24 25 33 69 77 99 119 128 130 131 133 137 138 145 147 195]
[0 22 24 25 33 69 77 99 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 69 77 99 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 69 77 99 119 128 130 131 133 137 138 140 144 145 195]
[0 22 24 25 33 69 77 99 119 128 130 131 133 137 138 140 144 145 147 195]
[0 22 24 25 33 69 77 99 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 69 77 99 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 69 77 99 116 118 119 131 138 145 195]
[0 22 24 25 33 69 77 99 116 118 119 131 138 145 147 195]
[0 22 24 25 33 69 77 99 116 118 119 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 69 77 99 116 118 119 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 69 77 99 116 118 119 131 138 140 144 145 195]
[0 22 24 25 33 69 77 99 116 118 119 131 138 140 144 145 147 195]
[0 22 24 25 33 69 77 99 116 118 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 69 77 99 116 118 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 69 77 99 116 118 119 131 133 137 138 145 195]
[0 22 24 25 33 69 77 99 116 118 119 131 133 137 138 145 147 195]
[0 22 24 25 33 69 77 99 116 118 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 69 77 99 116 118 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 69 77 99 116 118 119 131 133 137 138 140 144 145 195]
[0 22 24 25 33 69 77 99 116 118 119 131 133 137 138 140 144 145 147 195]
[0 22 24 25 33 69 77 99 116 118 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 69 77 99 116 118 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 69 77 99 116 118 119 128 130 131 138 145 195]
[0 22 24 25 33 69 77 99 116 118 119 128 130 131 138 145 147 195]
[0 22 24 25 33 69 77 99 116 118 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 69 77 99 116 118 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 69 77 99 116 118 119 128 130 131 138 140 144 145 195]
[0 22 24 25 33 69 77 99 116 118 119 128 130 131 138 140 144 145 147 195]
[0 22 24 25 33 69 77 99 116 118 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 69 77 99 116 118 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 69 77 99 116 118 119 128 130 131 133 137 138 145 195]
[0 22 24 25 33 69 77 99 116 118 119 128 130 131 133 137 138 145 147 195]
[0 22 24 25 33 69 77 99 116 118 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 69 77 99 116 118 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 69 77 99 116 118 119 128 130 131 133 137 138 140 144 145 195]
[0 22 24 25 33 69 77 99 116 118 119 128 130 131 133 137 138 140 144 145 147 195]
[0 22 24 25 33 69 77 99 116 118 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 69 77 99 116 118 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 66 68 69 99 145 195]
[0 22 24 25 33 66 68 69 99 145 147 195]
[0 22 24 25 33 66 68 69 99 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 66 68 69 99 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 66 68 69 99 119 131 138 145 195]
[0 22 24 25 33 66 68 69 99 119 131 138 145 147 195]
[0 22 24 25 33 66 68 69 99 119 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 66 68 69 99 119 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 66 68 69 99 119 131 138 140 144 145 195]
[0 22 24 25 33 66 68 69 99 119 131 138 140 144 145 147 195]
[0 22 24 25 33 66 68 69 99 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 66 68 69 99 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 66 68 69 99 119 131 133 137 138 145 195]
[0 22 24 25 33 66 68 69 99 119 131 133 137 138 145 147 195]
[0 22 24 25 33 66 68 69 99 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 66 68 69 99 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 66 68 69 99 119 131 133 137 138 140 144 145 195]
[0 22 24 25 33 66 68 69 99 119 131 133 137 138 140 144 145 147 195]
[0 22 24 25 33 66 68 69 99 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 66 68 69 99 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 66 68 69 99 119 128 130 131 138 145 195]
[0 22 24 25 33 66 68 69 99 119 128 130 131 138 145 147 195]
[0 22 24 25 33 66 68 69 99 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 66 68 69 99 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 66 68 69 99 119 128 130 131 138 140 144 145 195]
[0 22 24 25 33 66 68 69 99 119 128 130 131 138 140 144 145 147 195]
[0 22 24 25 33 66 68 69 99 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 66 68 69 99 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 66 68 69 99 119 128 130 131 133 137 138 145 195]
[0 22 24 25 33 66 68 69 99 119 128 130 131 133 137 138 145 147 195]
[0 22 24 25 33 66 68 69 99 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 66 68 69 99 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 66 68 69 99 119 128 130 131 133 137 138 140 144 145 195]
[0 22 24 25 33 66 68 69 99 119 128 130 131 133 137 138 140 144 145 147 195]
[0 22 24 25 33 66 68 69 99 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 66 68 69 99 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 66 68 69 99 116 118 119 131 138 145 195]
[0 22 24 25 33 66 68 69 99 116 118 119 131 138 145 147 195]
[0 22 24 25 33 66 68 69 99 116 118 119 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 66 68 69 99 116 118 119 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 66 68 69 99 116 118 119 131 138 140 144 145 195]
[0 22 24 25 33 66 68 69 99 116 118 119 131 138 140 144 145 147 195]
[0 22 24 25 33 66 68 69 99 116 118 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 66 68 69 99 116 118 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 66 68 69 99 116 118 119 131 133 137 138 145 195]
[0 22 24 25 33 66 68 69 99 116 118 119 131 133 137 138 145 147 195]
[0 22 24 25 33 66 68 69 99 116 118 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 66 68 69 99 116 118 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 66 68 69 99 116 118 119 131 133 137 138 140 144 145 195]
[0 22 24 25 33 66 68 69 99 116 118 119 131 133 137 138 140 144 145 147 195]
[0 22 24 25 33 66 68 69 99 116 118 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 66 68 69 99 116 118 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 66 68 69 99 116 118 119 128 130 131 138 145 195]
[0 22 24 25 33 66 68 69 99 116 118 119 128 130 131 138 145 147 195]
[0 22 24 25 33 66 68 69 99 116 118 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 66 68 69 99 116 118 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 66 68 69 99 116 118 119 128 130 131 138 140 144 145 195]
[0 22 24 25 33 66 68 69 99 116 118 119 128 130 131 138 140 144 145 147 195]
[0 22 24 25 33 66 68 69 99 116 118 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 66 68 69 99 116 118 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 66 68 69 99 116 118 119 128 130 131 133 137 138 145 195]
[0 22 24 25 33 66 68 69 99 116 118 119 128 130 131 133 137 138 145 147 195]
[0 22 24 25 33 66 68 69 99 116 118 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 66 68 69 99 116 118 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 66 68 69 99 116 118 119 128 130 131 133 137 138 140 144 145 195]
[0 22 24 25 33 66 68 69 99 116 118 119 128 130 131 133 137 138 140 144 145 147 195]
[0 22 24 25 33 66 68 69 99 116 118 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 66 68 69 99 116 118 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 66 68 69 77 99 145 195]
[0 22 24 25 33 66 68 69 77 99 145 147 195]
[0 22 24 25 33 66 68 69 77 99 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 66 68 69 77 99 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 66 68 69 77 99 119 131 138 145 195]
[0 22 24 25 33 66 68 69 77 99 119 131 138 145 147 195]
[0 22 24 25 33 66 68 69 77 99 119 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 66 68 69 77 99 119 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 66 68 69 77 99 119 131 138 140 144 145 195]
[0 22 24 25 33 66 68 69 77 99 119 131 138 140 144 145 147 195]
[0 22 24 25 33 66 68 69 77 99 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 66 68 69 77 99 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 66 68 69 77 99 119 131 133 137 138 145 195]
[0 22 24 25 33 66 68 69 77 99 119 131 133 137 138 145 147 195]
[0 22 24 25 33 66 68 69 77 99 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 66 68 69 77 99 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 66 68 69 77 99 119 131 133 137 138 140 144 145 195]
[0 22 24 25 33 66 68 69 77 99 119 131 133 137 138 140 144 145 147 195]
[0 22 24 25 33 66 68 69 77 99 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 66 68 69 77 99 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 66 68 69 77 99 119 128 130 131 138 145 195]
[0 22 24 25 33 66 68 69 77 99 119 128 130 131 138 145 147 195]
[0 22 24 25 33 66 68 69 77 99 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 66 68 69 77 99 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 66 68 69 77 99 119 128 130 131 138 140 144 145 195]
[0 22 24 25 33 66 68 69 77 99 119 128 130 131 138 140 144 145 147 195]
[0 22 24 25 33 66 68 69 77 99 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 66 68 69 77 99 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 66 68 69 77 99 119 128 130 131 133 137 138 145 195]
[0 22 24 25 33 66 68 69 77 99 119 128 130 131 133 137 138 145 147 195]
[0 22 24 25 33 66 68 69 77 99 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 66 68 69 77 99 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 66 68 69 77 99 119 128 130 131 133 137 138 140 144 145 195]
[0 22 24 25 33 66 68 69 77 99 119 128 130 131 133 137 138 140 144 145 147 195]
[0 22 24 25 33 66 68 69 77 99 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 66 68 69 77 99 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 66 68 69 77 99 116 118 119 131 138 145 195]
[0 22 24 25 33 66 68 69 77 99 116 118 119 131 138 145 147 195]
[0 22 24 25 33 66 68 69 77 99 116 118 119 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 66 68 69 77 99 116 118 119 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 66 68 69 77 99 116 118 119 131 138 140 144 145 195]
[0 22 24 25 33 66 68 69 77 99 116 118 119 131 138 140 144 145 147 195]
[0 22 24 25 33 66 68 69 77 99 116 118 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 66 68 69 77 99 116 118 119 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 66 68 69 77 99 116 118 119 131 133 137 138 145 195]
[0 22 24 25 33 66 68 69 77 99 116 118 119 131 133 137 138 145 147 195]
[0 22 24 25 33 66 68 69 77 99 116 118 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 66 68 69 77 99 116 118 119 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 66 68 69 77 99 116 118 119 131 133 137 138 140 144 145 195]
[0 22 24 25 33 66 68 69 77 99 116 118 119 131 133 137 138 140 144 145 147 195]
[0 22 24 25 33 66 68 69 77 99 116 118 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 66 68 69 77 99 116 118 119 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 66 68 69 77 99 116 118 119 128 130 131 138 145 195]
[0 22 24 25 33 66 68 69 77 99 116 118 119 128 130 131 138 145 147 195]
[0 22 24 25 33 66 68 69 77 99 116 118 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 66 68 69 77 99 116 118 119 128 130 131 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 66 68 69 77 99 116 118 119 128 130 131 138 140 144 145 195]
[0 22 24 25 33 66 68 69 77 99 116 118 119 128 130 131 138 140 144 145 147 195]
[0 22 24 25 33 66 68 69 77 99 116 118 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 66 68 69 77 99 116 118 119 128 130 131 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 66 68 69 77 99 116 118 119 128 130 131 133 137 138 145 195]
[0 22 24 25 33 66 68 69 77 99 116 118 119 128 130 131 133 137 138 145 147 195]
[0 22 24 25 33 66 68 69 77 99 116 118 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 66 68 69 77 99 116 118 119 128 130 131 133 137 138 145 147 153 162 163 172 173 182 183 192 194 195]
[0 22 24 25 33 66 68 69 77 99 116 118 119 128 130 131 133 137 138 140 144 145 195]
[0 22 24 25 33 66 68 69 77 99 116 118 119 128 130 131 133 137 138 140 144 145 147 195]
[0 22 24 25 33 66 68 69 77 99 116 118 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 195]
[0 22 24 25 33 66 68 69 77 99 116 118 119 128 130 131 133 137 138 140 144 145 147 153 162 163 172 173 182 183 192 194 195]
|f184| = list_max([
  list_sum(117, 7);
  list_sum(117, 13, 7);
  list_sum(117, 40, 7);
  list_sum([
    117;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum(117, 7, 7);
  list_sum(117, 7, 40, 7);
  list_sum([
    117;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum(117, 102, 7, 7);
  list_sum(117, 102, 7, 40, 7);
  list_sum([
    117;
    102;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    102;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum(117, 102, 67, 5, 13, 7, 7);
  list_sum(117, 102, 67, 5, 13, 7, 40, 7);
  list_sum([
    117;
    102;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    102;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum(117, 105, 102, 7, 7);
  list_sum(117, 105, 102, 7, 40, 7);
  list_sum([
    117;
    105;
    102;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum(117, 105, 102, 67, 5, 13, 7, 7);
  list_sum(117, 105, 102, 67, 5, 13, 7, 40, 7);
  list_sum([
    117;
    105;
    102;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum(117, 105, 108, 102, 7, 7);
  list_sum(117, 105, 108, 102, 7, 40, 7);
  list_sum([
    117;
    105;
    108;
    102;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum(117, 105, 108, 102, 67, 5, 13, 7, 7);
  list_sum(117, 105, 108, 102, 67, 5, 13, 7, 40, 7);
  list_sum([
    117;
    105;
    108;
    102;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum(117, 105, 36, 102, 7, 7);
  list_sum(117, 105, 36, 102, 7, 40, 7);
  list_sum([
    117;
    105;
    36;
    102;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum(117, 105, 36, 102, 67, 5, 13, 7, 7);
  list_sum(117, 105, 36, 102, 67, 5, 13, 7, 40, 7);
  list_sum([
    117;
    105;
    36;
    102;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum(117, 105, 36, 108, 102, 7, 7);
  list_sum(117, 105, 36, 108, 102, 7, 40, 7);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum(117, 105, 36, 108, 102, 67, 5, 13, 7, 7);
  list_sum(117, 105, 36, 108, 102, 67, 5, 13, 7, 40, 7);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum(117, 36, 102, 7, 7);
  list_sum(117, 36, 102, 7, 40, 7);
  list_sum([
    117;
    36;
    102;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum(117, 36, 102, 67, 5, 13, 7, 7);
  list_sum(117, 36, 102, 67, 5, 13, 7, 40, 7);
  list_sum([
    117;
    36;
    102;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum(117, 36, 105, 102, 7, 7);
  list_sum(117, 36, 105, 102, 7, 40, 7);
  list_sum([
    117;
    36;
    105;
    102;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum(117, 36, 105, 102, 67, 5, 13, 7, 7);
  list_sum(117, 36, 105, 102, 67, 5, 13, 7, 40, 7);
  list_sum([
    117;
    36;
    105;
    102;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum(117, 36, 105, 108, 102, 7, 7);
  list_sum(117, 36, 105, 108, 102, 7, 40, 7);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum(117, 36, 105, 108, 102, 67, 5, 13, 7, 7);
  list_sum(117, 36, 105, 108, 102, 67, 5, 13, 7, 40, 7);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum(117, 36, 105, 36, 102, 7, 7);
  list_sum(117, 36, 105, 36, 102, 7, 40, 7);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum(117, 36, 105, 36, 102, 67, 5, 13, 7, 7);
  list_sum(117, 36, 105, 36, 102, 67, 5, 13, 7, 40, 7);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum(117, 36, 105, 36, 108, 102, 7, 7);
  list_sum(117, 36, 105, 36, 108, 102, 7, 40, 7);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum(117, 36, 105, 36, 108, 102, 67, 5, 13, 7, 7);
  list_sum(117, 36, 105, 36, 108, 102, 67, 5, 13, 7, 40, 7);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    67;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    67;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    67;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    67;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    67;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    67;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    67;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    67;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    67;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    67;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    7
  ]);
  list_sum([
    117;
    (18 * (N([ln4; ln7], [(ln4 + 1) != ln7], [0 + 1; m[4220] /u 3], [ln4 + 1; ln7]))) + 1;
    1;
    36;
    105;
    (30 * (N([ln11; ln4], [(ln4 + 1) != ln11], [((m[4220] + 1) - (m[332] + m[4172])) /s 6; 0 + 1], [ln11; ln4 + 1]))) + 1;
    1;
    36;
    108;
    102;
    ((14 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5008] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    67;
    ((22 + |f35|) * (N([ln1; ln4], [(ln1 + -1) > ln4], [m[5012] + -1; select(m[0] < m[5012], m[5012], m[0])], [ln1 + -1; ln4]))) + 1;
    1;
    5;
    (list_max([
      (25 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]));
      (41 + |f35|) * (N([ln4], [ln4 > 1], [select(m[0] < m[5012], m[5012], m[0])], [ln4 + -1]))
    ])) + (list_max(1, 1));
    1;
    13;
    (list_max([
      15 * (N([ln1; ln4], [(ln4 + 1) < ln1], [m[168]; 0], [ln1; ln4 + 1]));
      (21 + |f33|) * (N([ln4; m[168]], [(ln4 + 1) < m[168]], [0; m[168]], [ln4 + 1; m[168]]))
    ])) + (list_max(1, 1));
    1;
    7;
    40;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      54 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      55 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    3;
    (list_max([
      20 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      56 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]));
      57 * (N([ln1], [(ln1 + 1) != 64], [1], [ln1 + 1]))
    ])) + (list_max(1, 1, 1));
    1;
    13;
    7
  ])
])
