ebb costs:
[0]: 46
[16]: (list_max(((28 + |f87|) * N([m[53]], [not(i32.eqz(m[53]))], [m[53]], [m[53]])), ((42 + |f87|) * N([m[8]], [not(i32.eqz((m[8] && 1)))], [m[8]], [m[8]])), ((47 + |f87|) * N([m[8]], [not((m[8] && 2))], [m[8]], [m[8]]))) + list_max(1, 1, 1))
[31]: 8
[33]: 2
[34]: 6
[36]: 23
[40]: 41
[46]: (((16 + |f70|) * N([ln5; ln6], [((ln5 + 8) < ln6)], [(pn0 + 24); ((pn0 + 16) + (m[12] shl 3))], [(ln5 + 8); ln6])) + 1)
[49]: 1
[51]: 6
[53]: (((21 + |f70|) * N([ln5; ln6], [((ln5 + 8) < ln6)], [(pn0 + 24); ((pn0 + 16) + (m[12] shl 3))], [(ln5 + 8); ln6])) + 1)
[59]: 1
[62]: (list_max(((21 + |f70|) * N([ln5; ln6], [((ln5 + 8) < ln6)], [(pn0 + 24); ((pn0 + 16) + (m[12] shl 3))], [(ln5 + 8); ln6])), ((27 + |f70|) * N([ln5; ln6], [((ln5 + 8) < ln6)], [(pn0 + 24); ((pn0 + 16) + (m[12] shl 3))], [(ln5 + 8); ln6]))) + list_max(1, 1))
[68]: 1
[69]: 1
[71]: 0
[72]: 0
48 ebb paths found
[0 71]
[0 69]
[0 40 69]
[0 40 51 53 72]
[0 40 51 53 69]
[0 40 46 69]
[0 40 46 49 69]
[0 40 46 49 51 53 72]
[0 40 46 49 51 53 69]
[0 36 71]
[0 36 69]
[0 36 40 69]
[0 36 40 51 53 72]
[0 36 40 51 53 69]
[0 36 40 46 69]
[0 36 40 46 49 69]
[0 36 40 46 49 51 53 72]
[0 36 40 46 49 51 53 69]
[0 16 33 34 69]
[0 16 33 34 36 71]
[0 16 33 34 36 69]
[0 16 33 34 36 40 69]
[0 16 33 34 36 40 51 53 72]
[0 16 33 34 36 40 51 53 69]
[0 16 33 34 36 40 46 69]
[0 16 33 34 36 40 46 49 69]
[0 16 33 34 36 40 46 49 51 53 72]
[0 16 33 34 36 40 46 49 51 53 69]
[0 16 31 34 69]
[0 16 31 34 36 71]
[0 16 31 34 36 69]
[0 16 31 34 36 40 69]
[0 16 31 34 36 40 51 53 72]
[0 16 31 34 36 40 51 53 69]
[0 16 31 34 36 40 46 69]
[0 16 31 34 36 40 46 49 69]
[0 16 31 34 36 40 46 49 51 53 72]
[0 16 31 34 36 40 46 49 51 53 69]
[0 16 31 33 34 69]
[0 16 31 33 34 36 71]
[0 16 31 33 34 36 69]
[0 16 31 33 34 36 40 69]
[0 16 31 33 34 36 40 51 53 72]
[0 16 31 33 34 36 40 51 53 69]
[0 16 31 33 34 36 40 46 69]
[0 16 31 33 34 36 40 46 49 69]
[0 16 31 33 34 36 40 46 49 51 53 72]
[0 16 31 33 34 36 40 46 49 51 53 69]
|f229| = list_max([
  list_sum(46, 0);
  list_sum(46, 1);
  list_sum(46, 41, 1);
  list_sum([
    46;
    41;
    6;
    ((21 + |f70|) * (N([ln5; ln6], [(ln5 + 8) < ln6], [pn0 + 24; (pn0 + 16) + (m[12] shl 3)], [ln5 + 8; ln6]))) + 1;
    0
  ]);
  list_sum([
    46;
    41;
    6;
    ((21 + |f70|) * (N([ln5; ln6], [(ln5 + 8) < ln6], [pn0 + 24; (pn0 + 16) + (m[12] shl 3)], [ln5 + 8; ln6]))) + 1;
    1
  ]);
  list_sum([
    46;
    41;
    ((16 + |f70|) * (N([ln5; ln6], [(ln5 + 8) < ln6], [pn0 + 24; (pn0 + 16) + (m[12] shl 3)], [ln5 + 8; ln6]))) + 1;
    1
  ]);
  list_sum([
    46;
    41;
    ((16 + |f70|) * (N([ln5; ln6], [(ln5 + 8) < ln6], [pn0 + 24; (pn0 + 16) + (m[12] shl 3)], [ln5 + 8; ln6]))) + 1;
    1;
    1
  ]);
  list_sum([
    46;
    41;
    ((16 + |f70|) * (N([ln5; ln6], [(ln5 + 8) < ln6], [pn0 + 24; (pn0 + 16) + (m[12] shl 3)], [ln5 + 8; ln6]))) + 1;
    1;
    6;
    ((21 + |f70|) * (N([ln5; ln6], [(ln5 + 8) < ln6], [pn0 + 24; (pn0 + 16) + (m[12] shl 3)], [ln5 + 8; ln6]))) + 1;
    0
  ]);
  list_sum([
    46;
    41;
    ((16 + |f70|) * (N([ln5; ln6], [(ln5 + 8) < ln6], [pn0 + 24; (pn0 + 16) + (m[12] shl 3)], [ln5 + 8; ln6]))) + 1;
    1;
    6;
    ((21 + |f70|) * (N([ln5; ln6], [(ln5 + 8) < ln6], [pn0 + 24; (pn0 + 16) + (m[12] shl 3)], [ln5 + 8; ln6]))) + 1;
    1
  ]);
  list_sum(46, 23, 0);
  list_sum(46, 23, 1);
  list_sum(46, 23, 41, 1);
  list_sum([
    46;
    23;
    41;
    6;
    ((21 + |f70|) * (N([ln5; ln6], [(ln5 + 8) < ln6], [pn0 + 24; (pn0 + 16) + (m[12] shl 3)], [ln5 + 8; ln6]))) + 1;
    0
  ]);
  list_sum([
    46;
    23;
    41;
    6;
    ((21 + |f70|) * (N([ln5; ln6], [(ln5 + 8) < ln6], [pn0 + 24; (pn0 + 16) + (m[12] shl 3)], [ln5 + 8; ln6]))) + 1;
    1
  ]);
  list_sum([
    46;
    23;
    41;
    ((16 + |f70|) * (N([ln5; ln6], [(ln5 + 8) < ln6], [pn0 + 24; (pn0 + 16) + (m[12] shl 3)], [ln5 + 8; ln6]))) + 1;
    1
  ]);
  list_sum([
    46;
    23;
    41;
    ((16 + |f70|) * (N([ln5; ln6], [(ln5 + 8) < ln6], [pn0 + 24; (pn0 + 16) + (m[12] shl 3)], [ln5 + 8; ln6]))) + 1;
    1;
    1
  ]);
  list_sum([
    46;
    23;
    41;
    ((16 + |f70|) * (N([ln5; ln6], [(ln5 + 8) < ln6], [pn0 + 24; (pn0 + 16) + (m[12] shl 3)], [ln5 + 8; ln6]))) + 1;
    1;
    6;
    ((21 + |f70|) * (N([ln5; ln6], [(ln5 + 8) < ln6], [pn0 + 24; (pn0 + 16) + (m[12] shl 3)], [ln5 + 8; ln6]))) + 1;
    0
  ]);
  list_sum([
    46;
    23;
    41;
    ((16 + |f70|) * (N([ln5; ln6], [(ln5 + 8) < ln6], [pn0 + 24; (pn0 + 16) + (m[12] shl 3)], [ln5 + 8; ln6]))) + 1;
    1;
    6;
    ((21 + |f70|) * (N([ln5; ln6], [(ln5 + 8) < ln6], [pn0 + 24; (pn0 + 16) + (m[12] shl 3)], [ln5 + 8; ln6]))) + 1;
    1
  ]);
  list_sum([
    46;
    (list_max([
      (28 + |f87|) * (N([m[53]], [not(i32.eqz(m[53]))], [m[53]], [m[53]]));
      (42 + |f87|) * (N([m[8]], [not(i32.eqz(m[8] && 1))], [m[8]], [m[8]]));
      (47 + |f87|) * (N([m[8]], [not(m[8] && 2)], [m[8]], [m[8]]))
    ])) + (list_max(1, 1, 1));
    2;
    6;
    1
  ]);
  list_sum([
    46;
    (list_max([
      (28 + |f87|) * (N([m[53]], [not(i32.eqz(m[53]))], [m[53]], [m[53]]));
      (42 + |f87|) * (N([m[8]], [not(i32.eqz(m[8] && 1))], [m[8]], [m[8]]));
      (47 + |f87|) * (N([m[8]], [not(m[8] && 2)], [m[8]], [m[8]]))
    ])) + (list_max(1, 1, 1));
    2;
    6;
    23;
    0
  ]);
  list_sum([
    46;
    (list_max([
      (28 + |f87|) * (N([m[53]], [not(i32.eqz(m[53]))], [m[53]], [m[53]]));
      (42 + |f87|) * (N([m[8]], [not(i32.eqz(m[8] && 1))], [m[8]], [m[8]]));
      (47 + |f87|) * (N([m[8]], [not(m[8] && 2)], [m[8]], [m[8]]))
    ])) + (list_max(1, 1, 1));
    2;
    6;
    23;
    1
  ]);
  list_sum([
    46;
    (list_max([
      (28 + |f87|) * (N([m[53]], [not(i32.eqz(m[53]))], [m[53]], [m[53]]));
      (42 + |f87|) * (N([m[8]], [not(i32.eqz(m[8] && 1))], [m[8]], [m[8]]));
      (47 + |f87|) * (N([m[8]], [not(m[8] && 2)], [m[8]], [m[8]]))
    ])) + (list_max(1, 1, 1));
    2;
    6;
    23;
    41;
    1
  ]);
  list_sum([
    46;
    (list_max([
      (28 + |f87|) * (N([m[53]], [not(i32.eqz(m[53]))], [m[53]], [m[53]]));
      (42 + |f87|) * (N([m[8]], [not(i32.eqz(m[8] && 1))], [m[8]], [m[8]]));
      (47 + |f87|) * (N([m[8]], [not(m[8] && 2)], [m[8]], [m[8]]))
    ])) + (list_max(1, 1, 1));
    2;
    6;
    23;
    41;
    6;
    ((21 + |f70|) * (N([ln5; ln6], [(ln5 + 8) < ln6], [pn0 + 24; (pn0 + 16) + (m[12] shl 3)], [ln5 + 8; ln6]))) + 1;
    0
  ]);
  list_sum([
    46;
    (list_max([
      (28 + |f87|) * (N([m[53]], [not(i32.eqz(m[53]))], [m[53]], [m[53]]));
      (42 + |f87|) * (N([m[8]], [not(i32.eqz(m[8] && 1))], [m[8]], [m[8]]));
      (47 + |f87|) * (N([m[8]], [not(m[8] && 2)], [m[8]], [m[8]]))
    ])) + (list_max(1, 1, 1));
    2;
    6;
    23;
    41;
    6;
    ((21 + |f70|) * (N([ln5; ln6], [(ln5 + 8) < ln6], [pn0 + 24; (pn0 + 16) + (m[12] shl 3)], [ln5 + 8; ln6]))) + 1;
    1
  ]);
  list_sum([
    46;
    (list_max([
      (28 + |f87|) * (N([m[53]], [not(i32.eqz(m[53]))], [m[53]], [m[53]]));
      (42 + |f87|) * (N([m[8]], [not(i32.eqz(m[8] && 1))], [m[8]], [m[8]]));
      (47 + |f87|) * (N([m[8]], [not(m[8] && 2)], [m[8]], [m[8]]))
    ])) + (list_max(1, 1, 1));
    2;
    6;
    23;
    41;
    ((16 + |f70|) * (N([ln5; ln6], [(ln5 + 8) < ln6], [pn0 + 24; (pn0 + 16) + (m[12] shl 3)], [ln5 + 8; ln6]))) + 1;
    1
  ]);
  list_sum([
    46;
    (list_max([
      (28 + |f87|) * (N([m[53]], [not(i32.eqz(m[53]))], [m[53]], [m[53]]));
      (42 + |f87|) * (N([m[8]], [not(i32.eqz(m[8] && 1))], [m[8]], [m[8]]));
      (47 + |f87|) * (N([m[8]], [not(m[8] && 2)], [m[8]], [m[8]]))
    ])) + (list_max(1, 1, 1));
    2;
    6;
    23;
    41;
    ((16 + |f70|) * (N([ln5; ln6], [(ln5 + 8) < ln6], [pn0 + 24; (pn0 + 16) + (m[12] shl 3)], [ln5 + 8; ln6]))) + 1;
    1;
    1
  ]);
  list_sum([
    46;
    (list_max([
      (28 + |f87|) * (N([m[53]], [not(i32.eqz(m[53]))], [m[53]], [m[53]]));
      (42 + |f87|) * (N([m[8]], [not(i32.eqz(m[8] && 1))], [m[8]], [m[8]]));
      (47 + |f87|) * (N([m[8]], [not(m[8] && 2)], [m[8]], [m[8]]))
    ])) + (list_max(1, 1, 1));
    2;
    6;
    23;
    41;
    ((16 + |f70|) * (N([ln5; ln6], [(ln5 + 8) < ln6], [pn0 + 24; (pn0 + 16) + (m[12] shl 3)], [ln5 + 8; ln6]))) + 1;
    1;
    6;
    ((21 + |f70|) * (N([ln5; ln6], [(ln5 + 8) < ln6], [pn0 + 24; (pn0 + 16) + (m[12] shl 3)], [ln5 + 8; ln6]))) + 1;
    0
  ]);
  list_sum([
    46;
    (list_max([
      (28 + |f87|) * (N([m[53]], [not(i32.eqz(m[53]))], [m[53]], [m[53]]));
      (42 + |f87|) * (N([m[8]], [not(i32.eqz(m[8] && 1))], [m[8]], [m[8]]));
      (47 + |f87|) * (N([m[8]], [not(m[8] && 2)], [m[8]], [m[8]]))
    ])) + (list_max(1, 1, 1));
    2;
    6;
    23;
    41;
    ((16 + |f70|) * (N([ln5; ln6], [(ln5 + 8) < ln6], [pn0 + 24; (pn0 + 16) + (m[12] shl 3)], [ln5 + 8; ln6]))) + 1;
    1;
    6;
    ((21 + |f70|) * (N([ln5; ln6], [(ln5 + 8) < ln6], [pn0 + 24; (pn0 + 16) + (m[12] shl 3)], [ln5 + 8; ln6]))) + 1;
    1
  ]);
  list_sum([
    46;
    (list_max([
      (28 + |f87|) * (N([m[53]], [not(i32.eqz(m[53]))], [m[53]], [m[53]]));
      (42 + |f87|) * (N([m[8]], [not(i32.eqz(m[8] && 1))], [m[8]], [m[8]]));
      (47 + |f87|) * (N([m[8]], [not(m[8] && 2)], [m[8]], [m[8]]))
    ])) + (list_max(1, 1, 1));
    8;
    6;
    1
  ]);
  list_sum([
    46;
    (list_max([
      (28 + |f87|) * (N([m[53]], [not(i32.eqz(m[53]))], [m[53]], [m[53]]));
      (42 + |f87|) * (N([m[8]], [not(i32.eqz(m[8] && 1))], [m[8]], [m[8]]));
      (47 + |f87|) * (N([m[8]], [not(m[8] && 2)], [m[8]], [m[8]]))
    ])) + (list_max(1, 1, 1));
    8;
    6;
    23;
    0
  ]);
  list_sum([
    46;
    (list_max([
      (28 + |f87|) * (N([m[53]], [not(i32.eqz(m[53]))], [m[53]], [m[53]]));
      (42 + |f87|) * (N([m[8]], [not(i32.eqz(m[8] && 1))], [m[8]], [m[8]]));
      (47 + |f87|) * (N([m[8]], [not(m[8] && 2)], [m[8]], [m[8]]))
    ])) + (list_max(1, 1, 1));
    8;
    6;
    23;
    1
  ]);
  list_sum([
    46;
    (list_max([
      (28 + |f87|) * (N([m[53]], [not(i32.eqz(m[53]))], [m[53]], [m[53]]));
      (42 + |f87|) * (N([m[8]], [not(i32.eqz(m[8] && 1))], [m[8]], [m[8]]));
      (47 + |f87|) * (N([m[8]], [not(m[8] && 2)], [m[8]], [m[8]]))
    ])) + (list_max(1, 1, 1));
    8;
    6;
    23;
    41;
    1
  ]);
  list_sum([
    46;
    (list_max([
      (28 + |f87|) * (N([m[53]], [not(i32.eqz(m[53]))], [m[53]], [m[53]]));
      (42 + |f87|) * (N([m[8]], [not(i32.eqz(m[8] && 1))], [m[8]], [m[8]]));
      (47 + |f87|) * (N([m[8]], [not(m[8] && 2)], [m[8]], [m[8]]))
    ])) + (list_max(1, 1, 1));
    8;
    6;
    23;
    41;
    6;
    ((21 + |f70|) * (N([ln5; ln6], [(ln5 + 8) < ln6], [pn0 + 24; (pn0 + 16) + (m[12] shl 3)], [ln5 + 8; ln6]))) + 1;
    0
  ]);
  list_sum([
    46;
    (list_max([
      (28 + |f87|) * (N([m[53]], [not(i32.eqz(m[53]))], [m[53]], [m[53]]));
      (42 + |f87|) * (N([m[8]], [not(i32.eqz(m[8] && 1))], [m[8]], [m[8]]));
      (47 + |f87|) * (N([m[8]], [not(m[8] && 2)], [m[8]], [m[8]]))
    ])) + (list_max(1, 1, 1));
    8;
    6;
    23;
    41;
    6;
    ((21 + |f70|) * (N([ln5; ln6], [(ln5 + 8) < ln6], [pn0 + 24; (pn0 + 16) + (m[12] shl 3)], [ln5 + 8; ln6]))) + 1;
    1
  ]);
  list_sum([
    46;
    (list_max([
      (28 + |f87|) * (N([m[53]], [not(i32.eqz(m[53]))], [m[53]], [m[53]]));
      (42 + |f87|) * (N([m[8]], [not(i32.eqz(m[8] && 1))], [m[8]], [m[8]]));
      (47 + |f87|) * (N([m[8]], [not(m[8] && 2)], [m[8]], [m[8]]))
    ])) + (list_max(1, 1, 1));
    8;
    6;
    23;
    41;
    ((16 + |f70|) * (N([ln5; ln6], [(ln5 + 8) < ln6], [pn0 + 24; (pn0 + 16) + (m[12] shl 3)], [ln5 + 8; ln6]))) + 1;
    1
  ]);
  list_sum([
    46;
    (list_max([
      (28 + |f87|) * (N([m[53]], [not(i32.eqz(m[53]))], [m[53]], [m[53]]));
      (42 + |f87|) * (N([m[8]], [not(i32.eqz(m[8] && 1))], [m[8]], [m[8]]));
      (47 + |f87|) * (N([m[8]], [not(m[8] && 2)], [m[8]], [m[8]]))
    ])) + (list_max(1, 1, 1));
    8;
    6;
    23;
    41;
    ((16 + |f70|) * (N([ln5; ln6], [(ln5 + 8) < ln6], [pn0 + 24; (pn0 + 16) + (m[12] shl 3)], [ln5 + 8; ln6]))) + 1;
    1;
    1
  ]);
  list_sum([
    46;
    (list_max([
      (28 + |f87|) * (N([m[53]], [not(i32.eqz(m[53]))], [m[53]], [m[53]]));
      (42 + |f87|) * (N([m[8]], [not(i32.eqz(m[8] && 1))], [m[8]], [m[8]]));
      (47 + |f87|) * (N([m[8]], [not(m[8] && 2)], [m[8]], [m[8]]))
    ])) + (list_max(1, 1, 1));
    8;
    6;
    23;
    41;
    ((16 + |f70|) * (N([ln5; ln6], [(ln5 + 8) < ln6], [pn0 + 24; (pn0 + 16) + (m[12] shl 3)], [ln5 + 8; ln6]))) + 1;
    1;
    6;
    ((21 + |f70|) * (N([ln5; ln6], [(ln5 + 8) < ln6], [pn0 + 24; (pn0 + 16) + (m[12] shl 3)], [ln5 + 8; ln6]))) + 1;
    0
  ]);
  list_sum([
    46;
    (list_max([
      (28 + |f87|) * (N([m[53]], [not(i32.eqz(m[53]))], [m[53]], [m[53]]));
      (42 + |f87|) * (N([m[8]], [not(i32.eqz(m[8] && 1))], [m[8]], [m[8]]));
      (47 + |f87|) * (N([m[8]], [not(m[8] && 2)], [m[8]], [m[8]]))
    ])) + (list_max(1, 1, 1));
    8;
    6;
    23;
    41;
    ((16 + |f70|) * (N([ln5; ln6], [(ln5 + 8) < ln6], [pn0 + 24; (pn0 + 16) + (m[12] shl 3)], [ln5 + 8; ln6]))) + 1;
    1;
    6;
    ((21 + |f70|) * (N([ln5; ln6], [(ln5 + 8) < ln6], [pn0 + 24; (pn0 + 16) + (m[12] shl 3)], [ln5 + 8; ln6]))) + 1;
    1
  ]);
  list_sum([
    46;
    (list_max([
      (28 + |f87|) * (N([m[53]], [not(i32.eqz(m[53]))], [m[53]], [m[53]]));
      (42 + |f87|) * (N([m[8]], [not(i32.eqz(m[8] && 1))], [m[8]], [m[8]]));
      (47 + |f87|) * (N([m[8]], [not(m[8] && 2)], [m[8]], [m[8]]))
    ])) + (list_max(1, 1, 1));
    8;
    2;
    6;
    1
  ]);
  list_sum([
    46;
    (list_max([
      (28 + |f87|) * (N([m[53]], [not(i32.eqz(m[53]))], [m[53]], [m[53]]));
      (42 + |f87|) * (N([m[8]], [not(i32.eqz(m[8] && 1))], [m[8]], [m[8]]));
      (47 + |f87|) * (N([m[8]], [not(m[8] && 2)], [m[8]], [m[8]]))
    ])) + (list_max(1, 1, 1));
    8;
    2;
    6;
    23;
    0
  ]);
  list_sum([
    46;
    (list_max([
      (28 + |f87|) * (N([m[53]], [not(i32.eqz(m[53]))], [m[53]], [m[53]]));
      (42 + |f87|) * (N([m[8]], [not(i32.eqz(m[8] && 1))], [m[8]], [m[8]]));
      (47 + |f87|) * (N([m[8]], [not(m[8] && 2)], [m[8]], [m[8]]))
    ])) + (list_max(1, 1, 1));
    8;
    2;
    6;
    23;
    1
  ]);
  list_sum([
    46;
    (list_max([
      (28 + |f87|) * (N([m[53]], [not(i32.eqz(m[53]))], [m[53]], [m[53]]));
      (42 + |f87|) * (N([m[8]], [not(i32.eqz(m[8] && 1))], [m[8]], [m[8]]));
      (47 + |f87|) * (N([m[8]], [not(m[8] && 2)], [m[8]], [m[8]]))
    ])) + (list_max(1, 1, 1));
    8;
    2;
    6;
    23;
    41;
    1
  ]);
  list_sum([
    46;
    (list_max([
      (28 + |f87|) * (N([m[53]], [not(i32.eqz(m[53]))], [m[53]], [m[53]]));
      (42 + |f87|) * (N([m[8]], [not(i32.eqz(m[8] && 1))], [m[8]], [m[8]]));
      (47 + |f87|) * (N([m[8]], [not(m[8] && 2)], [m[8]], [m[8]]))
    ])) + (list_max(1, 1, 1));
    8;
    2;
    6;
    23;
    41;
    6;
    ((21 + |f70|) * (N([ln5; ln6], [(ln5 + 8) < ln6], [pn0 + 24; (pn0 + 16) + (m[12] shl 3)], [ln5 + 8; ln6]))) + 1;
    0
  ]);
  list_sum([
    46;
    (list_max([
      (28 + |f87|) * (N([m[53]], [not(i32.eqz(m[53]))], [m[53]], [m[53]]));
      (42 + |f87|) * (N([m[8]], [not(i32.eqz(m[8] && 1))], [m[8]], [m[8]]));
      (47 + |f87|) * (N([m[8]], [not(m[8] && 2)], [m[8]], [m[8]]))
    ])) + (list_max(1, 1, 1));
    8;
    2;
    6;
    23;
    41;
    6;
    ((21 + |f70|) * (N([ln5; ln6], [(ln5 + 8) < ln6], [pn0 + 24; (pn0 + 16) + (m[12] shl 3)], [ln5 + 8; ln6]))) + 1;
    1
  ]);
  list_sum([
    46;
    (list_max([
      (28 + |f87|) * (N([m[53]], [not(i32.eqz(m[53]))], [m[53]], [m[53]]));
      (42 + |f87|) * (N([m[8]], [not(i32.eqz(m[8] && 1))], [m[8]], [m[8]]));
      (47 + |f87|) * (N([m[8]], [not(m[8] && 2)], [m[8]], [m[8]]))
    ])) + (list_max(1, 1, 1));
    8;
    2;
    6;
    23;
    41;
    ((16 + |f70|) * (N([ln5; ln6], [(ln5 + 8) < ln6], [pn0 + 24; (pn0 + 16) + (m[12] shl 3)], [ln5 + 8; ln6]))) + 1;
    1
  ]);
  list_sum([
    46;
    (list_max([
      (28 + |f87|) * (N([m[53]], [not(i32.eqz(m[53]))], [m[53]], [m[53]]));
      (42 + |f87|) * (N([m[8]], [not(i32.eqz(m[8] && 1))], [m[8]], [m[8]]));
      (47 + |f87|) * (N([m[8]], [not(m[8] && 2)], [m[8]], [m[8]]))
    ])) + (list_max(1, 1, 1));
    8;
    2;
    6;
    23;
    41;
    ((16 + |f70|) * (N([ln5; ln6], [(ln5 + 8) < ln6], [pn0 + 24; (pn0 + 16) + (m[12] shl 3)], [ln5 + 8; ln6]))) + 1;
    1;
    1
  ]);
  list_sum([
    46;
    (list_max([
      (28 + |f87|) * (N([m[53]], [not(i32.eqz(m[53]))], [m[53]], [m[53]]));
      (42 + |f87|) * (N([m[8]], [not(i32.eqz(m[8] && 1))], [m[8]], [m[8]]));
      (47 + |f87|) * (N([m[8]], [not(m[8] && 2)], [m[8]], [m[8]]))
    ])) + (list_max(1, 1, 1));
    8;
    2;
    6;
    23;
    41;
    ((16 + |f70|) * (N([ln5; ln6], [(ln5 + 8) < ln6], [pn0 + 24; (pn0 + 16) + (m[12] shl 3)], [ln5 + 8; ln6]))) + 1;
    1;
    6;
    ((21 + |f70|) * (N([ln5; ln6], [(ln5 + 8) < ln6], [pn0 + 24; (pn0 + 16) + (m[12] shl 3)], [ln5 + 8; ln6]))) + 1;
    0
  ]);
  list_sum([
    46;
    (list_max([
      (28 + |f87|) * (N([m[53]], [not(i32.eqz(m[53]))], [m[53]], [m[53]]));
      (42 + |f87|) * (N([m[8]], [not(i32.eqz(m[8] && 1))], [m[8]], [m[8]]));
      (47 + |f87|) * (N([m[8]], [not(m[8] && 2)], [m[8]], [m[8]]))
    ])) + (list_max(1, 1, 1));
    8;
    2;
    6;
    23;
    41;
    ((16 + |f70|) * (N([ln5; ln6], [(ln5 + 8) < ln6], [pn0 + 24; (pn0 + 16) + (m[12] shl 3)], [ln5 + 8; ln6]))) + 1;
    1;
    6;
    ((21 + |f70|) * (N([ln5; ln6], [(ln5 + 8) < ln6], [pn0 + 24; (pn0 + 16) + (m[12] shl 3)], [ln5 + 8; ln6]))) + 1;
    1
  ])
])
