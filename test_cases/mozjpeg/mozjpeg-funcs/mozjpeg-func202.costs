ebb costs:
[0]: 30
[2]: (list_max((16 * N([ln13; ln4], [((ln13 + 1) < ln4)], [m[16]; m[20]], [(ln13 + 1); ln4])), (48 * N([ln13; m[20]], [((ln13 + 1) < m[20])], [m[16]; m[20]], [(ln13 + 1); m[20]])), (79 * N([ln13; m[20]], [((ln13 + 1) < m[20])], [m[16]; m[20]], [(ln13 + 1); m[20]])), (149 * N([ln13; m[20]], [((ln13 + 1) < m[20])], [m[16]; m[20]], [(ln13 + 1); m[20]])), ((170 + |f40|) * N([ln13; m[20]], [((ln13 + 1) < m[20])], [m[16]; m[20]], [(ln13 + 1); m[20]])), ((193 + |f40|) * N([ln13; m[20]], [((ln13 + 1) < m[20])], [m[16]; m[20]], [(ln13 + 1); m[20]])), ((145 + |f40|) * N([ln13; m[20]], [((ln13 + 1) < m[20])], [m[16]; m[20]], [(ln13 + 1); m[20]])), ((171 + |f40|) * N([ln13; m[20]], [((ln13 + 1) < m[20])], [m[16]; m[20]], [(ln13 + 1); m[20]])), (157 * N([ln13; m[20]], [((ln13 + 1) < m[20])], [m[16]; m[20]], [(ln13 + 1); m[20]])), ((178 + |f40|) * N([ln13; m[20]], [((ln13 + 1) < m[20])], [m[16]; m[20]], [(ln13 + 1); m[20]])), ((201 + |f40|) * N([ln13; m[20]], [((ln13 + 1) < m[20])], [m[16]; m[20]], [(ln13 + 1); m[20]])), (78 * N([ln13; m[20]], [((ln13 + 1) < m[20])], [m[16]; m[20]], [(ln13 + 1); m[20]])), (151 * N([ln13; m[20]], [((ln13 + 1) < m[20])], [m[16]; m[20]], [(ln13 + 1); m[20]])), ((172 + |f40|) * N([ln13; m[20]], [((ln13 + 1) < m[20])], [m[16]; m[20]], [(ln13 + 1); m[20]])), ((195 + |f40|) * N([ln13; m[20]], [((ln13 + 1) < m[20])], [m[16]; m[20]], [(ln13 + 1); m[20]])), (158 * N([ln13; m[20]], [((ln13 + 1) < m[20])], [m[16]; m[20]], [(ln13 + 1); m[20]])), ((179 + |f40|) * N([ln13; m[20]], [((ln13 + 1) < m[20])], [m[16]; m[20]], [(ln13 + 1); m[20]])), ((202 + |f40|) * N([ln13; m[20]], [((ln13 + 1) < m[20])], [m[16]; m[20]], [(ln13 + 1); m[20]])), ((146 + |f40|) * N([ln13; m[20]], [((ln13 + 1) < m[20])], [m[16]; m[20]], [(ln13 + 1); m[20]])), ((172 + |f40|) * N([ln13; m[20]], [((ln13 + 1) < m[20])], [m[16]; m[20]], [(ln13 + 1); m[20]]))) + list_max(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8))
[2]: 9
[4]: (list_max((22 * N([ln15; ln8], [((ln8 + 1) <= ln15)], [(m[264] + -1); m[12]], [ln15; (ln8 + 1)])), (53 * N([ln15; ln8], [((ln8 + 1) <= ln15)], [(m[264] + -1); m[12]], [ln15; (ln8 + 1)])), (123 * N([ln15; ln8], [((ln8 + 1) <= ln15)], [(m[264] + -1); m[12]], [ln15; (ln8 + 1)])), ((144 + |f40|) * N([ln15; ln8], [((ln8 + 1) <= ln15)], [(m[264] + -1); m[12]], [ln15; (ln8 + 1)])), ((167 + |f40|) * N([ln15; ln8], [((ln8 + 1) <= ln15)], [(m[264] + -1); m[12]], [ln15; (ln8 + 1)])), ((119 + |f40|) * N([ln15; ln8], [((ln8 + 1) <= ln15)], [(m[264] + -1); m[12]], [ln15; (ln8 + 1)])), ((145 + |f40|) * N([ln15; ln8], [((ln8 + 1) <= ln15)], [(m[264] + -1); m[12]], [ln15; (ln8 + 1)])), (131 * N([ln15; ln8], [((ln8 + 1) <= ln15)], [(m[264] + -1); m[12]], [ln15; (ln8 + 1)])), ((152 + |f40|) * N([ln15; ln8], [((ln8 + 1) <= ln15)], [(m[264] + -1); m[12]], [ln15; (ln8 + 1)])), ((175 + |f40|) * N([ln15; ln8], [((ln8 + 1) <= ln15)], [(m[264] + -1); m[12]], [ln15; (ln8 + 1)])), (52 * N([ln15; ln8], [((ln8 + 1) <= ln15)], [(m[264] + -1); m[12]], [ln15; (ln8 + 1)])), (125 * N([ln15; ln8], [((ln8 + 1) <= ln15)], [(m[264] + -1); m[12]], [ln15; (ln8 + 1)])), ((146 + |f40|) * N([ln15; ln8], [((ln8 + 1) <= ln15)], [(m[264] + -1); m[12]], [ln15; (ln8 + 1)])), ((169 + |f40|) * N([ln15; ln8], [((ln8 + 1) <= ln15)], [(m[264] + -1); m[12]], [ln15; (ln8 + 1)])), (132 * N([ln15; ln8], [((ln8 + 1) <= ln15)], [(m[264] + -1); m[12]], [ln15; (ln8 + 1)])), ((153 + |f40|) * N([ln15; ln8], [((ln8 + 1) <= ln15)], [(m[264] + -1); m[12]], [ln15; (ln8 + 1)])), ((176 + |f40|) * N([ln15; ln8], [((ln8 + 1) <= ln15)], [(m[264] + -1); m[12]], [ln15; (ln8 + 1)])), ((120 + |f40|) * N([ln15; ln8], [((ln8 + 1) <= ln15)], [(m[264] + -1); m[12]], [ln15; (ln8 + 1)])), ((146 + |f40|) * N([ln15; ln8], [((ln8 + 1) <= ln15)], [(m[264] + -1); m[12]], [ln15; (ln8 + 1)]))) + list_max(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8))
[4]: 18
[8]: (list_max((18 * N([ln2; ln7], [((ln7 + 1) < ln2)], [m[244]; 0], [ln2; (ln7 + 1)])), (91 * N([ln7; m[244]], [((ln7 + 1) < m[244])], [0; m[244]], [(ln7 + 1); m[244]])), ((112 + |f40|) * N([ln7; m[244]], [((ln7 + 1) < m[244])], [0; m[244]], [(ln7 + 1); m[244]])), ((135 + |f40|) * N([ln7; m[244]], [((ln7 + 1) < m[244])], [0; m[244]], [(ln7 + 1); m[244]])), (98 * N([ln7; m[244]], [((ln7 + 1) < m[244])], [0; m[244]], [(ln7 + 1); m[244]])), ((119 + |f40|) * N([ln7; m[244]], [((ln7 + 1) < m[244])], [0; m[244]], [(ln7 + 1); m[244]])), ((142 + |f40|) * N([ln7; m[244]], [((ln7 + 1) < m[244])], [0; m[244]], [(ln7 + 1); m[244]])), ((86 + |f40|) * N([ln7; m[244]], [((ln7 + 1) < m[244])], [0; m[244]], [(ln7 + 1); m[244]])), ((112 + |f40|) * N([ln7; m[244]], [((ln7 + 1) < m[244])], [0; m[244]], [(ln7 + 1); m[244]]))) + list_max(1, 1, 1, 1, 1, 1, 1, 1, 1))
[8]: 25
[10]: (list_max((54 * N([ln9; m[56]], [((ln9 + 1) < m[56])], [0; m[56]], [(ln9 + 1); m[56]])), ((75 + |f40|) * N([ln9; m[56]], [((ln9 + 1) < m[56])], [0; m[56]], [(ln9 + 1); m[56]])), ((98 + |f40|) * N([ln9; m[56]], [((ln9 + 1) < m[56])], [0; m[56]], [(ln9 + 1); m[56]])), (61 * N([ln9; m[56]], [((ln9 + 1) < m[56])], [0; m[56]], [(ln9 + 1); m[56]])), ((82 + |f40|) * N([ln9; m[56]], [((ln9 + 1) < m[56])], [0; m[56]], [(ln9 + 1); m[56]])), ((105 + |f40|) * N([ln9; m[56]], [((ln9 + 1) < m[56])], [0; m[56]], [(ln9 + 1); m[56]])), ((49 + |f40|) * N([ln9; m[56]], [((ln9 + 1) < m[56])], [0; m[56]], [(ln9 + 1); m[56]])), ((75 + |f40|) * N([ln9; m[56]], [((ln9 + 1) < m[56])], [0; m[56]], [(ln9 + 1); m[56]]))) + list_max(1, 1, 1, 1, 1, 1, 1, 1))
[10]: 37
[16]: ((18 * N([ln12; ln2], [((ln2 + 1) != ln12)], [m[52]; (0 + 1)], [ln12; (ln2 + 1)])) + 1)
[18]: 1
[20]: 51
[23]: ((20 * N([ln11; ln2], [((ln2 + 1) < ln11)], [m[52]; (m[52] + 1)], [ln11; (ln2 + 1)])) + 1)
[25]: 1
[26]: 19
[28]: 4
[29]: 8
[33]: 1
[36]: (list_max((18 * N([ln14; ln2], [((ln14 + 1) < ln2)], [0; m[244]], [(ln14 + 1); ln2])), (88 * N([ln14; m[244]], [((ln14 + 1) < m[244])], [0; m[244]], [(ln14 + 1); m[244]])), ((109 + |f40|) * N([ln14; m[244]], [((ln14 + 1) < m[244])], [0; m[244]], [(ln14 + 1); m[244]])), ((132 + |f40|) * N([ln14; m[244]], [((ln14 + 1) < m[244])], [0; m[244]], [(ln14 + 1); m[244]])), ((84 + |f40|) * N([ln14; m[244]], [((ln14 + 1) < m[244])], [0; m[244]], [(ln14 + 1); m[244]])), ((110 + |f40|) * N([ln14; m[244]], [((ln14 + 1) < m[244])], [0; m[244]], [(ln14 + 1); m[244]])), (96 * N([ln14; m[244]], [((ln14 + 1) < m[244])], [0; m[244]], [(ln14 + 1); m[244]])), ((117 + |f40|) * N([ln14; m[244]], [((ln14 + 1) < m[244])], [0; m[244]], [(ln14 + 1); m[244]])), ((140 + |f40|) * N([ln14; m[244]], [((ln14 + 1) < m[244])], [0; m[244]], [(ln14 + 1); m[244]]))) + list_max(1, 1, 1, 1, 1, 1, 1, 1, 1))
[36]: 24
[38]: (list_max((52 * N([ln9; m[56]], [((ln9 + 1) < m[56])], [0; m[56]], [(ln9 + 1); m[56]])), ((73 + |f40|) * N([ln9; m[56]], [((ln9 + 1) < m[56])], [0; m[56]], [(ln9 + 1); m[56]])), ((96 + |f40|) * N([ln9; m[56]], [((ln9 + 1) < m[56])], [0; m[56]], [(ln9 + 1); m[56]])), ((48 + |f40|) * N([ln9; m[56]], [((ln9 + 1) < m[56])], [0; m[56]], [(ln9 + 1); m[56]])), ((74 + |f40|) * N([ln9; m[56]], [((ln9 + 1) < m[56])], [0; m[56]], [(ln9 + 1); m[56]])), (60 * N([ln9; m[56]], [((ln9 + 1) < m[56])], [0; m[56]], [(ln9 + 1); m[56]])), ((81 + |f40|) * N([ln9; m[56]], [((ln9 + 1) < m[56])], [0; m[56]], [(ln9 + 1); m[56]])), ((104 + |f40|) * N([ln9; m[56]], [((ln9 + 1) < m[56])], [0; m[56]], [(ln9 + 1); m[56]]))) + list_max(1, 1, 1, 1, 1, 1, 1, 1))
[38]: 66
[46]: ((20 * N([ln2; ln7], [((ln2 + 1) < ln7)], [(m[68] + 1); m[52]], [(ln2 + 1); ln7])) + 1)
[48]: 1
[50]: 24
[52]: ((18 * N([ln2; ln7], [((ln2 + 1) != ln7)], [(0 + 1); m[52]], [(ln2 + 1); ln7])) + 1)
[54]: 1
[55]: 17
[57]: 4
[58]: 8
[60]: 1
[61]: 16
[66]: 4
[67]: 13
[69]: 4
[70]: 37
[74]: 0
[75]: 0
25 ebb paths found
[0 70]
[0 2 67 69 70]
[0 2 4 61 74]
[0 2 4 61 66 67 69 70]
[0 2 4 8 29 75]
[0 2 4 8 29 61 74]
[0 2 4 8 29 61 66 67 69 70]
[0 2 4 8 10 26 28 29 75]
[0 2 4 8 10 26 28 29 61 74]
[0 2 4 8 10 26 28 29 61 66 67 69 70]
[0 2 4 8 10 20 26 28 29 75]
[0 2 4 8 10 20 26 28 29 61 74]
[0 2 4 8 10 20 26 28 29 61 66 67 69 70]
[0 2 4 8 10 20 23 25 26 28 29 75]
[0 2 4 8 10 20 23 25 26 28 29 61 74]
[0 2 4 8 10 20 23 25 26 28 29 61 66 67 69 70]
[0 2 4 8 10 16 18 26 28 29 75]
[0 2 4 8 10 16 18 26 28 29 61 74]
[0 2 4 8 10 16 18 26 28 29 61 66 67 69 70]
[0 2 4 8 10 16 18 20 26 28 29 75]
[0 2 4 8 10 16 18 20 26 28 29 61 74]
[0 2 4 8 10 16 18 20 26 28 29 61 66 67 69 70]
[0 2 4 8 10 16 18 20 23 25 26 28 29 75]
[0 2 4 8 10 16 18 20 23 25 26 28 29 61 74]
[0 2 4 8 10 16 18 20 23 25 26 28 29 61 66 67 69 70]
|f202| = list_max([
  list_sum(30, 37);
  list_sum(30, 9, 13, 4, 37);
  list_sum(30, 9, 18, 16, 0);
  list_sum(30, 9, 18, 16, 4, 13, 4, 37);
  list_sum(30, 9, 18, 25, 8, 0);
  list_sum(30, 9, 18, 25, 8, 16, 0);
  list_sum(30, 9, 18, 25, 8, 16, 4, 13, 4, 37);
  list_sum(30, 9, 18, 25, 37, 19, 4, 8, 0);
  list_sum(30, 9, 18, 25, 37, 19, 4, 8, 16, 0);
  list_sum(30, 9, 18, 25, 37, 19, 4, 8, 16, 4, 13, 4, 37);
  list_sum(30, 9, 18, 25, 37, 51, 19, 4, 8, 0);
  list_sum(30, 9, 18, 25, 37, 51, 19, 4, 8, 16, 0);
  list_sum(30, 9, 18, 25, 37, 51, 19, 4, 8, 16, 4, 13, 4, 37);
  list_sum([
    30;
    9;
    18;
    25;
    37;
    51;
    (20 * (N([ln11; ln2], [(ln2 + 1) < ln11], [m[52]; m[52] + 1], [ln11; ln2 + 1]))) + 1;
    1;
    19;
    4;
    8;
    0
  ]);
  list_sum([
    30;
    9;
    18;
    25;
    37;
    51;
    (20 * (N([ln11; ln2], [(ln2 + 1) < ln11], [m[52]; m[52] + 1], [ln11; ln2 + 1]))) + 1;
    1;
    19;
    4;
    8;
    16;
    0
  ]);
  list_sum([
    30;
    9;
    18;
    25;
    37;
    51;
    (20 * (N([ln11; ln2], [(ln2 + 1) < ln11], [m[52]; m[52] + 1], [ln11; ln2 + 1]))) + 1;
    1;
    19;
    4;
    8;
    16;
    4;
    13;
    4;
    37
  ]);
  list_sum([
    30;
    9;
    18;
    25;
    37;
    (18 * (N([ln12; ln2], [(ln2 + 1) != ln12], [m[52]; 0 + 1], [ln12; ln2 + 1]))) + 1;
    1;
    19;
    4;
    8;
    0
  ]);
  list_sum([
    30;
    9;
    18;
    25;
    37;
    (18 * (N([ln12; ln2], [(ln2 + 1) != ln12], [m[52]; 0 + 1], [ln12; ln2 + 1]))) + 1;
    1;
    19;
    4;
    8;
    16;
    0
  ]);
  list_sum([
    30;
    9;
    18;
    25;
    37;
    (18 * (N([ln12; ln2], [(ln2 + 1) != ln12], [m[52]; 0 + 1], [ln12; ln2 + 1]))) + 1;
    1;
    19;
    4;
    8;
    16;
    4;
    13;
    4;
    37
  ]);
  list_sum([
    30;
    9;
    18;
    25;
    37;
    (18 * (N([ln12; ln2], [(ln2 + 1) != ln12], [m[52]; 0 + 1], [ln12; ln2 + 1]))) + 1;
    1;
    51;
    19;
    4;
    8;
    0
  ]);
  list_sum([
    30;
    9;
    18;
    25;
    37;
    (18 * (N([ln12; ln2], [(ln2 + 1) != ln12], [m[52]; 0 + 1], [ln12; ln2 + 1]))) + 1;
    1;
    51;
    19;
    4;
    8;
    16;
    0
  ]);
  list_sum([
    30;
    9;
    18;
    25;
    37;
    (18 * (N([ln12; ln2], [(ln2 + 1) != ln12], [m[52]; 0 + 1], [ln12; ln2 + 1]))) + 1;
    1;
    51;
    19;
    4;
    8;
    16;
    4;
    13;
    4;
    37
  ]);
  list_sum([
    30;
    9;
    18;
    25;
    37;
    (18 * (N([ln12; ln2], [(ln2 + 1) != ln12], [m[52]; 0 + 1], [ln12; ln2 + 1]))) + 1;
    1;
    51;
    (20 * (N([ln11; ln2], [(ln2 + 1) < ln11], [m[52]; m[52] + 1], [ln11; ln2 + 1]))) + 1;
    1;
    19;
    4;
    8;
    0
  ]);
  list_sum([
    30;
    9;
    18;
    25;
    37;
    (18 * (N([ln12; ln2], [(ln2 + 1) != ln12], [m[52]; 0 + 1], [ln12; ln2 + 1]))) + 1;
    1;
    51;
    (20 * (N([ln11; ln2], [(ln2 + 1) < ln11], [m[52]; m[52] + 1], [ln11; ln2 + 1]))) + 1;
    1;
    19;
    4;
    8;
    16;
    0
  ]);
  list_sum([
    30;
    9;
    18;
    25;
    37;
    (18 * (N([ln12; ln2], [(ln2 + 1) != ln12], [m[52]; 0 + 1], [ln12; ln2 + 1]))) + 1;
    1;
    51;
    (20 * (N([ln11; ln2], [(ln2 + 1) < ln11], [m[52]; m[52] + 1], [ln11; ln2 + 1]))) + 1;
    1;
    19;
    4;
    8;
    16;
    4;
    13;
    4;
    37
  ])
])
