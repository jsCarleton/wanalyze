ebb entry:  0
  ebb type:   block
  ebb blocks: [0 1 2 3]
  ebb cost:   26
  ebb exits:  [4 18 22]
  ebb succs:  [22 4]
ebb entry:  4
  ebb type:   loop
  ebb blocks: [4 5 6 7 8 9 10 11 12 13 14 15]
  ebb cost:   (list_max([
  (63 + |f27|) * (N([ln4; m[244]], [(ln4 + 1) < m[244]], [0; m[244]], [ln4 + 1; m[244]]));
  (74 + |f27|) * (N([ln4; m[244]], [(ln4 + 1) < m[244]], [0; m[244]], [ln4 + 1; m[244]]));
  (74 + |f27|) * (N([ln4; m[244]], [(ln4 + 1) < m[244]], [0; m[244]], [ln4 + 1; m[244]]));
  (85 + |f27|) * (N([ln4; m[244]], [(ln4 + 1) < m[244]], [0; m[244]], [ln4 + 1; m[244]]));
  (77 + |f27|) * (N([ln4; m[244]], [(ln4 + 1) < m[244]], [0; m[244]], [ln4 + 1; m[244]]));
  (88 + |f27|) * (N([ln4; m[244]], [(ln4 + 1) < m[244]], [0; m[244]], [ln4 + 1; m[244]]));
  (88 + |f27|) * (N([ln4; m[244]], [(ln4 + 1) < m[244]], [0; m[244]], [ln4 + 1; m[244]]));
  (99 + |f27|) * (N([ln4; m[244]], [(ln4 + 1) < m[244]], [0; m[244]], [ln4 + 1; m[244]]));
  (77 + |f27|) * (N([ln4; m[244]], [(ln4 + 1) < m[244]], [0; m[244]], [ln4 + 1; m[244]]));
  (88 + |f27|) * (N([ln4; m[244]], [(ln4 + 1) < m[244]], [0; m[244]], [ln4 + 1; m[244]]));
  (88 + |f27|) * (N([ln4; m[244]], [(ln4 + 1) < m[244]], [0; m[244]], [ln4 + 1; m[244]]));
  (99 + |f27|) * (N([ln4; m[244]], [(ln4 + 1) < m[244]], [0; m[244]], [ln4 + 1; m[244]]));
  (91 + |f27|) * (N([ln4; m[244]], [(ln4 + 1) < m[244]], [0; m[244]], [ln4 + 1; m[244]]));
  (102 + |f27|) * (N([ln4; m[244]], [(ln4 + 1) < m[244]], [0; m[244]], [ln4 + 1; m[244]]));
  (102 + |f27|) * (N([ln4; m[244]], [(ln4 + 1) < m[244]], [0; m[244]], [ln4 + 1; m[244]]));
  (113 + |f27|) * (N([ln4; m[244]], [(ln4 + 1) < m[244]], [0; m[244]], [ln4 + 1; m[244]]))
])) + (list_max(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1))
  ebb exits:  [22 24]
  ebb succs:  [24 22]
  16 paths to exit 22
  [4 6 8 10 12 13]
  [4 6 8 10 11 12 13]
  [4 6 8 9 10 12 13]
  [4 6 8 9 10 11 12 13]
  [4 6 7 8 10 12 13]
  [4 6 7 8 10 11 12 13]
  [4 6 7 8 9 10 12 13]
  [4 6 7 8 9 10 11 12 13]
  [4 5 6 8 10 12 13]
  [4 5 6 8 10 11 12 13]
  [4 5 6 8 9 10 12 13]
  [4 5 6 8 9 10 11 12 13]
  [4 5 6 7 8 10 12 13]
  [4 5 6 7 8 10 11 12 13]
  [4 5 6 7 8 9 10 12 13]
  [4 5 6 7 8 9 10 11 12 13]
  0 paths to exit 24

  16 loop paths
  [4 6 8 10 12]  [4 6 8 10 11 12]  [4 6 8 9 10 12]  [4 6 8 9 10 11 12]  [4 6 7 8 10 12]  [4 6 7 8 10 11 12]  [4 6 7 8 9 10 12]  [4 6 7 8 9 10 11 12]  [4 5 6 8 10 12]  [4 5 6 8 10 11 12]  [4 5 6 8 9 10 12]  [4 5 6 8 9 10 11 12]  [4 5 6 7 8 10 12]  [4 5 6 7 8 10 11 12]  [4 5 6 7 8 9 10 12]  [4 5 6 7 8 9 10 11 12]
  16 post loop exit paths
  [13]  [13]  [13]  [13]  [13]  [13]  [13]  [13]  [13]  [13]  [13]  [13]  [13]  [13]  [13]  [13]
ebb entry:  16
  ebb type:   block
  ebb blocks: [16 17 18]
  ebb cost:   1
  ebb exits:  [19 24]
  ebb succs:  [24 19]
ebb entry:  19
  ebb type:   loop
  ebb blocks: [19 20]
  ebb cost:   ((47 + |f54|) * (N([ln4; m[244]], [(ln4 + 1) < m[244]], [0 + 1; m[244]], [ln4 + 1; m[244]]))) + 1
  ebb exits:  [21]
  ebb succs:  [21]
  1 paths to exit 21
  [19 20]
  1 loop paths
  [19]
  1 post loop exit paths
  [20]
ebb entry:  21
  ebb type:   block
  ebb blocks: [21]
  ebb cost:   1
  ebb exits:  [22]
  ebb succs:  [22]
ebb entry:  22
  ebb type:   block
  ebb blocks: [22 23]
  ebb cost:   13
  ebb exits:  [23]
  ebb succs:  []
ebb entry:  24
  ebb type:   block
  ebb blocks: [24]
  ebb cost:   0
  ebb exits:  []
  ebb succs:  []
