ebb entry:  0
  ebb type:   block
  ebb blocks: [0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21]
  ebb cost:   50
  ebb exits:  [22 36 54]
  ebb succs:  [22 54]
ebb entry:  22
  ebb type:   loop
  ebb blocks: [22 23 24 25 26 27 28 29 30 31 32 33]
  ebb cost:   (list_max([
  (139 + |f27|) * (N([ln5; m[244]], [(ln5 + 1) < m[244]], [0; m[244]], [ln5 + 1; m[244]]));
  (128 + |f27|) * (N([ln5; m[244]], [(ln5 + 1) < m[244]], [0; m[244]], [ln5 + 1; m[244]]));
  (125 + |f27|) * (N([ln5; m[244]], [(ln5 + 1) < m[244]], [0; m[244]], [ln5 + 1; m[244]]));
  (114 + |f27|) * (N([ln5; m[244]], [(ln5 + 1) < m[244]], [0; m[244]], [ln5 + 1; m[244]]));
  (128 + |f27|) * (N([ln5; m[244]], [(ln5 + 1) < m[244]], [0; m[244]], [ln5 + 1; m[244]]));
  (117 + |f27|) * (N([ln5; m[244]], [(ln5 + 1) < m[244]], [0; m[244]], [ln5 + 1; m[244]]));
  (114 + |f27|) * (N([ln5; m[244]], [(ln5 + 1) < m[244]], [0; m[244]], [ln5 + 1; m[244]]));
  (103 + |f27|) * (N([ln5; m[244]], [(ln5 + 1) < m[244]], [0; m[244]], [ln5 + 1; m[244]]));
  (125 + |f27|) * (N([ln5; m[244]], [(ln5 + 1) < m[244]], [0; m[244]], [ln5 + 1; m[244]]));
  (114 + |f27|) * (N([ln5; m[244]], [(ln5 + 1) < m[244]], [0; m[244]], [ln5 + 1; m[244]]));
  (111 + |f27|) * (N([ln5; m[244]], [(ln5 + 1) < m[244]], [0; m[244]], [ln5 + 1; m[244]]));
  (100 + |f27|) * (N([ln5; m[244]], [(ln5 + 1) < m[244]], [0; m[244]], [ln5 + 1; m[244]]));
  (114 + |f27|) * (N([ln5; m[244]], [(ln5 + 1) < m[244]], [0; m[244]], [ln5 + 1; m[244]]));
  (103 + |f27|) * (N([ln5; m[244]], [(ln5 + 1) < m[244]], [0; m[244]], [ln5 + 1; m[244]]));
  (100 + |f27|) * (N([ln5; m[244]], [(ln5 + 1) < m[244]], [0; m[244]], [ln5 + 1; m[244]]));
  (89 + |f27|) * (N([ln5; m[244]], [(ln5 + 1) < m[244]], [0; m[244]], [ln5 + 1; m[244]]))
])) + 1
  ebb exits:  [54 56]
  ebb succs:  [54 56]
  16 paths to exit 54
  [22 24 26 28 30 31]
  [22 24 26 28 29 30 31]
  [22 24 26 27 28 30 31]
  [22 24 26 27 28 29 30 31]
  [22 24 25 26 28 30 31]
  [22 24 25 26 28 29 30 31]
  [22 24 25 26 27 28 30 31]
  [22 24 25 26 27 28 29 30 31]
  [22 23 24 26 28 30 31]
  [22 23 24 26 28 29 30 31]
  [22 23 24 26 27 28 30 31]
  [22 23 24 26 27 28 29 30 31]
  [22 23 24 25 26 28 30 31]
  [22 23 24 25 26 28 29 30 31]
  [22 23 24 25 26 27 28 30 31]
  [22 23 24 25 26 27 28 29 30 31]
  0 paths to exit 56

  16 loop paths
  [22 24 26 28 30]  [22 24 26 28 29 30]  [22 24 26 27 28 30]  [22 24 26 27 28 29 30]  [22 24 25 26 28 30]  [22 24 25 26 28 29 30]  [22 24 25 26 27 28 30]  [22 24 25 26 27 28 29 30]  [22 23 24 26 28 30]  [22 23 24 26 28 29 30]  [22 23 24 26 27 28 30]  [22 23 24 26 27 28 29 30]  [22 23 24 25 26 28 30]  [22 23 24 25 26 28 29 30]  [22 23 24 25 26 27 28 30]  [22 23 24 25 26 27 28 29 30]
  16 post loop exit paths
  [31]  [31]  [31]  [31]  [31]  [31]  [31]  [31]  [31]  [31]  [31]  [31]  [31]  [31]  [31]  [31]
ebb entry:  34
  ebb type:   block
  ebb blocks: [34 35 36]
  ebb cost:   1
  ebb exits:  [37 56]
  ebb succs:  [37 56]
ebb entry:  37
  ebb type:   loop
  ebb blocks: [37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52]
  ebb cost:   (list_max([
  (152 + |f27|) * (N([ln5; m[244]], [(ln5 + 1) < m[244]], [0; m[244]], [ln5 + 1; m[244]]));
  (141 + |f27|) * (N([ln5; m[244]], [(ln5 + 1) < m[244]], [0; m[244]], [ln5 + 1; m[244]]));
  (138 + |f27|) * (N([ln5; m[244]], [(ln5 + 1) < m[244]], [0; m[244]], [ln5 + 1; m[244]]));
  (127 + |f27|) * (N([ln5; m[244]], [(ln5 + 1) < m[244]], [0; m[244]], [ln5 + 1; m[244]]));
  103 * (N([ln5; m[244]], [(ln5 + 1) < m[244]], [0; m[244]], [ln5 + 1; m[244]]));
  (141 + |f27|) * (N([ln5; m[244]], [(ln5 + 1) < m[244]], [0; m[244]], [ln5 + 1; m[244]]));
  (130 + |f27|) * (N([ln5; m[244]], [(ln5 + 1) < m[244]], [0; m[244]], [ln5 + 1; m[244]]));
  (127 + |f27|) * (N([ln5; m[244]], [(ln5 + 1) < m[244]], [0; m[244]], [ln5 + 1; m[244]]));
  (116 + |f27|) * (N([ln5; m[244]], [(ln5 + 1) < m[244]], [0; m[244]], [ln5 + 1; m[244]]));
  92 * (N([ln5; m[244]], [(ln5 + 1) < m[244]], [0; m[244]], [ln5 + 1; m[244]]));
  (138 + |f27|) * (N([ln5; m[244]], [(ln5 + 1) < m[244]], [0; m[244]], [ln5 + 1; m[244]]));
  (127 + |f27|) * (N([ln5; m[244]], [(ln5 + 1) < m[244]], [0; m[244]], [ln5 + 1; m[244]]));
  (124 + |f27|) * (N([ln5; m[244]], [(ln5 + 1) < m[244]], [0; m[244]], [ln5 + 1; m[244]]));
  (113 + |f27|) * (N([ln5; m[244]], [(ln5 + 1) < m[244]], [0; m[244]], [ln5 + 1; m[244]]));
  89 * (N([ln5; m[244]], [(ln5 + 1) < m[244]], [0; m[244]], [ln5 + 1; m[244]]));
  (127 + |f27|) * (N([ln5; m[244]], [(ln5 + 1) < m[244]], [0; m[244]], [ln5 + 1; m[244]]));
  (116 + |f27|) * (N([ln5; m[244]], [(ln5 + 1) < m[244]], [0; m[244]], [ln5 + 1; m[244]]));
  (113 + |f27|) * (N([ln5; m[244]], [(ln5 + 1) < m[244]], [0; m[244]], [ln5 + 1; m[244]]));
  (102 + |f27|) * (N([ln5; m[244]], [(ln5 + 1) < m[244]], [0; m[244]], [ln5 + 1; m[244]]));
  78 * (N([ln5; m[244]], [(ln5 + 1) < m[244]], [0; m[244]], [ln5 + 1; m[244]]));
  (75 + |f27|) * (N([ln5; m[244]], [(ln5 + 1) < m[244]], [0; m[244]], [ln5 + 1; m[244]]));
  (64 + |f27|) * (N([ln5; m[244]], [(ln5 + 1) < m[244]], [0; m[244]], [ln5 + 1; m[244]]));
  (61 + |f27|) * (N([ln5; m[244]], [(ln5 + 1) < m[244]], [0; m[244]], [ln5 + 1; m[244]]));
  (50 + |f27|) * (N([ln5; m[244]], [(ln5 + 1) < m[244]], [0; m[244]], [ln5 + 1; m[244]]));
  26 * (N([ln5; m[244]], [(ln5 + 1) < m[244]], [0; m[244]], [ln5 + 1; m[244]]));
  (72 + |f27|) * (N([ln5; m[244]], [(ln5 + 1) < m[244]], [0; m[244]], [ln5 + 1; m[244]]));
  (61 + |f27|) * (N([ln5; m[244]], [(ln5 + 1) < m[244]], [0; m[244]], [ln5 + 1; m[244]]));
  (58 + |f27|) * (N([ln5; m[244]], [(ln5 + 1) < m[244]], [0; m[244]], [ln5 + 1; m[244]]));
  (47 + |f27|) * (N([ln5; m[244]], [(ln5 + 1) < m[244]], [0; m[244]], [ln5 + 1; m[244]]));
  23 * (N([ln5; m[244]], [(ln5 + 1) < m[244]], [0; m[244]], [ln5 + 1; m[244]]))
])) + 1
  ebb exits:  [53]
  ebb succs:  [53]
  30 paths to exit 53
  [37 38 45 51 52]
  [37 38 45 46 48 50 51 52]
  [37 38 45 46 48 49 50 51 52]
  [37 38 45 46 47 48 50 51 52]
  [37 38 45 46 47 48 49 50 51 52]
  [37 38 39 45 51 52]
  [37 38 39 45 46 48 50 51 52]
  [37 38 39 45 46 48 49 50 51 52]
  [37 38 39 45 46 47 48 50 51 52]
  [37 38 39 45 46 47 48 49 50 51 52]
  [37 38 39 40 42 44 45 51 52]
  [37 38 39 40 42 44 45 46 48 50 51 52]
  [37 38 39 40 42 44 45 46 48 49 50 51 52]
  [37 38 39 40 42 44 45 46 47 48 50 51 52]
  [37 38 39 40 42 44 45 46 47 48 49 50 51 52]
  [37 38 39 40 42 43 44 45 51 52]
  [37 38 39 40 42 43 44 45 46 48 50 51 52]
  [37 38 39 40 42 43 44 45 46 48 49 50 51 52]
  [37 38 39 40 42 43 44 45 46 47 48 50 51 52]
  [37 38 39 40 42 43 44 45 46 47 48 49 50 51 52]
  [37 38 39 40 41 42 44 45 51 52]
  [37 38 39 40 41 42 44 45 46 48 50 51 52]
  [37 38 39 40 41 42 44 45 46 48 49 50 51 52]
  [37 38 39 40 41 42 44 45 46 47 48 50 51 52]
  [37 38 39 40 41 42 44 45 46 47 48 49 50 51 52]
  [37 38 39 40 41 42 43 44 45 51 52]
  [37 38 39 40 41 42 43 44 45 46 48 50 51 52]
  [37 38 39 40 41 42 43 44 45 46 48 49 50 51 52]
  [37 38 39 40 41 42 43 44 45 46 47 48 50 51 52]
  [37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52]
  30 loop paths
  [37 38 45 51]  [37 38 45 46 48 50 51]  [37 38 45 46 48 49 50 51]  [37 38 45 46 47 48 50 51]  [37 38 45 46 47 48 49 50 51]  [37 38 39 45 51]  [37 38 39 45 46 48 50 51]  [37 38 39 45 46 48 49 50 51]  [37 38 39 45 46 47 48 50 51]  [37 38 39 45 46 47 48 49 50 51]  [37 38 39 40 42 44 45 51]  [37 38 39 40 42 44 45 46 48 50 51]  [37 38 39 40 42 44 45 46 48 49 50 51]  [37 38 39 40 42 44 45 46 47 48 50 51]  [37 38 39 40 42 44 45 46 47 48 49 50 51]  [37 38 39 40 42 43 44 45 51]  [37 38 39 40 42 43 44 45 46 48 50 51]  [37 38 39 40 42 43 44 45 46 48 49 50 51]  [37 38 39 40 42 43 44 45 46 47 48 50 51]  [37 38 39 40 42 43 44 45 46 47 48 49 50 51]  [37 38 39 40 41 42 44 45 51]  [37 38 39 40 41 42 44 45 46 48 50 51]  [37 38 39 40 41 42 44 45 46 48 49 50 51]  [37 38 39 40 41 42 44 45 46 47 48 50 51]  [37 38 39 40 41 42 44 45 46 47 48 49 50 51]  [37 38 39 40 41 42 43 44 45 51]  [37 38 39 40 41 42 43 44 45 46 48 50 51]  [37 38 39 40 41 42 43 44 45 46 48 49 50 51]  [37 38 39 40 41 42 43 44 45 46 47 48 50 51]  [37 38 39 40 41 42 43 44 45 46 47 48 49 50 51]
  30 post loop exit paths
  [52]  [52]  [52]  [52]  [52]  [52]  [52]  [52]  [52]  [52]  [52]  [52]  [52]  [52]  [52]  [52]  [52]  [52]  [52]  [52]  [52]  [52]  [52]  [52]  [52]  [52]  [52]  [52]  [52]  [52]
ebb entry:  53
  ebb type:   block
  ebb blocks: [53]
  ebb cost:   1
  ebb exits:  [54]
  ebb succs:  [54]
ebb entry:  54
  ebb type:   block
  ebb blocks: [54 55]
  ebb cost:   19
  ebb exits:  [55]
  ebb succs:  []
ebb entry:  56
  ebb type:   block
  ebb blocks: [56]
  ebb cost:   0
  ebb exits:  []
  ebb succs:  []
ebb costs:
[0]: 50
[22]: (list_max(((139 + |f27|) * N([ln5; m[244]], [((ln5 + 1) < m[244])], [0; m[244]], [(ln5 + 1); m[244]])), ((128 + |f27|) * N([ln5; m[244]], [((ln5 + 1) < m[244])], [0; m[244]], [(ln5 + 1); m[244]])), ((125 + |f27|) * N([ln5; m[244]], [((ln5 + 1) < m[244])], [0; m[244]], [(ln5 + 1); m[244]])), ((114 + |f27|) * N([ln5; m[244]], [((ln5 + 1) < m[244])], [0; m[244]], [(ln5 + 1); m[244]])), ((128 + |f27|) * N([ln5; m[244]], [((ln5 + 1) < m[244])], [0; m[244]], [(ln5 + 1); m[244]])), ((117 + |f27|) * N([ln5; m[244]], [((ln5 + 1) < m[244])], [0; m[244]], [(ln5 + 1); m[244]])), ((114 + |f27|) * N([ln5; m[244]], [((ln5 + 1) < m[244])], [0; m[244]], [(ln5 + 1); m[244]])), ((103 + |f27|) * N([ln5; m[244]], [((ln5 + 1) < m[244])], [0; m[244]], [(ln5 + 1); m[244]])), ((125 + |f27|) * N([ln5; m[244]], [((ln5 + 1) < m[244])], [0; m[244]], [(ln5 + 1); m[244]])), ((114 + |f27|) * N([ln5; m[244]], [((ln5 + 1) < m[244])], [0; m[244]], [(ln5 + 1); m[244]])), ((111 + |f27|) * N([ln5; m[244]], [((ln5 + 1) < m[244])], [0; m[244]], [(ln5 + 1); m[244]])), ((100 + |f27|) * N([ln5; m[244]], [((ln5 + 1) < m[244])], [0; m[244]], [(ln5 + 1); m[244]])), ((114 + |f27|) * N([ln5; m[244]], [((ln5 + 1) < m[244])], [0; m[244]], [(ln5 + 1); m[244]])), ((103 + |f27|) * N([ln5; m[244]], [((ln5 + 1) < m[244])], [0; m[244]], [(ln5 + 1); m[244]])), ((100 + |f27|) * N([ln5; m[244]], [((ln5 + 1) < m[244])], [0; m[244]], [(ln5 + 1); m[244]])), ((89 + |f27|) * N([ln5; m[244]], [((ln5 + 1) < m[244])], [0; m[244]], [(ln5 + 1); m[244]]))) + 1)
[34]: 1
[37]: (list_max(((152 + |f27|) * N([ln5; m[244]], [((ln5 + 1) < m[244])], [0; m[244]], [(ln5 + 1); m[244]])), ((141 + |f27|) * N([ln5; m[244]], [((ln5 + 1) < m[244])], [0; m[244]], [(ln5 + 1); m[244]])), ((138 + |f27|) * N([ln5; m[244]], [((ln5 + 1) < m[244])], [0; m[244]], [(ln5 + 1); m[244]])), ((127 + |f27|) * N([ln5; m[244]], [((ln5 + 1) < m[244])], [0; m[244]], [(ln5 + 1); m[244]])), (103 * N([ln5; m[244]], [((ln5 + 1) < m[244])], [0; m[244]], [(ln5 + 1); m[244]])), ((141 + |f27|) * N([ln5; m[244]], [((ln5 + 1) < m[244])], [0; m[244]], [(ln5 + 1); m[244]])), ((130 + |f27|) * N([ln5; m[244]], [((ln5 + 1) < m[244])], [0; m[244]], [(ln5 + 1); m[244]])), ((127 + |f27|) * N([ln5; m[244]], [((ln5 + 1) < m[244])], [0; m[244]], [(ln5 + 1); m[244]])), ((116 + |f27|) * N([ln5; m[244]], [((ln5 + 1) < m[244])], [0; m[244]], [(ln5 + 1); m[244]])), (92 * N([ln5; m[244]], [((ln5 + 1) < m[244])], [0; m[244]], [(ln5 + 1); m[244]])), ((138 + |f27|) * N([ln5; m[244]], [((ln5 + 1) < m[244])], [0; m[244]], [(ln5 + 1); m[244]])), ((127 + |f27|) * N([ln5; m[244]], [((ln5 + 1) < m[244])], [0; m[244]], [(ln5 + 1); m[244]])), ((124 + |f27|) * N([ln5; m[244]], [((ln5 + 1) < m[244])], [0; m[244]], [(ln5 + 1); m[244]])), ((113 + |f27|) * N([ln5; m[244]], [((ln5 + 1) < m[244])], [0; m[244]], [(ln5 + 1); m[244]])), (89 * N([ln5; m[244]], [((ln5 + 1) < m[244])], [0; m[244]], [(ln5 + 1); m[244]])), ((127 + |f27|) * N([ln5; m[244]], [((ln5 + 1) < m[244])], [0; m[244]], [(ln5 + 1); m[244]])), ((116 + |f27|) * N([ln5; m[244]], [((ln5 + 1) < m[244])], [0; m[244]], [(ln5 + 1); m[244]])), ((113 + |f27|) * N([ln5; m[244]], [((ln5 + 1) < m[244])], [0; m[244]], [(ln5 + 1); m[244]])), ((102 + |f27|) * N([ln5; m[244]], [((ln5 + 1) < m[244])], [0; m[244]], [(ln5 + 1); m[244]])), (78 * N([ln5; m[244]], [((ln5 + 1) < m[244])], [0; m[244]], [(ln5 + 1); m[244]])), ((75 + |f27|) * N([ln5; m[244]], [((ln5 + 1) < m[244])], [0; m[244]], [(ln5 + 1); m[244]])), ((64 + |f27|) * N([ln5; m[244]], [((ln5 + 1) < m[244])], [0; m[244]], [(ln5 + 1); m[244]])), ((61 + |f27|) * N([ln5; m[244]], [((ln5 + 1) < m[244])], [0; m[244]], [(ln5 + 1); m[244]])), ((50 + |f27|) * N([ln5; m[244]], [((ln5 + 1) < m[244])], [0; m[244]], [(ln5 + 1); m[244]])), (26 * N([ln5; m[244]], [((ln5 + 1) < m[244])], [0; m[244]], [(ln5 + 1); m[244]])), ((72 + |f27|) * N([ln5; m[244]], [((ln5 + 1) < m[244])], [0; m[244]], [(ln5 + 1); m[244]])), ((61 + |f27|) * N([ln5; m[244]], [((ln5 + 1) < m[244])], [0; m[244]], [(ln5 + 1); m[244]])), ((58 + |f27|) * N([ln5; m[244]], [((ln5 + 1) < m[244])], [0; m[244]], [(ln5 + 1); m[244]])), ((47 + |f27|) * N([ln5; m[244]], [((ln5 + 1) < m[244])], [0; m[244]], [(ln5 + 1); m[244]])), (23 * N([ln5; m[244]], [((ln5 + 1) < m[244])], [0; m[244]], [(ln5 + 1); m[244]]))) + 1)
[53]: 1
[54]: 19
[56]: 0
3 ebb paths found
[0 54]
[0 22 56]
[0 22 54]
