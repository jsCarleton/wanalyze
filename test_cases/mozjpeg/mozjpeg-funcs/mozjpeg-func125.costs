ebb costs:
[0]: 50
[16]: (list_max(((32 + |f29|) * N([ln1; ln2; pn0], [select((((ln1 + (ln2 * 10)) + -48) < 214748364), 0, ((R(29, 0, i32, pn0) + -48) <= 9))], [R(29, 12, i32, pn0); 0; pn0], [R(29, 13, i32, pn0); ((ln1 + (ln2 * 10)) + -48); pn0])), (37 * N([ln1; ln2; m[0]], [select((((ln1 + (ln2 * 10)) + -48) < 214748364), 0, ((m[0] + -48) <= 9))], [R(29, 12, i32, pn0); 0; m[0]], [m[0]; ((ln1 + (ln2 * 10)) + -48); m[0]]))) + list_max(1, 1))
[23]: 9
[26]: (list_max(((31 + |f29|) * N([lN5; ln1], [(((i64.extend_i32_u(ln1) + (lN5 * 10)) + -48) < 92233720368547758)], [i64.extend_i32_s((R(29, 12, i32, pn0) + (0 * 10)) + -48); R(29, 34, i32, pn0)], [((i64.extend_i32_uln1 + (lN5 * 10)) + -48); R(29, 16, i32, pn0)])), (36 * N([lN5; ln1], [(((i64.extend_i32_u(ln1) + (lN5 * 10)) + -48) < 92233720368547758)], [i64.extend_i32_s((R(29, 12, i32, pn0) + (0 * 10)) + -48); R(29, 34, i32, pn0)], [((i64.extend_i32_uln1 + (lN5 * 10)) + -48); m[0]]))) + list_max(1, 1))
[34]: 1
[35]: 5
[37]: (list_max(((16 + |f29|) * N([pn0], [((R(29, 0, i32, pn0) + -48) < 10)], [pn0], [pn0])), (21 * N([m[0]], [((m[0] + -48) < 10)], [m[0]], [m[0]]))) + list_max(1, 1))
[44]: 1
[45]: 18
[49]: 14
[52]: 2
[54]: 0
20 ebb paths found
[0 49 54]
[0 49 52]
[0 16 23 35 45 52]
[0 16 23 35 45 49 54]
[0 16 23 35 45 49 52]
[0 16 23 35 37 44 45 52]
[0 16 23 35 37 44 45 49 54]
[0 16 23 35 37 44 45 49 52]
[0 16 23 26 35 45 52]
[0 16 23 26 35 45 49 54]
[0 16 23 26 35 45 49 52]
[0 16 23 26 35 37 44 45 52]
[0 16 23 26 35 37 44 45 49 54]
[0 16 23 26 35 37 44 45 49 52]
[0 16 23 26 34 35 45 52]
[0 16 23 26 34 35 45 49 54]
[0 16 23 26 34 35 45 49 52]
[0 16 23 26 34 35 37 44 45 52]
[0 16 23 26 34 35 37 44 45 49 54]
[0 16 23 26 34 35 37 44 45 49 52]
|f125| = list_max([
  list_sum(50, 14, 0);
  list_sum(50, 14, 2);
  list_sum([
    50;
    (list_max([
      (32 + |f29|) * (N([ln1; ln2; pn0], [select(((ln1 + (ln2 * 10)) + -48) < 214748364, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [R(29, 12, i32, pn0); 0; pn0], [R(29, 13, i32, pn0); (ln1 + (ln2 * 10)) + -48; pn0]));
      37 * (N([ln1; ln2; m[0]], [select(((ln1 + (ln2 * 10)) + -48) < 214748364, 0, (m[0] + -48) <= 9)], [R(29, 12, i32, pn0); 0; m[0]], [m[0]; (ln1 + (ln2 * 10)) + -48; m[0]]))
    ])) + (list_max(1, 1));
    9;
    5;
    18;
    2
  ]);
  list_sum([
    50;
    (list_max([
      (32 + |f29|) * (N([ln1; ln2; pn0], [select(((ln1 + (ln2 * 10)) + -48) < 214748364, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [R(29, 12, i32, pn0); 0; pn0], [R(29, 13, i32, pn0); (ln1 + (ln2 * 10)) + -48; pn0]));
      37 * (N([ln1; ln2; m[0]], [select(((ln1 + (ln2 * 10)) + -48) < 214748364, 0, (m[0] + -48) <= 9)], [R(29, 12, i32, pn0); 0; m[0]], [m[0]; (ln1 + (ln2 * 10)) + -48; m[0]]))
    ])) + (list_max(1, 1));
    9;
    5;
    18;
    14;
    0
  ]);
  list_sum([
    50;
    (list_max([
      (32 + |f29|) * (N([ln1; ln2; pn0], [select(((ln1 + (ln2 * 10)) + -48) < 214748364, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [R(29, 12, i32, pn0); 0; pn0], [R(29, 13, i32, pn0); (ln1 + (ln2 * 10)) + -48; pn0]));
      37 * (N([ln1; ln2; m[0]], [select(((ln1 + (ln2 * 10)) + -48) < 214748364, 0, (m[0] + -48) <= 9)], [R(29, 12, i32, pn0); 0; m[0]], [m[0]; (ln1 + (ln2 * 10)) + -48; m[0]]))
    ])) + (list_max(1, 1));
    9;
    5;
    18;
    14;
    2
  ]);
  list_sum([
    50;
    (list_max([
      (32 + |f29|) * (N([ln1; ln2; pn0], [select(((ln1 + (ln2 * 10)) + -48) < 214748364, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [R(29, 12, i32, pn0); 0; pn0], [R(29, 13, i32, pn0); (ln1 + (ln2 * 10)) + -48; pn0]));
      37 * (N([ln1; ln2; m[0]], [select(((ln1 + (ln2 * 10)) + -48) < 214748364, 0, (m[0] + -48) <= 9)], [R(29, 12, i32, pn0); 0; m[0]], [m[0]; (ln1 + (ln2 * 10)) + -48; m[0]]))
    ])) + (list_max(1, 1));
    9;
    5;
    (list_max([
      (16 + |f29|) * (N([pn0], [((R(29, 0, i32, pn0)) + -48) < 10], [pn0], [pn0]));
      21 * (N([m[0]], [(m[0] + -48) < 10], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    1;
    18;
    2
  ]);
  list_sum([
    50;
    (list_max([
      (32 + |f29|) * (N([ln1; ln2; pn0], [select(((ln1 + (ln2 * 10)) + -48) < 214748364, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [R(29, 12, i32, pn0); 0; pn0], [R(29, 13, i32, pn0); (ln1 + (ln2 * 10)) + -48; pn0]));
      37 * (N([ln1; ln2; m[0]], [select(((ln1 + (ln2 * 10)) + -48) < 214748364, 0, (m[0] + -48) <= 9)], [R(29, 12, i32, pn0); 0; m[0]], [m[0]; (ln1 + (ln2 * 10)) + -48; m[0]]))
    ])) + (list_max(1, 1));
    9;
    5;
    (list_max([
      (16 + |f29|) * (N([pn0], [((R(29, 0, i32, pn0)) + -48) < 10], [pn0], [pn0]));
      21 * (N([m[0]], [(m[0] + -48) < 10], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    1;
    18;
    14;
    0
  ]);
  list_sum([
    50;
    (list_max([
      (32 + |f29|) * (N([ln1; ln2; pn0], [select(((ln1 + (ln2 * 10)) + -48) < 214748364, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [R(29, 12, i32, pn0); 0; pn0], [R(29, 13, i32, pn0); (ln1 + (ln2 * 10)) + -48; pn0]));
      37 * (N([ln1; ln2; m[0]], [select(((ln1 + (ln2 * 10)) + -48) < 214748364, 0, (m[0] + -48) <= 9)], [R(29, 12, i32, pn0); 0; m[0]], [m[0]; (ln1 + (ln2 * 10)) + -48; m[0]]))
    ])) + (list_max(1, 1));
    9;
    5;
    (list_max([
      (16 + |f29|) * (N([pn0], [((R(29, 0, i32, pn0)) + -48) < 10], [pn0], [pn0]));
      21 * (N([m[0]], [(m[0] + -48) < 10], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    1;
    18;
    14;
    2
  ]);
  list_sum([
    50;
    (list_max([
      (32 + |f29|) * (N([ln1; ln2; pn0], [select(((ln1 + (ln2 * 10)) + -48) < 214748364, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [R(29, 12, i32, pn0); 0; pn0], [R(29, 13, i32, pn0); (ln1 + (ln2 * 10)) + -48; pn0]));
      37 * (N([ln1; ln2; m[0]], [select(((ln1 + (ln2 * 10)) + -48) < 214748364, 0, (m[0] + -48) <= 9)], [R(29, 12, i32, pn0); 0; m[0]], [m[0]; (ln1 + (ln2 * 10)) + -48; m[0]]))
    ])) + (list_max(1, 1));
    9;
    (list_max([
      (31 + |f29|) * (N([lN5; ln1], [(((i64.extend_i32_u(ln1)) + (lN5 * 10)) + -48) < 92233720368547758], [i64.extend_i32_s(((R(29, 12, i32, pn0)) + (0 * 10)) + -48); R(29, 34, i32, pn0)], [((i64.extend_i32_u(ln1)) + (lN5 * 10)) + -48; R(29, 16, i32, pn0)]));
      36 * (N([lN5; ln1], [(((i64.extend_i32_u(ln1)) + (lN5 * 10)) + -48) < 92233720368547758], [i64.extend_i32_s(((R(29, 12, i32, pn0)) + (0 * 10)) + -48); R(29, 34, i32, pn0)], [((i64.extend_i32_u(ln1)) + (lN5 * 10)) + -48; m[0]]))
    ])) + (list_max(1, 1));
    5;
    18;
    2
  ]);
  list_sum([
    50;
    (list_max([
      (32 + |f29|) * (N([ln1; ln2; pn0], [select(((ln1 + (ln2 * 10)) + -48) < 214748364, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [R(29, 12, i32, pn0); 0; pn0], [R(29, 13, i32, pn0); (ln1 + (ln2 * 10)) + -48; pn0]));
      37 * (N([ln1; ln2; m[0]], [select(((ln1 + (ln2 * 10)) + -48) < 214748364, 0, (m[0] + -48) <= 9)], [R(29, 12, i32, pn0); 0; m[0]], [m[0]; (ln1 + (ln2 * 10)) + -48; m[0]]))
    ])) + (list_max(1, 1));
    9;
    (list_max([
      (31 + |f29|) * (N([lN5; ln1], [(((i64.extend_i32_u(ln1)) + (lN5 * 10)) + -48) < 92233720368547758], [i64.extend_i32_s(((R(29, 12, i32, pn0)) + (0 * 10)) + -48); R(29, 34, i32, pn0)], [((i64.extend_i32_u(ln1)) + (lN5 * 10)) + -48; R(29, 16, i32, pn0)]));
      36 * (N([lN5; ln1], [(((i64.extend_i32_u(ln1)) + (lN5 * 10)) + -48) < 92233720368547758], [i64.extend_i32_s(((R(29, 12, i32, pn0)) + (0 * 10)) + -48); R(29, 34, i32, pn0)], [((i64.extend_i32_u(ln1)) + (lN5 * 10)) + -48; m[0]]))
    ])) + (list_max(1, 1));
    5;
    18;
    14;
    0
  ]);
  list_sum([
    50;
    (list_max([
      (32 + |f29|) * (N([ln1; ln2; pn0], [select(((ln1 + (ln2 * 10)) + -48) < 214748364, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [R(29, 12, i32, pn0); 0; pn0], [R(29, 13, i32, pn0); (ln1 + (ln2 * 10)) + -48; pn0]));
      37 * (N([ln1; ln2; m[0]], [select(((ln1 + (ln2 * 10)) + -48) < 214748364, 0, (m[0] + -48) <= 9)], [R(29, 12, i32, pn0); 0; m[0]], [m[0]; (ln1 + (ln2 * 10)) + -48; m[0]]))
    ])) + (list_max(1, 1));
    9;
    (list_max([
      (31 + |f29|) * (N([lN5; ln1], [(((i64.extend_i32_u(ln1)) + (lN5 * 10)) + -48) < 92233720368547758], [i64.extend_i32_s(((R(29, 12, i32, pn0)) + (0 * 10)) + -48); R(29, 34, i32, pn0)], [((i64.extend_i32_u(ln1)) + (lN5 * 10)) + -48; R(29, 16, i32, pn0)]));
      36 * (N([lN5; ln1], [(((i64.extend_i32_u(ln1)) + (lN5 * 10)) + -48) < 92233720368547758], [i64.extend_i32_s(((R(29, 12, i32, pn0)) + (0 * 10)) + -48); R(29, 34, i32, pn0)], [((i64.extend_i32_u(ln1)) + (lN5 * 10)) + -48; m[0]]))
    ])) + (list_max(1, 1));
    5;
    18;
    14;
    2
  ]);
  list_sum([
    50;
    (list_max([
      (32 + |f29|) * (N([ln1; ln2; pn0], [select(((ln1 + (ln2 * 10)) + -48) < 214748364, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [R(29, 12, i32, pn0); 0; pn0], [R(29, 13, i32, pn0); (ln1 + (ln2 * 10)) + -48; pn0]));
      37 * (N([ln1; ln2; m[0]], [select(((ln1 + (ln2 * 10)) + -48) < 214748364, 0, (m[0] + -48) <= 9)], [R(29, 12, i32, pn0); 0; m[0]], [m[0]; (ln1 + (ln2 * 10)) + -48; m[0]]))
    ])) + (list_max(1, 1));
    9;
    (list_max([
      (31 + |f29|) * (N([lN5; ln1], [(((i64.extend_i32_u(ln1)) + (lN5 * 10)) + -48) < 92233720368547758], [i64.extend_i32_s(((R(29, 12, i32, pn0)) + (0 * 10)) + -48); R(29, 34, i32, pn0)], [((i64.extend_i32_u(ln1)) + (lN5 * 10)) + -48; R(29, 16, i32, pn0)]));
      36 * (N([lN5; ln1], [(((i64.extend_i32_u(ln1)) + (lN5 * 10)) + -48) < 92233720368547758], [i64.extend_i32_s(((R(29, 12, i32, pn0)) + (0 * 10)) + -48); R(29, 34, i32, pn0)], [((i64.extend_i32_u(ln1)) + (lN5 * 10)) + -48; m[0]]))
    ])) + (list_max(1, 1));
    5;
    (list_max([
      (16 + |f29|) * (N([pn0], [((R(29, 0, i32, pn0)) + -48) < 10], [pn0], [pn0]));
      21 * (N([m[0]], [(m[0] + -48) < 10], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    1;
    18;
    2
  ]);
  list_sum([
    50;
    (list_max([
      (32 + |f29|) * (N([ln1; ln2; pn0], [select(((ln1 + (ln2 * 10)) + -48) < 214748364, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [R(29, 12, i32, pn0); 0; pn0], [R(29, 13, i32, pn0); (ln1 + (ln2 * 10)) + -48; pn0]));
      37 * (N([ln1; ln2; m[0]], [select(((ln1 + (ln2 * 10)) + -48) < 214748364, 0, (m[0] + -48) <= 9)], [R(29, 12, i32, pn0); 0; m[0]], [m[0]; (ln1 + (ln2 * 10)) + -48; m[0]]))
    ])) + (list_max(1, 1));
    9;
    (list_max([
      (31 + |f29|) * (N([lN5; ln1], [(((i64.extend_i32_u(ln1)) + (lN5 * 10)) + -48) < 92233720368547758], [i64.extend_i32_s(((R(29, 12, i32, pn0)) + (0 * 10)) + -48); R(29, 34, i32, pn0)], [((i64.extend_i32_u(ln1)) + (lN5 * 10)) + -48; R(29, 16, i32, pn0)]));
      36 * (N([lN5; ln1], [(((i64.extend_i32_u(ln1)) + (lN5 * 10)) + -48) < 92233720368547758], [i64.extend_i32_s(((R(29, 12, i32, pn0)) + (0 * 10)) + -48); R(29, 34, i32, pn0)], [((i64.extend_i32_u(ln1)) + (lN5 * 10)) + -48; m[0]]))
    ])) + (list_max(1, 1));
    5;
    (list_max([
      (16 + |f29|) * (N([pn0], [((R(29, 0, i32, pn0)) + -48) < 10], [pn0], [pn0]));
      21 * (N([m[0]], [(m[0] + -48) < 10], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    1;
    18;
    14;
    0
  ]);
  list_sum([
    50;
    (list_max([
      (32 + |f29|) * (N([ln1; ln2; pn0], [select(((ln1 + (ln2 * 10)) + -48) < 214748364, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [R(29, 12, i32, pn0); 0; pn0], [R(29, 13, i32, pn0); (ln1 + (ln2 * 10)) + -48; pn0]));
      37 * (N([ln1; ln2; m[0]], [select(((ln1 + (ln2 * 10)) + -48) < 214748364, 0, (m[0] + -48) <= 9)], [R(29, 12, i32, pn0); 0; m[0]], [m[0]; (ln1 + (ln2 * 10)) + -48; m[0]]))
    ])) + (list_max(1, 1));
    9;
    (list_max([
      (31 + |f29|) * (N([lN5; ln1], [(((i64.extend_i32_u(ln1)) + (lN5 * 10)) + -48) < 92233720368547758], [i64.extend_i32_s(((R(29, 12, i32, pn0)) + (0 * 10)) + -48); R(29, 34, i32, pn0)], [((i64.extend_i32_u(ln1)) + (lN5 * 10)) + -48; R(29, 16, i32, pn0)]));
      36 * (N([lN5; ln1], [(((i64.extend_i32_u(ln1)) + (lN5 * 10)) + -48) < 92233720368547758], [i64.extend_i32_s(((R(29, 12, i32, pn0)) + (0 * 10)) + -48); R(29, 34, i32, pn0)], [((i64.extend_i32_u(ln1)) + (lN5 * 10)) + -48; m[0]]))
    ])) + (list_max(1, 1));
    5;
    (list_max([
      (16 + |f29|) * (N([pn0], [((R(29, 0, i32, pn0)) + -48) < 10], [pn0], [pn0]));
      21 * (N([m[0]], [(m[0] + -48) < 10], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    1;
    18;
    14;
    2
  ]);
  list_sum([
    50;
    (list_max([
      (32 + |f29|) * (N([ln1; ln2; pn0], [select(((ln1 + (ln2 * 10)) + -48) < 214748364, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [R(29, 12, i32, pn0); 0; pn0], [R(29, 13, i32, pn0); (ln1 + (ln2 * 10)) + -48; pn0]));
      37 * (N([ln1; ln2; m[0]], [select(((ln1 + (ln2 * 10)) + -48) < 214748364, 0, (m[0] + -48) <= 9)], [R(29, 12, i32, pn0); 0; m[0]], [m[0]; (ln1 + (ln2 * 10)) + -48; m[0]]))
    ])) + (list_max(1, 1));
    9;
    (list_max([
      (31 + |f29|) * (N([lN5; ln1], [(((i64.extend_i32_u(ln1)) + (lN5 * 10)) + -48) < 92233720368547758], [i64.extend_i32_s(((R(29, 12, i32, pn0)) + (0 * 10)) + -48); R(29, 34, i32, pn0)], [((i64.extend_i32_u(ln1)) + (lN5 * 10)) + -48; R(29, 16, i32, pn0)]));
      36 * (N([lN5; ln1], [(((i64.extend_i32_u(ln1)) + (lN5 * 10)) + -48) < 92233720368547758], [i64.extend_i32_s(((R(29, 12, i32, pn0)) + (0 * 10)) + -48); R(29, 34, i32, pn0)], [((i64.extend_i32_u(ln1)) + (lN5 * 10)) + -48; m[0]]))
    ])) + (list_max(1, 1));
    1;
    5;
    18;
    2
  ]);
  list_sum([
    50;
    (list_max([
      (32 + |f29|) * (N([ln1; ln2; pn0], [select(((ln1 + (ln2 * 10)) + -48) < 214748364, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [R(29, 12, i32, pn0); 0; pn0], [R(29, 13, i32, pn0); (ln1 + (ln2 * 10)) + -48; pn0]));
      37 * (N([ln1; ln2; m[0]], [select(((ln1 + (ln2 * 10)) + -48) < 214748364, 0, (m[0] + -48) <= 9)], [R(29, 12, i32, pn0); 0; m[0]], [m[0]; (ln1 + (ln2 * 10)) + -48; m[0]]))
    ])) + (list_max(1, 1));
    9;
    (list_max([
      (31 + |f29|) * (N([lN5; ln1], [(((i64.extend_i32_u(ln1)) + (lN5 * 10)) + -48) < 92233720368547758], [i64.extend_i32_s(((R(29, 12, i32, pn0)) + (0 * 10)) + -48); R(29, 34, i32, pn0)], [((i64.extend_i32_u(ln1)) + (lN5 * 10)) + -48; R(29, 16, i32, pn0)]));
      36 * (N([lN5; ln1], [(((i64.extend_i32_u(ln1)) + (lN5 * 10)) + -48) < 92233720368547758], [i64.extend_i32_s(((R(29, 12, i32, pn0)) + (0 * 10)) + -48); R(29, 34, i32, pn0)], [((i64.extend_i32_u(ln1)) + (lN5 * 10)) + -48; m[0]]))
    ])) + (list_max(1, 1));
    1;
    5;
    18;
    14;
    0
  ]);
  list_sum([
    50;
    (list_max([
      (32 + |f29|) * (N([ln1; ln2; pn0], [select(((ln1 + (ln2 * 10)) + -48) < 214748364, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [R(29, 12, i32, pn0); 0; pn0], [R(29, 13, i32, pn0); (ln1 + (ln2 * 10)) + -48; pn0]));
      37 * (N([ln1; ln2; m[0]], [select(((ln1 + (ln2 * 10)) + -48) < 214748364, 0, (m[0] + -48) <= 9)], [R(29, 12, i32, pn0); 0; m[0]], [m[0]; (ln1 + (ln2 * 10)) + -48; m[0]]))
    ])) + (list_max(1, 1));
    9;
    (list_max([
      (31 + |f29|) * (N([lN5; ln1], [(((i64.extend_i32_u(ln1)) + (lN5 * 10)) + -48) < 92233720368547758], [i64.extend_i32_s(((R(29, 12, i32, pn0)) + (0 * 10)) + -48); R(29, 34, i32, pn0)], [((i64.extend_i32_u(ln1)) + (lN5 * 10)) + -48; R(29, 16, i32, pn0)]));
      36 * (N([lN5; ln1], [(((i64.extend_i32_u(ln1)) + (lN5 * 10)) + -48) < 92233720368547758], [i64.extend_i32_s(((R(29, 12, i32, pn0)) + (0 * 10)) + -48); R(29, 34, i32, pn0)], [((i64.extend_i32_u(ln1)) + (lN5 * 10)) + -48; m[0]]))
    ])) + (list_max(1, 1));
    1;
    5;
    18;
    14;
    2
  ]);
  list_sum([
    50;
    (list_max([
      (32 + |f29|) * (N([ln1; ln2; pn0], [select(((ln1 + (ln2 * 10)) + -48) < 214748364, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [R(29, 12, i32, pn0); 0; pn0], [R(29, 13, i32, pn0); (ln1 + (ln2 * 10)) + -48; pn0]));
      37 * (N([ln1; ln2; m[0]], [select(((ln1 + (ln2 * 10)) + -48) < 214748364, 0, (m[0] + -48) <= 9)], [R(29, 12, i32, pn0); 0; m[0]], [m[0]; (ln1 + (ln2 * 10)) + -48; m[0]]))
    ])) + (list_max(1, 1));
    9;
    (list_max([
      (31 + |f29|) * (N([lN5; ln1], [(((i64.extend_i32_u(ln1)) + (lN5 * 10)) + -48) < 92233720368547758], [i64.extend_i32_s(((R(29, 12, i32, pn0)) + (0 * 10)) + -48); R(29, 34, i32, pn0)], [((i64.extend_i32_u(ln1)) + (lN5 * 10)) + -48; R(29, 16, i32, pn0)]));
      36 * (N([lN5; ln1], [(((i64.extend_i32_u(ln1)) + (lN5 * 10)) + -48) < 92233720368547758], [i64.extend_i32_s(((R(29, 12, i32, pn0)) + (0 * 10)) + -48); R(29, 34, i32, pn0)], [((i64.extend_i32_u(ln1)) + (lN5 * 10)) + -48; m[0]]))
    ])) + (list_max(1, 1));
    1;
    5;
    (list_max([
      (16 + |f29|) * (N([pn0], [((R(29, 0, i32, pn0)) + -48) < 10], [pn0], [pn0]));
      21 * (N([m[0]], [(m[0] + -48) < 10], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    1;
    18;
    2
  ]);
  list_sum([
    50;
    (list_max([
      (32 + |f29|) * (N([ln1; ln2; pn0], [select(((ln1 + (ln2 * 10)) + -48) < 214748364, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [R(29, 12, i32, pn0); 0; pn0], [R(29, 13, i32, pn0); (ln1 + (ln2 * 10)) + -48; pn0]));
      37 * (N([ln1; ln2; m[0]], [select(((ln1 + (ln2 * 10)) + -48) < 214748364, 0, (m[0] + -48) <= 9)], [R(29, 12, i32, pn0); 0; m[0]], [m[0]; (ln1 + (ln2 * 10)) + -48; m[0]]))
    ])) + (list_max(1, 1));
    9;
    (list_max([
      (31 + |f29|) * (N([lN5; ln1], [(((i64.extend_i32_u(ln1)) + (lN5 * 10)) + -48) < 92233720368547758], [i64.extend_i32_s(((R(29, 12, i32, pn0)) + (0 * 10)) + -48); R(29, 34, i32, pn0)], [((i64.extend_i32_u(ln1)) + (lN5 * 10)) + -48; R(29, 16, i32, pn0)]));
      36 * (N([lN5; ln1], [(((i64.extend_i32_u(ln1)) + (lN5 * 10)) + -48) < 92233720368547758], [i64.extend_i32_s(((R(29, 12, i32, pn0)) + (0 * 10)) + -48); R(29, 34, i32, pn0)], [((i64.extend_i32_u(ln1)) + (lN5 * 10)) + -48; m[0]]))
    ])) + (list_max(1, 1));
    1;
    5;
    (list_max([
      (16 + |f29|) * (N([pn0], [((R(29, 0, i32, pn0)) + -48) < 10], [pn0], [pn0]));
      21 * (N([m[0]], [(m[0] + -48) < 10], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    1;
    18;
    14;
    0
  ]);
  list_sum([
    50;
    (list_max([
      (32 + |f29|) * (N([ln1; ln2; pn0], [select(((ln1 + (ln2 * 10)) + -48) < 214748364, 0, ((R(29, 0, i32, pn0)) + -48) <= 9)], [R(29, 12, i32, pn0); 0; pn0], [R(29, 13, i32, pn0); (ln1 + (ln2 * 10)) + -48; pn0]));
      37 * (N([ln1; ln2; m[0]], [select(((ln1 + (ln2 * 10)) + -48) < 214748364, 0, (m[0] + -48) <= 9)], [R(29, 12, i32, pn0); 0; m[0]], [m[0]; (ln1 + (ln2 * 10)) + -48; m[0]]))
    ])) + (list_max(1, 1));
    9;
    (list_max([
      (31 + |f29|) * (N([lN5; ln1], [(((i64.extend_i32_u(ln1)) + (lN5 * 10)) + -48) < 92233720368547758], [i64.extend_i32_s(((R(29, 12, i32, pn0)) + (0 * 10)) + -48); R(29, 34, i32, pn0)], [((i64.extend_i32_u(ln1)) + (lN5 * 10)) + -48; R(29, 16, i32, pn0)]));
      36 * (N([lN5; ln1], [(((i64.extend_i32_u(ln1)) + (lN5 * 10)) + -48) < 92233720368547758], [i64.extend_i32_s(((R(29, 12, i32, pn0)) + (0 * 10)) + -48); R(29, 34, i32, pn0)], [((i64.extend_i32_u(ln1)) + (lN5 * 10)) + -48; m[0]]))
    ])) + (list_max(1, 1));
    1;
    5;
    (list_max([
      (16 + |f29|) * (N([pn0], [((R(29, 0, i32, pn0)) + -48) < 10], [pn0], [pn0]));
      21 * (N([m[0]], [(m[0] + -48) < 10], [m[0]], [m[0]]))
    ])) + (list_max(1, 1));
    1;
    18;
    14;
    2
  ])
])
