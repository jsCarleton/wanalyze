ebb costs:
[0]: 58
[9]: (list_max((34 * N([ln4], [(ln4 > 1)], [m[320]], [(ln4 + -1)])), (32 * N([ln4], [(ln4 > 1)], [m[320]], [(ln4 + -1)]))) + list_max(1, 1, 1))
[18]: 3
[20]: 7
[24]: (list_max((34 * N([ln6], [(ln6 > 1)], [m[320]], [(ln6 + -1)])), (32 * N([ln6], [(ln6 > 1)], [m[320]], [(ln6 + -1)]))) + list_max(1, 1, 1))
[33]: 1
[34]: 3
[35]: 17
[37]: (list_max(((66 + |f28|) * N([ln3; ln4], [(ln3 < ln4)], [m[316]; m[320]], [(ln3 + 1); ln4])), ((64 + |f28|) * N([ln3; ln4], [(ln3 < ln4)], [m[316]; m[320]], [(ln3 + 1); ln4])), ((65 + |f28|) * N([ln3; ln4], [(ln3 < ln4)], [m[316]; m[320]], [(ln3 + 1); ln4])), ((62 + |f28|) * N([ln3; ln4], [(ln3 < ln4)], [m[316]; m[320]], [(ln3 + 1); ln4])), ((71 + |f28|) * N([ln3; ln4], [(ln3 < ln4)], [m[316]; m[320]], [(ln3 + 1); ln4])), ((69 + |f28|) * N([ln3; ln4], [(ln3 < ln4)], [m[316]; m[320]], [(ln3 + 1); ln4])), ((70 + |f28|) * N([ln3; ln4], [(ln3 < ln4)], [m[316]; m[320]], [(ln3 + 1); ln4])), ((67 + |f28|) * N([ln3; ln4], [(ln3 < ln4)], [m[316]; m[320]], [(ln3 + 1); ln4]))) + list_max(1, 1, 1, 1, 1, 1, 1, 1))
[37]: 22
[41]: (list_max(((41 + |f28|) * N([m[0]; m[328]], [not(i32.eqz(((0 - m[0]) shr_s m[328])))], [m[0]; m[328]], [m[0]; m[328]])), ((39 + |f28|) * N([m[0]; m[328]], [not(i32.eqz((m[0] shr_s m[328])))], [m[0]; m[328]], [m[0]; m[328]]))) + list_max(5, (15 + |f28|), (13 + |f28|), (13 + |f28|)))
[57]: 11
[58]: 9
[60]: 4
[61]: 22
24 ebb paths found
[0 35 61]
[0 35 37 41 58 60 61]
[0 35 37 41 57 58 60 61]
[0 9 20 35 61]
[0 9 20 35 37 41 58 60 61]
[0 9 20 35 37 41 57 58 60 61]
[0 9 20 24 35 61]
[0 9 20 24 35 37 41 58 60 61]
[0 9 20 24 35 37 41 57 58 60 61]
[0 9 20 24 33 34 35 61]
[0 9 20 24 33 34 35 37 41 58 60 61]
[0 9 20 24 33 34 35 37 41 57 58 60 61]
[0 9 18 34 35 61]
[0 9 18 34 35 37 41 58 60 61]
[0 9 18 34 35 37 41 57 58 60 61]
[0 9 18 20 35 61]
[0 9 18 20 35 37 41 58 60 61]
[0 9 18 20 35 37 41 57 58 60 61]
[0 9 18 20 24 35 61]
[0 9 18 20 24 35 37 41 58 60 61]
[0 9 18 20 24 35 37 41 57 58 60 61]
[0 9 18 20 24 33 34 35 61]
[0 9 18 20 24 33 34 35 37 41 58 60 61]
[0 9 18 20 24 33 34 35 37 41 57 58 60 61]
|f343| = list_max([
  list_sum(58, 17, 22);
  list_sum([
    58;
    17;
    22;
    (list_max([
      (41 + |f28|) * (N([m[0]; m[328]], [not(i32.eqz((0 - m[0]) shr_s m[328]))], [m[0]; m[328]], [m[0]; m[328]]));
      (39 + |f28|) * (N([m[0]; m[328]], [not(i32.eqz(m[0] shr_s m[328]))], [m[0]; m[328]], [m[0]; m[328]]))
    ])) + (list_max([
      5;
      15 + |f28|;
      13 + |f28|;
      13 + |f28|
    ]));
    9;
    4;
    22
  ]);
  list_sum([
    58;
    17;
    22;
    (list_max([
      (41 + |f28|) * (N([m[0]; m[328]], [not(i32.eqz((0 - m[0]) shr_s m[328]))], [m[0]; m[328]], [m[0]; m[328]]));
      (39 + |f28|) * (N([m[0]; m[328]], [not(i32.eqz(m[0] shr_s m[328]))], [m[0]; m[328]], [m[0]; m[328]]))
    ])) + (list_max([
      5;
      15 + |f28|;
      13 + |f28|;
      13 + |f28|
    ]));
    11;
    9;
    4;
    22
  ]);
  list_sum([
    58;
    (list_max([
      34 * (N([ln4], [ln4 > 1], [m[320]], [ln4 + -1]));
      32 * (N([ln4], [ln4 > 1], [m[320]], [ln4 + -1]))
    ])) + (list_max(1, 1, 1));
    7;
    17;
    22
  ]);
  list_sum([
    58;
    (list_max([
      34 * (N([ln4], [ln4 > 1], [m[320]], [ln4 + -1]));
      32 * (N([ln4], [ln4 > 1], [m[320]], [ln4 + -1]))
    ])) + (list_max(1, 1, 1));
    7;
    17;
    22;
    (list_max([
      (41 + |f28|) * (N([m[0]; m[328]], [not(i32.eqz((0 - m[0]) shr_s m[328]))], [m[0]; m[328]], [m[0]; m[328]]));
      (39 + |f28|) * (N([m[0]; m[328]], [not(i32.eqz(m[0] shr_s m[328]))], [m[0]; m[328]], [m[0]; m[328]]))
    ])) + (list_max([
      5;
      15 + |f28|;
      13 + |f28|;
      13 + |f28|
    ]));
    9;
    4;
    22
  ]);
  list_sum([
    58;
    (list_max([
      34 * (N([ln4], [ln4 > 1], [m[320]], [ln4 + -1]));
      32 * (N([ln4], [ln4 > 1], [m[320]], [ln4 + -1]))
    ])) + (list_max(1, 1, 1));
    7;
    17;
    22;
    (list_max([
      (41 + |f28|) * (N([m[0]; m[328]], [not(i32.eqz((0 - m[0]) shr_s m[328]))], [m[0]; m[328]], [m[0]; m[328]]));
      (39 + |f28|) * (N([m[0]; m[328]], [not(i32.eqz(m[0] shr_s m[328]))], [m[0]; m[328]], [m[0]; m[328]]))
    ])) + (list_max([
      5;
      15 + |f28|;
      13 + |f28|;
      13 + |f28|
    ]));
    11;
    9;
    4;
    22
  ]);
  list_sum([
    58;
    (list_max([
      34 * (N([ln4], [ln4 > 1], [m[320]], [ln4 + -1]));
      32 * (N([ln4], [ln4 > 1], [m[320]], [ln4 + -1]))
    ])) + (list_max(1, 1, 1));
    7;
    (list_max([
      34 * (N([ln6], [ln6 > 1], [m[320]], [ln6 + -1]));
      32 * (N([ln6], [ln6 > 1], [m[320]], [ln6 + -1]))
    ])) + (list_max(1, 1, 1));
    17;
    22
  ]);
  list_sum([
    58;
    (list_max([
      34 * (N([ln4], [ln4 > 1], [m[320]], [ln4 + -1]));
      32 * (N([ln4], [ln4 > 1], [m[320]], [ln4 + -1]))
    ])) + (list_max(1, 1, 1));
    7;
    (list_max([
      34 * (N([ln6], [ln6 > 1], [m[320]], [ln6 + -1]));
      32 * (N([ln6], [ln6 > 1], [m[320]], [ln6 + -1]))
    ])) + (list_max(1, 1, 1));
    17;
    22;
    (list_max([
      (41 + |f28|) * (N([m[0]; m[328]], [not(i32.eqz((0 - m[0]) shr_s m[328]))], [m[0]; m[328]], [m[0]; m[328]]));
      (39 + |f28|) * (N([m[0]; m[328]], [not(i32.eqz(m[0] shr_s m[328]))], [m[0]; m[328]], [m[0]; m[328]]))
    ])) + (list_max([
      5;
      15 + |f28|;
      13 + |f28|;
      13 + |f28|
    ]));
    9;
    4;
    22
  ]);
  list_sum([
    58;
    (list_max([
      34 * (N([ln4], [ln4 > 1], [m[320]], [ln4 + -1]));
      32 * (N([ln4], [ln4 > 1], [m[320]], [ln4 + -1]))
    ])) + (list_max(1, 1, 1));
    7;
    (list_max([
      34 * (N([ln6], [ln6 > 1], [m[320]], [ln6 + -1]));
      32 * (N([ln6], [ln6 > 1], [m[320]], [ln6 + -1]))
    ])) + (list_max(1, 1, 1));
    17;
    22;
    (list_max([
      (41 + |f28|) * (N([m[0]; m[328]], [not(i32.eqz((0 - m[0]) shr_s m[328]))], [m[0]; m[328]], [m[0]; m[328]]));
      (39 + |f28|) * (N([m[0]; m[328]], [not(i32.eqz(m[0] shr_s m[328]))], [m[0]; m[328]], [m[0]; m[328]]))
    ])) + (list_max([
      5;
      15 + |f28|;
      13 + |f28|;
      13 + |f28|
    ]));
    11;
    9;
    4;
    22
  ]);
  list_sum([
    58;
    (list_max([
      34 * (N([ln4], [ln4 > 1], [m[320]], [ln4 + -1]));
      32 * (N([ln4], [ln4 > 1], [m[320]], [ln4 + -1]))
    ])) + (list_max(1, 1, 1));
    7;
    (list_max([
      34 * (N([ln6], [ln6 > 1], [m[320]], [ln6 + -1]));
      32 * (N([ln6], [ln6 > 1], [m[320]], [ln6 + -1]))
    ])) + (list_max(1, 1, 1));
    1;
    3;
    17;
    22
  ]);
  list_sum([
    58;
    (list_max([
      34 * (N([ln4], [ln4 > 1], [m[320]], [ln4 + -1]));
      32 * (N([ln4], [ln4 > 1], [m[320]], [ln4 + -1]))
    ])) + (list_max(1, 1, 1));
    7;
    (list_max([
      34 * (N([ln6], [ln6 > 1], [m[320]], [ln6 + -1]));
      32 * (N([ln6], [ln6 > 1], [m[320]], [ln6 + -1]))
    ])) + (list_max(1, 1, 1));
    1;
    3;
    17;
    22;
    (list_max([
      (41 + |f28|) * (N([m[0]; m[328]], [not(i32.eqz((0 - m[0]) shr_s m[328]))], [m[0]; m[328]], [m[0]; m[328]]));
      (39 + |f28|) * (N([m[0]; m[328]], [not(i32.eqz(m[0] shr_s m[328]))], [m[0]; m[328]], [m[0]; m[328]]))
    ])) + (list_max([
      5;
      15 + |f28|;
      13 + |f28|;
      13 + |f28|
    ]));
    9;
    4;
    22
  ]);
  list_sum([
    58;
    (list_max([
      34 * (N([ln4], [ln4 > 1], [m[320]], [ln4 + -1]));
      32 * (N([ln4], [ln4 > 1], [m[320]], [ln4 + -1]))
    ])) + (list_max(1, 1, 1));
    7;
    (list_max([
      34 * (N([ln6], [ln6 > 1], [m[320]], [ln6 + -1]));
      32 * (N([ln6], [ln6 > 1], [m[320]], [ln6 + -1]))
    ])) + (list_max(1, 1, 1));
    1;
    3;
    17;
    22;
    (list_max([
      (41 + |f28|) * (N([m[0]; m[328]], [not(i32.eqz((0 - m[0]) shr_s m[328]))], [m[0]; m[328]], [m[0]; m[328]]));
      (39 + |f28|) * (N([m[0]; m[328]], [not(i32.eqz(m[0] shr_s m[328]))], [m[0]; m[328]], [m[0]; m[328]]))
    ])) + (list_max([
      5;
      15 + |f28|;
      13 + |f28|;
      13 + |f28|
    ]));
    11;
    9;
    4;
    22
  ]);
  list_sum([
    58;
    (list_max([
      34 * (N([ln4], [ln4 > 1], [m[320]], [ln4 + -1]));
      32 * (N([ln4], [ln4 > 1], [m[320]], [ln4 + -1]))
    ])) + (list_max(1, 1, 1));
    3;
    3;
    17;
    22
  ]);
  list_sum([
    58;
    (list_max([
      34 * (N([ln4], [ln4 > 1], [m[320]], [ln4 + -1]));
      32 * (N([ln4], [ln4 > 1], [m[320]], [ln4 + -1]))
    ])) + (list_max(1, 1, 1));
    3;
    3;
    17;
    22;
    (list_max([
      (41 + |f28|) * (N([m[0]; m[328]], [not(i32.eqz((0 - m[0]) shr_s m[328]))], [m[0]; m[328]], [m[0]; m[328]]));
      (39 + |f28|) * (N([m[0]; m[328]], [not(i32.eqz(m[0] shr_s m[328]))], [m[0]; m[328]], [m[0]; m[328]]))
    ])) + (list_max([
      5;
      15 + |f28|;
      13 + |f28|;
      13 + |f28|
    ]));
    9;
    4;
    22
  ]);
  list_sum([
    58;
    (list_max([
      34 * (N([ln4], [ln4 > 1], [m[320]], [ln4 + -1]));
      32 * (N([ln4], [ln4 > 1], [m[320]], [ln4 + -1]))
    ])) + (list_max(1, 1, 1));
    3;
    3;
    17;
    22;
    (list_max([
      (41 + |f28|) * (N([m[0]; m[328]], [not(i32.eqz((0 - m[0]) shr_s m[328]))], [m[0]; m[328]], [m[0]; m[328]]));
      (39 + |f28|) * (N([m[0]; m[328]], [not(i32.eqz(m[0] shr_s m[328]))], [m[0]; m[328]], [m[0]; m[328]]))
    ])) + (list_max([
      5;
      15 + |f28|;
      13 + |f28|;
      13 + |f28|
    ]));
    11;
    9;
    4;
    22
  ]);
  list_sum([
    58;
    (list_max([
      34 * (N([ln4], [ln4 > 1], [m[320]], [ln4 + -1]));
      32 * (N([ln4], [ln4 > 1], [m[320]], [ln4 + -1]))
    ])) + (list_max(1, 1, 1));
    3;
    7;
    17;
    22
  ]);
  list_sum([
    58;
    (list_max([
      34 * (N([ln4], [ln4 > 1], [m[320]], [ln4 + -1]));
      32 * (N([ln4], [ln4 > 1], [m[320]], [ln4 + -1]))
    ])) + (list_max(1, 1, 1));
    3;
    7;
    17;
    22;
    (list_max([
      (41 + |f28|) * (N([m[0]; m[328]], [not(i32.eqz((0 - m[0]) shr_s m[328]))], [m[0]; m[328]], [m[0]; m[328]]));
      (39 + |f28|) * (N([m[0]; m[328]], [not(i32.eqz(m[0] shr_s m[328]))], [m[0]; m[328]], [m[0]; m[328]]))
    ])) + (list_max([
      5;
      15 + |f28|;
      13 + |f28|;
      13 + |f28|
    ]));
    9;
    4;
    22
  ]);
  list_sum([
    58;
    (list_max([
      34 * (N([ln4], [ln4 > 1], [m[320]], [ln4 + -1]));
      32 * (N([ln4], [ln4 > 1], [m[320]], [ln4 + -1]))
    ])) + (list_max(1, 1, 1));
    3;
    7;
    17;
    22;
    (list_max([
      (41 + |f28|) * (N([m[0]; m[328]], [not(i32.eqz((0 - m[0]) shr_s m[328]))], [m[0]; m[328]], [m[0]; m[328]]));
      (39 + |f28|) * (N([m[0]; m[328]], [not(i32.eqz(m[0] shr_s m[328]))], [m[0]; m[328]], [m[0]; m[328]]))
    ])) + (list_max([
      5;
      15 + |f28|;
      13 + |f28|;
      13 + |f28|
    ]));
    11;
    9;
    4;
    22
  ]);
  list_sum([
    58;
    (list_max([
      34 * (N([ln4], [ln4 > 1], [m[320]], [ln4 + -1]));
      32 * (N([ln4], [ln4 > 1], [m[320]], [ln4 + -1]))
    ])) + (list_max(1, 1, 1));
    3;
    7;
    (list_max([
      34 * (N([ln6], [ln6 > 1], [m[320]], [ln6 + -1]));
      32 * (N([ln6], [ln6 > 1], [m[320]], [ln6 + -1]))
    ])) + (list_max(1, 1, 1));
    17;
    22
  ]);
  list_sum([
    58;
    (list_max([
      34 * (N([ln4], [ln4 > 1], [m[320]], [ln4 + -1]));
      32 * (N([ln4], [ln4 > 1], [m[320]], [ln4 + -1]))
    ])) + (list_max(1, 1, 1));
    3;
    7;
    (list_max([
      34 * (N([ln6], [ln6 > 1], [m[320]], [ln6 + -1]));
      32 * (N([ln6], [ln6 > 1], [m[320]], [ln6 + -1]))
    ])) + (list_max(1, 1, 1));
    17;
    22;
    (list_max([
      (41 + |f28|) * (N([m[0]; m[328]], [not(i32.eqz((0 - m[0]) shr_s m[328]))], [m[0]; m[328]], [m[0]; m[328]]));
      (39 + |f28|) * (N([m[0]; m[328]], [not(i32.eqz(m[0] shr_s m[328]))], [m[0]; m[328]], [m[0]; m[328]]))
    ])) + (list_max([
      5;
      15 + |f28|;
      13 + |f28|;
      13 + |f28|
    ]));
    9;
    4;
    22
  ]);
  list_sum([
    58;
    (list_max([
      34 * (N([ln4], [ln4 > 1], [m[320]], [ln4 + -1]));
      32 * (N([ln4], [ln4 > 1], [m[320]], [ln4 + -1]))
    ])) + (list_max(1, 1, 1));
    3;
    7;
    (list_max([
      34 * (N([ln6], [ln6 > 1], [m[320]], [ln6 + -1]));
      32 * (N([ln6], [ln6 > 1], [m[320]], [ln6 + -1]))
    ])) + (list_max(1, 1, 1));
    17;
    22;
    (list_max([
      (41 + |f28|) * (N([m[0]; m[328]], [not(i32.eqz((0 - m[0]) shr_s m[328]))], [m[0]; m[328]], [m[0]; m[328]]));
      (39 + |f28|) * (N([m[0]; m[328]], [not(i32.eqz(m[0] shr_s m[328]))], [m[0]; m[328]], [m[0]; m[328]]))
    ])) + (list_max([
      5;
      15 + |f28|;
      13 + |f28|;
      13 + |f28|
    ]));
    11;
    9;
    4;
    22
  ]);
  list_sum([
    58;
    (list_max([
      34 * (N([ln4], [ln4 > 1], [m[320]], [ln4 + -1]));
      32 * (N([ln4], [ln4 > 1], [m[320]], [ln4 + -1]))
    ])) + (list_max(1, 1, 1));
    3;
    7;
    (list_max([
      34 * (N([ln6], [ln6 > 1], [m[320]], [ln6 + -1]));
      32 * (N([ln6], [ln6 > 1], [m[320]], [ln6 + -1]))
    ])) + (list_max(1, 1, 1));
    1;
    3;
    17;
    22
  ]);
  list_sum([
    58;
    (list_max([
      34 * (N([ln4], [ln4 > 1], [m[320]], [ln4 + -1]));
      32 * (N([ln4], [ln4 > 1], [m[320]], [ln4 + -1]))
    ])) + (list_max(1, 1, 1));
    3;
    7;
    (list_max([
      34 * (N([ln6], [ln6 > 1], [m[320]], [ln6 + -1]));
      32 * (N([ln6], [ln6 > 1], [m[320]], [ln6 + -1]))
    ])) + (list_max(1, 1, 1));
    1;
    3;
    17;
    22;
    (list_max([
      (41 + |f28|) * (N([m[0]; m[328]], [not(i32.eqz((0 - m[0]) shr_s m[328]))], [m[0]; m[328]], [m[0]; m[328]]));
      (39 + |f28|) * (N([m[0]; m[328]], [not(i32.eqz(m[0] shr_s m[328]))], [m[0]; m[328]], [m[0]; m[328]]))
    ])) + (list_max([
      5;
      15 + |f28|;
      13 + |f28|;
      13 + |f28|
    ]));
    9;
    4;
    22
  ]);
  list_sum([
    58;
    (list_max([
      34 * (N([ln4], [ln4 > 1], [m[320]], [ln4 + -1]));
      32 * (N([ln4], [ln4 > 1], [m[320]], [ln4 + -1]))
    ])) + (list_max(1, 1, 1));
    3;
    7;
    (list_max([
      34 * (N([ln6], [ln6 > 1], [m[320]], [ln6 + -1]));
      32 * (N([ln6], [ln6 > 1], [m[320]], [ln6 + -1]))
    ])) + (list_max(1, 1, 1));
    1;
    3;
    17;
    22;
    (list_max([
      (41 + |f28|) * (N([m[0]; m[328]], [not(i32.eqz((0 - m[0]) shr_s m[328]))], [m[0]; m[328]], [m[0]; m[328]]));
      (39 + |f28|) * (N([m[0]; m[328]], [not(i32.eqz(m[0] shr_s m[328]))], [m[0]; m[328]], [m[0]; m[328]]))
    ])) + (list_max([
      5;
      15 + |f28|;
      13 + |f28|;
      13 + |f28|
    ]));
    11;
    9;
    4;
    22
  ])
])
