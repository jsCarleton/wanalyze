Loops found in function 215 in these bblocks: 5 12 18.
Simple br_if conditions in: 5.
Simple br conditions in: .
Loop block: [4 5 6]
  Loop path: [4 5 6]
  Loop path: [4 5]
Loop block: [11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31]
  Loop path: [11 12 13 16 17 18 26 27 28 30 31]
  Loop path: [11 12 13 16 17 18 26 27 28 30]
  Loop path: [11 12 13 16 17 18 26 27 28 29 30 31]
  Loop path: [11 12 13 16 17 18 26 27 28 29 30]
  Loop path: [11 12 13 16 17 18 26]
  Loop path: [11 12 13 16 17 18 19 21 23 24 30 31]
  Loop path: [11 12 13 16 17 18 19 21 23 24 30]
  Loop path: [11 12 13 16 17 18 19 21 23]
  Loop path: [11 12 13 16 17 18 19 21 22 23 24 30 31]
  Loop path: [11 12 13 16 17 18 19 21 22 23 24 30]
  Loop path: [11 12 13 16 17 18 19 21 22 23]
  Loop path: [11 12 13 16 17 18 19 20 21 23 24 30 31]
  Loop path: [11 12 13 16 17 18 19 20 21 23 24 30]
  Loop path: [11 12 13 16 17 18 19 20 21 23]
  Loop path: [11 12 13 16 17 18 19 20 21 22 23 24 30 31]
  Loop path: [11 12 13 16 17 18 19 20 21 22 23 24 30]
  Loop path: [11 12 13 16 17 18 19 20 21 22 23]
  Loop path: [11 12 13 14 16 17 18 26 27 28 30 31]
  Loop path: [11 12 13 14 16 17 18 26 27 28 30]
  Loop path: [11 12 13 14 16 17 18 26 27 28 29 30 31]
  Loop path: [11 12 13 14 16 17 18 26 27 28 29 30]
  Loop path: [11 12 13 14 16 17 18 26]
  Loop path: [11 12 13 14 16 17 18 19 21 23 24 30 31]
  Loop path: [11 12 13 14 16 17 18 19 21 23 24 30]
  Loop path: [11 12 13 14 16 17 18 19 21 23]
  Loop path: [11 12 13 14 16 17 18 19 21 22 23 24 30 31]
  Loop path: [11 12 13 14 16 17 18 19 21 22 23 24 30]
  Loop path: [11 12 13 14 16 17 18 19 21 22 23]
  Loop path: [11 12 13 14 16 17 18 19 20 21 23 24 30 31]
  Loop path: [11 12 13 14 16 17 18 19 20 21 23 24 30]
  Loop path: [11 12 13 14 16 17 18 19 20 21 23]
  Loop path: [11 12 13 14 16 17 18 19 20 21 22 23 24 30 31]
  Loop path: [11 12 13 14 16 17 18 19 20 21 22 23 24 30]
  Loop path: [11 12 13 14 16 17 18 19 20 21 22 23]
  Loop path: [11 12 13 14 15 16 17 18 26 27 28 30 31]
  Loop path: [11 12 13 14 15 16 17 18 26 27 28 30]
  Loop path: [11 12 13 14 15 16 17 18 26 27 28 29 30 31]
  Loop path: [11 12 13 14 15 16 17 18 26 27 28 29 30]
  Loop path: [11 12 13 14 15 16 17 18 26]
  Loop path: [11 12 13 14 15 16 17 18 19 21 23 24 30 31]
  Loop path: [11 12 13 14 15 16 17 18 19 21 23 24 30]
  Loop path: [11 12 13 14 15 16 17 18 19 21 23]
  Loop path: [11 12 13 14 15 16 17 18 19 21 22 23 24 30 31]
  Loop path: [11 12 13 14 15 16 17 18 19 21 22 23 24 30]
  Loop path: [11 12 13 14 15 16 17 18 19 21 22 23]
  Loop path: [11 12 13 14 15 16 17 18 19 20 21 23 24 30 31]
  Loop path: [11 12 13 14 15 16 17 18 19 20 21 23 24 30]
  Loop path: [11 12 13 14 15 16 17 18 19 20 21 23]
  Loop path: [11 12 13 14 15 16 17 18 19 20 21 22 23 24 30 31]
  Loop path: [11 12 13 14 15 16 17 18 19 20 21 22 23 24 30]
  Loop path: [11 12 13 14 15 16 17 18 19 20 21 22 23]
Loop block: [17 18 19 20 21 22 23 24 25 26 27]
  Loop path: [17 18 26 27]
  Loop path: [17 18 26]
  Loop path: [17 18 19 21 23 24]
  Loop path: [17 18 19 21 23]
  Loop path: [17 18 19 21 22 23 24]
  Loop path: [17 18 19 21 22 23]
  Loop path: [17 18 19 20 21 23 24]
  Loop path: [17 18 19 20 21 23]
  Loop path: [17 18 19 20 21 22 23 24]
  Loop path: [17 18 19 20 21 22 23]
Code paths from the root bblock to a loop bblock and the VM state at the conclusion of the loop bblock:
[0 1 2 9 10 11]
cost:    24; 
stack:   [i32.load@(pn0)]; 
params:  [pn0, pn1]; 
locals:  [i32.load@(pn0), i32.load@(i32.load@(pn0)), ln4, i32.load@(pn0), ln6, ln7, ln8, ln9, ln10, ln11]; 
globals: [5400608]

[0 1 3 4]
cost:    20; 
stack:   [i32.load@(pn0)]; 
params:  [pn0, pn1]; 
locals:  [0, i32.load@(i32.load@(pn0)), ln4, i32.load@(pn0), ln6, ln7, ln8, ln9, ln10, ln11]; 
globals: [5400608]

[0 1 3 8 9 10 11]
cost:    32; 
stack:   [i32.load@(pn0), i32.load@(pn0)]; 
params:  [pn0, pn1]; 
locals:  [i32.load@(pn0), i32.load@(i32.load@(pn0)), ln4, i32.load@(pn0), ln6, ln7, ln8, ln9, ln10, ln11]; 
globals: [5400608]

[0 10 11]
cost:    13; 
stack:   []; 
params:  [pn0, pn1]; 
locals:  [i32.load@(pn0), ln3, ln4, i32.load@(pn0), ln6, ln7, ln8, ln9, ln10, ln11]; 
globals: [5400608]

Simple brif loop condition in bblock 5:	(ln2 + 1) < (i32.load@(pn0))
Loop condition variables: ln2, pn0
SSA of loop:
-t0 = ln5
-t1 = ln2
-t2 = 2
-t3 = t1 shl t2
-t4 = t0 + t3
-t5 = 0
-@(t4) = (t5)
-t7 = ln2
-t8 = 1
-t9 = t7 + t8
-ln2 = t9
-t11 = pn0
-t12 = (t11)
-t13 = t9 < t12
Loop variable calculations:
+pn0 = pn0
+ln2 = ln2 + 1
