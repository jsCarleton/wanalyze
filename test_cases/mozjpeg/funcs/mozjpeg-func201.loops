Loops found in function 201 in these bblocks: 2 11 12 19 27 29 30 40.
Simple br_if conditions in: 12 19 30 40.
Simple br conditions in: .
Loop block: [1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44]
Loop block: [10 11 12 13 14 15]
Loop block: [11 12 13]
Loop block: [18 19 20]
Loop block: [26 27 28 29 30 31 32 33 34 35 36]
Loop block: [28 29 30 31 32 33]
Loop block: [29 30 31]
Loop block: [39 40 41]
Code paths from the root bblock to a loop bblock and the VM state at the conclusion of the loop bblock:
[0 1]
cost:    17; 
stack:   []; 
params:  [pn0, pn1]; 
locals:  [ln2, i32.load@(pn0), ln4, ln5, ln6, ln7, ln8, ln9, i32.load@(pn0), ln11, ln12, ln13, ln14, ln15, (i32.load@(pn0)) + -1, ln17]; 
globals: [5400608]

Simple brif loop condition in bblock 12:	(ln2 + 1) != ln7
Loop condition variables: ln2, ln7
SSA of loop:
-t0 = ln9
-t1 = ln2
-t2 = 7
-t3 = t1 shl t2
-t4 = t0 + t3
-t5 = ln17
-@(t4) = (t5)
-t7 = ln2
-t8 = 1
-t9 = t7 + t8
-ln2 = t9
-t11 = ln7
-t12 = t9 != t11
Loop variable calculations:
+ln7 = ln7
+ln2 = ln2 + 1
Simple brif loop condition in bblock 19:	(ln2 + 1) != ln5
Loop condition variables: ln2, ln5
SSA of loop:
+t0 = pn0
-t1 = ln3
-t2 = ln13
-t3 = (t2)
-t4 = ln12
-t5 = ln2
-t6 = 2
-t7 = t5 shl t6
-ln4 = t7
-t9 = t4 + t7
-t10 = (t9)
-t11 = ln2
-t12 = 3
-t13 = t11 shl t12
-t14 = 0
-t15 = ln6
-t16 = ln4
-t17 = ln11
-t18 = t16 + t17
-t19 = (t18)
-t20 = pn0
-t21 = (t20)
-t22 = (t21)
-t23 = ln2
-t24 = 1
-t25 = t23 + t24
-ln2 = t25
-t27 = ln5
-t28 = t25 != t27
Loop variable calculations:
+ln5 = ln5
+ln2 = ln2 + 1
Simple brif loop condition in bblock 30:	(ln2 + 1) != ln8
Loop condition variables: ln2, ln8
SSA of loop:
-t0 = ln7
-t1 = ln2
-t2 = 7
-t3 = t1 shl t2
-t4 = t0 + t3
-t5 = ln15
-@(t4) = (t5)
-t7 = ln2
-t8 = 1
-t9 = t7 + t8
-ln2 = t9
-t11 = ln8
-t12 = t9 != t11
Loop variable calculations:
+ln8 = ln8
+ln2 = ln2 + 1
Simple brif loop condition in bblock 40:	(ln5 + 1) < (i32.load@(ln3))
Loop condition variables: ln5, ln3
SSA of loop:
-t0 = ln12
-t1 = ln5
-t2 = 2
-t3 = t1 shl t2
-t4 = t0 + t3
-t5 = (t4)
-t6 = ln11
-t7 = ln5
-t8 = 1
-t9 = t7 + t8
-ln5 = t9
-t11 = ln3
-t12 = (t11)
-t13 = t9 < t12
Loop variable calculations:
+ln3 = ln3
+ln5 = ln5 + 1
