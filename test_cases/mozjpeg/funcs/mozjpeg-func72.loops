Loops found in function 72 in these bblocks: 1 3 7 14 19 20 28 31 32 42 47.
Simple br_if conditions in: 3 20 28 42 47.
Simple br conditions in: .
Loop block: [0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51]
  Loop exits: [38 50 51]
  Looping path: [1 2 3 4 5 40 45 46 47 48 49]
  Looping path: [1 2 3 4 5 40 45]
  Looping path: [1 2 3 4 5 40 41 42 43 44 45 46 47 48 49]
  Looping path: [1 2 3 4 5 40 41 42 43 44 45]
  Looping path: [1]
  Looping path: [1 2 3 4 5 40 45 46 47 48 49]
  Looping path: [1 2 3 4 5 40 45]
  Looping path: [1 2 3 4 5 40 41 42 43 44 45 46 47 48 49]
  Looping path: [1 2 3 4 5 40 41 42 43 44 45]
  Looping path: [1]
  Path to loop: [0]
Loop block: [2 3 4]
  Loop exits: [4]
  Looping path: [3]
  Looping path: [3]
  Path to loop: [0 1 2]
Loop block: [6 7 8 9 10 11 12]
  Loop exits: [12]
  Looping path: [7 11]
  Looping path: [7 8 10 11]
  Looping path: [7 8 9 10 11]
  Looping path: [7 11]
  Looping path: [7 8 10 11]
  Looping path: [7 8 9 10 11]
  Path to loop: [0 1 2 3 4 5 6]
Loop block: [13 14 15 16 17 18 19 20 21 22 23 24 25 26]
  Loop exits: [26]
  Looping path: [14 15 18 19 20 21 22 23 24 25]
  Looping path: [14 15 16 25]
  Looping path: [14 15 18 19 20 21 22 23 24 25]
  Looping path: [14 15 16 25]
  Path to loop: [0 1 2 3 4 5 6 7 8 9 10 11 12 13]
  Path to loop: [0 1 2 3 4 5 6 7 8 10 11 12 13]
  Path to loop: [0 1 2 3 4 5 6 7 11 12 13]
Loop block: [18 19 20 21 22 23]
  Loop exits: [23]
  Looping path: [19 20 21 22]
  Looping path: [19 20 21 22]
  Path to loop: [0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 18]
  Path to loop: [0 1 2 3 4 5 6 7 8 10 11 12 13 14 15 18]
  Path to loop: [0 1 2 3 4 5 6 7 11 12 13 14 15 18]
Loop block: [19 20 21]
  Loop exits: [21]
  Looping path: [20]
  Looping path: [20]
  Path to loop: [0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 18 19]
  Path to loop: [0 1 2 3 4 5 6 7 8 10 11 12 13 14 15 18 19]
  Path to loop: [0 1 2 3 4 5 6 7 11 12 13 14 15 18 19]
Loop block: [27 28 29]
  Loop exits: [29]
  Looping path: [28]
  Looping path: [28]
  Path to loop: [0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 25 26 27]
  Path to loop: [0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 18 19 20 21 22 23 24 25 26 27]
  Path to loop: [0 1 2 3 4 5 6 7 8 10 11 12 13 14 15 16 25 26 27]
  Path to loop: [0 1 2 3 4 5 6 7 8 10 11 12 13 14 15 18 19 20 21 22 23 24 25 26 27]
  Path to loop: [0 1 2 3 4 5 6 7 11 12 13 14 15 16 25 26 27]
  Path to loop: [0 1 2 3 4 5 6 7 11 12 13 14 15 18 19 20 21 22 23 24 25 26 27]
Loop block: [30 31 32 33 34 35 36 37]
  Loop exits: [37]
  Looping path: [31 32 34 35 36]
  Looping path: [31 32 33 34 35 36]
  Looping path: [31 32 34 35 36]
  Looping path: [31 32 33 34 35 36]
  Path to loop: [0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 25 26 27 28 29 30]
  Path to loop: [0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 18 19 20 21 22 23 24 25 26 27 28 29 30]
  Path to loop: [0 1 2 3 4 5 6 7 8 10 11 12 13 14 15 16 25 26 27 28 29 30]
  Path to loop: [0 1 2 3 4 5 6 7 8 10 11 12 13 14 15 18 19 20 21 22 23 24 25 26 27 28 29 30]
  Path to loop: [0 1 2 3 4 5 6 7 11 12 13 14 15 16 25 26 27 28 29 30]
  Path to loop: [0 1 2 3 4 5 6 7 11 12 13 14 15 18 19 20 21 22 23 24 25 26 27 28 29 30]
Loop block: [31 32 33 34 35]
  Loop exits: [35]
  Looping path: [32 34]
  Looping path: [32 33 34]
  Looping path: [32 34]
  Looping path: [32 33 34]
  Path to loop: [0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 25 26 27 28 29 30 31]
  Path to loop: [0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 18 19 20 21 22 23 24 25 26 27 28 29 30 31]
  Path to loop: [0 1 2 3 4 5 6 7 8 10 11 12 13 14 15 16 25 26 27 28 29 30 31]
  Path to loop: [0 1 2 3 4 5 6 7 8 10 11 12 13 14 15 18 19 20 21 22 23 24 25 26 27 28 29 30 31]
  Path to loop: [0 1 2 3 4 5 6 7 11 12 13 14 15 16 25 26 27 28 29 30 31]
  Path to loop: [0 1 2 3 4 5 6 7 11 12 13 14 15 18 19 20 21 22 23 24 25 26 27 28 29 30 31]
Loop block: [41 42 43]
  Loop exits: [43]
  Looping path: [42]
  Looping path: [42]
  Path to loop: [0 1 2 3 4 5 40 41]
Loop block: [46 47 48]
  Loop exits: [48]
  Looping path: [47]
  Looping path: [47]
  Path to loop: [0 1 2 3 4 5 40 41 42 43 44 45 46]
  Path to loop: [0 1 2 3 4 5 40 45 46]
Code paths from the root bblock to a loop bblock and the VM state at the conclusion of the loop bblock:
[0] 46
cost:    46; 
stack:   [pn2, 5400608 - 2128, 5400608 - 2128, (5400608 - 2128) + 2112, (5400608 - 2128) + 2104, (5400608 - 2128) + 2096]; 
params:  [pn0, pn1, pn2]; 
locals:  [5400608 - 2128, ln4, rn0, ln6, -1, 1000000000, ln9, ln10]; 
globals: [5400608 - 2128]

Simple brif loop condition in bblock 3:	(ln3 + 1) != 257
Loop condition variables: ln3
SSA of loop:
-t0 = ln4
-t1 = pn2
-t2 = ln3
-t3 = 2
-t4 = t2 shl t3
-t5 = t1 + t4
-t6 = (t5)
-ln6 = t6
-t8 = ln6
-t9 = i32.eqz(t8)
-t10 = ln6
-t11 = ln4
-t12 = t10 > t11
-t13 = t9 || t12
-t14 = ln3
-t15 = ln7
-t16 = t14 == t15
-t17 = t13 || t16
-ln6 = t17
-t19 = select(t17, t6, t0)
-ln4 = t19
-t21 = ln9
-t22 = ln3
-t23 = ln6
-t24 = select(t23, t22, t21)
-ln9 = t24
-t26 = ln3
-t27 = 1
-t28 = t26 + t27
-ln3 = t28
-t30 = 257
-t31 = t28 != t30
Loop variable calculations:
+ln3 = ln3 + 1
Simple brif loop condition in bblock 20:	i32.eqz(i32.load8_u@(ln3 + (ln5 + 2080)))
Loop condition variables: ln3, ln5
SSA of loop:
-t0 = ln3
-ln4 = t0
-t2 = -1
-t3 = t0 + t2
-ln3 = t3
-t5 = ln4
-t6 = ln5
-t7 = 2080
-t8 = t6 + t7
-t9 = t5 + t8
-ln10 = t9
-t11 = (t9)
-t12 = i32.eqz(t11)
Loop variable calculations:
+ln5 = ln5
+ln3 = ln3 + -1
Simple brif loop condition in bblock 28:	i32.eqz(i32.load8_u@((ln5 + 2080) + ln3))
Loop condition variables: ln5, ln3
SSA of loop:
-t0 = ln5
-t1 = 2080
-t2 = t0 + t1
-t3 = ln3
-t4 = t2 + t3
-pn0 = t4
-t6 = ln3
-t7 = -1
-t8 = t6 + t7
-ln3 = t8
-t10 = pn0
-t11 = (t10)
-pn2 = t11
-t13 = i32.eqz(t11)
Loop variable calculations:
+ln3 = ln3 + -1
+ln5 = ln5
Simple brif loop condition in bblock 42:	(i32.load@((ln3 shl 2) + ln5)) > -1
Loop condition variables: ln3, ln5
SSA of loop:
-t0 = ln3
-t1 = 2
-t2 = t0 shl t1
-ln3 = t2
-t4 = ln5
-t5 = 1040
-t6 = t4 + t5
-t7 = t2 + t6
-ln4 = t7
-t9 = ln4
-t10 = (t9)
-t11 = 1
-t12 = t10 + t11
-@(t7) = (t12)
-t14 = ln3
-t15 = ln5
-t16 = t14 + t15
-ln4 = t16
-t18 = (t16)
-ln3 = t18
-t20 = -1
-t21 = t18 > t20
Loop variable calculations:
+ln5 = ln5
+ln3 = ((ln3 shl 2) + ln5)
Simple brif loop condition in bblock 47:	(i32.load@((ln3 shl 2) + ln5)) > -1
Loop condition variables: ln3, ln5
SSA of loop:
-t0 = ln3
-t1 = 2
-t2 = t0 shl t1
-ln3 = t2
-t4 = ln5
-t5 = 1040
-t6 = t4 + t5
-t7 = t2 + t6
-ln4 = t7
-t9 = ln4
-t10 = (t9)
-t11 = 1
-t12 = t10 + t11
-@(t7) = (t12)
-t14 = ln3
-t15 = ln5
-t16 = t14 + t15
-t17 = (t16)
-ln3 = t17
-t19 = -1
-t20 = t17 > t19
Loop variable calculations:
+ln5 = ln5
+ln3 = ((ln3 shl 2) + ln5)
