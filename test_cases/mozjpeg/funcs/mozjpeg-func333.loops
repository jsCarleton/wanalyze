Loops found in function 333 in these bblocks: 15 24 30 35 41 46.
Simple br_if conditions in: 30 35 41 46.
Simple br conditions in: .
Loop block: [14 15 16 17]
  Loop exits: [17]
  Looping path: [15 16]
  Looping path: [15 16]
  Path to loop: [0 1 2 5 6 7 8 11 14]
Loop block: [23 24 25 26]
  Loop exits: [26]
  Looping path: [24 25]
  Looping path: [24 25]
  Path to loop: [0 1 2 5 6 7 20 21 22 23]
Loop block: [29 30 31]
  Loop exits: [31]
  Looping path: [30]
  Looping path: [30]
  Path to loop: [0 1 2 5 6 7 20 21 22 23 24 25 26 27 28 29]
  Path to loop: [0 1 2 5 6 7 20 21 22 28 29]
Loop block: [34 35 36]
  Loop exits: [36]
  Looping path: [35]
  Looping path: [35]
  Path to loop: [0 1 2 5 6 7 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34]
  Path to loop: [0 1 2 5 6 7 20 21 22 23 24 25 26 27 28 33 34]
  Path to loop: [0 1 2 5 6 7 20 21 22 28 29 30 31 32 33 34]
  Path to loop: [0 1 2 5 6 7 20 21 22 28 33 34]
  Path to loop: [0 1 2 5 6 7 20 21 33 34]
Loop block: [40 41 42]
  Loop exits: [42]
  Looping path: [41]
  Looping path: [41]
  Path to loop: [0 1 2 5 6 7 8 11 12 39 40]
  Path to loop: [0 1 2 5 6 7 8 11 14 15 16 17 18 39 40]
Loop block: [45 46 47]
  Loop exits: [47]
  Looping path: [46]
  Looping path: [46]
  Path to loop: [0 1 2 5 6 7 8 9 44 45]
  Path to loop: [0 1 2 5 6 7 8 11 12 39 40 41 42 43 44 45]
  Path to loop: [0 1 2 5 6 7 8 11 12 39 44 45]
  Path to loop: [0 1 2 5 6 7 8 11 14 15 16 17 18 39 40 41 42 43 44 45]
  Path to loop: [0 1 2 5 6 7 8 11 14 15 16 17 18 39 44 45]
Code paths from the root bblock to a loop bblock and the VM state at the conclusion of the loop bblock:
[0 1 2 5 6 7 8 9 44 45] 38
cost:    38; 
stack:   []; 
params:  [pn0, pn1, pn2]; 
locals:  [pn0]; 
globals: [5400608]

[0 1 2 5 6 7 8 11 12 39 40] 44
cost:    44; 
stack:   []; 
params:  [pn0, pn1, pn2]; 
locals:  [pn0]; 
globals: [5400608]

[0 1 2 5 6 7 8 11 12 39 44 45] 47
cost:    47; 
stack:   []; 
params:  [pn0, pn1, pn2]; 
locals:  [pn0]; 
globals: [5400608]

[0 1 2 5 6 7 8 11 14] 39
cost:    39; 
stack:   []; 
params:  [pn0, pn1, pn2]; 
locals:  [pn0]; 
globals: [5400608]

[0 1 2 5 6 7 20 21 22 23] 39
cost:    39; 
stack:   []; 
params:  [pn0, pn1, pn2]; 
locals:  [(pn0 xor pn1) && 3]; 
globals: [5400608]

[0 1 2 5 6 7 20 21 22 28 29] 43
cost:    43; 
stack:   []; 
params:  [pn0, pn1, pn2]; 
locals:  [(pn0 xor pn1) && 3]; 
globals: [5400608]

[0 1 2 5 6 7 20 21 22 28 33 34] 46
cost:    46; 
stack:   []; 
params:  [pn0, pn1, pn2]; 
locals:  [(pn0 xor pn1) && 3]; 
globals: [5400608]

[0 1 2 5 6 7 20 21 33 34] 36
cost:    36; 
stack:   []; 
params:  [pn0, pn1, pn2]; 
locals:  [(pn0 xor pn1) && 3]; 
globals: [5400608]

Simple brif loop condition in bblock 30:	(pn2 + -4) > 3
Loop condition variables: pn2
SSA of loop:
-t0 = pn0
-t1 = pn2
-t2 = -4
-t3 = t1 + t2
-pn2 = t3
-t5 = t0 + t3
-t6 = pn1
-t7 = pn2
-t8 = t6 + t7
-t9 = (t8)
-@(t5) = (t9)
-t11 = pn2
-t12 = 3
-t13 = t11 > t12
Loop variable calculations:
+pn2 = pn2 + -4
Simple brif loop condition in bblock 35:	pn2 + -1
Loop condition variables: pn2
SSA of loop:
-t0 = pn0
-t1 = pn2
-t2 = -1
-t3 = t1 + t2
-pn2 = t3
-t5 = t0 + t3
-t6 = pn1
-t7 = pn2
-t8 = t6 + t7
-t9 = (t8)
-@(t5) = (t9)
-t11 = pn2
Loop variable calculations:
+pn2 = pn2 + -1
Simple brif loop condition in bblock 41:	(pn2 + -4) > 3
Loop condition variables: pn2
SSA of loop:
-t0 = ln3
-t1 = pn1
-t2 = (t1)
-@(t0) = (t2)
-t4 = pn1
-t5 = 4
-t6 = t4 + t5
-pn1 = t6
-t8 = ln3
-t9 = 4
-t10 = t8 + t9
-ln3 = t10
-t12 = pn2
-t13 = -4
-t14 = t12 + t13
-pn2 = t14
-t16 = 3
-t17 = t14 > t16
Loop variable calculations:
+pn2 = pn2 + -4
Simple brif loop condition in bblock 46:	pn2 + -1
Loop condition variables: pn2
SSA of loop:
-t0 = ln3
-t1 = pn1
-t2 = (t1)
-@(t0) = (t2)
-t4 = ln3
-t5 = 1
-t6 = t4 + t5
-ln3 = t6
-t8 = pn1
-t9 = 1
-t10 = t8 + t9
-pn1 = t10
-t12 = pn2
-t13 = -1
-t14 = t12 + t13
-pn2 = t14
Loop variable calculations:
+pn2 = pn2 + -1
