Loops found in function 238 in these bblocks: 4 19.
Simple br_if conditions in: 19.
Simple br conditions in: .
Loop block: [3 4 5 6 7 8 9 10 11 12 13 14 15]
  Loop path: [3 4 6 8 10 12 13]
  Loop path: [3 4 6 8 10 12]
  Loop path: [3 4 6 8 10 11 12 13]
  Loop path: [3 4 6 8 10 11 12]
  Loop path: [3 4 6 8 9 10 12 13]
  Loop path: [3 4 6 8 9 10 12]
  Loop path: [3 4 6 8 9 10 11 12 13]
  Loop path: [3 4 6 8 9 10 11 12]
  Loop path: [3 4 6 7 8 10 12 13]
  Loop path: [3 4 6 7 8 10 12]
  Loop path: [3 4 6 7 8 10 11 12 13]
  Loop path: [3 4 6 7 8 10 11 12]
  Loop path: [3 4 6 7 8 9 10 12 13]
  Loop path: [3 4 6 7 8 9 10 12]
  Loop path: [3 4 6 7 8 9 10 11 12 13]
  Loop path: [3 4 6 7 8 9 10 11 12]
  Loop path: [3 4 5 6 8 10 12 13]
  Loop path: [3 4 5 6 8 10 12]
  Loop path: [3 4 5 6 8 10 11 12 13]
  Loop path: [3 4 5 6 8 10 11 12]
  Loop path: [3 4 5 6 8 9 10 12 13]
  Loop path: [3 4 5 6 8 9 10 12]
  Loop path: [3 4 5 6 8 9 10 11 12 13]
  Loop path: [3 4 5 6 8 9 10 11 12]
  Loop path: [3 4 5 6 7 8 10 12 13]
  Loop path: [3 4 5 6 7 8 10 12]
  Loop path: [3 4 5 6 7 8 10 11 12 13]
  Loop path: [3 4 5 6 7 8 10 11 12]
  Loop path: [3 4 5 6 7 8 9 10 12 13]
  Loop path: [3 4 5 6 7 8 9 10 12]
  Loop path: [3 4 5 6 7 8 9 10 11 12 13]
  Loop path: [3 4 5 6 7 8 9 10 11 12]
  Looping path: [3 4 5 6 7 8 9 10 11 12]
  Looping path: [3 4 5 6 7 8 9 10 12]
  Looping path: [3 4 5 6 7 8 10 11 12]
  Looping path: [3 4 5 6 7 8 10 12]
  Looping path: [3 4 5 6 8 9 10 11 12]
  Looping path: [3 4 5 6 8 9 10 12]
  Looping path: [3 4 5 6 8 10 11 12]
  Looping path: [3 4 5 6 8 10 12]
  Looping path: [3 4 6 7 8 9 10 11 12]
  Looping path: [3 4 6 7 8 9 10 12]
  Looping path: [3 4 6 7 8 10 11 12]
  Looping path: [3 4 6 7 8 10 12]
  Looping path: [3 4 6 8 9 10 11 12]
  Looping path: [3 4 6 8 9 10 12]
  Looping path: [3 4 6 8 10 11 12]
  Looping path: [3 4 6 8 10 12]
  Path to loop: [0 1 2]
Loop block: [18 19 20]
  Loop path: [18 19 20]
  Loop path: [18 19]
  Looping path: [18 19]
  Path to loop: [0 1 2]
Code paths from the root bblock to a loop bblock and the VM state at the conclusion of the loop bblock:
[0 1 2 3] 26
cost:    26; 
stack:   [i32.load@(pn0), i32.load@(pn0), i32.load@(pn0)]; 
params:  [pn0, pn1]; 
locals:  [i32.load@(pn0), ln3, ln4, ln5, ln6]; 
globals: [5400608]

[0 1 2 18] 26
cost:    26; 
stack:   [i32.load@(pn0), i32.load@(pn0), i32.load@(pn0)]; 
params:  [pn0, pn1]; 
locals:  [i32.load@(pn0), ln3, ln4, ln5, ln6]; 
globals: [5400608]

Simple brif loop condition in bblock 19:	(ln4 + 1) < (i32.load@(pn0))
Loop condition variables: ln4, pn0
SSA of loop:
-t0 = pn0
-t1 = ln4
-t2 = 2
-t3 = t1 shl t2
-ln3 = t3
-t5 = t0 + t3
-t6 = (t5)
-ln5 = t6
-t8 = (t6)
-pn1 = t8
-t10 = pn0
-t11 = 1
-t12 = ln5
-t13 = (t12)
-ln5 = t13
-t15 = ln2
-t16 = ln5
-t17 = 2
-t18 = t16 shl t17
-t19 = t15 + t18
-t20 = 44
-t21 = t19 + t20
-t22 = pn0
-t23 = 0
-t24 = pn1
-t25 = ln2
-t26 = pn1
-t27 = 2
-t28 = t26 shl t27
-t29 = t25 + t28
-t30 = 60
-t31 = t29 + t30
-t32 = ln2
-t33 = ln3
-t34 = t32 + t33
-t35 = 0
-@(t34) = (t35)
-t37 = ln4
-t38 = 1
-t39 = t37 + t38
-ln4 = t39
-t41 = pn0
-t42 = (t41)
-t43 = t39 < t42
Loop variable calculations:
+pn0 = pn0
+ln4 = ln4 + 1
