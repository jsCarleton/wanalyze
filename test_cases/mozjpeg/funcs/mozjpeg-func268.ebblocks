ebb entry:  0
  ebb type:   block
  ebb blocks: [0]
  ebb cost:   6
  ebb exits:  [1]
  ebb succs:  [1]
  1 paths to exit 1
  [0]
ebb entry:  1
  ebb type:   loop
  ebb blocks: [1 2 3 4 5 6 7]
  ebb cost:   (list_max([14*I(rn0, rn0 = rn0, rn0 = rn0); 19*I(rn0, rn0 = rn0, rn0 = rn0)])) + 1
  ebb exits:  [8]
  ebb succs:  [8]
  2 paths to exit 8
  [1 2 5 6 7]
  [1 2 3 6 7]
  2 loop paths
  [1 2 5 6]  [1 2 3 6]
  2 post loop exit paths
  [7]  [7]
ebb entry:  8
  ebb type:   block
  ebb blocks: [8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47]
  ebb cost:   106
  ebb exits:  [48 57 73 131]
  ebb succs:  [131 73 57 48]
  15 paths to exit 48
  [8 9 10 12 15 16 17 18 19 20 21 41 46 47]
  [8 9 10 12 15 16 17 18 19 20 21 22 23 26 27 38 46 47]
  [8 9 10 12 15 16 17 18 19 20 21 22 23 24 27 38 46 47]
  [8 9 10 12 13 16 17 18 19 20 21 41 46 47]
  [8 9 10 12 13 16 17 18 19 20 21 22 23 26 27 38 46 47]
  [8 9 10 12 13 16 17 18 19 20 21 22 23 24 27 38 46 47]
  [8 9 10 16 17 18 19 20 21 41 46 47]
  [8 9 10 16 17 18 19 20 21 22 23 26 27 38 46 47]
  [8 9 10 16 17 18 19 20 21 22 23 24 27 38 46 47]
  [8 9 10 12 15 16 17 18 19 20 21 41 46 47]
  [8 9 10 12 15 16 17 18 19 20 21 22 23 26 27 38 46 47]
  [8 9 10 12 15 16 17 18 19 20 21 22 23 24 27 38 46 47]
  [8 9 10 12 13 16 17 18 19 20 21 41 46 47]
  [8 9 10 12 13 16 17 18 19 20 21 22 23 26 27 38 46 47]
  [8 9 10 12 13 16 17 18 19 20 21 22 23 24 27 38 46 47]
  15 paths to exit 57
  [8 9 10 12 15 16 17 18 19 20 21 41 46 47]
  [8 9 10 12 15 16 17 18 19 20 21 22 23 26 27 38 46 47]
  [8 9 10 12 15 16 17 18 19 20 21 22 23 24 27 38 46 47]
  [8 9 10 12 13 16 17 18 19 20 21 41 46 47]
  [8 9 10 12 13 16 17 18 19 20 21 22 23 26 27 38 46 47]
  [8 9 10 12 13 16 17 18 19 20 21 22 23 24 27 38 46 47]
  [8 9 10 16 17 18 19 20 21 41 46 47]
  [8 9 10 16 17 18 19 20 21 22 23 26 27 38 46 47]
  [8 9 10 16 17 18 19 20 21 22 23 24 27 38 46 47]
  [8 9 10 12 15 16 17 18 19 20 21 41 46 47]
  [8 9 10 12 15 16 17 18 19 20 21 22 23 26 27 38 46 47]
  [8 9 10 12 15 16 17 18 19 20 21 22 23 24 27 38 46 47]
  [8 9 10 12 13 16 17 18 19 20 21 41 46 47]
  [8 9 10 12 13 16 17 18 19 20 21 22 23 26 27 38 46 47]
  [8 9 10 12 13 16 17 18 19 20 21 22 23 24 27 38 46 47]
  45 paths to exit 73
  [8 9 10 12 15 16 17 18 19 20 21 41 46]
  [8 9 10 12 15 16 17 18 19 20 21 22 23 26 27 38 46]
  [8 9 10 12 15 16 17 18 19 20 21 22 23 26 27 38 39]
  [8 9 10 12 15 16 17 18 19 20 21 22 23 26 27 28 29 32 33]
  [8 9 10 12 15 16 17 18 19 20 21 22 23 26 27 28 29 30 33]
  [8 9 10 12 15 16 17 18 19 20 21 22 23 24 27 38 46]
  [8 9 10 12 15 16 17 18 19 20 21 22 23 24 27 38 39]
  [8 9 10 12 15 16 17 18 19 20 21 22 23 24 27 28 29 32 33]
  [8 9 10 12 15 16 17 18 19 20 21 22 23 24 27 28 29 30 33]
  [8 9 10 12 13 16 17 18 19 20 21 41 46]
  [8 9 10 12 13 16 17 18 19 20 21 22 23 26 27 38 46]
  [8 9 10 12 13 16 17 18 19 20 21 22 23 26 27 38 39]
  [8 9 10 12 13 16 17 18 19 20 21 22 23 26 27 28 29 32 33]
  [8 9 10 12 13 16 17 18 19 20 21 22 23 26 27 28 29 30 33]
  [8 9 10 12 13 16 17 18 19 20 21 22 23 24 27 38 46]
  [8 9 10 12 13 16 17 18 19 20 21 22 23 24 27 38 39]
  [8 9 10 12 13 16 17 18 19 20 21 22 23 24 27 28 29 32 33]
  [8 9 10 12 13 16 17 18 19 20 21 22 23 24 27 28 29 30 33]
  [8 9 10 16 17 18 19 20 21 41 46]
  [8 9 10 16 17 18 19 20 21 22 23 26 27 38 46]
  [8 9 10 16 17 18 19 20 21 22 23 26 27 38 39]
  [8 9 10 16 17 18 19 20 21 22 23 26 27 28 29 32 33]
  [8 9 10 16 17 18 19 20 21 22 23 26 27 28 29 30 33]
  [8 9 10 16 17 18 19 20 21 22 23 24 27 38 46]
  [8 9 10 16 17 18 19 20 21 22 23 24 27 38 39]
  [8 9 10 16 17 18 19 20 21 22 23 24 27 28 29 32 33]
  [8 9 10 16 17 18 19 20 21 22 23 24 27 28 29 30 33]
  [8 9 10 12 15 16 17 18 19 20 21 41 46]
  [8 9 10 12 15 16 17 18 19 20 21 22 23 26 27 38 46]
  [8 9 10 12 15 16 17 18 19 20 21 22 23 26 27 38 39]
  [8 9 10 12 15 16 17 18 19 20 21 22 23 26 27 28 29 32 33]
  [8 9 10 12 15 16 17 18 19 20 21 22 23 26 27 28 29 30 33]
  [8 9 10 12 15 16 17 18 19 20 21 22 23 24 27 38 46]
  [8 9 10 12 15 16 17 18 19 20 21 22 23 24 27 38 39]
  [8 9 10 12 15 16 17 18 19 20 21 22 23 24 27 28 29 32 33]
  [8 9 10 12 15 16 17 18 19 20 21 22 23 24 27 28 29 30 33]
  [8 9 10 12 13 16 17 18 19 20 21 41 46]
  [8 9 10 12 13 16 17 18 19 20 21 22 23 26 27 38 46]
  [8 9 10 12 13 16 17 18 19 20 21 22 23 26 27 38 39]
  [8 9 10 12 13 16 17 18 19 20 21 22 23 26 27 28 29 32 33]
  [8 9 10 12 13 16 17 18 19 20 21 22 23 26 27 28 29 30 33]
  [8 9 10 12 13 16 17 18 19 20 21 22 23 24 27 38 46]
  [8 9 10 12 13 16 17 18 19 20 21 22 23 24 27 38 39]
  [8 9 10 12 13 16 17 18 19 20 21 22 23 24 27 28 29 32 33]
  [8 9 10 12 13 16 17 18 19 20 21 22 23 24 27 28 29 30 33]
  50 paths to exit 131
  [8 9 10 12 15 16 17 18 19 20 21 41 42 44]
  [8 9 10 12 15 16 17 18 19 20 21 41 42 43 44]
  [8 9 10 12 15 16 17 18 19 20 21 22 23 26 27 28 29 32 33 34 36]
  [8 9 10 12 15 16 17 18 19 20 21 22 23 26 27 28 29 32 33 34 35 36]
  [8 9 10 12 15 16 17 18 19 20 21 22 23 26 27 28 29 30 33 34 36]
  [8 9 10 12 15 16 17 18 19 20 21 22 23 26 27 28 29 30 33 34 35 36]
  [8 9 10 12 15 16 17 18 19 20 21 22 23 24 27 28 29 32 33 34 36]
  [8 9 10 12 15 16 17 18 19 20 21 22 23 24 27 28 29 32 33 34 35 36]
  [8 9 10 12 15 16 17 18 19 20 21 22 23 24 27 28 29 30 33 34 36]
  [8 9 10 12 15 16 17 18 19 20 21 22 23 24 27 28 29 30 33 34 35 36]
  [8 9 10 12 13 16 17 18 19 20 21 41 42 44]
  [8 9 10 12 13 16 17 18 19 20 21 41 42 43 44]
  [8 9 10 12 13 16 17 18 19 20 21 22 23 26 27 28 29 32 33 34 36]
  [8 9 10 12 13 16 17 18 19 20 21 22 23 26 27 28 29 32 33 34 35 36]
  [8 9 10 12 13 16 17 18 19 20 21 22 23 26 27 28 29 30 33 34 36]
  [8 9 10 12 13 16 17 18 19 20 21 22 23 26 27 28 29 30 33 34 35 36]
  [8 9 10 12 13 16 17 18 19 20 21 22 23 24 27 28 29 32 33 34 36]
  [8 9 10 12 13 16 17 18 19 20 21 22 23 24 27 28 29 32 33 34 35 36]
  [8 9 10 12 13 16 17 18 19 20 21 22 23 24 27 28 29 30 33 34 36]
  [8 9 10 12 13 16 17 18 19 20 21 22 23 24 27 28 29 30 33 34 35 36]
  [8 9 10 16 17 18 19 20 21 41 42 44]
  [8 9 10 16 17 18 19 20 21 41 42 43 44]
  [8 9 10 16 17 18 19 20 21 22 23 26 27 28 29 32 33 34 36]
  [8 9 10 16 17 18 19 20 21 22 23 26 27 28 29 32 33 34 35 36]
  [8 9 10 16 17 18 19 20 21 22 23 26 27 28 29 30 33 34 36]
  [8 9 10 16 17 18 19 20 21 22 23 26 27 28 29 30 33 34 35 36]
  [8 9 10 16 17 18 19 20 21 22 23 24 27 28 29 32 33 34 36]
  [8 9 10 16 17 18 19 20 21 22 23 24 27 28 29 32 33 34 35 36]
  [8 9 10 16 17 18 19 20 21 22 23 24 27 28 29 30 33 34 36]
  [8 9 10 16 17 18 19 20 21 22 23 24 27 28 29 30 33 34 35 36]
  [8 9 10 12 15 16 17 18 19 20 21 41 42 44]
  [8 9 10 12 15 16 17 18 19 20 21 41 42 43 44]
  [8 9 10 12 15 16 17 18 19 20 21 22 23 26 27 28 29 32 33 34 36]
  [8 9 10 12 15 16 17 18 19 20 21 22 23 26 27 28 29 32 33 34 35 36]
  [8 9 10 12 15 16 17 18 19 20 21 22 23 26 27 28 29 30 33 34 36]
  [8 9 10 12 15 16 17 18 19 20 21 22 23 26 27 28 29 30 33 34 35 36]
  [8 9 10 12 15 16 17 18 19 20 21 22 23 24 27 28 29 32 33 34 36]
  [8 9 10 12 15 16 17 18 19 20 21 22 23 24 27 28 29 32 33 34 35 36]
  [8 9 10 12 15 16 17 18 19 20 21 22 23 24 27 28 29 30 33 34 36]
  [8 9 10 12 15 16 17 18 19 20 21 22 23 24 27 28 29 30 33 34 35 36]
  [8 9 10 12 13 16 17 18 19 20 21 41 42 44]
  [8 9 10 12 13 16 17 18 19 20 21 41 42 43 44]
  [8 9 10 12 13 16 17 18 19 20 21 22 23 26 27 28 29 32 33 34 36]
  [8 9 10 12 13 16 17 18 19 20 21 22 23 26 27 28 29 32 33 34 35 36]
  [8 9 10 12 13 16 17 18 19 20 21 22 23 26 27 28 29 30 33 34 36]
  [8 9 10 12 13 16 17 18 19 20 21 22 23 26 27 28 29 30 33 34 35 36]
  [8 9 10 12 13 16 17 18 19 20 21 22 23 24 27 28 29 32 33 34 36]
  [8 9 10 12 13 16 17 18 19 20 21 22 23 24 27 28 29 32 33 34 35 36]
  [8 9 10 12 13 16 17 18 19 20 21 22 23 24 27 28 29 30 33 34 36]
  [8 9 10 12 13 16 17 18 19 20 21 22 23 24 27 28 29 30 33 34 35 36]
ebb entry:  48
  ebb type:   block
  ebb blocks: [48]
  ebb cost:   3
  ebb exits:  [49]
  ebb succs:  [49]
  1 paths to exit 49
  [48]
ebb entry:  49
  ebb type:   loop
  ebb blocks: [49 50 51 52 53 54 55]
  ebb cost:   (list_max([32*I((rn0 + -48) <= 9, rn0 = rn0, rn0 = rn0); 37*I(((i32.load8_u@(i32.load@(pn0))) + -48) <= 9, pn0 = pn0, pn0 = pn0)])) + 1
  ebb exits:  [56]
  ebb succs:  [56]
  2 paths to exit 56
  [49 50 53 54 55]
  [49 50 51 54 55]
  2 loop paths
  [49 50 53 54]  [49 50 51 54]
  2 post loop exit paths
  [55]  [55]
ebb entry:  56
  ebb type:   block
  ebb blocks: [56]
  ebb cost:   4
  ebb exits:  [57]
  ebb succs:  [57]
  1 paths to exit 57
  [56]
ebb entry:  57
  ebb type:   block
  ebb blocks: [57 58]
  ebb cost:   5
  ebb exits:  [59 70]
  ebb succs:  [70 59]
  1 paths to exit 59
  [57 58]
  1 paths to exit 70
  [57 58]
ebb entry:  59
  ebb type:   block
  ebb blocks: [59]
  ebb cost:   8
  ebb exits:  [60]
  ebb succs:  [60]
  1 paths to exit 60
  [59]
ebb entry:  60
  ebb type:   loop
  ebb blocks: [60 61 62 63 64 65 66 67]
  ebb cost:   (list_max([36*I(((lN9 + lN10) * 10) <= ((i64.extend_i32_u(rn0 + -48)) xor -1), rn0 = rn0;lN10 = i64.extend_i32_u(rn0 + -48);lN9 = lN8 * 10, rn0 = rn0;lN10 = i64.extend_i32_u(rn0 + -48);lN9 = (lN9 + lN10) * 10); 41*I(((lN9 + lN10) * 10) <= ((i64.extend_i32_u((i32.load8_u@(i32.load@(pn0))) + -48)) xor -1), pn0 = pn0;lN10 = i64.extend_i32_u(rn0 + -48);lN9 = lN8 * 10, pn0 = pn0;lN10 = i64.extend_i32_u((((pn0))) + -48);lN9 = (lN9 + lN10) * 10)])) + 1
  ebb exits:  [68 70]
  ebb succs:  [70 68]
  2 paths to exit 68
  [60 61 64 65 66 67]
  [60 61 62 65 66 67]
  2 paths to exit 70
  [60 61 64 65]
  [60 61 62 65]
  2 loop paths
  [60 61 64 65 66]  [60 61 62 65 66]
  2 post loop exit paths
  [67]  [67]
ebb entry:  68
  ebb type:   block
  ebb blocks: [68 69]
  ebb cost:   3
  ebb exits:  [70 118]
  ebb succs:  [118 70]
  0 paths to exit 70

  1 paths to exit 118
  [68]
ebb entry:  70
  ebb type:   block
  ebb blocks: [70 71 72]
  ebb cost:   7
  ebb exits:  [73 118 128]
  ebb succs:  [128 118 73]
  0 paths to exit 73

  1 paths to exit 118
  [70]
  1 paths to exit 128
  [70 71]
ebb entry:  73
  ebb type:   block
  ebb blocks: [73 74]
  ebb cost:   14
  ebb exits:  [75 84 97]
  ebb succs:  [97 84 75]
  1 paths to exit 75
  [73 74]
  1 paths to exit 84
  [73 74]
  1 paths to exit 97
  [73]
ebb entry:  75
  ebb type:   block
  ebb blocks: [75]
  ebb cost:   1
  ebb exits:  [76]
  ebb succs:  [76]
  1 paths to exit 76
  [75]
ebb entry:  76
  ebb type:   loop
  ebb blocks: [76 77 78 79 80 81 82]
  ebb cost:   (list_max([29*I((ln3 + (pn1 * ln4)) <= 119304646, ln4 = ((rn0 + 155441)) + ((select(pn1, 10, pn1)) * ln4);pn1 = select(pn1, 10, pn1);ln3 = (rn0 + 155441), ln4 = ln3 + (pn1 * ln4);pn1 = pn1;ln3 = (rn0 + 155441)); 34*I(0, , )])) + 1
  ebb exits:  [83]
  ebb succs:  [83]
  2 paths to exit 83
  [76 77 80 81 82]
  [76 77 78 81 82]
  2 loop paths
  [76 77 80 81]  [76 77 78 81]
  2 post loop exit paths
  [82]  [82]
ebb entry:  83
  ebb type:   block
  ebb blocks: [83]
  ebb cost:   4
  ebb exits:  [84]
  ebb succs:  [84]
  1 paths to exit 84
  [83]
ebb entry:  84
  ebb type:   block
  ebb blocks: [84]
  ebb cost:   4
  ebb exits:  [85 118]
  ebb succs:  [118 85]
  1 paths to exit 85
  [84]
  1 paths to exit 118
  [84]
ebb entry:  85
  ebb type:   block
  ebb blocks: [85]
  ebb cost:   4
  ebb exits:  [86]
  ebb succs:  [86]
  1 paths to exit 86
  [85]
ebb entry:  86
  ebb type:   loop
  ebb blocks: [86 87 88 89 90 91 92 93 94]
  ebb cost:   (list_max([44*I(i64.eqz(i64.load@(ln5)), ln5 = g0 - 16, ln5 = ln5); 49*I(i64.eqz(i64.load@(ln5)), ln5 = g0 - 16, ln5 = ln5)])) + 1
  ebb exits:  [95 118]
  ebb succs:  [118 95]
  2 paths to exit 95
  [86 87 88 91 92 93 94]
  [86 87 88 89 92 93 94]
  3 paths to exit 118
  [86 87 88 91 92]
  [86 87 88 89 92]
  [86]
  2 loop paths
  [86 87 88 91 92 93]  [86 87 88 89 92 93]
  2 post loop exit paths
  [94]  [94]
ebb entry:  95
  ebb type:   block
  ebb blocks: [95 96]
  ebb cost:   1
  ebb exits:  [97 118]
  ebb succs:  [118 97]
  0 paths to exit 97

  1 paths to exit 118
  [95]
ebb entry:  97
  ebb type:   block
  ebb blocks: [97]
  ebb cost:   19
  ebb exits:  [98 107]
  ebb succs:  [107 98]
  1 paths to exit 98
  [97]
  1 paths to exit 107
  [97]
ebb entry:  98
  ebb type:   block
  ebb blocks: [98]
  ebb cost:   1
  ebb exits:  [99]
  ebb succs:  [99]
  1 paths to exit 99
  [98]
ebb entry:  99
  ebb type:   loop
  ebb blocks: [99 100 101 102 103 104 105]
  ebb cost:   (list_max([29*I((ln3 || (ln4 shl ln7)) <= 134217727, ln7 = (((((select(pn1, 10, pn1)) * 23) shr_u 5) && 7) + 155697);ln4 = ((rn0 + 155441)) || (ln4 shl ((((((select(pn1, 10, pn1)) * 23) shr_u 5) && 7) + 155697)));ln3 = (rn0 + 155441), ln7 = ln7;ln4 = ln3 || (ln4 shl ln7);ln3 = (rn0 + 155441)); 34*I(0, , )])) + 1
  ebb exits:  [106]
  ebb succs:  [106]
  2 paths to exit 106
  [99 100 103 104 105]
  [99 100 101 104 105]
  2 loop paths
  [99 100 103 104]  [99 100 101 104]
  2 post loop exit paths
  [105]  [105]
ebb entry:  106
  ebb type:   block
  ebb blocks: [106]
  ebb cost:   4
  ebb exits:  [107]
  ebb succs:  [107]
  1 paths to exit 107
  [106]
ebb entry:  107
  ebb type:   block
  ebb blocks: [107]
  ebb cost:   13
  ebb exits:  [108 118]
  ebb succs:  [118 108]
  1 paths to exit 108
  [107]
  1 paths to exit 118
  [107]
ebb entry:  108
  ebb type:   block
  ebb blocks: [108]
  ebb cost:   1
  ebb exits:  [109]
  ebb succs:  [109]
  1 paths to exit 109
  [108]
ebb entry:  109
  ebb type:   loop
  ebb blocks: [109 110 111 112 113 114 115 116]
  ebb cost:   (list_max([33*I(pn1 > (i32.load8_u@(rn0 + 155441)), rn0 = rn0;pn1 = select(pn1, 10, pn1), rn0 = rn0;pn1 = pn1); 38*I(pn1 > (i32.load8_u@((i32.load8_u@(i32.load@(pn0))) + 155441)), pn0 = pn0;pn1 = select(pn1, 10, pn1), pn0 = pn0;pn1 = pn1)])) + 1
  ebb exits:  [117 118]
  ebb succs:  [118 117]
  2 paths to exit 117
  [109 110 113 114 115 116]
  [109 110 111 114 115 116]
  2 paths to exit 118
  [109 110 113 114]
  [109 110 111 114]
  2 loop paths
  [109 110 113 114 115]  [109 110 111 114 115]
  2 post loop exit paths
  [116]  [116]
ebb entry:  117
  ebb type:   block
  ebb blocks: [117]
  ebb cost:   1
  ebb exits:  [118]
  ebb succs:  [118]
  1 paths to exit 118
  [117]
ebb entry:  118
  ebb type:   block
  ebb blocks: [118]
  ebb cost:   7
  ebb exits:  [119 128]
  ebb succs:  [128 119]
  1 paths to exit 119
  [118]
  1 paths to exit 128
  [118]
ebb entry:  119
  ebb type:   block
  ebb blocks: [119]
  ebb cost:   1
  ebb exits:  [120]
  ebb succs:  [120]
  1 paths to exit 120
  [119]
ebb entry:  120
  ebb type:   loop
  ebb blocks: [120 121 122 123 124 125 126]
  ebb cost:   (list_max([17*I(pn1 > (i32.load8_u@(rn0 + 155441)), rn0 = rn0;pn1 = select(pn1, 10, pn1), rn0 = rn0;pn1 = pn1); 22*I(pn0 > (i32.load8_u@((i32.load8_u@(i32.load@(pn0))) + 155441)), pn0 = pn0;pn0 = pn0, pn0 = pn0;pn0 = pn0)])) + 1
  ebb exits:  [127]
  ebb succs:  [127]
  2 paths to exit 127
  [120 121 124 125 126]
  [120 121 122 125 126]
  2 loop paths
  [120 121 124 125]  [120 121 122 125]
  2 post loop exit paths
  [126]  [126]
ebb entry:  127
  ebb type:   block
  ebb blocks: [127]
  ebb cost:   8
  ebb exits:  [128]
  ebb succs:  [128]
  1 paths to exit 128
  [127]
ebb entry:  128
  ebb type:   block
  ebb blocks: [128 129 130]
  ebb cost:   18
  ebb exits:  [131]
  ebb succs:  [131]
  2 paths to exit 131
  [128 130]
  [128 129 130]
ebb entry:  131
  ebb type:   block
  ebb blocks: [131 132]
  ebb cost:   7
  ebb exits:  [132]
  ebb succs:  []
  1 paths to exit 132
  [131]
