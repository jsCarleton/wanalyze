Loops found in function 165 in these bblocks: 3 11 13 25 27.
Simple br_if conditions in: 13 27.
Simple br conditions in: .
Loop block: [2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45]
  Loop path: [2 3 4 5 6 21 22 38 44 45]
  Loop path: [2 3 4 5 6 21 22 38 44]
  Loop path: [2 3 4 5 6 21 22 38 39 40 42 43 44 45]
  Loop path: [2 3 4 5 6 21 22 38 39 40 42 43 44]
  Loop path: [2 3 4 5 6 21 22 38 39 40 41 43 44 45]
  Loop path: [2 3 4 5 6 21 22 38 39 40 41 43 44]
  Loop path: [2 3 4 5 6 21 22 23 35 36 40 42 43 44 45]
  Loop path: [2 3 4 5 6 21 22 23 35 36 40 42 43 44]
  Loop path: [2 3 4 5 6 21 22 23 35 36 40 41 43 44 45]
  Loop path: [2 3 4 5 6 21 22 23 35 36 40 41 43 44]
  Loop path: [2 3 4 5 6 21 22 23 24 25 30 33 34 36 40 42 43 44 45]
  Loop path: [2 3 4 5 6 21 22 23 24 25 30 33 34 36 40 42 43 44]
  Loop path: [2 3 4 5 6 21 22 23 24 25 30 33 34 36 40 41 43 44 45]
  Loop path: [2 3 4 5 6 21 22 23 24 25 30 33 34 36 40 41 43 44]
  Loop path: [2 3 4 5 6 21 22 23 24 25 30 31]
  Loop path: [2 3 4 5 6 21 22 23 24 25 26 27 28 29 30 33 34 36 40 42 43 44 45]
  Loop path: [2 3 4 5 6 21 22 23 24 25 26 27 28 29 30 33 34 36 40 42 43 44]
  Loop path: [2 3 4 5 6 21 22 23 24 25 26 27 28 29 30 33 34 36 40 41 43 44 45]
  Loop path: [2 3 4 5 6 21 22 23 24 25 26 27 28 29 30 33 34 36 40 41 43 44]
  Loop path: [2 3 4 5 6 21 22 23 24 25 26 27 28 29 30 31]
  Loop path: [2 3 4 5 6 21 22 23 24 25 26 27]
  Loop path: [2 3 4 5 6 7 8 19 38 44 45]
  Loop path: [2 3 4 5 6 7 8 19 38 44]
  Loop path: [2 3 4 5 6 7 8 19 38 39 40 42 43 44 45]
  Loop path: [2 3 4 5 6 7 8 19 38 39 40 42 43 44]
  Loop path: [2 3 4 5 6 7 8 19 38 39 40 41 43 44 45]
  Loop path: [2 3 4 5 6 7 8 19 38 39 40 41 43 44]
  Loop path: [2 3 4 5 6 7 8 9 19 38 44 45]
  Loop path: [2 3 4 5 6 7 8 9 19 38 44]
  Loop path: [2 3 4 5 6 7 8 9 19 38 39 40 42 43 44 45]
  Loop path: [2 3 4 5 6 7 8 9 19 38 39 40 42 43 44]
  Loop path: [2 3 4 5 6 7 8 9 19 38 39 40 41 43 44 45]
  Loop path: [2 3 4 5 6 7 8 9 19 38 39 40 41 43 44]
  Loop path: [2 3 4 5 6 7 8 9 10 11 16 17 18 19 38 44 45]
  Loop path: [2 3 4 5 6 7 8 9 10 11 16 17 18 19 38 44]
  Loop path: [2 3 4 5 6 7 8 9 10 11 16 17 18 19 38 39 40 42 43 44 45]
  Loop path: [2 3 4 5 6 7 8 9 10 11 16 17 18 19 38 39 40 42 43 44]
  Loop path: [2 3 4 5 6 7 8 9 10 11 16 17 18 19 38 39 40 41 43 44 45]
  Loop path: [2 3 4 5 6 7 8 9 10 11 16 17 18 19 38 39 40 41 43 44]
  Loop path: [2 3 4 5 6 7 8 9 10 11 16]
  Loop path: [2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 38 44 45]
  Loop path: [2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 38 44]
  Loop path: [2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 38 39 40 42 43 44 45]
  Loop path: [2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 38 39 40 42 43 44]
  Loop path: [2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 38 39 40 41 43 44 45]
  Loop path: [2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 38 39 40 41 43 44]
  Loop path: [2 3 4 5 6 7 8 9 10 11 12 13 14 15 16]
  Loop path: [2 3 4 5 6 7 8 9 10 11 12 13]
  Looping path: [2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 38 39 40 41 43 44]
  Looping path: [2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 38 39 40 42 43 44]
  Looping path: [2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 38 44]
  Looping path: [2 3 4 5 6 7 8 9 10 11 12 13 14 15 16]
  Looping path: [2 3 4 5 6 7 8 9 10 11 12 13]
  Looping path: [2 3 4 5 6 7 8 9 10 11 16 17 18 19 38 39 40 41 43 44]
  Looping path: [2 3 4 5 6 7 8 9 10 11 16 17 18 19 38 39 40 42 43 44]
  Looping path: [2 3 4 5 6 7 8 9 10 11 16 17 18 19 38 44]
  Looping path: [2 3 4 5 6 7 8 9 10 11 16]
  Looping path: [2 3 4 5 6 7 8 9 19 38 39 40 41 43 44]
  Looping path: [2 3 4 5 6 7 8 9 19 38 39 40 42 43 44]
  Looping path: [2 3 4 5 6 7 8 9 19 38 44]
  Looping path: [2 3 4 5 6 7 8 19 38 39 40 41 43 44]
  Looping path: [2 3 4 5 6 7 8 19 38 39 40 42 43 44]
  Looping path: [2 3 4 5 6 7 8 19 38 44]
  Looping path: [2 3 4 5 6 21 22 23 24 25 26 27 28 29 30 31]
  Looping path: [2 3 4 5 6 21 22 23 24 25 26 27 28 29 30 33 34 36 40 41 43 44]
  Looping path: [2 3 4 5 6 21 22 23 24 25 26 27 28 29 30 33 34 36 40 42 43 44]
  Looping path: [2 3 4 5 6 21 22 23 24 25 26 27]
  Looping path: [2 3 4 5 6 21 22 23 24 25 30 31]
  Looping path: [2 3 4 5 6 21 22 23 24 25 30 33 34 36 40 41 43 44]
  Looping path: [2 3 4 5 6 21 22 23 24 25 30 33 34 36 40 42 43 44]
  Looping path: [2 3 4 5 6 21 22 23 35 36 40 41 43 44]
  Looping path: [2 3 4 5 6 21 22 23 35 36 40 42 43 44]
  Looping path: [2 3 4 5 6 21 22 38 39 40 41 43 44]
  Looping path: [2 3 4 5 6 21 22 38 39 40 42 43 44]
  Looping path: [2 3 4 5 6 21 22 38 44]
  Path to loop: [0 1]
Loop block: [10 11 12 13 14 15 16 17]
  Loop path: [10 11 16 17]
  Loop path: [10 11 16]
  Loop path: [10 11 12 13 14 15 16 17]
  Loop path: [10 11 12 13 14 15 16]
  Loop path: [10 11 12 13]
  Looping path: [10 11 12 13 14 15 16]
  Looping path: [10 11 12 13]
  Looping path: [10 11 16]
  Path to loop: [0 1 2 3 4 5 6 7 8 9]
Loop block: [12 13 14]
  Loop path: [12 13 14]
  Loop path: [12 13]
  Looping path: [12 13]
  Path to loop: [0 1 2 3 4 5 6 7 8 9 10 11]
Loop block: [24 25 26 27 28 29 30 31 32 33]
  Loop path: [24 25 30 33]
  Loop path: [24 25 30 31]
  Loop path: [24 25 26 27 28 29 30 33]
  Loop path: [24 25 26 27 28 29 30 31]
  Loop path: [24 25 26 27]
  Looping path: [24 25 26 27 28 29 30 31]
  Looping path: [24 25 26 27]
  Looping path: [24 25 30 31]
  Path to loop: [0 1 2 3 4 5 6 21 22 23]
Loop block: [26 27 28]
  Loop path: [26 27 28]
  Loop path: [26 27]
  Looping path: [26 27]
  Path to loop: [0 1 2 3 4 5 6 21 22 23 24 25]
Code paths from the root bblock to a loop bblock and the VM state at the conclusion of the loop bblock:
[0 1 2] 18
cost:    18; 
stack:   []; 
params:  [pn0, pn1, pn2, pn3, pn4, pn5, pn6]; 
locals:  [ln7, i32.load@(pn0), ln9, ln10, ln11, ln12, ln13, (i32.load@(pn0)) * 3, (i32.load@(pn0)) + 8]; 
globals: [5400608]

Simple brif loop condition in bblock 13:	ln7 < (i32.load@(pn0))
Loop condition variables: ln7, pn0
SSA of loop:
-t0 = ln12
-t1 = (t0)
-ln9 = t1
-t3 = 0
-t4 = ln9
-t5 = 0
-t6 = ln7
-t7 = t5 - t6
-t8 = 1
-t9 = pn0
-t10 = (t9)
-t11 = ln7
-t12 = pn0
-t13 = (t12)
-ln9 = t13
-t15 = t11 < t13
-ln13 = t15
-t17 = ln7
-t18 = 1
-t19 = t17 + t18
-ln7 = t19
-t21 = ln13
Loop variable calculations:
+pn0 = pn0
+ln7 = ln7 + 1
Simple brif loop condition in bblock 27:	(ln7 + 1) != ln9
Loop condition variables: ln7, ln9
SSA of loop:
-t0 = ln10
-t1 = ln13
-t2 = ln10
-t3 = ln7
-t4 = 1
-t5 = ln12
-t6 = ln7
-t7 = 1
-t8 = t6 + t7
-ln7 = t8
-t10 = ln9
-t11 = t8 != t10
Loop variable calculations:
+ln9 = ln9
+ln7 = ln7 + 1
