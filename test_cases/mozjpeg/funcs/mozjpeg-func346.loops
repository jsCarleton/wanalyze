Loops found in function 346 in these bblocks: 6 16 27.
Simple br_if conditions in: 16 27.
Simple br conditions in: .
Loop block: [5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31]
  Loop path: [5 6 7 10 11 14 19 20 23 24 25 30 31]
  Loop path: [5 6 7 10 11 14 19 20 23 24 25 30]
  Loop path: [5 6 7 10 11 14 19 20 23 24 25 26 27 28 29 30 31]
  Loop path: [5 6 7 10 11 14 19 20 23 24 25 26 27 28 29 30]
  Loop path: [5 6 7 10 11 14 19 20 23 24 25 26 27]
  Loop path: [5 6 7 10 11 14 19 20 21 25 30 31]
  Loop path: [5 6 7 10 11 14 19 20 21 25 30]
  Loop path: [5 6 7 10 11 14 19 20 21 25 26 27 28 29 30 31]
  Loop path: [5 6 7 10 11 14 19 20 21 25 26 27 28 29 30]
  Loop path: [5 6 7 10 11 14 19 20 21 25 26 27]
  Loop path: [5 6 7 10 11 14 19 20 21 22 24 25 30 31]
  Loop path: [5 6 7 10 11 14 19 20 21 22 24 25 30]
  Loop path: [5 6 7 10 11 14 19 20 21 22 24 25 26 27 28 29 30 31]
  Loop path: [5 6 7 10 11 14 19 20 21 22 24 25 26 27 28 29 30]
  Loop path: [5 6 7 10 11 14 19 20 21 22 24 25 26 27]
  Loop path: [5 6 7 10 11 14 15 16 17 18 19 20 23 24 25 30 31]
  Loop path: [5 6 7 10 11 14 15 16 17 18 19 20 23 24 25 30]
  Loop path: [5 6 7 10 11 14 15 16 17 18 19 20 23 24 25 26 27 28 29 30 31]
  Loop path: [5 6 7 10 11 14 15 16 17 18 19 20 23 24 25 26 27 28 29 30]
  Loop path: [5 6 7 10 11 14 15 16 17 18 19 20 23 24 25 26 27]
  Loop path: [5 6 7 10 11 14 15 16 17 18 19 20 21 25 30 31]
  Loop path: [5 6 7 10 11 14 15 16 17 18 19 20 21 25 30]
  Loop path: [5 6 7 10 11 14 15 16 17 18 19 20 21 25 26 27 28 29 30 31]
  Loop path: [5 6 7 10 11 14 15 16 17 18 19 20 21 25 26 27 28 29 30]
  Loop path: [5 6 7 10 11 14 15 16 17 18 19 20 21 25 26 27]
  Loop path: [5 6 7 10 11 14 15 16 17 18 19 20 21 22 24 25 30 31]
  Loop path: [5 6 7 10 11 14 15 16 17 18 19 20 21 22 24 25 30]
  Loop path: [5 6 7 10 11 14 15 16 17 18 19 20 21 22 24 25 26 27 28 29 30 31]
  Loop path: [5 6 7 10 11 14 15 16 17 18 19 20 21 22 24 25 26 27 28 29 30]
  Loop path: [5 6 7 10 11 14 15 16 17 18 19 20 21 22 24 25 26 27]
  Loop path: [5 6 7 10 11 14 15 16]
  Loop path: [5 6 7 10 11 12 19 20 23 24 25 30 31]
  Loop path: [5 6 7 10 11 12 19 20 23 24 25 30]
  Loop path: [5 6 7 10 11 12 19 20 23 24 25 26 27 28 29 30 31]
  Loop path: [5 6 7 10 11 12 19 20 23 24 25 26 27 28 29 30]
  Loop path: [5 6 7 10 11 12 19 20 23 24 25 26 27]
  Loop path: [5 6 7 10 11 12 19 20 21 25 30 31]
  Loop path: [5 6 7 10 11 12 19 20 21 25 30]
  Loop path: [5 6 7 10 11 12 19 20 21 25 26 27 28 29 30 31]
  Loop path: [5 6 7 10 11 12 19 20 21 25 26 27 28 29 30]
  Loop path: [5 6 7 10 11 12 19 20 21 25 26 27]
  Loop path: [5 6 7 10 11 12 19 20 21 22 24 25 30 31]
  Loop path: [5 6 7 10 11 12 19 20 21 22 24 25 30]
  Loop path: [5 6 7 10 11 12 19 20 21 22 24 25 26 27 28 29 30 31]
  Loop path: [5 6 7 10 11 12 19 20 21 22 24 25 26 27 28 29 30]
  Loop path: [5 6 7 10 11 12 19 20 21 22 24 25 26 27]
  Loop path: [5 6 7 8 30 31]
  Loop path: [5 6 7 8 30]
Loop block: [15 16 17]
  Loop path: [15 16 17]
  Loop path: [15 16]
Loop block: [26 27 28]
  Loop path: [26 27 28]
  Loop path: [26 27]
Code paths from the root bblock to a loop bblock and the VM state at the conclusion of the loop bblock:
[0 1 2 3 4 5]
cost:    41; 
stack:   [i32.load@(pn0), i32.load@(pn0), i32.load@(pn0)]; 
params:  [pn0, pn1]; 
locals:  [i32.load@(pn0), ln3, ln4, i32.load@(pn0), ln6, ln7, ln8, ln9, ln10]; 
globals: [5400608]

[0 1 3 4 5]
cost:    23; 
stack:   [i32.load@(pn0)]; 
params:  [pn0, pn1]; 
locals:  [i32.load@(i32.load@(pn0)), ln3, ln4, i32.load@(pn0), ln6, ln7, ln8, ln9, ln10]; 
globals: [5400608]

[0 4 5]
cost:    12; 
stack:   []; 
params:  [pn0, pn1]; 
locals:  [ln2, ln3, ln4, i32.load@(pn0), ln6, ln7, ln8, ln9, ln10]; 
globals: [5400608]

Simple brif loop condition in bblock 16:	ln6 shr_s 1
Loop condition variables: ln6
SSA of loop:
-t0 = pn0
-t1 = ln3
-t2 = 1
-t3 = ln3
-t4 = 1
-t5 = t3 + t4
-ln3 = t5
-t7 = ln2
-t8 = 1
-t9 = t7 shl t8
-ln2 = t9
-t11 = ln6
-t12 = 1
-t13 = t11 shr_s t12
-ln6 = t13
Loop variable calculations:
+ln6 = ln6 shr_s 1
Simple brif loop condition in bblock 27:	ln2 shr_s 1
Loop condition variables: ln2
SSA of loop:
-t0 = pn0
-t1 = ln3
-t2 = ln2
-t3 = ln4
-t4 = t2 && t3
-t5 = 0
-t6 = t4 != t5
-t7 = ln2
-t8 = 1
-t9 = t7 shr_s t8
-ln2 = t9
Loop variable calculations:
+ln2 = ln2 shr_s 1
