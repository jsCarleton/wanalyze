ebb entry:  0
  ebb type:   block
  ebb blocks: [0 1]
  ebb cost:   6
  ebb exits:  [2 47]
  ebb succs:  [47 2]
  1 paths to exit 2
  [0 1]
  1 paths to exit 47
  [0 1]
ebb entry:  2
  ebb type:   block
  ebb blocks: [2]
  ebb cost:   12
  ebb exits:  [3]
  ebb succs:  [3]
  1 paths to exit 3
  [2]
ebb entry:  3
  ebb type:   loop
  ebb blocks: [3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45]
  ebb cost:   (list_max([29*I((i32.load@(pn5)) < pn6, pn6 = pn6;pn5 = pn5, pn6 = pn6;pn5 = pn5); 74*I((i32.load@(pn5)) < pn6, pn6 = pn6;pn5 = pn5, pn6 = pn6;pn5 = pn5); 77*I((i32.load@(pn5)) < pn6, pn6 = pn6;pn5 = pn5, pn6 = pn6;pn5 = pn5); 82*I((i32.load@(pn5)) < pn6, pn6 = pn6;pn5 = pn5, pn6 = pn6;pn5 = pn5); 85*I((i32.load@(pn5)) < pn6, pn6 = pn6;pn5 = pn5, pn6 = pn6;pn5 = pn5); 96*I((i32.load@(pn5)) < pn6, pn6 = pn6;pn5 = pn5, pn6 = pn6;pn5 = pn5); 99*I((i32.load@(pn5)) < pn6, pn6 = pn6;pn5 = pn5, pn6 = pn6;pn5 = pn5); 130*I((i32.load@(pn5)) < pn6, pn6 = pn6;pn5 = pn5, pn6 = pn6;pn5 = pn5); 133*I((i32.load@(pn5)) < pn6, pn6 = pn6;pn5 = pn5, pn6 = pn6;pn5 = pn5); 76*I((i32.load@(pn5)) < pn6, pn6 = pn6;pn5 = pn5, pn6 = pn6;pn5 = pn5); 121*I((i32.load@(pn5)) < pn6, pn6 = pn6;pn5 = pn5, pn6 = pn6;pn5 = pn5); 124*I((i32.load@(pn5)) < pn6, pn6 = pn6;pn5 = pn5, pn6 = pn6;pn5 = pn5); 82*I((i32.load@(pn5)) < pn6, pn6 = pn6;pn5 = pn5, pn6 = pn6;pn5 = pn5); 127*I((i32.load@(pn5)) < pn6, pn6 = pn6;pn5 = pn5, pn6 = pn6;pn5 = pn5); 130*I((i32.load@(pn5)) < pn6, pn6 = pn6;pn5 = pn5, pn6 = pn6;pn5 = pn5); 101*I((i32.load@(pn5)) < pn6, pn6 = pn6;pn5 = pn5, pn6 = pn6;pn5 = pn5); 146*I((i32.load@(pn5)) < pn6, pn6 = pn6;pn5 = pn5, pn6 = pn6;pn5 = pn5); 149*I((i32.load@(pn5)) < pn6, pn6 = pn6;pn5 = pn5, pn6 = pn6;pn5 = pn5); 139*I((i32.load@(pn5)) < pn6, pn6 = pn6;pn5 = pn5, pn6 = pn6;pn5 = pn5); 184*I((i32.load@(pn5)) < pn6, pn6 = pn6;pn5 = pn5, pn6 = pn6;pn5 = pn5); 187*I((i32.load@(pn5)) < pn6, pn6 = pn6;pn5 = pn5, pn6 = pn6;pn5 = pn5)])) + 1
  ebb exits:  [46 47]
  ebb succs:  [47 46]
  21 paths to exit 46
  [3 4 5 6 21 22 38 44 45]
  [3 4 5 6 21 22 38 39 40 42 43 44 45]
  [3 4 5 6 21 22 38 39 40 41 43 44 45]
  [3 4 5 6 21 22 23 35 36 40 42 43 44 45]
  [3 4 5 6 21 22 23 35 36 40 41 43 44 45]
  [3 4 5 6 21 22 23 24 25 30 33 34 36 40 42 43 44 45]
  [3 4 5 6 21 22 23 24 25 30 33 34 36 40 41 43 44 45]
  [3 4 5 6 21 22 23 24 25 26 27 28 29 30 33 34 36 40 42 43 44 45]
  [3 4 5 6 21 22 23 24 25 26 27 28 29 30 33 34 36 40 41 43 44 45]
  [3 4 5 6 7 8 19 38 44 45]
  [3 4 5 6 7 8 19 38 39 40 42 43 44 45]
  [3 4 5 6 7 8 19 38 39 40 41 43 44 45]
  [3 4 5 6 7 8 9 19 38 44 45]
  [3 4 5 6 7 8 9 19 38 39 40 42 43 44 45]
  [3 4 5 6 7 8 9 19 38 39 40 41 43 44 45]
  [3 4 5 6 7 8 9 10 11 16 17 18 19 38 44 45]
  [3 4 5 6 7 8 9 10 11 16 17 18 19 38 39 40 42 43 44 45]
  [3 4 5 6 7 8 9 10 11 16 17 18 19 38 39 40 41 43 44 45]
  [3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 38 44 45]
  [3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 38 39 40 42 43 44 45]
  [3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 38 39 40 41 43 44 45]
  1 paths to exit 47
  [3 4 5 6 21]
  21 loop paths
  [3 4 5 6 21 22 38 44]  [3 4 5 6 21 22 38 39 40 42 43 44]  [3 4 5 6 21 22 38 39 40 41 43 44]  [3 4 5 6 21 22 23 35 36 40 42 43 44]  [3 4 5 6 21 22 23 35 36 40 41 43 44]  [3 4 5 6 21 22 23 24 25 30 33 34 36 40 42 43 44]  [3 4 5 6 21 22 23 24 25 30 33 34 36 40 41 43 44]  [3 4 5 6 21 22 23 24 25 26 27 28 29 30 33 34 36 40 42 43 44]  [3 4 5 6 21 22 23 24 25 26 27 28 29 30 33 34 36 40 41 43 44]  [3 4 5 6 7 8 19 38 44]  [3 4 5 6 7 8 19 38 39 40 42 43 44]  [3 4 5 6 7 8 19 38 39 40 41 43 44]  [3 4 5 6 7 8 9 19 38 44]  [3 4 5 6 7 8 9 19 38 39 40 42 43 44]  [3 4 5 6 7 8 9 19 38 39 40 41 43 44]  [3 4 5 6 7 8 9 10 11 16 17 18 19 38 44]  [3 4 5 6 7 8 9 10 11 16 17 18 19 38 39 40 42 43 44]  [3 4 5 6 7 8 9 10 11 16 17 18 19 38 39 40 41 43 44]  [3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 38 44]  [3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 38 39 40 42 43 44]  [3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 38 39 40 41 43 44]
  21 post loop exit paths
  [45]  [45]  [45]  [45]  [45]  [45]  [45]  [45]  [45]  [45]  [45]  [45]  [45]  [45]  [45]  [45]  [45]  [45]  [45]  [45]  [45]
  ebb entry:  3
    ebb type:   block
    ebb blocks: [3 4 5 6 7 8 9]
    ebb cost:   50
    ebb exits:  [10 19 21]
    ebb succs:  [21 19 10]
    1 paths to exit 10
    [3 4 5 6 7 8 9]
    2 paths to exit 19
    [3 4 5 6 7 8 9]
    [3 4 5 6 7 8]
    1 paths to exit 21
    [3 4 5 6]
  ebb entry:  10
    ebb type:   block
    ebb blocks: [10]
    ebb cost:   6
    ebb exits:  [11]
    ebb succs:  [11]
    1 paths to exit 11
    [10]
  ebb entry:  11
    ebb type:   loop
    ebb blocks: [11 12 13 14 15 16 17]
    ebb cost:   (list_max([11*I((ln10 + 1) < ln7, ln7 = (pn0);ln10 = 0, ln7 = ln7;ln10 = ln10 + 1); 49*I((ln10 + 1) < (i32.load@(pn0)), pn0 = pn0;ln10 = 0, pn0 = pn0;ln10 = ln10 + 1)])) + 1
    ebb exits:  [18]
    ebb succs:  [18]
    2 paths to exit 18
    [11 16 17]
    [11 12 13 14 15 16 17]
    2 loop paths
    [11 16]    [11 12 13 14 15 16]
    2 post loop exit paths
    [17]    [17]
    ebb entry:  11
      ebb type:   block
      ebb blocks: [11]
      ebb cost:   4
      ebb exits:  [12 16]
      ebb succs:  [16 12]
      1 paths to exit 12
      [11]
      1 paths to exit 16
      [11]
    ebb entry:  12
      ebb type:   block
      ebb blocks: [12]
      ebb cost:   33
      ebb exits:  [13]
      ebb succs:  [13]
      2 paths to exit 13
      [12 13]
      [12]
    ebb entry:  13
      ebb type:   loop
      ebb blocks: [13 14]
      ebb cost:   24*I(ln7 < (i32.load@(pn0)), pn0 = pn0;ln7 = 1 + 1, pn0 = pn0;ln7 = ln7 + 1) + 1
      ebb exits:  [15]
      ebb succs:  [15]
      1 paths to exit 15
      [13 14]
      1 loop paths
      [13]
      1 post loop exit paths
      [14]
    ebb entry:  15
      ebb type:   block
      ebb blocks: [15]
      ebb cost:   4
      ebb exits:  [16]
      ebb succs:  [16]
      1 paths to exit 16
      [15]
    ebb entry:  16
      ebb type:   block
      ebb blocks: [16 17]
      ebb cost:   8
      ebb exits:  [11 18]
      ebb succs:  [11]
      1 paths to exit 11
      [16]
      1 paths to exit 18
      [16 17]
  ebb entry:  18
    ebb type:   block
    ebb blocks: [18]
    ebb cost:   1
    ebb exits:  [19]
    ebb succs:  [19]
    1 paths to exit 19
    [18]
  ebb entry:  19
    ebb type:   block
    ebb blocks: [19 20]
    ebb cost:   23
    ebb exits:  [21 38]
    ebb succs:  [38 21]
    0 paths to exit 21

    1 paths to exit 38
    [19]
  ebb entry:  21
    ebb type:   block
    ebb blocks: [21 22 23]
    ebb cost:   20
    ebb exits:  [24 35 38 47]
    ebb succs:  [38 35 24]
    1 paths to exit 24
    [21 22 23]
    1 paths to exit 35
    [21 22 23]
    1 paths to exit 38
    [21 22]
    1 paths to exit 47
    [21]
  ebb entry:  24
    ebb type:   block
    ebb blocks: [24]
    ebb cost:   1
    ebb exits:  [25]
    ebb succs:  [25]
    1 paths to exit 25
    [24]
  ebb entry:  25
    ebb type:   loop
    ebb blocks: [25 26 27 28 29 30 31 32 33]
    ebb cost:   (list_max([18*I((ln11 + 1) < ln10, ln10 = (pn0);ln11 = 0 + 1, ln10 = ln10;ln11 = ln11 + 1); 52*I((ln11 + 1) < (i32.load@(pn0)), pn0 = pn0;ln11 = 0 + 1, pn0 = pn0;ln11 = ln11 + 1)])) + 1
    ebb exits:  [34]
    ebb succs:  [34]
    2 paths to exit 34
    [25 30 33]
    [25 26 27 28 29 30 33]
    2 loop paths
    [25 30 31]    [25 26 27 28 29 30 31]
    2 post loop exit paths
    [33]    [33]
    ebb entry:  25
      ebb type:   block
      ebb blocks: [25]
      ebb cost:   4
      ebb exits:  [26 30]
      ebb succs:  [30 26]
      1 paths to exit 26
      [25]
      1 paths to exit 30
      [25]
    ebb entry:  26
      ebb type:   block
      ebb blocks: [26]
      ebb cost:   29
      ebb exits:  [27]
      ebb succs:  [27]
      2 paths to exit 27
      [26 27]
      [26]
    ebb entry:  27
      ebb type:   loop
      ebb blocks: [27 28]
      ebb cost:   14*I((ln7 + 1) != ln9, ln9 = ln9;ln7 = ln7 + 1, ln9 = ln9;ln7 = ln7 + 1) + 1
      ebb exits:  [29]
      ebb succs:  [29]
      1 paths to exit 29
      [27 28]
      1 loop paths
      [27]
      1 post loop exit paths
      [28]
    ebb entry:  29
      ebb type:   block
      ebb blocks: [29]
      ebb cost:   4
      ebb exits:  [30]
      ebb succs:  [30]
      1 paths to exit 30
      [29]
    ebb entry:  30
      ebb type:   block
      ebb blocks: [30 31 32 33]
      ebb cost:   8
      ebb exits:  [25 34]
      ebb succs:  [25]
      0 paths to exit 25

      1 paths to exit 34
      [30 33]
  ebb entry:  34
    ebb type:   block
    ebb blocks: [34]
    ebb cost:   3
    ebb exits:  [36]
    ebb succs:  [36]
    1 paths to exit 36
    [34]
  ebb entry:  35
    ebb type:   block
    ebb blocks: [35]
    ebb cost:   2
    ebb exits:  [36]
    ebb succs:  [36]
    1 paths to exit 36
    [35]
  ebb entry:  36
    ebb type:   block
    ebb blocks: [36 37]
    ebb cost:   2
    ebb exits:  [38 40]
    ebb succs:  [40 38]
    0 paths to exit 38

    1 paths to exit 40
    [36]
  ebb entry:  38
    ebb type:   block
    ebb blocks: [38 39]
    ebb cost:   5
    ebb exits:  [40 44]
    ebb succs:  [44 40]
    1 paths to exit 40
    [38 39]
    1 paths to exit 44
    [38]
  ebb entry:  40
    ebb type:   block
    ebb blocks: [40 41 42 43]
    ebb cost:   47
    ebb exits:  [44]
    ebb succs:  [44]
    2 paths to exit 44
    [40 42 43]
    [40 41 43]
  ebb entry:  44
    ebb type:   block
    ebb blocks: [44 45]
    ebb cost:   6
    ebb exits:  [3 46]
    ebb succs:  [3]
    1 paths to exit 3
    [44]
    1 paths to exit 46
    [44 45]
ebb entry:  46
  ebb type:   block
  ebb blocks: [46]
  ebb cost:   1
  ebb exits:  [47]
  ebb succs:  [47]
  1 paths to exit 47
  [46]
ebb entry:  47
  ebb type:   block
  ebb blocks: [47 48]
  ebb cost:   1
  ebb exits:  [48]
  ebb succs:  []
  1 paths to exit 48
  [47]
