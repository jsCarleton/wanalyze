ebb entry:  0
  ebb type:   block
  ebb blocks: [0 1 2 3 4 5 6 7 8 9 10 11 12 13 14]
  ebb cost:   53
  ebb exits:  [15 36 53]
  ebb succs:  [53 36 15]
  5 paths to exit 15
  [0 1 7 10 12 13 14]
  [0 1 7 10 11 12 13 14]
  [0 1 7 8 12 13 14]
  [0 1 2 5 12 13 14]
  [0 1 2 3 12 13 14]
  5 paths to exit 36
  [0 1 7 10 12 13 14]
  [0 1 7 10 11 12 13 14]
  [0 1 7 8 12 13 14]
  [0 1 2 5 12 13 14]
  [0 1 2 3 12 13 14]
  5 paths to exit 53
  [0 1 7 10 12 13]
  [0 1 7 10 11 12 13]
  [0 1 7 8 12 13]
  [0 1 2 5 12 13]
  [0 1 2 3 12 13]
ebb entry:  15
  ebb type:   block
  ebb blocks: [15]
  ebb cost:   1
  ebb exits:  [16]
  ebb succs:  [16]
  1 paths to exit 16
  [15]
ebb entry:  16
  ebb type:   loop
  ebb blocks: [16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33]
  ebb cost:   (list_max([25*I((ln6 + 1) < (i32.load@(pn0)), pn0 = pn0;ln6 = ln6, pn0 = pn0;ln6 = ln6 + 1); 57*I((ln6 + 1) < (i32.load@(pn0)), pn0 = pn0;ln6 = ln6, pn0 = pn0;ln6 = ln6 + 1); 157*I((ln6 + 1) < (i32.load@(pn0)), pn0 = pn0;ln6 = ln6, pn0 = pn0;ln6 = ln6 + 1); 68*I((ln6 + 1) < (i32.load@(pn0)), pn0 = pn0;ln6 = ln6, pn0 = pn0;ln6 = ln6 + 1); 168*I((ln6 + 1) < (i32.load@(pn0)), pn0 = pn0;ln6 = ln6, pn0 = pn0;ln6 = ln6 + 1); 71*I((ln6 + 1) < (i32.load@(pn0)), pn0 = pn0;ln6 = ln6, pn0 = pn0;ln6 = ln6 + 1); 171*I((ln6 + 1) < (i32.load@(pn0)), pn0 = pn0;ln6 = ln6, pn0 = pn0;ln6 = ln6 + 1); 82*I((ln6 + 1) < (i32.load@(pn0)), pn0 = pn0;ln6 = ln6, pn0 = pn0;ln6 = ln6 + 1); 182*I((ln6 + 1) < (i32.load@(pn0)), pn0 = pn0;ln6 = ln6, pn0 = pn0;ln6 = ln6 + 1); 43*I((ln6 + 1) < (i32.load@(pn0)), pn0 = pn0;ln6 = ln6, pn0 = pn0;ln6 = ln6 + 1)])) + 1
  ebb exits:  [34 53 55]
  ebb succs:  [55 53 34]
  0 paths to exit 34

  10 paths to exit 53
  [16 17 30 31]
  [16 17 18 21 23 25 30 31]
  [16 17 18 21 23 25 26 27 28 29 30 31]
  [16 17 18 21 23 24 25 30 31]
  [16 17 18 21 23 24 25 26 27 28 29 30 31]
  [16 17 18 21 22 23 25 30 31]
  [16 17 18 21 22 23 25 26 27 28 29 30 31]
  [16 17 18 21 22 23 24 25 30 31]
  [16 17 18 21 22 23 24 25 26 27 28 29 30 31]
  [16 17 18 19 30 31]
  0 paths to exit 55

  10 loop paths
  [16 17 30]  [16 17 18 21 23 25 30]  [16 17 18 21 23 25 26 27 28 29 30]  [16 17 18 21 23 24 25 30]  [16 17 18 21 23 24 25 26 27 28 29 30]  [16 17 18 21 22 23 25 30]  [16 17 18 21 22 23 25 26 27 28 29 30]  [16 17 18 21 22 23 24 25 30]  [16 17 18 21 22 23 24 25 26 27 28 29 30]  [16 17 18 19 30]
  10 post loop exit paths
  [31]  [31]  [31]  [31]  [31]  [31]  [31]  [31]  [31]  [31]
  ebb entry:  16
    ebb type:   block
    ebb blocks: [16 17 18 19 20 21 22 23 24 25]
    ebb cost:   74
    ebb exits:  [26 30]
    ebb succs:  [30 26]
    4 paths to exit 26
    [16 17 18 21 23 25]
    [16 17 18 21 23 24 25]
    [16 17 18 21 22 23 25]
    [16 17 18 21 22 23 24 25]
    6 paths to exit 30
    [16 17 18 21 23 25]
    [16 17 18 21 23 24 25]
    [16 17 18 21 22 23 25]
    [16 17 18 21 22 23 24 25]
    [16 17 18 19]
    [16 17]
  ebb entry:  26
    ebb type:   block
    ebb blocks: [26]
    ebb cost:   98
    ebb exits:  [27]
    ebb succs:  [27]
    2 paths to exit 27
    [26 27]
    [26]
  ebb entry:  27
    ebb type:   loop
    ebb blocks: [27 28]
    ebb cost:   92*I((ln5 + 1) != 16, ln5 = 0 + 1, ln5 = ln5 + 1) + 1
    ebb exits:  [29]
    ebb succs:  [29]
    1 paths to exit 29
    [27 28]
    1 loop paths
    [27]
    1 post loop exit paths
    [28]
  ebb entry:  29
    ebb type:   block
    ebb blocks: [29]
    ebb cost:   1
    ebb exits:  [30]
    ebb succs:  [30]
    1 paths to exit 30
    [29]
  ebb entry:  30
    ebb type:   block
    ebb blocks: [30 31 32 33]
    ebb cost:   9
    ebb exits:  [16 34 53 55]
    ebb succs:  [16]
    1 paths to exit 16
    [30]
    0 paths to exit 34

    1 paths to exit 53
    [30 31]
    0 paths to exit 55

ebb entry:  34
  ebb type:   block
  ebb blocks: [34 35]
  ebb cost:   1
  ebb exits:  [36 55]
  ebb succs:  [55 36]
  0 paths to exit 36

  1 paths to exit 55
  [34]
ebb entry:  36
  ebb type:   block
  ebb blocks: [36]
  ebb cost:   1
  ebb exits:  [37]
  ebb succs:  [37]
  1 paths to exit 37
  [36]
ebb entry:  37
  ebb type:   loop
  ebb blocks: [37 38 39 40 41 42 43 44 45 46 47 48 49 50 51]
  ebb cost:   (list_max([41*I((ln6 + 1) < (i32.load@(pn0)), pn0 = pn0;ln6 = ln6, pn0 = pn0;ln6 = ln6 + 1); 55*I((ln6 + 1) < (i32.load@(pn0)), pn0 = pn0;ln6 = ln6, pn0 = pn0;ln6 = ln6 + 1); 155*I((ln6 + 1) < (i32.load@(pn0)), pn0 = pn0;ln6 = ln6, pn0 = pn0;ln6 = ln6 + 1); 66*I((ln6 + 1) < (i32.load@(pn0)), pn0 = pn0;ln6 = ln6, pn0 = pn0;ln6 = ln6 + 1); 166*I((ln6 + 1) < (i32.load@(pn0)), pn0 = pn0;ln6 = ln6, pn0 = pn0;ln6 = ln6 + 1); 69*I((ln6 + 1) < (i32.load@(pn0)), pn0 = pn0;ln6 = ln6, pn0 = pn0;ln6 = ln6 + 1); 169*I((ln6 + 1) < (i32.load@(pn0)), pn0 = pn0;ln6 = ln6, pn0 = pn0;ln6 = ln6 + 1); 80*I((ln6 + 1) < (i32.load@(pn0)), pn0 = pn0;ln6 = ln6, pn0 = pn0;ln6 = ln6 + 1); 180*I((ln6 + 1) < (i32.load@(pn0)), pn0 = pn0;ln6 = ln6, pn0 = pn0;ln6 = ln6 + 1)])) + 1
  ebb exits:  [52]
  ebb succs:  [52]
  9 paths to exit 52
  [37 38 49 50 51]
  [37 38 39 41 43 50 51]
  [37 38 39 41 43 44 45 46 47 50 51]
  [37 38 39 41 42 43 50 51]
  [37 38 39 41 42 43 44 45 46 47 50 51]
  [37 38 39 40 41 43 50 51]
  [37 38 39 40 41 43 44 45 46 47 50 51]
  [37 38 39 40 41 42 43 50 51]
  [37 38 39 40 41 42 43 44 45 46 47 50 51]
  9 loop paths
  [37 38 49 50]  [37 38 39 41 43 50]  [37 38 39 41 43 44 45 46 47 50]  [37 38 39 41 42 43 50]  [37 38 39 41 42 43 44 45 46 47 50]  [37 38 39 40 41 43 50]  [37 38 39 40 41 43 44 45 46 47 50]  [37 38 39 40 41 42 43 50]  [37 38 39 40 41 42 43 44 45 46 47 50]
  9 post loop exit paths
  [51]  [51]  [51]  [51]  [51]  [51]  [51]  [51]  [51]
  ebb entry:  37
    ebb type:   block
    ebb blocks: [37 38 39 40 41 42 43]
    ebb cost:   72
    ebb exits:  [44 49 50]
    ebb succs:  [50 49 44]
    4 paths to exit 44
    [37 38 39 41 43]
    [37 38 39 41 42 43]
    [37 38 39 40 41 43]
    [37 38 39 40 41 42 43]
    1 paths to exit 49
    [37 38]
    4 paths to exit 50
    [37 38 39 41 43]
    [37 38 39 41 42 43]
    [37 38 39 40 41 43]
    [37 38 39 40 41 42 43]
  ebb entry:  44
    ebb type:   block
    ebb blocks: [44]
    ebb cost:   98
    ebb exits:  [45]
    ebb succs:  [45]
    2 paths to exit 45
    [44 45]
    [44]
  ebb entry:  45
    ebb type:   loop
    ebb blocks: [45 46]
    ebb cost:   92*I((ln5 + 1) != 16, ln5 = 0 + 1, ln5 = ln5 + 1) + 1
    ebb exits:  [47]
    ebb succs:  [47]
    1 paths to exit 47
    [45 46]
    1 loop paths
    [45]
    1 post loop exit paths
    [46]
  ebb entry:  47
    ebb type:   block
    ebb blocks: [47 48]
    ebb cost:   1
    ebb exits:  [49 50]
    ebb succs:  [50 49]
    0 paths to exit 49

    1 paths to exit 50
    [47]
  ebb entry:  49
    ebb type:   block
    ebb blocks: [49]
    ebb cost:   12
    ebb exits:  [50]
    ebb succs:  [50]
    1 paths to exit 50
    [49]
  ebb entry:  50
    ebb type:   block
    ebb blocks: [50 51]
    ebb cost:   9
    ebb exits:  [37 52]
    ebb succs:  [37]
    1 paths to exit 37
    [50]
    1 paths to exit 52
    [50 51]
ebb entry:  52
  ebb type:   block
  ebb blocks: [52]
  ebb cost:   1
  ebb exits:  [53]
  ebb succs:  [53]
  1 paths to exit 53
  [52]
ebb entry:  53
  ebb type:   block
  ebb blocks: [53 54]
  ebb cost:   16
  ebb exits:  [54]
  ebb succs:  []
  1 paths to exit 54
  [53]
ebb entry:  55
  ebb type:   block
  ebb blocks: [55]
  ebb cost:   0
  ebb exits:  []
  ebb succs:  []
