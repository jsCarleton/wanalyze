Loops found in function 208 in these bblocks: 16 24 28 44.
Simple br_if conditions in: 16.
Simple br conditions in: .
Loop block: [15 16 17]
  Loop exits: [17]
  Looping path: [16]
  Looping path: [16]
  Path to loop: [0 1 2 3 4 5 6 7 11 12 13 14 15]
  Path to loop: [0 1 2 3 4 5 6 7 11 14 15]
  Path to loop: [0 1 2 3 4 5 6 9 10 11 12 13 14 15]
  Path to loop: [0 1 2 3 4 5 6 9 10 11 14 15]
Loop block: [23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39]
  Loop exits: []
  Looping path: [24 25 35 36 37]
  Looping path: [24 25 26 36 37]
  Looping path: [24 25 26 27 28 31 32 33 36 37]
  Looping path: [24 25 26 27 28 29 30 31 32 33 36 37]
  Looping path: [24 25 35 36 37]
  Looping path: [24 25 26 36 37]
  Looping path: [24 25 26 27 28 31 32 33 36 37]
  Looping path: [24 25 26 27 28 29 30 31 32 33 36 37]
  Path to loop: [0 1 2 3 4 5 6 7 11 12 13 14 15 16 17 18 19 20 21 22 23]
  Path to loop: [0 1 2 3 4 5 6 7 11 12 13 14 19 20 21 22 23]
  Path to loop: [0 1 2 3 4 5 6 7 11 14 15 16 17 18 19 20 21 22 23]
  Path to loop: [0 1 2 3 4 5 6 7 11 14 19 20 21 22 23]
  Path to loop: [0 1 2 3 4 5 6 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23]
  Path to loop: [0 1 2 3 4 5 6 9 10 11 12 13 14 19 20 21 22 23]
  Path to loop: [0 1 2 3 4 5 6 9 10 11 14 15 16 17 18 19 20 21 22 23]
  Path to loop: [0 1 2 3 4 5 6 9 10 11 14 19 20 21 22 23]
  Path to loop: [0 1 2 3 19 20 21 22 23]
  Path to loop: [0 1 2 19 20 21 22 23]
Loop block: [27 28 29 30 31 32]
  Loop exits: [32]
  Looping path: [28 31]
  Looping path: [28 29 30 31]
  Looping path: [28 31]
  Looping path: [28 29 30 31]
  Path to loop: [0 1 2 3 4 5 6 7 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27]
  Path to loop: [0 1 2 3 4 5 6 7 11 12 13 14 19 20 21 22 23 24 25 26 27]
  Path to loop: [0 1 2 3 4 5 6 7 11 14 15 16 17 18 19 20 21 22 23 24 25 26 27]
  Path to loop: [0 1 2 3 4 5 6 7 11 14 19 20 21 22 23 24 25 26 27]
  Path to loop: [0 1 2 3 4 5 6 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27]
  Path to loop: [0 1 2 3 4 5 6 9 10 11 12 13 14 19 20 21 22 23 24 25 26 27]
  Path to loop: [0 1 2 3 4 5 6 9 10 11 14 15 16 17 18 19 20 21 22 23 24 25 26 27]
  Path to loop: [0 1 2 3 4 5 6 9 10 11 14 19 20 21 22 23 24 25 26 27]
  Path to loop: [0 1 2 3 19 20 21 22 23 24 25 26 27]
  Path to loop: [0 1 2 19 20 21 22 23 24 25 26 27]
Loop block: [43 44 45 46]
  Loop exits: [46]
  Looping path: [44 45]
  Looping path: [44 45]
  Path to loop: [0 1 2 3 4 5 6 7 11 12 13 14 15 16 17 18 19 20 21 42 43]
  Path to loop: [0 1 2 3 4 5 6 7 11 12 13 14 19 20 21 42 43]
  Path to loop: [0 1 2 3 4 5 6 7 11 14 15 16 17 18 19 20 21 42 43]
  Path to loop: [0 1 2 3 4 5 6 7 11 14 19 20 21 42 43]
  Path to loop: [0 1 2 3 4 5 6 9 10 11 12 13 14 15 16 17 18 19 20 21 42 43]
  Path to loop: [0 1 2 3 4 5 6 9 10 11 12 13 14 19 20 21 42 43]
  Path to loop: [0 1 2 3 4 5 6 9 10 11 14 15 16 17 18 19 20 21 42 43]
  Path to loop: [0 1 2 3 4 5 6 9 10 11 14 19 20 21 42 43]
  Path to loop: [0 1 2 3 19 20 21 42 43]
  Path to loop: [0 1 2 19 20 21 42 43]
Code paths from the root bblock to a loop bblock and the VM state at the conclusion of the loop bblock:
[0 1 2 3 4 5 6 7 11 12 13 14 15] 123
cost:    123; 
stack:   [5400608 - 304, 5400608 - 304, i32.load@(5400608 - 304), 5400608 - 304, i32.load@(5400608 - 304), 5400608 - 304, 5400608 - 304, i32.load@(5400608 - 304), 5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304]; 
params:  [pn0, pn1]; 
locals:  [5400608 - 304, i32.load@(i32.load@(i32.load@(5400608 - 304))), ln4, i32.load@(pn0), i32.load@(5400608 - 304), i32.load@(i32.load@(pn0)), ln8, ln9, ln10, ln11]; 
globals: [5400608 - 304]

[0 1 2 3 4 5 6 7 11 12 13 14 19 20 21 22 23] 137
cost:    137; 
stack:   [5400608 - 304, 5400608 - 304, i32.load@(5400608 - 304), 5400608 - 304, i32.load@(5400608 - 304), 5400608 - 304, 5400608 - 304, i32.load@(5400608 - 304), 5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304]; 
params:  [pn0, pn1]; 
locals:  [5400608 - 304, i32.load@(i32.load@(i32.load@(5400608 - 304))), i32.load@(pn0), i32.load@(pn0), i32.load@(5400608 - 304), 0, ln8, ln9, ln10, ln11]; 
globals: [5400608 - 304]

[0 1 2 3 4 5 6 7 11 12 13 14 19 20 21 42 43] 137
cost:    137; 
stack:   [5400608 - 304, 5400608 - 304, i32.load@(5400608 - 304), 5400608 - 304, i32.load@(5400608 - 304), 5400608 - 304, 5400608 - 304, i32.load@(5400608 - 304), 5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304]; 
params:  [pn0, pn1]; 
locals:  [5400608 - 304, 0, i32.load@(pn0), i32.load@(pn0), i32.load@(5400608 - 304), i32.load@(i32.load@(pn0)), ln8, ln9, ln10, ln11]; 
globals: [5400608 - 304]

[0 1 2 3 4 5 6 7 11 14 15] 105
cost:    105; 
stack:   [5400608 - 304, i32.load@(5400608 - 304), 5400608 - 304, 5400608 - 304, i32.load@(5400608 - 304), 5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304]; 
params:  [pn0, pn1]; 
locals:  [5400608 - 304, (i32.load@(5400608 - 304)) + -1, ln4, i32.load@(pn0), i32.load@(5400608 - 304), i32.load@(i32.load@(pn0)), ln8, ln9, ln10, ln11]; 
globals: [5400608 - 304]

[0 1 2 3 4 5 6 7 11 14 19 20 21 22 23] 119
cost:    119; 
stack:   [5400608 - 304, i32.load@(5400608 - 304), 5400608 - 304, 5400608 - 304, i32.load@(5400608 - 304), 5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304]; 
params:  [pn0, pn1]; 
locals:  [5400608 - 304, (i32.load@(5400608 - 304)) + -1, i32.load@(pn0), i32.load@(pn0), i32.load@(5400608 - 304), 0, ln8, ln9, ln10, ln11]; 
globals: [5400608 - 304]

[0 1 2 3 4 5 6 7 11 14 19 20 21 42 43] 119
cost:    119; 
stack:   [5400608 - 304, i32.load@(5400608 - 304), 5400608 - 304, 5400608 - 304, i32.load@(5400608 - 304), 5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304]; 
params:  [pn0, pn1]; 
locals:  [5400608 - 304, 0, i32.load@(pn0), i32.load@(pn0), i32.load@(5400608 - 304), i32.load@(i32.load@(pn0)), ln8, ln9, ln10, ln11]; 
globals: [5400608 - 304]

[0 1 2 3 4 5 6 9 10 11 12 13 14 15] 139
cost:    139; 
stack:   [5400608 - 304, 5400608 - 304, i32.load@(5400608 - 304), 5400608 - 304, i32.load@(i32.load@(i32.load@(5400608 - 304))), 5400608 - 304, 5400608 - 304, 5400608 - 304, i32.load@(5400608 - 304), 5400608 - 304, i32.load@(5400608 - 304), 5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304]; 
params:  [pn0, pn1]; 
locals:  [5400608 - 304, i32.load@(i32.load@(i32.load@(5400608 - 304))), ln4, i32.load@(pn0), i32.load@(5400608 - 304), i32.load@(i32.load@(pn0)), ln8, ln9, ln10, ln11]; 
globals: [5400608 - 304]

[0 1 2 3 4 5 6 9 10 11 12 13 14 19 20 21 22 23] 153
cost:    153; 
stack:   [5400608 - 304, 5400608 - 304, i32.load@(5400608 - 304), 5400608 - 304, i32.load@(i32.load@(i32.load@(5400608 - 304))), 5400608 - 304, 5400608 - 304, 5400608 - 304, i32.load@(5400608 - 304), 5400608 - 304, i32.load@(5400608 - 304), 5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304]; 
params:  [pn0, pn1]; 
locals:  [5400608 - 304, i32.load@(i32.load@(i32.load@(5400608 - 304))), i32.load@(pn0), i32.load@(pn0), i32.load@(5400608 - 304), 0, ln8, ln9, ln10, ln11]; 
globals: [5400608 - 304]

[0 1 2 3 4 5 6 9 10 11 12 13 14 19 20 21 42 43] 153
cost:    153; 
stack:   [5400608 - 304, 5400608 - 304, i32.load@(5400608 - 304), 5400608 - 304, i32.load@(i32.load@(i32.load@(5400608 - 304))), 5400608 - 304, 5400608 - 304, 5400608 - 304, i32.load@(5400608 - 304), 5400608 - 304, i32.load@(5400608 - 304), 5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304]; 
params:  [pn0, pn1]; 
locals:  [5400608 - 304, 0, i32.load@(pn0), i32.load@(pn0), i32.load@(5400608 - 304), i32.load@(i32.load@(pn0)), ln8, ln9, ln10, ln11]; 
globals: [5400608 - 304]

[0 1 2 3 4 5 6 9 10 11 14 15] 121
cost:    121; 
stack:   [5400608 - 304, i32.load@(i32.load@(i32.load@(5400608 - 304))), 5400608 - 304, 5400608 - 304, 5400608 - 304, i32.load@(5400608 - 304), 5400608 - 304, i32.load@(5400608 - 304), 5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304]; 
params:  [pn0, pn1]; 
locals:  [5400608 - 304, (i32.load@(5400608 - 304)) + -1, ln4, i32.load@(pn0), i32.load@(5400608 - 304), i32.load@(i32.load@(pn0)), ln8, ln9, ln10, ln11]; 
globals: [5400608 - 304]

[0 1 2 3 4 5 6 9 10 11 14 19 20 21 22 23] 135
cost:    135; 
stack:   [5400608 - 304, i32.load@(i32.load@(i32.load@(5400608 - 304))), 5400608 - 304, 5400608 - 304, 5400608 - 304, i32.load@(5400608 - 304), 5400608 - 304, i32.load@(5400608 - 304), 5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304]; 
params:  [pn0, pn1]; 
locals:  [5400608 - 304, (i32.load@(5400608 - 304)) + -1, i32.load@(pn0), i32.load@(pn0), i32.load@(5400608 - 304), 0, ln8, ln9, ln10, ln11]; 
globals: [5400608 - 304]

[0 1 2 3 4 5 6 9 10 11 14 19 20 21 42 43] 135
cost:    135; 
stack:   [5400608 - 304, i32.load@(i32.load@(i32.load@(5400608 - 304))), 5400608 - 304, 5400608 - 304, 5400608 - 304, i32.load@(5400608 - 304), 5400608 - 304, i32.load@(5400608 - 304), 5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304]; 
params:  [pn0, pn1]; 
locals:  [5400608 - 304, 0, i32.load@(pn0), i32.load@(pn0), i32.load@(5400608 - 304), i32.load@(i32.load@(pn0)), ln8, ln9, ln10, ln11]; 
globals: [5400608 - 304]

[0 1 2 3 19 20 21 22 23] 58
cost:    58; 
stack:   [5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304]; 
params:  [pn0, pn1]; 
locals:  [5400608 - 304, i32.load@(i32.load@(pn0)), i32.load@(pn0), i32.load@(pn0), ln6, 0, ln8, ln9, ln10, ln11]; 
globals: [5400608 - 304]

[0 1 2 3 19 20 21 42 43] 58
cost:    58; 
stack:   [5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304]; 
params:  [pn0, pn1]; 
locals:  [5400608 - 304, 0, i32.load@(pn0), i32.load@(pn0), ln6, ln7, ln8, ln9, ln10, ln11]; 
globals: [5400608 - 304]

[0 1 2 19 20 21 22 23] 55
cost:    55; 
stack:   [5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304]; 
params:  [pn0, pn1]; 
locals:  [5400608 - 304, i32.load@(i32.load@(pn0)), i32.load@(pn0), i32.load@(pn0), ln6, 0, ln8, ln9, ln10, ln11]; 
globals: [5400608 - 304]

[0 1 2 19 20 21 42 43] 55
cost:    55; 
stack:   [5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304, 5400608 - 304]; 
params:  [pn0, pn1]; 
locals:  [5400608 - 304, 0, i32.load@(pn0), i32.load@(pn0), ln6, ln7, ln8, ln9, ln10, ln11]; 
globals: [5400608 - 304]

Simple brif loop condition in bblock 16:	(ln4 + 1) < (i32.load@(ln6))
Loop condition variables: ln4, ln6
SSA of loop:
-t0 = ln4
-t1 = 2
-t2 = t0 shl t1
-t3 = ln2
-t4 = t2 + t3
-t5 = 0
-@(t4) = (t5)
-t7 = ln4
-t8 = 1
-t9 = t7 + t8
-ln4 = t9
-t11 = ln6
-t12 = (t11)
-t13 = t9 < t12
Loop variable calculations:
+ln6 = ln6
+ln4 = ln4 + 1
