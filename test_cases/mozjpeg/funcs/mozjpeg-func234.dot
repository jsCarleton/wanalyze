digraph finite_state_machine {
    label = "mozjpeg.wasm - function 234"
    labelloc =  t
    labelfontsize = 16
    labelfontcolor = black
    labelfontname = "Helvetica"
    node [shape = doublecircle]; E R ;
node [shape=circle, fontcolor=black, style="", label="0(6)"]0
node [shape=circle, fontcolor=black, style="", label="1(5)"]1
node [shape=circle, fontcolor=black, style="", label="2(1)"]2
node [shape=circle, fontcolor=black, style="", label="3(1)"]3
node [shape=circle, fontcolor=black, style="", label="4(6)"]4
node [shape=circle, fontcolor=black, style="", label="5(1)"]5
node [shape=circle, fontcolor=black, style="", label="6(5)"]6
node [shape=circle, fontcolor=black, style="", label="7(5)"]7
node [shape=circle, fontcolor=black, style="", label="8(1)"]8
node [shape=circle, fontcolor=black, style="", label="9(4)"]9
node [shape=circle, fontcolor=black, style="", label="10(4)"]10
node [shape=circle, fontcolor=black, style="", label="11(1)"]11
node [shape=circle, fontcolor=black, style="", label="12(4)"]12
node [shape=circle, fontcolor=black, style="", label="13(5)"]13
node [shape=circle, fontcolor=black, style="", label="14(18)"]14
node [shape=circle, fontcolor=black, style="", label="15(7)"]15
node [shape=circle, fontcolor=black, style="", label="16(1)"]16
node [shape=circle, fontcolor=black, style="", label="17(1)"]17
node [shape=circle, fontcolor=black, style="", label="18(4)"]18
node [shape=circle, fontcolor=black, style="", label="19(14)"]19
node [shape=circle, fontcolor=black, style="", label="20(5)"]20
node [shape=circle, fontcolor=black, style="", label="21(4)"]21
node [shape=circle, fontcolor=black, style="", label="22(1)"]22
node [shape=circle, fontcolor=black, style="", label="23(12)"]23
node [shape=circle, fontcolor=black, style="", label="24(1)"]24
node [shape=circle, fontcolor=black, style="", label="E"]E
node [shape=circle, fontcolor=black, style="", label="R"]R
    0 -> 1[label="if"];
    0 -> 3[label="else"];
    1 -> R[label="return"];
    3 -> 4[label="block"];
    4 -> 5[label="if"];
    4 -> 23[label="else"];
    5 -> 6[label="block"];
    6 -> 7[label="if"];
    6 -> 9[label="else"];
    7 -> 8[label="~br_if"];
    7 -> 12[label="br_if"];
    8 -> 9[label="end"];
    9 -> 10[label="~br_if"];
    9 -> 24[label="br_if"];
    10 -> R[label="return"];
    12 -> 13[label="block"];
    13 -> 14[label="~br_if"];
    13 -> 19[label="br_if"];
    14 -> 15[label="if"];
    14 -> 18[label="else"];
    15 -> 16[label="~br_if"];
    15 -> 19[label="br_if"];
    16 -> 24[label="br"];
    18 -> 19[label="end"];
    19 -> 20[label="~br_if"];
    19 -> 24[label="br_if"];
    20 -> 21[label="~br_if"];
    20 -> 24[label="br_if"];
    21 -> R[label="return"];
    23 -> 24[label="end"];
    24 -> E[label="end"];
}
