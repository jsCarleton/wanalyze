ebb entry:  0
  ebb type:   block
  ebb blocks: [0 1]
  ebb cost:   7
  ebb exits:  [2 51]
  ebb succs:  [51 2]
  1 paths to exit 2
  [0 1]
  1 paths to exit 51
  [0 1]
ebb entry:  2
  ebb type:   block
  ebb blocks: [2]
  ebb cost:   7
  ebb exits:  [3]
  ebb succs:  [3]
  1 paths to exit 3
  [2]
ebb entry:  3
  ebb type:   loop
  ebb blocks: [3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49]
  ebb cost:   (list_max([77*I((i32.load@(pn2)) < pn3, pn3 = pn3;pn2 = pn2, pn3 = pn3;pn2 = pn2); 83*I((i32.load@(pn2)) < pn3, pn3 = pn3;pn2 = pn2, pn3 = pn3;pn2 = pn2); 98*I((i32.load@(pn2)) < pn3, pn3 = pn3;pn2 = pn2, pn3 = pn3;pn2 = pn2); 104*I((i32.load@(pn2)) < pn3, pn3 = pn3;pn2 = pn2, pn3 = pn3;pn2 = pn2); 81*I((i32.load@(pn2)) < pn3, pn3 = pn3;pn2 = pn2, pn3 = pn3;pn2 = pn2); 87*I((i32.load@(pn2)) < pn3, pn3 = pn3;pn2 = pn2, pn3 = pn3;pn2 = pn2); 102*I((i32.load@(pn2)) < pn3, pn3 = pn3;pn2 = pn2, pn3 = pn3;pn2 = pn2); 108*I((i32.load@(pn2)) < pn3, pn3 = pn3;pn2 = pn2, pn3 = pn3;pn2 = pn2); 110*I((i32.load@(pn2)) < pn3, pn3 = pn3;pn2 = pn2, pn3 = pn3;pn2 = pn2); 116*I((i32.load@(pn2)) < pn3, pn3 = pn3;pn2 = pn2, pn3 = pn3;pn2 = pn2); 129*I((i32.load@(pn2)) < pn3, pn3 = pn3;pn2 = pn2, pn3 = pn3;pn2 = pn2); 135*I((i32.load@(pn2)) < pn3, pn3 = pn3;pn2 = pn2, pn3 = pn3;pn2 = pn2); 165*I((i32.load@(pn2)) < pn3, pn3 = pn3;pn2 = pn2, pn3 = pn3;pn2 = pn2); 171*I((i32.load@(pn2)) < pn3, pn3 = pn3;pn2 = pn2, pn3 = pn3;pn2 = pn2)])) + 73
  ebb exits:  [50 51 53 54]
  ebb succs:  [54 53 51 50]
  14 paths to exit 50
  [3 4 5 6 7 26 29 30 48 49]
  [3 4 5 6 7 26 29 30 31 48 49]
  [3 4 5 6 7 26 27 28 29 30 48 49]
  [3 4 5 6 7 26 27 28 29 30 31 48 49]
  [3 4 5 6 7 8 26 29 30 48 49]
  [3 4 5 6 7 8 26 29 30 31 48 49]
  [3 4 5 6 7 8 26 27 28 29 30 48 49]
  [3 4 5 6 7 8 26 27 28 29 30 31 48 49]
  [3 4 5 6 7 8 9 10 24 28 29 30 48 49]
  [3 4 5 6 7 8 9 10 24 28 29 30 31 48 49]
  [3 4 5 6 7 8 9 10 11 12 13 18 19 22 23 24 28 29 30 48 49]
  [3 4 5 6 7 8 9 10 11 12 13 18 19 22 23 24 28 29 30 31 48 49]
  [3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 22 23 24 28 29 30 48 49]
  [3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 22 23 24 28 29 30 31 48 49]
  1 paths to exit 51
  [3]
  21 paths to exit 53
  [3 4 5 6 7 26 29 30 31 32 33 46]
  [3 4 5 6 7 26 29 30 31 32 33 34 35 36 41 46]
  [3 4 5 6 7 26 29 30 31 32 33 34 35 36 37 38 39 40 41 46]
  [3 4 5 6 7 26 27 28 29 30 31 32 33 46]
  [3 4 5 6 7 26 27 28 29 30 31 32 33 34 35 36 41 46]
  [3 4 5 6 7 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 46]
  [3 4 5 6 7 8 26 29 30 31 32 33 46]
  [3 4 5 6 7 8 26 29 30 31 32 33 34 35 36 41 46]
  [3 4 5 6 7 8 26 29 30 31 32 33 34 35 36 37 38 39 40 41 46]
  [3 4 5 6 7 8 26 27 28 29 30 31 32 33 46]
  [3 4 5 6 7 8 26 27 28 29 30 31 32 33 34 35 36 41 46]
  [3 4 5 6 7 8 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 46]
  [3 4 5 6 7 8 9 10 24 28 29 30 31 32 33 46]
  [3 4 5 6 7 8 9 10 24 28 29 30 31 32 33 34 35 36 41 46]
  [3 4 5 6 7 8 9 10 24 28 29 30 31 32 33 34 35 36 37 38 39 40 41 46]
  [3 4 5 6 7 8 9 10 11 12 13 18 19 22 23 24 28 29 30 31 32 33 46]
  [3 4 5 6 7 8 9 10 11 12 13 18 19 22 23 24 28 29 30 31 32 33 34 35 36 41 46]
  [3 4 5 6 7 8 9 10 11 12 13 18 19 22 23 24 28 29 30 31 32 33 34 35 36 37 38 39 40 41 46]
  [3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 22 23 24 28 29 30 31 32 33 46]
  [3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 22 23 24 28 29 30 31 32 33 34 35 36 41 46]
  [3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 22 23 24 28 29 30 31 32 33 34 35 36 37 38 39 40 41 46]
  0 paths to exit 54

  14 loop paths
  [3 4 5 6 7 26 29 30 48]  [3 4 5 6 7 26 29 30 31 48]  [3 4 5 6 7 26 27 28 29 30 48]  [3 4 5 6 7 26 27 28 29 30 31 48]  [3 4 5 6 7 8 26 29 30 48]  [3 4 5 6 7 8 26 29 30 31 48]  [3 4 5 6 7 8 26 27 28 29 30 48]  [3 4 5 6 7 8 26 27 28 29 30 31 48]  [3 4 5 6 7 8 9 10 24 28 29 30 48]  [3 4 5 6 7 8 9 10 24 28 29 30 31 48]  [3 4 5 6 7 8 9 10 11 12 13 18 19 22 23 24 28 29 30 48]  [3 4 5 6 7 8 9 10 11 12 13 18 19 22 23 24 28 29 30 31 48]  [3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 22 23 24 28 29 30 48]  [3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 22 23 24 28 29 30 31 48]
  35 post loop exit paths
  [49]  [49]  [49]  [49]  [49]  [49]  [49]  [49]  [49]  [49]  [49]  [49]  [49]  [49]  [32 33 46]  [32 33 34 35 36 41 46]  [32 33 34 35 36 37 38 39 40 41 46]  [32 33 46]  [32 33 34 35 36 41 46]  [32 33 34 35 36 37 38 39 40 41 46]  [32 33 46]  [32 33 34 35 36 41 46]  [32 33 34 35 36 37 38 39 40 41 46]  [32 33 46]  [32 33 34 35 36 41 46]  [32 33 34 35 36 37 38 39 40 41 46]  [32 33 46]  [32 33 34 35 36 41 46]  [32 33 34 35 36 37 38 39 40 41 46]  [32 33 46]  [32 33 34 35 36 41 46]  [32 33 34 35 36 37 38 39 40 41 46]  [32 33 46]  [32 33 34 35 36 41 46]  [32 33 34 35 36 37 38 39 40 41 46]
  ebb entry:  3
    ebb type:   block
    ebb blocks: [3 4 5 6 7 8 9 10]
    ebb cost:   76
    ebb exits:  [11 24 26 51]
    ebb succs:  [26 24 11]
    1 paths to exit 11
    [3 4 5 6 7 8 9 10]
    1 paths to exit 24
    [3 4 5 6 7 8 9 10]
    2 paths to exit 26
    [3 4 5 6 7 8]
    [3 4 5 6 7]
    1 paths to exit 51
    [3]
  ebb entry:  11
    ebb type:   block
    ebb blocks: [11]
    ebb cost:   1
    ebb exits:  [12]
    ebb succs:  [12]
    1 paths to exit 12
    [11]
  ebb entry:  12
    ebb type:   loop
    ebb blocks: [12 13 14 15 16 17 18 19 20 21 22]
    ebb cost:   (list_max([20*I(not((ln13 + 1) >= ln10), ln10 = (pn0);ln13 = 0 + 1, ln10 = ln10;ln13 = ln13 + 1); 56*I(not((ln13 + 1) >= (i32.load@(pn0))), pn0 = pn0;ln13 = 0 + 1, pn0 = pn0;ln13 = ln13 + 1)])) + 1
    ebb exits:  [23]
    ebb succs:  [23]
    2 paths to exit 23
    [12 13 18 19 22]
    [12 13 14 15 16 17 18 19 22]
    2 loop paths
    [12 13 18 19 20]    [12 13 14 15 16 17 18 19 20]
    2 post loop exit paths
    [22]    [22]
    ebb entry:  12
      ebb type:   block
      ebb blocks: [12 13]
      ebb cost:   5
      ebb exits:  [14 18]
      ebb succs:  [18 14]
      1 paths to exit 14
      [12 13]
      1 paths to exit 18
      [12 13]
    ebb entry:  14
      ebb type:   block
      ebb blocks: [14]
      ebb cost:   31
      ebb exits:  [15]
      ebb succs:  [15]
      2 paths to exit 15
      [14 15]
      [14]
    ebb entry:  15
      ebb type:   loop
      ebb blocks: [15 16]
      ebb cost:   14*I((ln7 + 1) != ln12, ln12 = ln12;ln7 = 0 + 1, ln12 = ln12;ln7 = 0 + 1) + 1
      ebb exits:  [17]
      ebb succs:  [17]
      1 paths to exit 17
      [15 16]
      1 loop paths
      [15]
      1 post loop exit paths
      [16]
    ebb entry:  17
      ebb type:   block
      ebb blocks: [17]
      ebb cost:   4
      ebb exits:  [18]
      ebb succs:  [18]
      1 paths to exit 18
      [17]
    ebb entry:  18
      ebb type:   block
      ebb blocks: [18 19 20 21 22]
      ebb cost:   9
      ebb exits:  [12 23]
      ebb succs:  [12]
      0 paths to exit 12

      1 paths to exit 23
      [18 19 22]
  ebb entry:  23
    ebb type:   block
    ebb blocks: [23]
    ebb cost:   4
    ebb exits:  [24]
    ebb succs:  [24]
    1 paths to exit 24
    [23]
  ebb entry:  24
    ebb type:   block
    ebb blocks: [24 25]
    ebb cost:   4
    ebb exits:  [26 28]
    ebb succs:  [28 26]
    0 paths to exit 26

    1 paths to exit 28
    [24]
  ebb entry:  26
    ebb type:   block
    ebb blocks: [26 27]
    ebb cost:   5
    ebb exits:  [28 29]
    ebb succs:  [29 28]
    1 paths to exit 28
    [26 27]
    1 paths to exit 29
    [26]
  ebb entry:  28
    ebb type:   block
    ebb blocks: [28]
    ebb cost:   20
    ebb exits:  [29]
    ebb succs:  [29]
    1 paths to exit 29
    [28]
  ebb entry:  29
    ebb type:   block
    ebb blocks: [29 30 31 32 33]
    ebb cost:   17
    ebb exits:  [34 46 48]
    ebb succs:  [48 46 34]
    1 paths to exit 34
    [29 30 31 32 33]
    1 paths to exit 46
    [29 30 31 32 33]
    2 paths to exit 48
    [29 30 31]
    [29 30]
  ebb entry:  34
    ebb type:   block
    ebb blocks: [34]
    ebb cost:   6
    ebb exits:  [35]
    ebb succs:  [35]
    1 paths to exit 35
    [34]
  ebb entry:  35
    ebb type:   loop
    ebb blocks: [35 36 37 38 39 40 41 42 43]
    ebb cost:   (list_max([28*I(not((ln8 + 1) >= ln11), ln11 = (pn0);ln8 = 0 + 1, ln11 = ln11;ln8 = ln8 + 1); 64*I(not((ln8 + 1) >= (i32.load@(pn0))), pn0 = pn0;ln8 = 0 + 1, pn0 = pn0;ln8 = ln8 + 1)])) + 0
    ebb exits:  [44 46]
    ebb succs:  [46 44]
    0 paths to exit 44

    2 paths to exit 46
    [35 36 41]
    [35 36 37 38 39 40 41]
    2 loop paths
    [35 36 41 42]    [35 36 37 38 39 40 41 42]
    ebb entry:  35
      ebb type:   block
      ebb blocks: [35 36]
      ebb cost:   13
      ebb exits:  [37 41]
      ebb succs:  [41 37]
      1 paths to exit 37
      [35 36]
      1 paths to exit 41
      [35 36]
    ebb entry:  37
      ebb type:   block
      ebb blocks: [37]
      ebb cost:   31
      ebb exits:  [38]
      ebb succs:  [38]
      2 paths to exit 38
      [37 38]
      [37]
    ebb entry:  38
      ebb type:   loop
      ebb blocks: [38 39]
      ebb cost:   14*I((ln7 + 1) != ln12, ln12 = ((ln13)) * pn6;ln7 = (((ln13)) * 0) + 1, ln12 = ln12;ln7 = 0 + 1) + 1
      ebb exits:  [40]
      ebb succs:  [40]
      1 paths to exit 40
      [38 39]
      1 loop paths
      [38]
      1 post loop exit paths
      [39]
    ebb entry:  40
      ebb type:   block
      ebb blocks: [40]
      ebb cost:   4
      ebb exits:  [41]
      ebb succs:  [41]
      1 paths to exit 41
      [40]
    ebb entry:  41
      ebb type:   block
      ebb blocks: [41 42 43]
      ebb cost:   7
      ebb exits:  [35 44 46]
      ebb succs:  [35]
      0 paths to exit 35

      0 paths to exit 44

      1 paths to exit 46
      [41]
  ebb entry:  44
    ebb type:   block
    ebb blocks: [44 45]
    ebb cost:   1
    ebb exits:  [46 54]
    ebb succs:  [46]
    0 paths to exit 46

    1 paths to exit 54
    [44]
  ebb entry:  46
    ebb type:   block
    ebb blocks: [46 47]
    ebb cost:   4
    ebb exits:  [48 53]
    ebb succs:  [48]
    0 paths to exit 48

    1 paths to exit 53
    [46]
  ebb entry:  48
    ebb type:   block
    ebb blocks: [48 49]
    ebb cost:   7
    ebb exits:  [3 50]
    ebb succs:  [3]
    1 paths to exit 3
    [48]
    1 paths to exit 50
    [48 49]
ebb entry:  50
  ebb type:   block
  ebb blocks: [50]
  ebb cost:   1
  ebb exits:  [51]
  ebb succs:  [51]
  1 paths to exit 51
  [50]
ebb entry:  51
  ebb type:   block
  ebb blocks: [51 52]
  ebb cost:   1
  ebb exits:  [52]
  ebb succs:  []
  1 paths to exit 52
  [51]
ebb entry:  53
  ebb type:   block
  ebb blocks: [53]
  ebb cost:   0
  ebb exits:  []
  ebb succs:  []
ebb entry:  54
  ebb type:   block
  ebb blocks: [54]
  ebb cost:   0
  ebb exits:  []
  ebb succs:  []
