ebb entry:  0
  ebb type:   block
  ebb blocks: [0 1 2 3 4 5 6 7 8 9 10 11]
  ebb cost:   95
  ebb exits:  [12 29]
  ebb succs:  [29 12]
  16 paths to exit 12
  [0 1 5 6 10 11]
  [0 1 5 6 7 10 11]
  [0 1 5 6 7 8 10 11]
  [0 1 5 6 7 8 9 10 11]
  [0 1 2 5 6 10 11]
  [0 1 2 5 6 7 10 11]
  [0 1 2 5 6 7 8 10 11]
  [0 1 2 5 6 7 8 9 10 11]
  [0 1 2 3 5 6 10 11]
  [0 1 2 3 5 6 7 10 11]
  [0 1 2 3 5 6 7 8 10 11]
  [0 1 2 3 5 6 7 8 9 10 11]
  [0 1 2 3 4 5 6 10 11]
  [0 1 2 3 4 5 6 7 10 11]
  [0 1 2 3 4 5 6 7 8 10 11]
  [0 1 2 3 4 5 6 7 8 9 10 11]
  16 paths to exit 29
  [0 1 5 6 10 11]
  [0 1 5 6 7 10 11]
  [0 1 5 6 7 8 10 11]
  [0 1 5 6 7 8 9 10 11]
  [0 1 2 5 6 10 11]
  [0 1 2 5 6 7 10 11]
  [0 1 2 5 6 7 8 10 11]
  [0 1 2 5 6 7 8 9 10 11]
  [0 1 2 3 5 6 10 11]
  [0 1 2 3 5 6 7 10 11]
  [0 1 2 3 5 6 7 8 10 11]
  [0 1 2 3 5 6 7 8 9 10 11]
  [0 1 2 3 4 5 6 10 11]
  [0 1 2 3 4 5 6 7 10 11]
  [0 1 2 3 4 5 6 7 8 10 11]
  [0 1 2 3 4 5 6 7 8 9 10 11]
ebb entry:  12
  ebb type:   block
  ebb blocks: [12]
  ebb cost:   3
  ebb exits:  [13]
  ebb succs:  [13]
  1 paths to exit 13
  [12]
ebb entry:  13
  ebb type:   loop
  ebb blocks: [13 14 15 16 17 18 19 20 21 22 23 24 25 26 27]
  ebb cost:   (list_max([104*I((pn1 + 1) < (i32.load@(pn0)), pn0 = pn0;pn1 = 0, pn0 = pn0;pn1 = pn1 + 1); 95*I((pn1 + 1) < (i32.load@(pn0)), pn0 = pn0;pn1 = 0, pn0 = pn0;pn1 = pn1 + 1); 110*I((pn1 + 1) < (i32.load@(pn0)), pn0 = pn0;pn1 = 0, pn0 = pn0;pn1 = pn1 + 1); 33*I((pn1 + 1) < (i32.load@(pn0)), pn0 = pn0;pn1 = 0, pn0 = pn0;pn1 = pn1 + 1); 48*I((pn1 + 1) < (i32.load@(pn0)), pn0 = pn0;pn1 = 0, pn0 = pn0;pn1 = pn1 + 1); 36*I((pn1 + 1) < (i32.load@(pn0)), pn0 = pn0;pn1 = 0, pn0 = pn0;pn1 = pn1 + 1); 51*I((pn1 + 1) < (i32.load@(pn0)), pn0 = pn0;pn1 = 0, pn0 = pn0;pn1 = pn1 + 1); 111*I((pn1 + 1) < (i32.load@(pn0)), pn0 = pn0;pn1 = 0, pn0 = pn0;pn1 = pn1 + 1); 102*I((pn1 + 1) < (i32.load@(pn0)), pn0 = pn0;pn1 = 0, pn0 = pn0;pn1 = pn1 + 1); 117*I((pn1 + 1) < (i32.load@(pn0)), pn0 = pn0;pn1 = 0, pn0 = pn0;pn1 = pn1 + 1)])) + 1
  ebb exits:  [28]
  ebb succs:  [28]
  10 paths to exit 28
  [13 14 15 16 17 21 25 26 27]
  [13 14 15 16 17 21 22 23 26 27]
  [13 14 15 16 17 21 22 23 24 25 26 27]
  [13 14 15 16 17 18 23 26 27]
  [13 14 15 16 17 18 23 24 25 26 27]
  [13 14 15 16 17 18 19 23 26 27]
  [13 14 15 16 17 18 19 23 24 25 26 27]
  [13 14 15 16 17 18 19 20 21 25 26 27]
  [13 14 15 16 17 18 19 20 21 22 23 26 27]
  [13 14 15 16 17 18 19 20 21 22 23 24 25 26 27]
  10 loop paths
  [13 14 15 16 17 21 25 26]  [13 14 15 16 17 21 22 23 26]  [13 14 15 16 17 21 22 23 24 25 26]  [13 14 15 16 17 18 23 26]  [13 14 15 16 17 18 23 24 25 26]  [13 14 15 16 17 18 19 23 26]  [13 14 15 16 17 18 19 23 24 25 26]  [13 14 15 16 17 18 19 20 21 25 26]  [13 14 15 16 17 18 19 20 21 22 23 26]  [13 14 15 16 17 18 19 20 21 22 23 24 25 26]
  10 post loop exit paths
  [27]  [27]  [27]  [27]  [27]  [27]  [27]  [27]  [27]  [27]
ebb entry:  28
  ebb type:   block
  ebb blocks: [28]
  ebb cost:   1
  ebb exits:  [29]
  ebb succs:  [29]
  1 paths to exit 29
  [28]
ebb entry:  29
  ebb type:   block
  ebb blocks: [29 30]
  ebb cost:   10
  ebb exits:  [30]
  ebb succs:  []
  1 paths to exit 30
  [29]
