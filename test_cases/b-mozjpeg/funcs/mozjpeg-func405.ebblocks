ebb entry:  0
  ebb type:   block
  ebb blocks: [0 1 2 3 4]
  ebb cost:   17
  ebb exits:  [5 168]
  ebb succs:  [168 5]
  1 paths to exit 5
  [0 1 2]
  1 paths to exit 168
  [0 1 2 3]
ebb entry:  5
  ebb type:   block
  ebb blocks: [5]
  ebb cost:   1
  ebb exits:  [6]
  ebb succs:  [6]
  1 paths to exit 6
  [5]
ebb entry:  6
  ebb type:   loop
  ebb blocks: [6 7 8 9 10 11 12 13]
  ebb cost:   (list_max([16*I(rn0, rn0 = rn0, rn0 = rn0); 21*I(rn0, rn0 = rn0, rn0 = rn0)])) + 1
  ebb exits:  [14]
  ebb succs:  [14]
  2 paths to exit 14
  [6 7 8 11 12 13]
  [6 7 8 9 12 13]
  2 loop paths
  [6 7 8 11 12]  [6 7 8 9 12]
  2 post loop exit paths
  [13]  [13]
ebb entry:  14
  ebb type:   block
  ebb blocks: [14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61]
  ebb cost:   120
  ebb exits:  [62 75 93 168]
  ebb succs:  [168 93 75 62]
  20 paths to exit 62
  [14 15 16 18 19 22 23 24 25 26 27 28 53 59 60 61]
  [14 15 16 18 19 22 23 24 25 26 27 28 29 53 59 60 61]
  [14 15 16 18 19 22 23 24 25 26 27 28 29 30 31 32 35 36 37 50 59 60 61]
  [14 15 16 18 19 22 23 24 25 26 27 28 29 30 31 32 33 36 37 50 59 60 61]
  [14 15 16 18 19 20 23 24 25 26 27 28 53 59 60 61]
  [14 15 16 18 19 20 23 24 25 26 27 28 29 53 59 60 61]
  [14 15 16 18 19 20 23 24 25 26 27 28 29 30 31 32 35 36 37 50 59 60 61]
  [14 15 16 18 19 20 23 24 25 26 27 28 29 30 31 32 33 36 37 50 59 60 61]
  [14 15 16 23 24 25 26 27 28 53 59 60 61]
  [14 15 16 23 24 25 26 27 28 29 53 59 60 61]
  [14 15 16 23 24 25 26 27 28 29 30 31 32 35 36 37 50 59 60 61]
  [14 15 16 23 24 25 26 27 28 29 30 31 32 33 36 37 50 59 60 61]
  [14 15 16 18 19 22 23 24 25 26 27 28 53 59 60 61]
  [14 15 16 18 19 22 23 24 25 26 27 28 29 53 59 60 61]
  [14 15 16 18 19 22 23 24 25 26 27 28 29 30 31 32 35 36 37 50 59 60 61]
  [14 15 16 18 19 22 23 24 25 26 27 28 29 30 31 32 33 36 37 50 59 60 61]
  [14 15 16 18 19 20 23 24 25 26 27 28 53 59 60 61]
  [14 15 16 18 19 20 23 24 25 26 27 28 29 53 59 60 61]
  [14 15 16 18 19 20 23 24 25 26 27 28 29 30 31 32 35 36 37 50 59 60 61]
  [14 15 16 18 19 20 23 24 25 26 27 28 29 30 31 32 33 36 37 50 59 60 61]
  20 paths to exit 75
  [14 15 16 18 19 22 23 24 25 26 27 28 53 59 60 61]
  [14 15 16 18 19 22 23 24 25 26 27 28 29 53 59 60 61]
  [14 15 16 18 19 22 23 24 25 26 27 28 29 30 31 32 35 36 37 50 59 60 61]
  [14 15 16 18 19 22 23 24 25 26 27 28 29 30 31 32 33 36 37 50 59 60 61]
  [14 15 16 18 19 20 23 24 25 26 27 28 53 59 60 61]
  [14 15 16 18 19 20 23 24 25 26 27 28 29 53 59 60 61]
  [14 15 16 18 19 20 23 24 25 26 27 28 29 30 31 32 35 36 37 50 59 60 61]
  [14 15 16 18 19 20 23 24 25 26 27 28 29 30 31 32 33 36 37 50 59 60 61]
  [14 15 16 23 24 25 26 27 28 53 59 60 61]
  [14 15 16 23 24 25 26 27 28 29 53 59 60 61]
  [14 15 16 23 24 25 26 27 28 29 30 31 32 35 36 37 50 59 60 61]
  [14 15 16 23 24 25 26 27 28 29 30 31 32 33 36 37 50 59 60 61]
  [14 15 16 18 19 22 23 24 25 26 27 28 53 59 60 61]
  [14 15 16 18 19 22 23 24 25 26 27 28 29 53 59 60 61]
  [14 15 16 18 19 22 23 24 25 26 27 28 29 30 31 32 35 36 37 50 59 60 61]
  [14 15 16 18 19 22 23 24 25 26 27 28 29 30 31 32 33 36 37 50 59 60 61]
  [14 15 16 18 19 20 23 24 25 26 27 28 53 59 60 61]
  [14 15 16 18 19 20 23 24 25 26 27 28 29 53 59 60 61]
  [14 15 16 18 19 20 23 24 25 26 27 28 29 30 31 32 35 36 37 50 59 60 61]
  [14 15 16 18 19 20 23 24 25 26 27 28 29 30 31 32 33 36 37 50 59 60 61]
  50 paths to exit 93
  [14 15 16 18 19 22 23 24 25 26 27 28 53 59]
  [14 15 16 18 19 22 23 24 25 26 27 28 29 53 59]
  [14 15 16 18 19 22 23 24 25 26 27 28 29 30 31 32 35 36 37 50 59]
  [14 15 16 18 19 22 23 24 25 26 27 28 29 30 31 32 35 36 37 50 51]
  [14 15 16 18 19 22 23 24 25 26 27 28 29 30 31 32 35 36 37 38 39 40 43 44]
  [14 15 16 18 19 22 23 24 25 26 27 28 29 30 31 32 35 36 37 38 39 40 41 44]
  [14 15 16 18 19 22 23 24 25 26 27 28 29 30 31 32 33 36 37 50 59]
  [14 15 16 18 19 22 23 24 25 26 27 28 29 30 31 32 33 36 37 50 51]
  [14 15 16 18 19 22 23 24 25 26 27 28 29 30 31 32 33 36 37 38 39 40 43 44]
  [14 15 16 18 19 22 23 24 25 26 27 28 29 30 31 32 33 36 37 38 39 40 41 44]
  [14 15 16 18 19 20 23 24 25 26 27 28 53 59]
  [14 15 16 18 19 20 23 24 25 26 27 28 29 53 59]
  [14 15 16 18 19 20 23 24 25 26 27 28 29 30 31 32 35 36 37 50 59]
  [14 15 16 18 19 20 23 24 25 26 27 28 29 30 31 32 35 36 37 50 51]
  [14 15 16 18 19 20 23 24 25 26 27 28 29 30 31 32 35 36 37 38 39 40 43 44]
  [14 15 16 18 19 20 23 24 25 26 27 28 29 30 31 32 35 36 37 38 39 40 41 44]
  [14 15 16 18 19 20 23 24 25 26 27 28 29 30 31 32 33 36 37 50 59]
  [14 15 16 18 19 20 23 24 25 26 27 28 29 30 31 32 33 36 37 50 51]
  [14 15 16 18 19 20 23 24 25 26 27 28 29 30 31 32 33 36 37 38 39 40 43 44]
  [14 15 16 18 19 20 23 24 25 26 27 28 29 30 31 32 33 36 37 38 39 40 41 44]
  [14 15 16 23 24 25 26 27 28 53 59]
  [14 15 16 23 24 25 26 27 28 29 53 59]
  [14 15 16 23 24 25 26 27 28 29 30 31 32 35 36 37 50 59]
  [14 15 16 23 24 25 26 27 28 29 30 31 32 35 36 37 50 51]
  [14 15 16 23 24 25 26 27 28 29 30 31 32 35 36 37 38 39 40 43 44]
  [14 15 16 23 24 25 26 27 28 29 30 31 32 35 36 37 38 39 40 41 44]
  [14 15 16 23 24 25 26 27 28 29 30 31 32 33 36 37 50 59]
  [14 15 16 23 24 25 26 27 28 29 30 31 32 33 36 37 50 51]
  [14 15 16 23 24 25 26 27 28 29 30 31 32 33 36 37 38 39 40 43 44]
  [14 15 16 23 24 25 26 27 28 29 30 31 32 33 36 37 38 39 40 41 44]
  [14 15 16 18 19 22 23 24 25 26 27 28 53 59]
  [14 15 16 18 19 22 23 24 25 26 27 28 29 53 59]
  [14 15 16 18 19 22 23 24 25 26 27 28 29 30 31 32 35 36 37 50 59]
  [14 15 16 18 19 22 23 24 25 26 27 28 29 30 31 32 35 36 37 50 51]
  [14 15 16 18 19 22 23 24 25 26 27 28 29 30 31 32 35 36 37 38 39 40 43 44]
  [14 15 16 18 19 22 23 24 25 26 27 28 29 30 31 32 35 36 37 38 39 40 41 44]
  [14 15 16 18 19 22 23 24 25 26 27 28 29 30 31 32 33 36 37 50 59]
  [14 15 16 18 19 22 23 24 25 26 27 28 29 30 31 32 33 36 37 50 51]
  [14 15 16 18 19 22 23 24 25 26 27 28 29 30 31 32 33 36 37 38 39 40 43 44]
  [14 15 16 18 19 22 23 24 25 26 27 28 29 30 31 32 33 36 37 38 39 40 41 44]
  [14 15 16 18 19 20 23 24 25 26 27 28 53 59]
  [14 15 16 18 19 20 23 24 25 26 27 28 29 53 59]
  [14 15 16 18 19 20 23 24 25 26 27 28 29 30 31 32 35 36 37 50 59]
  [14 15 16 18 19 20 23 24 25 26 27 28 29 30 31 32 35 36 37 50 51]
  [14 15 16 18 19 20 23 24 25 26 27 28 29 30 31 32 35 36 37 38 39 40 43 44]
  [14 15 16 18 19 20 23 24 25 26 27 28 29 30 31 32 35 36 37 38 39 40 41 44]
  [14 15 16 18 19 20 23 24 25 26 27 28 29 30 31 32 33 36 37 50 59]
  [14 15 16 18 19 20 23 24 25 26 27 28 29 30 31 32 33 36 37 50 51]
  [14 15 16 18 19 20 23 24 25 26 27 28 29 30 31 32 33 36 37 38 39 40 43 44]
  [14 15 16 18 19 20 23 24 25 26 27 28 29 30 31 32 33 36 37 38 39 40 41 44]
  60 paths to exit 168
  [14 15 16 18 19 22 23 24 25 26 27 28 53 54 55 57]
  [14 15 16 18 19 22 23 24 25 26 27 28 53 54 55 56 57]
  [14 15 16 18 19 22 23 24 25 26 27 28 29 53 54 55 57]
  [14 15 16 18 19 22 23 24 25 26 27 28 29 53 54 55 56 57]
  [14 15 16 18 19 22 23 24 25 26 27 28 29 30 31 32 35 36 37 38 39 40 43 44 45 46 48]
  [14 15 16 18 19 22 23 24 25 26 27 28 29 30 31 32 35 36 37 38 39 40 43 44 45 46 47 48]
  [14 15 16 18 19 22 23 24 25 26 27 28 29 30 31 32 35 36 37 38 39 40 41 44 45 46 48]
  [14 15 16 18 19 22 23 24 25 26 27 28 29 30 31 32 35 36 37 38 39 40 41 44 45 46 47 48]
  [14 15 16 18 19 22 23 24 25 26 27 28 29 30 31 32 33 36 37 38 39 40 43 44 45 46 48]
  [14 15 16 18 19 22 23 24 25 26 27 28 29 30 31 32 33 36 37 38 39 40 43 44 45 46 47 48]
  [14 15 16 18 19 22 23 24 25 26 27 28 29 30 31 32 33 36 37 38 39 40 41 44 45 46 48]
  [14 15 16 18 19 22 23 24 25 26 27 28 29 30 31 32 33 36 37 38 39 40 41 44 45 46 47 48]
  [14 15 16 18 19 20 23 24 25 26 27 28 53 54 55 57]
  [14 15 16 18 19 20 23 24 25 26 27 28 53 54 55 56 57]
  [14 15 16 18 19 20 23 24 25 26 27 28 29 53 54 55 57]
  [14 15 16 18 19 20 23 24 25 26 27 28 29 53 54 55 56 57]
  [14 15 16 18 19 20 23 24 25 26 27 28 29 30 31 32 35 36 37 38 39 40 43 44 45 46 48]
  [14 15 16 18 19 20 23 24 25 26 27 28 29 30 31 32 35 36 37 38 39 40 43 44 45 46 47 48]
  [14 15 16 18 19 20 23 24 25 26 27 28 29 30 31 32 35 36 37 38 39 40 41 44 45 46 48]
  [14 15 16 18 19 20 23 24 25 26 27 28 29 30 31 32 35 36 37 38 39 40 41 44 45 46 47 48]
  [14 15 16 18 19 20 23 24 25 26 27 28 29 30 31 32 33 36 37 38 39 40 43 44 45 46 48]
  [14 15 16 18 19 20 23 24 25 26 27 28 29 30 31 32 33 36 37 38 39 40 43 44 45 46 47 48]
  [14 15 16 18 19 20 23 24 25 26 27 28 29 30 31 32 33 36 37 38 39 40 41 44 45 46 48]
  [14 15 16 18 19 20 23 24 25 26 27 28 29 30 31 32 33 36 37 38 39 40 41 44 45 46 47 48]
  [14 15 16 23 24 25 26 27 28 53 54 55 57]
  [14 15 16 23 24 25 26 27 28 53 54 55 56 57]
  [14 15 16 23 24 25 26 27 28 29 53 54 55 57]
  [14 15 16 23 24 25 26 27 28 29 53 54 55 56 57]
  [14 15 16 23 24 25 26 27 28 29 30 31 32 35 36 37 38 39 40 43 44 45 46 48]
  [14 15 16 23 24 25 26 27 28 29 30 31 32 35 36 37 38 39 40 43 44 45 46 47 48]
  [14 15 16 23 24 25 26 27 28 29 30 31 32 35 36 37 38 39 40 41 44 45 46 48]
  [14 15 16 23 24 25 26 27 28 29 30 31 32 35 36 37 38 39 40 41 44 45 46 47 48]
  [14 15 16 23 24 25 26 27 28 29 30 31 32 33 36 37 38 39 40 43 44 45 46 48]
  [14 15 16 23 24 25 26 27 28 29 30 31 32 33 36 37 38 39 40 43 44 45 46 47 48]
  [14 15 16 23 24 25 26 27 28 29 30 31 32 33 36 37 38 39 40 41 44 45 46 48]
  [14 15 16 23 24 25 26 27 28 29 30 31 32 33 36 37 38 39 40 41 44 45 46 47 48]
  [14 15 16 18 19 22 23 24 25 26 27 28 53 54 55 57]
  [14 15 16 18 19 22 23 24 25 26 27 28 53 54 55 56 57]
  [14 15 16 18 19 22 23 24 25 26 27 28 29 53 54 55 57]
  [14 15 16 18 19 22 23 24 25 26 27 28 29 53 54 55 56 57]
  [14 15 16 18 19 22 23 24 25 26 27 28 29 30 31 32 35 36 37 38 39 40 43 44 45 46 48]
  [14 15 16 18 19 22 23 24 25 26 27 28 29 30 31 32 35 36 37 38 39 40 43 44 45 46 47 48]
  [14 15 16 18 19 22 23 24 25 26 27 28 29 30 31 32 35 36 37 38 39 40 41 44 45 46 48]
  [14 15 16 18 19 22 23 24 25 26 27 28 29 30 31 32 35 36 37 38 39 40 41 44 45 46 47 48]
  [14 15 16 18 19 22 23 24 25 26 27 28 29 30 31 32 33 36 37 38 39 40 43 44 45 46 48]
  [14 15 16 18 19 22 23 24 25 26 27 28 29 30 31 32 33 36 37 38 39 40 43 44 45 46 47 48]
  [14 15 16 18 19 22 23 24 25 26 27 28 29 30 31 32 33 36 37 38 39 40 41 44 45 46 48]
  [14 15 16 18 19 22 23 24 25 26 27 28 29 30 31 32 33 36 37 38 39 40 41 44 45 46 47 48]
  [14 15 16 18 19 20 23 24 25 26 27 28 53 54 55 57]
  [14 15 16 18 19 20 23 24 25 26 27 28 53 54 55 56 57]
  [14 15 16 18 19 20 23 24 25 26 27 28 29 53 54 55 57]
  [14 15 16 18 19 20 23 24 25 26 27 28 29 53 54 55 56 57]
  [14 15 16 18 19 20 23 24 25 26 27 28 29 30 31 32 35 36 37 38 39 40 43 44 45 46 48]
  [14 15 16 18 19 20 23 24 25 26 27 28 29 30 31 32 35 36 37 38 39 40 43 44 45 46 47 48]
  [14 15 16 18 19 20 23 24 25 26 27 28 29 30 31 32 35 36 37 38 39 40 41 44 45 46 48]
  [14 15 16 18 19 20 23 24 25 26 27 28 29 30 31 32 35 36 37 38 39 40 41 44 45 46 47 48]
  [14 15 16 18 19 20 23 24 25 26 27 28 29 30 31 32 33 36 37 38 39 40 43 44 45 46 48]
  [14 15 16 18 19 20 23 24 25 26 27 28 29 30 31 32 33 36 37 38 39 40 43 44 45 46 47 48]
  [14 15 16 18 19 20 23 24 25 26 27 28 29 30 31 32 33 36 37 38 39 40 41 44 45 46 48]
  [14 15 16 18 19 20 23 24 25 26 27 28 29 30 31 32 33 36 37 38 39 40 41 44 45 46 47 48]
ebb entry:  62
  ebb type:   block
  ebb blocks: [62]
  ebb cost:   3
  ebb exits:  [63]
  ebb succs:  [63]
  1 paths to exit 63
  [62]
ebb entry:  63
  ebb type:   loop
  ebb blocks: [63 64 65 66 67 68 69 70 71 72 73]
  ebb cost:   (list_max([33*I(((pn1 * 10) + ln6) < 429496729, ln6 = rn0 + -48;pn1 = (0 * 10) + (rn0 + -48), ln6 = rn0 + -48;pn1 = (pn1 * 10) + ln6); 38*I(((pn1 * 10) + ln6) < 429496729, ln6 = rn0 + -48;pn1 = (0 * 10) + (rn0 + -48), ln6 = (((pn0))) + -48;pn1 = (pn1 * 10) + ln6)])) + 2
  ebb exits:  [74]
  ebb succs:  [74]
  4 paths to exit 74
  [63 64 65 68 69 70 73]
  [63 64 65 68 69 70 71 72 73]
  [63 64 65 66 69 70 73]
  [63 64 65 66 69 70 71 72 73]
  2 loop paths
  [63 64 65 68 69 70 71]  [63 64 65 66 69 70 71]
  4 post loop exit paths
  [73]  [72 73]  [73]  [72 73]
ebb entry:  74
  ebb type:   block
  ebb blocks: [74]
  ebb cost:   4
  ebb exits:  [75]
  ebb succs:  [75]
  1 paths to exit 75
  [74]
ebb entry:  75
  ebb type:   block
  ebb blocks: [75 76]
  ebb cost:   5
  ebb exits:  [77 90]
  ebb succs:  [90 77]
  1 paths to exit 77
  [75 76]
  1 paths to exit 90
  [75 76]
ebb entry:  77
  ebb type:   block
  ebb blocks: [77]
  ebb cost:   8
  ebb exits:  [78]
  ebb succs:  [78]
  1 paths to exit 78
  [77]
ebb entry:  78
  ebb type:   loop
  ebb blocks: [78 79 80 81 82 83 84 85 86 87]
  ebb cost:   (list_max([39*I(((lN7 + lN8) * 10) <= ((i64.extend_i32_u(rn0 + -48)) xor -1), rn0 = rn0;lN8 = i64.extend_i32_u(rn0 + -48);lN7 = 0 * 10, rn0 = rn0;lN8 = i64.extend_i32_u(rn0 + -48);lN7 = (lN7 + 0L) * 10); 44*I(((lN7 + lN8) * 10) <= ((i64.extend_i32_u((i32.load8_u@(i32.load@(pn0))) + -48)) xor -1), pn0 = pn0;lN8 = i64.extend_i32_u(rn0 + -48);lN7 = 0 * 10, pn0 = pn0;lN8 = i64.extend_i32_u((((pn0))) + -48);lN7 = (lN7 + 0L) * 10)])) + 1
  ebb exits:  [88 90]
  ebb succs:  [90 88]
  2 paths to exit 88
  [78 79 80 83 84 85 86 87]
  [78 79 80 81 84 85 86 87]
  4 paths to exit 90
  [78 79 80 83 84 85]
  [78 79 80 83 84]
  [78 79 80 81 84 85]
  [78 79 80 81 84]
  2 loop paths
  [78 79 80 83 84 85 86]  [78 79 80 81 84 85 86]
  2 post loop exit paths
  [87]  [87]
ebb entry:  88
  ebb type:   block
  ebb blocks: [88 89]
  ebb cost:   3
  ebb exits:  [90 153]
  ebb succs:  [153 90]
  0 paths to exit 90

  1 paths to exit 153
  [88]
ebb entry:  90
  ebb type:   block
  ebb blocks: [90 91 92]
  ebb cost:   7
  ebb exits:  [93 153 164]
  ebb succs:  [164 153 93]
  0 paths to exit 93

  1 paths to exit 153
  [90]
  1 paths to exit 164
  [90 91]
ebb entry:  93
  ebb type:   block
  ebb blocks: [93 94 95 96]
  ebb cost:   19
  ebb exits:  [97 110 125]
  ebb succs:  [125 110 97]
  1 paths to exit 97
  [93 94 95 96]
  1 paths to exit 110
  [93 94 95 96]
  1 paths to exit 125
  [93 94]
ebb entry:  97
  ebb type:   block
  ebb blocks: [97]
  ebb cost:   3
  ebb exits:  [98]
  ebb succs:  [98]
  1 paths to exit 98
  [97]
ebb entry:  98
  ebb type:   loop
  ebb blocks: [98 99 100 101 102 103 104 105 106 107 108]
  ebb cost:   (list_max([34*I((ln9 + (ln6 * pn1)) < 119304647, pn1 = select(pn1, 10, pn1);ln6 = ((rn0 + 157537)) + (0 * (select(pn1, 10, pn1)));ln9 = (rn0 + 157537), pn1 = pn1;ln6 = 0 + (ln6 * pn1);ln9 = (rn0 + 157537)); 39*I((ln9 + (ln6 * pn1)) < 119304647, pn1 = select(pn1, 10, pn1);ln6 = ((rn0 + 157537)) + (0 * (select(pn1, 10, pn1)));ln9 = (rn0 + 157537), pn1 = pn1;ln6 = 0 + (ln6 * pn1);ln9 = ((((pn0))) + 157537))])) + 2
  ebb exits:  [109]
  ebb succs:  [109]
  4 paths to exit 109
  [98 99 100 103 104 105 108]
  [98 99 100 103 104 105 106 107 108]
  [98 99 100 101 104 105 108]
  [98 99 100 101 104 105 106 107 108]
  2 loop paths
  [98 99 100 103 104 105 106]  [98 99 100 101 104 105 106]
  4 post loop exit paths
  [108]  [107 108]  [108]  [107 108]
ebb entry:  109
  ebb type:   block
  ebb blocks: [109]
  ebb cost:   4
  ebb exits:  [110]
  ebb succs:  [110]
  1 paths to exit 110
  [109]
ebb entry:  110
  ebb type:   block
  ebb blocks: [110]
  ebb cost:   4
  ebb exits:  [111 153]
  ebb succs:  [153 111]
  1 paths to exit 111
  [110]
  1 paths to exit 153
  [110]
ebb entry:  111
  ebb type:   block
  ebb blocks: [111]
  ebb cost:   4
  ebb exits:  [112]
  ebb succs:  [112]
  1 paths to exit 112
  [111]
ebb entry:  112
  ebb type:   loop
  ebb blocks: [112 113 114 115 116 117 118 119 120 121 122]
  ebb cost:   (list_max([50*I(not((i64.load@(ln2)) != 0), ln2 = g0 - 16, ln2 = 0); 55*I(not((i64.load@(ln2)) != 0), ln2 = g0 - 16, ln2 = 0)])) + 0
  ebb exits:  [123 153]
  ebb succs:  [153 123]
  0 paths to exit 123

  5 paths to exit 153
  [112 113 114 115 118 119 120]
  [112 113 114 115 118 119]
  [112 113 114 115 116 119 120]
  [112 113 114 115 116 119]
  [112]
  2 loop paths
  [112 113 114 115 118 119 120 121]  [112 113 114 115 116 119 120 121]
ebb entry:  123
  ebb type:   block
  ebb blocks: [123 124]
  ebb cost:   1
  ebb exits:  [125 170]
  ebb succs:  [170 125]
  0 paths to exit 125

  1 paths to exit 170
  [123]
ebb entry:  125
  ebb type:   block
  ebb blocks: [125 126]
  ebb cost:   22
  ebb exits:  [127 140]
  ebb succs:  [140 127]
  1 paths to exit 127
  [125 126]
  1 paths to exit 140
  [125 126]
ebb entry:  127
  ebb type:   block
  ebb blocks: [127]
  ebb cost:   3
  ebb exits:  [128]
  ebb succs:  [128]
  1 paths to exit 128
  [127]
ebb entry:  128
  ebb type:   loop
  ebb blocks: [128 129 130 131 132 133 134 135 136 137 138]
  ebb cost:   (list_max([34*I((ln6 || (ln9 shl ln11)) < 134217728, ln11 = (((((select(pn1, 10, pn1)) * 23) shr_u 5) && 7) + 157793);ln9 = ((rn0 + 157537)) || (0 shl ((((((select(pn1, 10, pn1)) * 23) shr_u 5) && 7) + 157793)));ln6 = (rn0 + 157537), ln11 = ln11;ln9 = ln6 || (0 shl ln11);ln6 = (rn0 + 157537)); 39*I((ln6 || (ln9 shl ln11)) < 134217728, ln11 = (((((select(pn1, 10, pn1)) * 23) shr_u 5) && 7) + 157793);ln9 = ((rn0 + 157537)) || (0 shl ((((((select(pn1, 10, pn1)) * 23) shr_u 5) && 7) + 157793)));ln6 = (rn0 + 157537), ln11 = ln11;ln9 = ln6 || (0 shl ln11);ln6 = ((((pn0))) + 157537))])) + 2
  ebb exits:  [139]
  ebb succs:  [139]
  4 paths to exit 139
  [128 129 130 133 134 135 138]
  [128 129 130 133 134 135 136 137 138]
  [128 129 130 131 134 135 138]
  [128 129 130 131 134 135 136 137 138]
  2 loop paths
  [128 129 130 133 134 135 136]  [128 129 130 131 134 135 136]
  4 post loop exit paths
  [138]  [137 138]  [138]  [137 138]
ebb entry:  139
  ebb type:   block
  ebb blocks: [139]
  ebb cost:   4
  ebb exits:  [140]
  ebb succs:  [140]
  1 paths to exit 140
  [139]
ebb entry:  140
  ebb type:   block
  ebb blocks: [140 141]
  ebb cost:   13
  ebb exits:  [142 153]
  ebb succs:  [153 142]
  1 paths to exit 142
  [140 141]
  2 paths to exit 153
  [140 141]
  [140]
ebb entry:  142
  ebb type:   block
  ebb blocks: [142]
  ebb cost:   1
  ebb exits:  [143]
  ebb succs:  [143]
  1 paths to exit 143
  [142]
ebb entry:  143
  ebb type:   loop
  ebb blocks: [143 144 145 146 147 148 149 150 151]
  ebb cost:   (list_max([38*I(((lN3 shl lN8) || ((i64.extend_i32_u(ln6)) && 255)) <= lN10, lN10 = -1 shr_u (i64.extend_i32_u((((((select(pn1, 10, pn1)) * 23) shr_u 5) && 7) + 157793)));ln6 = (rn0 + 157537);lN8 = i64.extend_i32_u((((((select(pn1, 10, pn1)) * 23) shr_u 5) && 7) + 157793));lN3 = (0 shl (i64.extend_i32_u((((((select(pn1, 10, pn1)) * 23) shr_u 5) && 7) + 157793)))) || ((i64.extend_i32_u((rn0 + 157537))) && 255), lN10 = lN10;ln6 = (rn0 + 157537);lN8 = 0L;lN3 = (lN3 shl 0L) || ((i64.extend_i32_u(ln6)) && 255)); 43*I(((lN3 shl lN8) || ((i64.extend_i32_u(ln6)) && 255)) <= lN10, lN10 = -1 shr_u (i64.extend_i32_u((((((select(pn1, 10, pn1)) * 23) shr_u 5) && 7) + 157793)));ln6 = (rn0 + 157537);lN8 = i64.extend_i32_u((((((select(pn1, 10, pn1)) * 23) shr_u 5) && 7) + 157793));lN3 = (0 shl (i64.extend_i32_u((((((select(pn1, 10, pn1)) * 23) shr_u 5) && 7) + 157793)))) || ((i64.extend_i32_u((rn0 + 157537))) && 255), lN10 = lN10;ln6 = ((((pn0))) + 157537);lN8 = 0L;lN3 = (lN3 shl 0L) || ((i64.extend_i32_u(ln6)) && 255))])) + 1
  ebb exits:  [152 153]
  ebb succs:  [153 152]
  2 paths to exit 152
  [143 144 145 148 149 150 151]
  [143 144 145 146 149 150 151]
  2 paths to exit 153
  [143 144 145 148 149]
  [143 144 145 146 149]
  2 loop paths
  [143 144 145 148 149 150]  [143 144 145 146 149 150]
  2 post loop exit paths
  [151]  [151]
ebb entry:  152
  ebb type:   block
  ebb blocks: [152]
  ebb cost:   1
  ebb exits:  [153]
  ebb succs:  [153]
  1 paths to exit 153
  [152]
ebb entry:  153
  ebb type:   block
  ebb blocks: [153]
  ebb cost:   7
  ebb exits:  [154 164]
  ebb succs:  [164 154]
  1 paths to exit 154
  [153]
  1 paths to exit 164
  [153]
ebb entry:  154
  ebb type:   block
  ebb blocks: [154]
  ebb cost:   1
  ebb exits:  [155]
  ebb succs:  [155]
  1 paths to exit 155
  [154]
ebb entry:  155
  ebb type:   loop
  ebb blocks: [155 156 157 158 159 160 161 162]
  ebb cost:   (list_max([20*I(pn1 > (i32.load8_u@(rn0 + 157537)), rn0 = rn0;pn1 = select(pn1, 10, pn1), rn0 = rn0;pn1 = pn1); 25*I(pn1 > (i32.load8_u@((i32.load8_u@(i32.load@(pn0))) + 157537)), pn0 = pn0;pn1 = select(pn1, 10, pn1), pn0 = pn0;pn1 = pn1)])) + 1
  ebb exits:  [163]
  ebb succs:  [163]
  2 paths to exit 163
  [155 156 157 160 161 162]
  [155 156 157 158 161 162]
  2 loop paths
  [155 156 157 160 161]  [155 156 157 158 161]
  2 post loop exit paths
  [162]  [162]
ebb entry:  163
  ebb type:   block
  ebb blocks: [163]
  ebb cost:   8
  ebb exits:  [164]
  ebb succs:  [164]
  1 paths to exit 164
  [163]
ebb entry:  164
  ebb type:   block
  ebb blocks: [164 165 166 167]
  ebb cost:   22
  ebb exits:  [168]
  ebb succs:  [168]
  2 paths to exit 168
  [164 165 167]
  [164 165 166 167]
ebb entry:  168
  ebb type:   block
  ebb blocks: [168 169]
  ebb cost:   6
  ebb exits:  [169]
  ebb succs:  []
  1 paths to exit 169
  [168]
ebb entry:  170
  ebb type:   block
  ebb blocks: [170]
  ebb cost:   0
  ebb exits:  []
  ebb succs:  []
