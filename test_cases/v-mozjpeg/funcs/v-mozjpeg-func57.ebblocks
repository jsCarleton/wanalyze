ebb entry:  0
  ebb type:   block
  ebb blocks: [0]
  ebb cost:   67
  ebb exits:  [1]
  ebb succs:  [1]
  2 paths to exit 1
  [0 1]
  [0]
ebb entry:  1
  ebb type:   loop
  ebb blocks: [1 2]
  ebb cost:   60*I((ln3 + 4) != 64, ln3 = 0 + 4, ln3 = ln3 + 4) + 1
  ebb exits:  [3]
  ebb succs:  [3]
  1 paths to exit 3
  [1 2]
  1 loop paths
  [1]
  1 post loop exit paths
  [2]
ebb entry:  3
  ebb type:   block
  ebb blocks: [3 4]
  ebb cost:   6
  ebb exits:  [5 47]
  ebb succs:  [47 5]
  1 paths to exit 5
  [3 4]
  1 paths to exit 47
  [3 4]
ebb entry:  5
  ebb type:   block
  ebb blocks: [5]
  ebb cost:   29
  ebb exits:  [6]
  ebb succs:  [6]
  1 paths to exit 6
  [5]
ebb entry:  6
  ebb type:   loop
  ebb blocks: [6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45]
  ebb cost:   (list_max([26*I((ln4 + 1) < 64, ln4 = 0 + 1, ln4 = ln4 + 1); 288*I((ln4 + 2) < 64, ln4 = 0 + 1, ln4 = ln4 + 2); 289*I((ln4 + 2) < 64, ln4 = 0 + 1, ln4 = ln4 + 2); 289*I((ln4 + 2) < 64, ln4 = 0 + 1, ln4 = ln4 + 2); 290*I((ln4 + 2) < 64, ln4 = 0 + 1, ln4 = ln4 + 2); 72*I((ln4 + 2) < 64, ln4 = 0 + 1, ln4 = ln4 + 2); 274*I((ln4 + 2) < 64, ln4 = 0 + 1, ln4 = (select(ln4 > 63, 63, ln4)) + 2); 275*I((ln4 + 2) < 64, ln4 = 0 + 1, ln4 = (select(ln4 > 63, 63, ln4)) + 2); 275*I((ln4 + 2) < 64, ln4 = 0 + 1, ln4 = (select(ln4 > 63, 63, ln4)) + 2); 276*I((ln4 + 2) < 64, ln4 = 0 + 1, ln4 = (select(ln4 > 63, 63, ln4)) + 2); 58*I((ln4 + 2) < 64, ln4 = 0 + 1, ln4 = (select(ln4 > 63, 63, ln4)) + 2)])) + 1
  ebb exits:  [46 49]
  ebb succs:  [49 46]
  11 paths to exit 46
  [6 7 8 43 44 45]
  [6 7 8 9 10 11 12 15 16 17 18 19 22 23 24 27 28 29 30 33 34 35 36 37 44 45]
  [6 7 8 9 10 11 12 15 16 17 18 19 22 23 24 27 28 29 30 31 34 35 36 37 44 45]
  [6 7 8 9 10 11 12 15 16 17 18 19 22 23 24 25 28 29 30 33 34 35 36 37 44 45]
  [6 7 8 9 10 11 12 15 16 17 18 19 22 23 24 25 28 29 30 31 34 35 36 37 44 45]
  [6 7 8 9 10 11 12 15 16 17 18 19 20 44 45]
  [6 7 8 9 10 11 12 13 18 19 22 23 24 27 28 29 30 33 34 35 36 37 44 45]
  [6 7 8 9 10 11 12 13 18 19 22 23 24 27 28 29 30 31 34 35 36 37 44 45]
  [6 7 8 9 10 11 12 13 18 19 22 23 24 25 28 29 30 33 34 35 36 37 44 45]
  [6 7 8 9 10 11 12 13 18 19 22 23 24 25 28 29 30 31 34 35 36 37 44 45]
  [6 7 8 9 10 11 12 13 18 19 20 44 45]
  0 paths to exit 49

  11 loop paths
  [6 7 8 43 44]  [6 7 8 9 10 11 12 15 16 17 18 19 22 23 24 27 28 29 30 33 34 35 36 37 44]  [6 7 8 9 10 11 12 15 16 17 18 19 22 23 24 27 28 29 30 31 34 35 36 37 44]  [6 7 8 9 10 11 12 15 16 17 18 19 22 23 24 25 28 29 30 33 34 35 36 37 44]  [6 7 8 9 10 11 12 15 16 17 18 19 22 23 24 25 28 29 30 31 34 35 36 37 44]  [6 7 8 9 10 11 12 15 16 17 18 19 20 44]  [6 7 8 9 10 11 12 13 18 19 22 23 24 27 28 29 30 33 34 35 36 37 44]  [6 7 8 9 10 11 12 13 18 19 22 23 24 27 28 29 30 31 34 35 36 37 44]  [6 7 8 9 10 11 12 13 18 19 22 23 24 25 28 29 30 33 34 35 36 37 44]  [6 7 8 9 10 11 12 13 18 19 22 23 24 25 28 29 30 31 34 35 36 37 44]  [6 7 8 9 10 11 12 13 18 19 20 44]
  11 post loop exit paths
  [45]  [45]  [45]  [45]  [45]  [45]  [45]  [45]  [45]  [45]  [45]
  ebb entry:  6
    ebb type:   block
    ebb blocks: [6 7 8 9]
    ebb cost:   30
    ebb exits:  [10 43]
    ebb succs:  [43 10]
    1 paths to exit 10
    [6 7 8 9]
    1 paths to exit 43
    [6 7 8]
  ebb entry:  10
    ebb type:   block
    ebb blocks: [10]
    ebb cost:   1
    ebb exits:  [11]
    ebb succs:  [11]
    1 paths to exit 11
    [10]
  ebb entry:  11
    ebb type:   loop
    ebb blocks: [11 12 13 14 15 16]
    ebb cost:   23*I((f32.load@(pn0 + ((i32.load@(144000 + ((ln2 + 1) shl 2))) shl 2))) > 0x42fe0000, ln2 = ln4;pn0 = pn0, ln2 = ln2 + 1;pn0 = pn0) + 5
    ebb exits:  [17 18]
    ebb succs:  [18 17]
    1 paths to exit 17
    [11 12 15 16]
    1 paths to exit 18
    [11 12 13]
    1 loop paths
    [11 12 15]
    2 post loop exit paths
    [16]    [13]
  ebb entry:  17
    ebb type:   block
    ebb blocks: [17]
    ebb cost:   1
    ebb exits:  [18]
    ebb succs:  [18]
    1 paths to exit 18
    [17]
  ebb entry:  18
    ebb type:   block
    ebb blocks: [18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33]
    ebb cost:   153
    ebb exits:  [34 44]
    ebb succs:  [44 34]
    4 paths to exit 34
    [18 19 22 23 24 27 28 29 30 33]
    [18 19 22 23 24 27 28 29 30 31]
    [18 19 22 23 24 25 28 29 30 33]
    [18 19 22 23 24 25 28 29 30 31]
    1 paths to exit 44
    [18 19 20]
  ebb entry:  34
    ebb type:   block
    ebb blocks: [34]
    ebb cost:   16
    ebb exits:  [35]
    ebb succs:  [35]
    1 paths to exit 35
    [34]
  ebb entry:  35
    ebb type:   loop
    ebb blocks: [35 36 37 38 39 40]
    ebb cost:   73*I(not(ln4 != ln3), ln3 = ln4;ln4 = ln4, ln3 = ln3;ln4 = ln4 + 1) + 3
    ebb exits:  [41 44]
    ebb succs:  [44 41]
    0 paths to exit 41

    1 paths to exit 44
    [35 36 37]
    1 loop paths
    [35 36 39]
    1 post loop exit paths
    [37]
  ebb entry:  41
    ebb type:   block
    ebb blocks: [41 42]
    ebb cost:   1
    ebb exits:  [43 49]
    ebb succs:  [43]
    0 paths to exit 43

    1 paths to exit 49
    [41]
  ebb entry:  43
    ebb type:   block
    ebb blocks: [43]
    ebb cost:   5
    ebb exits:  [44]
    ebb succs:  [44]
    1 paths to exit 44
    [43]
  ebb entry:  44
    ebb type:   block
    ebb blocks: [44 45]
    ebb cost:   5
    ebb exits:  [6 46]
    ebb succs:  [6]
    1 paths to exit 6
    [44]
    1 paths to exit 46
    [44 45]
ebb entry:  46
  ebb type:   block
  ebb blocks: [46]
  ebb cost:   1
  ebb exits:  [47]
  ebb succs:  [47]
  1 paths to exit 47
  [46]
ebb entry:  47
  ebb type:   block
  ebb blocks: [47 48]
  ebb cost:   1
  ebb exits:  [48]
  ebb succs:  []
  1 paths to exit 48
  [47]
ebb entry:  49
  ebb type:   block
  ebb blocks: [49]
  ebb cost:   0
  ebb exits:  []
  ebb succs:  []
