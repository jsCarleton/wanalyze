ebb entry:  0
  ebb type:   block
  ebb blocks: [0 1]
  ebb cost:   6
  ebb exits:  [2 52]
  ebb succs:  [52 2]
  1 paths to exit 2
  [0 1]
  1 paths to exit 52
  [0 1]
ebb entry:  2
  ebb type:   block
  ebb blocks: [2]
  ebb cost:   12
  ebb exits:  [3]
  ebb succs:  [3]
  1 paths to exit 3
  [2]
ebb entry:  3
  ebb type:   loop
  ebb blocks: [3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50]
  ebb cost:   (list_max([30*I((i32.load@(pn5)) < pn6, pn6 = pn6;pn5 = pn5, pn6 = pn6;pn5 = pn5); 75*I((i32.load@(pn5)) < pn6, pn6 = pn6;pn5 = pn5, pn6 = pn6;pn5 = pn5); 81*I((i32.load@(pn5)) < pn6, pn6 = pn6;pn5 = pn5, pn6 = pn6;pn5 = pn5); 83*I((i32.load@(pn5)) < pn6, pn6 = pn6;pn5 = pn5, pn6 = pn6;pn5 = pn5); 89*I((i32.load@(pn5)) < pn6, pn6 = pn6;pn5 = pn5, pn6 = pn6;pn5 = pn5); 102*I((i32.load@(pn5)) < pn6, pn6 = pn6;pn5 = pn5, pn6 = pn6;pn5 = pn5); 108*I((i32.load@(pn5)) < pn6, pn6 = pn6;pn5 = pn5, pn6 = pn6;pn5 = pn5); 138*I((i32.load@(pn5)) < pn6, pn6 = pn6;pn5 = pn5, pn6 = pn6;pn5 = pn5); 144*I((i32.load@(pn5)) < pn6, pn6 = pn6;pn5 = pn5, pn6 = pn6;pn5 = pn5); 77*I((i32.load@(pn5)) < pn6, pn6 = pn6;pn5 = pn5, pn6 = pn6;pn5 = pn5); 122*I((i32.load@(pn5)) < pn6, pn6 = pn6;pn5 = pn5, pn6 = pn6;pn5 = pn5); 128*I((i32.load@(pn5)) < pn6, pn6 = pn6;pn5 = pn5, pn6 = pn6;pn5 = pn5); 83*I((i32.load@(pn5)) < pn6, pn6 = pn6;pn5 = pn5, pn6 = pn6;pn5 = pn5); 128*I((i32.load@(pn5)) < pn6, pn6 = pn6;pn5 = pn5, pn6 = pn6;pn5 = pn5); 134*I((i32.load@(pn5)) < pn6, pn6 = pn6;pn5 = pn5, pn6 = pn6;pn5 = pn5); 91*I((i32.load@(pn5)) < pn6, pn6 = pn6;pn5 = pn5, pn6 = pn6;pn5 = pn5); 136*I((i32.load@(pn5)) < pn6, pn6 = pn6;pn5 = pn5, pn6 = pn6;pn5 = pn5); 142*I((i32.load@(pn5)) < pn6, pn6 = pn6;pn5 = pn5, pn6 = pn6;pn5 = pn5); 106*I((i32.load@(pn5)) < pn6, pn6 = pn6;pn5 = pn5, pn6 = pn6;pn5 = pn5); 151*I((i32.load@(pn5)) < pn6, pn6 = pn6;pn5 = pn5, pn6 = pn6;pn5 = pn5); 157*I((i32.load@(pn5)) < pn6, pn6 = pn6;pn5 = pn5, pn6 = pn6;pn5 = pn5); 146*I((i32.load@(pn5)) < pn6, pn6 = pn6;pn5 = pn5, pn6 = pn6;pn5 = pn5); 191*I((i32.load@(pn5)) < pn6, pn6 = pn6;pn5 = pn5, pn6 = pn6;pn5 = pn5); 197*I((i32.load@(pn5)) < pn6, pn6 = pn6;pn5 = pn5, pn6 = pn6;pn5 = pn5)])) + 1
  ebb exits:  [51 52]
  ebb succs:  [52 51]
  24 paths to exit 51
  [3 4 5 6 7 24 25 43 49 50]
  [3 4 5 6 7 24 25 43 44 45 46 48 49 50]
  [3 4 5 6 7 24 25 43 44 45 46 47 48 49 50]
  [3 4 5 6 7 24 25 26 27 41 45 46 48 49 50]
  [3 4 5 6 7 24 25 26 27 41 45 46 47 48 49 50]
  [3 4 5 6 7 24 25 26 27 28 29 30 35 36 39 40 41 45 46 48 49 50]
  [3 4 5 6 7 24 25 26 27 28 29 30 35 36 39 40 41 45 46 47 48 49 50]
  [3 4 5 6 7 24 25 26 27 28 29 30 31 32 33 34 35 36 39 40 41 45 46 48 49 50]
  [3 4 5 6 7 24 25 26 27 28 29 30 31 32 33 34 35 36 39 40 41 45 46 47 48 49 50]
  [3 4 5 6 7 8 9 22 43 49 50]
  [3 4 5 6 7 8 9 22 43 44 45 46 48 49 50]
  [3 4 5 6 7 8 9 22 43 44 45 46 47 48 49 50]
  [3 4 5 6 7 8 9 10 22 43 49 50]
  [3 4 5 6 7 8 9 10 22 43 44 45 46 48 49 50]
  [3 4 5 6 7 8 9 10 22 43 44 45 46 47 48 49 50]
  [3 4 5 6 7 8 9 10 11 22 43 49 50]
  [3 4 5 6 7 8 9 10 11 22 43 44 45 46 48 49 50]
  [3 4 5 6 7 8 9 10 11 22 43 44 45 46 47 48 49 50]
  [3 4 5 6 7 8 9 10 11 12 13 14 19 20 21 22 43 49 50]
  [3 4 5 6 7 8 9 10 11 12 13 14 19 20 21 22 43 44 45 46 48 49 50]
  [3 4 5 6 7 8 9 10 11 12 13 14 19 20 21 22 43 44 45 46 47 48 49 50]
  [3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 43 49 50]
  [3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 43 44 45 46 48 49 50]
  [3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 43 44 45 46 47 48 49 50]
  1 paths to exit 52
  [3 4 5 6 7 24]
  24 loop paths
  [3 4 5 6 7 24 25 43 49]  [3 4 5 6 7 24 25 43 44 45 46 48 49]  [3 4 5 6 7 24 25 43 44 45 46 47 48 49]  [3 4 5 6 7 24 25 26 27 41 45 46 48 49]  [3 4 5 6 7 24 25 26 27 41 45 46 47 48 49]  [3 4 5 6 7 24 25 26 27 28 29 30 35 36 39 40 41 45 46 48 49]  [3 4 5 6 7 24 25 26 27 28 29 30 35 36 39 40 41 45 46 47 48 49]  [3 4 5 6 7 24 25 26 27 28 29 30 31 32 33 34 35 36 39 40 41 45 46 48 49]  [3 4 5 6 7 24 25 26 27 28 29 30 31 32 33 34 35 36 39 40 41 45 46 47 48 49]  [3 4 5 6 7 8 9 22 43 49]  [3 4 5 6 7 8 9 22 43 44 45 46 48 49]  [3 4 5 6 7 8 9 22 43 44 45 46 47 48 49]  [3 4 5 6 7 8 9 10 22 43 49]  [3 4 5 6 7 8 9 10 22 43 44 45 46 48 49]  [3 4 5 6 7 8 9 10 22 43 44 45 46 47 48 49]  [3 4 5 6 7 8 9 10 11 22 43 49]  [3 4 5 6 7 8 9 10 11 22 43 44 45 46 48 49]  [3 4 5 6 7 8 9 10 11 22 43 44 45 46 47 48 49]  [3 4 5 6 7 8 9 10 11 12 13 14 19 20 21 22 43 49]  [3 4 5 6 7 8 9 10 11 12 13 14 19 20 21 22 43 44 45 46 48 49]  [3 4 5 6 7 8 9 10 11 12 13 14 19 20 21 22 43 44 45 46 47 48 49]  [3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 43 49]  [3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 43 44 45 46 48 49]  [3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 43 44 45 46 47 48 49]
  24 post loop exit paths
  [50]  [50]  [50]  [50]  [50]  [50]  [50]  [50]  [50]  [50]  [50]  [50]  [50]  [50]  [50]  [50]  [50]  [50]  [50]  [50]  [50]  [50]  [50]  [50]
  ebb entry:  3
    ebb type:   block
    ebb blocks: [3 4 5 6 7 8 9 10 11]
    ebb cost:   59
    ebb exits:  [12 22 24]
    ebb succs:  [24 22 12]
    1 paths to exit 12
    [3 4 5 6 7 8 9 10 11]
    3 paths to exit 22
    [3 4 5 6 7 8 9 10 11]
    [3 4 5 6 7 8 9 10]
    [3 4 5 6 7 8 9]
    1 paths to exit 24
    [3 4 5 6 7]
  ebb entry:  12
    ebb type:   block
    ebb blocks: [12]
    ebb cost:   1
    ebb exits:  [13]
    ebb succs:  [13]
    1 paths to exit 13
    [12]
  ebb entry:  13
    ebb type:   loop
    ebb blocks: [13 14 15 16 17 18 19 20]
    ebb cost:   (list_max([12*I((ln13 + 1) < ln10, ln10 = (pn0);ln13 = 0, ln10 = ln10;ln13 = ln13 + 1); 52*I((ln13 + 1) < (i32.load@(pn0)), pn0 = pn0;ln13 = 0, pn0 = pn0;ln13 = ln13 + 1)])) + 1
    ebb exits:  [21]
    ebb succs:  [21]
    2 paths to exit 21
    [13 14 19 20]
    [13 14 15 16 17 18 19 20]
    2 loop paths
    [13 14 19]    [13 14 15 16 17 18 19]
    2 post loop exit paths
    [20]    [20]
    ebb entry:  13
      ebb type:   block
      ebb blocks: [13 14]
      ebb cost:   5
      ebb exits:  [15 19]
      ebb succs:  [19 15]
      1 paths to exit 15
      [13 14]
      1 paths to exit 19
      [13 14]
    ebb entry:  15
      ebb type:   block
      ebb blocks: [15]
      ebb cost:   35
      ebb exits:  [16]
      ebb succs:  [16]
      2 paths to exit 16
      [15 16]
      [15]
    ebb entry:  16
      ebb type:   loop
      ebb blocks: [16 17]
      ebb cost:   24*I(ln10 < (i32.load@(pn0)), pn0 = pn0;ln10 = 1 + 1, pn0 = pn0;ln10 = ln10 + 1) + 1
      ebb exits:  [18]
      ebb succs:  [18]
      1 paths to exit 18
      [16 17]
      1 loop paths
      [16]
      1 post loop exit paths
      [17]
    ebb entry:  18
      ebb type:   block
      ebb blocks: [18]
      ebb cost:   4
      ebb exits:  [19]
      ebb succs:  [19]
      1 paths to exit 19
      [18]
    ebb entry:  19
      ebb type:   block
      ebb blocks: [19 20]
      ebb cost:   8
      ebb exits:  [13 21]
      ebb succs:  [13]
      1 paths to exit 13
      [19]
      1 paths to exit 21
      [19 20]
  ebb entry:  21
    ebb type:   block
    ebb blocks: [21]
    ebb cost:   1
    ebb exits:  [22]
    ebb succs:  [22]
    1 paths to exit 22
    [21]
  ebb entry:  22
    ebb type:   block
    ebb blocks: [22 23]
    ebb cost:   23
    ebb exits:  [24 43]
    ebb succs:  [43 24]
    0 paths to exit 24

    1 paths to exit 43
    [22]
  ebb entry:  24
    ebb type:   block
    ebb blocks: [24 25 26 27]
    ebb cost:   20
    ebb exits:  [28 41 43 52]
    ebb succs:  [43 41 28]
    1 paths to exit 28
    [24 25 26 27]
    1 paths to exit 41
    [24 25 26 27]
    1 paths to exit 43
    [24 25]
    1 paths to exit 52
    [24]
  ebb entry:  28
    ebb type:   block
    ebb blocks: [28]
    ebb cost:   1
    ebb exits:  [29]
    ebb succs:  [29]
    1 paths to exit 29
    [28]
  ebb entry:  29
    ebb type:   loop
    ebb blocks: [29 30 31 32 33 34 35 36 37 38 39]
    ebb cost:   (list_max([20*I(not((ln12 + 1) >= ln11), ln11 = (pn0);ln12 = 0 + 1, ln11 = ln11;ln12 = ln12 + 1); 56*I(not((ln12 + 1) >= (i32.load@(pn0))), pn0 = pn0;ln12 = 0 + 1, pn0 = pn0;ln12 = ln12 + 1)])) + 1
    ebb exits:  [40]
    ebb succs:  [40]
    2 paths to exit 40
    [29 30 35 36 39]
    [29 30 31 32 33 34 35 36 39]
    2 loop paths
    [29 30 35 36 37]    [29 30 31 32 33 34 35 36 37]
    2 post loop exit paths
    [39]    [39]
    ebb entry:  29
      ebb type:   block
      ebb blocks: [29 30]
      ebb cost:   5
      ebb exits:  [31 35]
      ebb succs:  [35 31]
      1 paths to exit 31
      [29 30]
      1 paths to exit 35
      [29 30]
    ebb entry:  31
      ebb type:   block
      ebb blocks: [31]
      ebb cost:   31
      ebb exits:  [32]
      ebb succs:  [32]
      2 paths to exit 32
      [31 32]
      [31]
    ebb entry:  32
      ebb type:   loop
      ebb blocks: [32 33]
      ebb cost:   14*I((ln10 + 1) != ln14, ln14 = ln14;ln10 = ln10 + 1, ln14 = ln14;ln10 = ln10 + 1) + 1
      ebb exits:  [34]
      ebb succs:  [34]
      1 paths to exit 34
      [32 33]
      1 loop paths
      [32]
      1 post loop exit paths
      [33]
    ebb entry:  34
      ebb type:   block
      ebb blocks: [34]
      ebb cost:   4
      ebb exits:  [35]
      ebb succs:  [35]
      1 paths to exit 35
      [34]
    ebb entry:  35
      ebb type:   block
      ebb blocks: [35 36 37 38 39]
      ebb cost:   9
      ebb exits:  [29 40]
      ebb succs:  [29]
      0 paths to exit 29

      1 paths to exit 40
      [35 36 39]
  ebb entry:  40
    ebb type:   block
    ebb blocks: [40]
    ebb cost:   4
    ebb exits:  [41]
    ebb succs:  [41]
    1 paths to exit 41
    [40]
  ebb entry:  41
    ebb type:   block
    ebb blocks: [41 42]
    ebb cost:   4
    ebb exits:  [43 45]
    ebb succs:  [45 43]
    0 paths to exit 43

    1 paths to exit 45
    [41]
  ebb entry:  43
    ebb type:   block
    ebb blocks: [43 44]
    ebb cost:   5
    ebb exits:  [45 49]
    ebb succs:  [49 45]
    1 paths to exit 45
    [43 44]
    1 paths to exit 49
    [43]
  ebb entry:  45
    ebb type:   block
    ebb blocks: [45 46 47 48]
    ebb cost:   50
    ebb exits:  [49]
    ebb succs:  [49]
    2 paths to exit 49
    [45 46 48]
    [45 46 47 48]
  ebb entry:  49
    ebb type:   block
    ebb blocks: [49 50]
    ebb cost:   6
    ebb exits:  [3 51]
    ebb succs:  [3]
    1 paths to exit 3
    [49]
    1 paths to exit 51
    [49 50]
ebb entry:  51
  ebb type:   block
  ebb blocks: [51]
  ebb cost:   1
  ebb exits:  [52]
  ebb succs:  [52]
  1 paths to exit 52
  [51]
ebb entry:  52
  ebb type:   block
  ebb blocks: [52 53]
  ebb cost:   1
  ebb exits:  [53]
  ebb succs:  []
  1 paths to exit 53
  [52]
