ebb entry:  0
  ebb type:   block
  ebb blocks: [0]
  ebb cost:   34
  ebb exits:  [1]
  ebb succs:  [1]
  1 paths to exit 1
  [0]
ebb entry:  1
  ebb type:   block
  ebb blocks: [1]
  ebb cost:   1
  ebb exits:  [2]
  ebb succs:  [2]
  1 paths to exit 2
  [1]
ebb entry:  2
  ebb type:   loop
  ebb blocks: [2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19]
  ebb cost:   (list_max([38*I(i32.eqz(((i32.load@(pn1 + ln5)) && ((i32.load@(pn1 + ln5)) shl 1)) && -2139062144), ln5 = (pn0);pn1 = ((pn0)) && pn1;ln5 = (pn0);pn1 = ((pn0)) && pn1, ln5 = ln5;pn1 = ((ln6 + 4) + pn1) && ln3;ln5 = ln5;pn1 = ((ln6 + 4) + pn1) && ln3); 78*I(i32.eqz(((i32.load@(pn1 + ln5)) && ((i32.load@(pn1 + ln5)) shl 1)) && -2139062144), ln5 = (pn0);pn1 = ((pn0)) && pn1;ln5 = (pn0);pn1 = ((pn0)) && pn1, ln5 = ln5;pn1 = ((ln6 + 4) + pn1) && ln3;ln5 = ln5;pn1 = ((ln6 + 4) + pn1) && ln3); 85*I(i32.eqz(((i32.load@(pn1 + ln5)) && ((i32.load@(pn1 + ln5)) shl 1)) && -2139062144), ln5 = (pn0);pn1 = ((pn0)) && pn1;ln5 = (pn0);pn1 = ((pn0)) && pn1, ln5 = ln5;pn1 = ((ln6 + 4) + pn1) && ln3;ln5 = ln5;pn1 = ((ln6 + 4) + pn1) && ln3); 92*I(i32.eqz(((i32.load@(pn1 + ln5)) && ((i32.load@(pn1 + ln5)) shl 1)) && -2139062144), ln5 = (pn0);pn1 = ((pn0)) && pn1;ln5 = (pn0);pn1 = ((pn0)) && pn1, ln5 = ln5;pn1 = ((ln6 + 4) + pn1) && ln3;ln5 = ln5;pn1 = ((ln6 + 4) + pn1) && ln3); 100*I(i32.eqz(((i32.load@(pn1 + ln5)) && ((i32.load@(pn1 + ln5)) shl 1)) && -2139062144), ln5 = (pn0);pn1 = ((pn0)) && pn1;ln5 = (pn0);pn1 = ((pn0)) && pn1, ln5 = ln5;pn1 = ((ln6 + 4) + pn1) && ln3;ln5 = ln5;pn1 = ((ln6 + 4) + pn1) && ln3)])) + 6
  ebb exits:  [20 21 23]
  ebb succs:  [23 21 20]
  5 paths to exit 20
  [2 3 18 19]
  [2 3 4 5 6 7 12 13 18 19]
  [2 3 4 5 6 7 8 12 13 18 19]
  [2 3 4 5 6 7 8 9 12 13 18 19]
  [2 3 4 5 6 7 8 9 10 11 12 13 18 19]
  1 paths to exit 21
  [2 3 4 5 6 7 8 9 10]
  1 paths to exit 23
  [2 3 4 5 15 16]
  5 loop paths
  [2 3 18]  [2 3 4 5 6 7 12 13 18]  [2 3 4 5 6 7 8 12 13 18]  [2 3 4 5 6 7 8 9 12 13 18]  [2 3 4 5 6 7 8 9 10 11 12 13 18]
  6 post loop exit paths
  [19]  [19]  [19]  [19]  [19]  [15 16]
  ebb entry:  2
    ebb type:   block
    ebb blocks: [2 3]
    ebb cost:   20
    ebb exits:  [4 18]
    ebb succs:  [18 4]
    1 paths to exit 4
    [2 3]
    1 paths to exit 18
    [2 3]
  ebb entry:  4
    ebb type:   block
    ebb blocks: [4]
    ebb cost:   1
    ebb exits:  [5]
    ebb succs:  [5]
    1 paths to exit 5
    [4]
  ebb entry:  5
    ebb type:   loop
    ebb blocks: [5 6 7 8 9 10 11 12 13 14 15]
    ebb cost:   (list_max([38*I((pn2 + -1) && pn2, pn2 = (((((pn1 + ln5)) xor ln9) xor -1) && ((((pn1 + ln5)) xor ln9) + -16843009)) && -2139062144;pn2 = (((((pn1 + ln5)) xor ln9) xor -1) && ((((pn1 + ln5)) xor ln9) + -16843009)) && -2139062144, pn2 = (pn2 + -1) && pn2;pn2 = (pn2 + -1) && pn2); 45*I((pn2 + -1) && pn2, pn2 = (((((pn1 + ln5)) xor ln9) xor -1) && ((((pn1 + ln5)) xor ln9) + -16843009)) && -2139062144;pn2 = (((((pn1 + ln5)) xor ln9) xor -1) && ((((pn1 + ln5)) xor ln9) + -16843009)) && -2139062144, pn2 = (pn2 + -1) && pn2;pn2 = (pn2 + -1) && pn2); 52*I((pn2 + -1) && pn2, pn2 = (((((pn1 + ln5)) xor ln9) xor -1) && ((((pn1 + ln5)) xor ln9) + -16843009)) && -2139062144;pn2 = (((((pn1 + ln5)) xor ln9) xor -1) && ((((pn1 + ln5)) xor ln9) + -16843009)) && -2139062144, pn2 = (pn2 + -1) && pn2;pn2 = (pn2 + -1) && pn2); 60*I((pn2 + -1) && pn2, pn2 = (((((pn1 + ln5)) xor ln9) xor -1) && ((((pn1 + ln5)) xor ln9) + -16843009)) && -2139062144;pn2 = (((((pn1 + ln5)) xor ln9) xor -1) && ((((pn1 + ln5)) xor ln9) + -16843009)) && -2139062144, pn2 = (pn2 + -1) && pn2;pn2 = (pn2 + -1) && pn2)])) + 1
    ebb exits:  [16 18 21]
    ebb succs:  [18 16]
    1 paths to exit 16
    [5 15]
    4 paths to exit 18
    [5 6 7 12 13]
    [5 6 7 8 12 13]
    [5 6 7 8 9 12 13]
    [5 6 7 8 9 10 11 12 13]
    1 paths to exit 21
    [5 6 7 8 9 10]
    4 loop paths
    [5 6 7 12]    [5 6 7 8 12]    [5 6 7 8 9 12]    [5 6 7 8 9 10 11 12]
    5 post loop exit paths
    [15]    [13]    [13]    [13]    [13]
  ebb entry:  16
    ebb type:   block
    ebb blocks: [16 17]
    ebb cost:   5
    ebb exits:  [18 23]
    ebb succs:  [18]
    0 paths to exit 18

    1 paths to exit 23
    [16]
  ebb entry:  18
    ebb type:   block
    ebb blocks: [18 19]
    ebb cost:   19
    ebb exits:  [2 20]
    ebb succs:  [2]
    1 paths to exit 2
    [18]
    1 paths to exit 20
    [18 19]
ebb entry:  20
  ebb type:   block
  ebb blocks: [20]
  ebb cost:   3
  ebb exits:  [21]
  ebb succs:  [21]
  1 paths to exit 21
  [20]
ebb entry:  21
  ebb type:   block
  ebb blocks: [21 22]
  ebb cost:   2
  ebb exits:  [22]
  ebb succs:  []
  1 paths to exit 22
  [21]
ebb entry:  23
  ebb type:   block
  ebb blocks: [23]
  ebb cost:   0
  ebb exits:  []
  ebb succs:  []
