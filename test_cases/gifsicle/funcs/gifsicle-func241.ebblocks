ebb entry:  0
  ebb type:   block
  ebb blocks: [0 1 2 3 4 5]
  ebb cost:   list_max([18; 18; 5])
  ebb exits:  [6 66 73]
  ebb succs:  [73 66 6]
  1 paths to exit 6
  [0 3 4 5]
  1 paths to exit 66
  [0 3 4 5]
  1 paths to exit 73
  [0 1]
ebb entry:  6
  ebb type:   block
  ebb blocks: [6]
  ebb cost:   7
  ebb exits:  [7]
  ebb succs:  [7]
  1 paths to exit 7
  [6]
ebb entry:  7
  ebb type:   loop
  ebb blocks: [7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64]
  ebb cost:   (list_max([[34*I((ln6 + 1) < (i32.load@(pn1)), pn1 = pn1;ln6 = ln6, pn1 = pn1;ln6 = ln6 + 1); 45*I((ln6 + 1) < (i32.load@(pn1)), pn1 = pn1;ln6 = ln6, pn1 = pn1;ln6 = ln6 + 1); 98*I((ln6 + 1) < (i32.load@(pn1)), pn1 = pn1;ln6 = ln6, pn1 = pn1;ln6 = ln6 + 1); 132*I((ln6 + 1) < (i32.load@(pn1)), pn1 = pn1;ln6 = ln6, pn1 = pn1;ln6 = ln6 + 1); 130*I((ln6 + 1) < (i32.load@(pn1)), pn1 = pn1;ln6 = ln6, pn1 = pn1;ln6 = ln6 + 1); 138*I((ln6 + 1) < (i32.load@(pn1)), pn1 = pn1;ln6 = ln6, pn1 = pn1;ln6 = ln6 + 1); 136*I((ln6 + 1) < (i32.load@(pn1)), pn1 = pn1;ln6 = ln6, pn1 = pn1;ln6 = ln6 + 1); 144*I((ln6 + 1) < (i32.load@(pn1)), pn1 = pn1;ln6 = ln6, pn1 = pn1;ln6 = ln6 + 1); 142*I((ln6 + 1) < (i32.load@(pn1)), pn1 = pn1;ln6 = ln6, pn1 = pn1;ln6 = ln6 + 1); 115*I((ln6 + 1) < (i32.load@(pn1)), pn1 = pn1;ln6 = ln6, pn1 = pn1;ln6 = ln6 + 1); 80*I((ln6 + 1) < (i32.load@(pn1)), pn1 = pn1;ln6 = ln6, pn1 = pn1;ln6 = ln6 + 1)]])) + (list_max([1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 9; 33; 39; 43; 23 + |f25|; 47 + |f25|; 53 + |f25|; 57 + |f25|; 26 + |f25|; 50 + |f25|; 56 + |f25|; 60 + |f25|; 18; 42; 48; 52; 32 + |f25|; 56 + |f25|; 62 + |f25|; 66 + |f25|; 35 + |f25|; 59 + |f25|; 65 + |f25|; 69 + |f25|; 9; 33; 39; 43; 23 + |f25|; 47 + |f25|; 53 + |f25|; 57 + |f25|; 26 + |f25|; 50 + |f25|; 56 + |f25|; 60 + |f25|; 18; 42; 48; 52; 32 + |f25|; 56 + |f25|; 62 + |f25|; 66 + |f25|; 35 + |f25|; 59 + |f25|; 65 + |f25|; 69 + |f25|; 9; 33; 39; 43; 23 + |f25|; 47 + |f25|; 53 + |f25|; 57 + |f25|; 26 + |f25|; 50 + |f25|; 56 + |f25|; 60 + |f25|; 18; 42; 48; 52; 32 + |f25|; 56 + |f25|; 62 + |f25|; 66 + |f25|; 35 + |f25|; 59 + |f25|; 65 + |f25|; 69 + |f25|; 9; 33; 39; 43; 23 + |f25|; 47 + |f25|; 53 + |f25|; 57 + |f25|; 26 + |f25|; 50 + |f25|; 56 + |f25|; 60 + |f25|]))
  ebb exits:  [65 68 70 73]
  ebb succs:  [73 70 68 65]
  11 paths to exit 65
  [7 8 9 55 63 64]
  [7 8 9 55 56 63 64]
  [7 8 9 10 13 14 15 27 28 58 59 60 61 62 63 64]
  [7 8 9 10 13 14 15 16 17 18 23 24 25 30 31 32 58 59 60 61 62 63 64]
  [7 8 9 10 13 14 15 16 17 18 23 24 25 26 27 28 58 59 60 61 62 63 64]
  [7 8 9 10 13 14 15 16 17 18 19 23 24 25 30 31 32 58 59 60 61 62 63 64]
  [7 8 9 10 13 14 15 16 17 18 19 23 24 25 26 27 28 58 59 60 61 62 63 64]
  [7 8 9 10 13 14 15 16 17 18 19 20 23 24 25 30 31 32 58 59 60 61 62 63 64]
  [7 8 9 10 13 14 15 16 17 18 19 20 23 24 25 26 27 28 58 59 60 61 62 63 64]
  [7 8 9 10 13 14 15 16 17 18 19 20 21 58 59 60 61 62 63 64]
  [7 8 9 10 11 58 59 60 61 62 63 64]
  9 paths to exit 68
  [7 8 9 10 13 14 15 27 28 58]
  [7 8 9 10 13 14 15 16 17 18 23 24 25 30 31 32 58]
  [7 8 9 10 13 14 15 16 17 18 23 24 25 26 27 28 58]
  [7 8 9 10 13 14 15 16 17 18 19 23 24 25 30 31 32 58]
  [7 8 9 10 13 14 15 16 17 18 19 23 24 25 26 27 28 58]
  [7 8 9 10 13 14 15 16 17 18 19 20 23 24 25 30 31 32 58]
  [7 8 9 10 13 14 15 16 17 18 19 20 23 24 25 26 27 28 58]
  [7 8 9 10 13 14 15 16 17 18 19 20 21 58]
  [7 8 9 10 11 58]
  27 paths to exit 70
  [7 8 9 10 13 14 15 27 28 58 59 60 61]
  [7 8 9 10 13 14 15 27 28 58 59 60]
  [7 8 9 10 13 14 15 27 28 58 59]
  [7 8 9 10 13 14 15 16 17 18 23 24 25 30 31 32 58 59 60 61]
  [7 8 9 10 13 14 15 16 17 18 23 24 25 30 31 32 58 59 60]
  [7 8 9 10 13 14 15 16 17 18 23 24 25 30 31 32 58 59]
  [7 8 9 10 13 14 15 16 17 18 23 24 25 26 27 28 58 59 60 61]
  [7 8 9 10 13 14 15 16 17 18 23 24 25 26 27 28 58 59 60]
  [7 8 9 10 13 14 15 16 17 18 23 24 25 26 27 28 58 59]
  [7 8 9 10 13 14 15 16 17 18 19 23 24 25 30 31 32 58 59 60 61]
  [7 8 9 10 13 14 15 16 17 18 19 23 24 25 30 31 32 58 59 60]
  [7 8 9 10 13 14 15 16 17 18 19 23 24 25 30 31 32 58 59]
  [7 8 9 10 13 14 15 16 17 18 19 23 24 25 26 27 28 58 59 60 61]
  [7 8 9 10 13 14 15 16 17 18 19 23 24 25 26 27 28 58 59 60]
  [7 8 9 10 13 14 15 16 17 18 19 23 24 25 26 27 28 58 59]
  [7 8 9 10 13 14 15 16 17 18 19 20 23 24 25 30 31 32 58 59 60 61]
  [7 8 9 10 13 14 15 16 17 18 19 20 23 24 25 30 31 32 58 59 60]
  [7 8 9 10 13 14 15 16 17 18 19 20 23 24 25 30 31 32 58 59]
  [7 8 9 10 13 14 15 16 17 18 19 20 23 24 25 26 27 28 58 59 60 61]
  [7 8 9 10 13 14 15 16 17 18 19 20 23 24 25 26 27 28 58 59 60]
  [7 8 9 10 13 14 15 16 17 18 19 20 23 24 25 26 27 28 58 59]
  [7 8 9 10 13 14 15 16 17 18 19 20 21 58 59 60 61]
  [7 8 9 10 13 14 15 16 17 18 19 20 21 58 59 60]
  [7 8 9 10 13 14 15 16 17 18 19 20 21 58 59]
  [7 8 9 10 11 58 59 60 61]
  [7 8 9 10 11 58 59 60]
  [7 8 9 10 11 58 59]
  84 paths to exit 73
  [7 8 9 10 13 14 15 27 37 44 53]
  [7 8 9 10 13 14 15 27 37 44 45 46 47 50 51 52 53]
  [7 8 9 10 13 14 15 27 37 44 45 46 47 48 50 51 52 53]
  [7 8 9 10 13 14 15 27 37 44 45 46 47 48 49 50 51 52 53]
  [7 8 9 10 13 14 15 27 37 38 39 42 43 44 53]
  [7 8 9 10 13 14 15 27 37 38 39 42 43 44 45 46 47 50 51 52 53]
  [7 8 9 10 13 14 15 27 37 38 39 42 43 44 45 46 47 48 50 51 52 53]
  [7 8 9 10 13 14 15 27 37 38 39 42 43 44 45 46 47 48 49 50 51 52 53]
  [7 8 9 10 13 14 15 27 37 38 39 40 43 44 53]
  [7 8 9 10 13 14 15 27 37 38 39 40 43 44 45 46 47 50 51 52 53]
  [7 8 9 10 13 14 15 27 37 38 39 40 43 44 45 46 47 48 50 51 52 53]
  [7 8 9 10 13 14 15 27 37 38 39 40 43 44 45 46 47 48 49 50 51 52 53]
  [7 8 9 10 13 14 15 16 17 18 23 24 25 30 31 34 35 36 37 44 53]
  [7 8 9 10 13 14 15 16 17 18 23 24 25 30 31 34 35 36 37 44 45 46 47 50 51 52 53]
  [7 8 9 10 13 14 15 16 17 18 23 24 25 30 31 34 35 36 37 44 45 46 47 48 50 51 52 53]
  [7 8 9 10 13 14 15 16 17 18 23 24 25 30 31 34 35 36 37 44 45 46 47 48 49 50 51 52 53]
  [7 8 9 10 13 14 15 16 17 18 23 24 25 30 31 34 35 36 37 38 39 42 43 44 53]
  [7 8 9 10 13 14 15 16 17 18 23 24 25 30 31 34 35 36 37 38 39 42 43 44 45 46 47 50 51 52 53]
  [7 8 9 10 13 14 15 16 17 18 23 24 25 30 31 34 35 36 37 38 39 42 43 44 45 46 47 48 50 51 52 53]
  [7 8 9 10 13 14 15 16 17 18 23 24 25 30 31 34 35 36 37 38 39 42 43 44 45 46 47 48 49 50 51 52 53]
  [7 8 9 10 13 14 15 16 17 18 23 24 25 30 31 34 35 36 37 38 39 40 43 44 53]
  [7 8 9 10 13 14 15 16 17 18 23 24 25 30 31 34 35 36 37 38 39 40 43 44 45 46 47 50 51 52 53]
  [7 8 9 10 13 14 15 16 17 18 23 24 25 30 31 34 35 36 37 38 39 40 43 44 45 46 47 48 50 51 52 53]
  [7 8 9 10 13 14 15 16 17 18 23 24 25 30 31 34 35 36 37 38 39 40 43 44 45 46 47 48 49 50 51 52 53]
  [7 8 9 10 13 14 15 16 17 18 23 24 25 26 27 37 44 53]
  [7 8 9 10 13 14 15 16 17 18 23 24 25 26 27 37 44 45 46 47 50 51 52 53]
  [7 8 9 10 13 14 15 16 17 18 23 24 25 26 27 37 44 45 46 47 48 50 51 52 53]
  [7 8 9 10 13 14 15 16 17 18 23 24 25 26 27 37 44 45 46 47 48 49 50 51 52 53]
  [7 8 9 10 13 14 15 16 17 18 23 24 25 26 27 37 38 39 42 43 44 53]
  [7 8 9 10 13 14 15 16 17 18 23 24 25 26 27 37 38 39 42 43 44 45 46 47 50 51 52 53]
  [7 8 9 10 13 14 15 16 17 18 23 24 25 26 27 37 38 39 42 43 44 45 46 47 48 50 51 52 53]
  [7 8 9 10 13 14 15 16 17 18 23 24 25 26 27 37 38 39 42 43 44 45 46 47 48 49 50 51 52 53]
  [7 8 9 10 13 14 15 16 17 18 23 24 25 26 27 37 38 39 40 43 44 53]
  [7 8 9 10 13 14 15 16 17 18 23 24 25 26 27 37 38 39 40 43 44 45 46 47 50 51 52 53]
  [7 8 9 10 13 14 15 16 17 18 23 24 25 26 27 37 38 39 40 43 44 45 46 47 48 50 51 52 53]
  [7 8 9 10 13 14 15 16 17 18 23 24 25 26 27 37 38 39 40 43 44 45 46 47 48 49 50 51 52 53]
  [7 8 9 10 13 14 15 16 17 18 19 23 24 25 30 31 34 35 36 37 44 53]
  [7 8 9 10 13 14 15 16 17 18 19 23 24 25 30 31 34 35 36 37 44 45 46 47 50 51 52 53]
  [7 8 9 10 13 14 15 16 17 18 19 23 24 25 30 31 34 35 36 37 44 45 46 47 48 50 51 52 53]
  [7 8 9 10 13 14 15 16 17 18 19 23 24 25 30 31 34 35 36 37 44 45 46 47 48 49 50 51 52 53]
  [7 8 9 10 13 14 15 16 17 18 19 23 24 25 30 31 34 35 36 37 38 39 42 43 44 53]
  [7 8 9 10 13 14 15 16 17 18 19 23 24 25 30 31 34 35 36 37 38 39 42 43 44 45 46 47 50 51 52 53]
  [7 8 9 10 13 14 15 16 17 18 19 23 24 25 30 31 34 35 36 37 38 39 42 43 44 45 46 47 48 50 51 52 53]
  [7 8 9 10 13 14 15 16 17 18 19 23 24 25 30 31 34 35 36 37 38 39 42 43 44 45 46 47 48 49 50 51 52 53]
  [7 8 9 10 13 14 15 16 17 18 19 23 24 25 30 31 34 35 36 37 38 39 40 43 44 53]
  [7 8 9 10 13 14 15 16 17 18 19 23 24 25 30 31 34 35 36 37 38 39 40 43 44 45 46 47 50 51 52 53]
  [7 8 9 10 13 14 15 16 17 18 19 23 24 25 30 31 34 35 36 37 38 39 40 43 44 45 46 47 48 50 51 52 53]
  [7 8 9 10 13 14 15 16 17 18 19 23 24 25 30 31 34 35 36 37 38 39 40 43 44 45 46 47 48 49 50 51 52 53]
  [7 8 9 10 13 14 15 16 17 18 19 23 24 25 26 27 37 44 53]
  [7 8 9 10 13 14 15 16 17 18 19 23 24 25 26 27 37 44 45 46 47 50 51 52 53]
  [7 8 9 10 13 14 15 16 17 18 19 23 24 25 26 27 37 44 45 46 47 48 50 51 52 53]
  [7 8 9 10 13 14 15 16 17 18 19 23 24 25 26 27 37 44 45 46 47 48 49 50 51 52 53]
  [7 8 9 10 13 14 15 16 17 18 19 23 24 25 26 27 37 38 39 42 43 44 53]
  [7 8 9 10 13 14 15 16 17 18 19 23 24 25 26 27 37 38 39 42 43 44 45 46 47 50 51 52 53]
  [7 8 9 10 13 14 15 16 17 18 19 23 24 25 26 27 37 38 39 42 43 44 45 46 47 48 50 51 52 53]
  [7 8 9 10 13 14 15 16 17 18 19 23 24 25 26 27 37 38 39 42 43 44 45 46 47 48 49 50 51 52 53]
  [7 8 9 10 13 14 15 16 17 18 19 23 24 25 26 27 37 38 39 40 43 44 53]
  [7 8 9 10 13 14 15 16 17 18 19 23 24 25 26 27 37 38 39 40 43 44 45 46 47 50 51 52 53]
  [7 8 9 10 13 14 15 16 17 18 19 23 24 25 26 27 37 38 39 40 43 44 45 46 47 48 50 51 52 53]
  [7 8 9 10 13 14 15 16 17 18 19 23 24 25 26 27 37 38 39 40 43 44 45 46 47 48 49 50 51 52 53]
  [7 8 9 10 13 14 15 16 17 18 19 20 23 24 25 30 31 34 35 36 37 44 53]
  [7 8 9 10 13 14 15 16 17 18 19 20 23 24 25 30 31 34 35 36 37 44 45 46 47 50 51 52 53]
  [7 8 9 10 13 14 15 16 17 18 19 20 23 24 25 30 31 34 35 36 37 44 45 46 47 48 50 51 52 53]
  [7 8 9 10 13 14 15 16 17 18 19 20 23 24 25 30 31 34 35 36 37 44 45 46 47 48 49 50 51 52 53]
  [7 8 9 10 13 14 15 16 17 18 19 20 23 24 25 30 31 34 35 36 37 38 39 42 43 44 53]
  [7 8 9 10 13 14 15 16 17 18 19 20 23 24 25 30 31 34 35 36 37 38 39 42 43 44 45 46 47 50 51 52 53]
  [7 8 9 10 13 14 15 16 17 18 19 20 23 24 25 30 31 34 35 36 37 38 39 42 43 44 45 46 47 48 50 51 52 53]
  [7 8 9 10 13 14 15 16 17 18 19 20 23 24 25 30 31 34 35 36 37 38 39 42 43 44 45 46 47 48 49 50 51 52 53]
  [7 8 9 10 13 14 15 16 17 18 19 20 23 24 25 30 31 34 35 36 37 38 39 40 43 44 53]
  [7 8 9 10 13 14 15 16 17 18 19 20 23 24 25 30 31 34 35 36 37 38 39 40 43 44 45 46 47 50 51 52 53]
  [7 8 9 10 13 14 15 16 17 18 19 20 23 24 25 30 31 34 35 36 37 38 39 40 43 44 45 46 47 48 50 51 52 53]
  [7 8 9 10 13 14 15 16 17 18 19 20 23 24 25 30 31 34 35 36 37 38 39 40 43 44 45 46 47 48 49 50 51 52 53]
  [7 8 9 10 13 14 15 16 17 18 19 20 23 24 25 26 27 37 44 53]
  [7 8 9 10 13 14 15 16 17 18 19 20 23 24 25 26 27 37 44 45 46 47 50 51 52 53]
  [7 8 9 10 13 14 15 16 17 18 19 20 23 24 25 26 27 37 44 45 46 47 48 50 51 52 53]
  [7 8 9 10 13 14 15 16 17 18 19 20 23 24 25 26 27 37 44 45 46 47 48 49 50 51 52 53]
  [7 8 9 10 13 14 15 16 17 18 19 20 23 24 25 26 27 37 38 39 42 43 44 53]
  [7 8 9 10 13 14 15 16 17 18 19 20 23 24 25 26 27 37 38 39 42 43 44 45 46 47 50 51 52 53]
  [7 8 9 10 13 14 15 16 17 18 19 20 23 24 25 26 27 37 38 39 42 43 44 45 46 47 48 50 51 52 53]
  [7 8 9 10 13 14 15 16 17 18 19 20 23 24 25 26 27 37 38 39 42 43 44 45 46 47 48 49 50 51 52 53]
  [7 8 9 10 13 14 15 16 17 18 19 20 23 24 25 26 27 37 38 39 40 43 44 53]
  [7 8 9 10 13 14 15 16 17 18 19 20 23 24 25 26 27 37 38 39 40 43 44 45 46 47 50 51 52 53]
  [7 8 9 10 13 14 15 16 17 18 19 20 23 24 25 26 27 37 38 39 40 43 44 45 46 47 48 50 51 52 53]
  [7 8 9 10 13 14 15 16 17 18 19 20 23 24 25 26 27 37 38 39 40 43 44 45 46 47 48 49 50 51 52 53]
  11 loop paths
  [7 8 9 55 63]  [7 8 9 55 56 63]  [7 8 9 10 13 14 15 27 28 58 59 60 61 62 63]  [7 8 9 10 13 14 15 16 17 18 23 24 25 30 31 32 58 59 60 61 62 63]  [7 8 9 10 13 14 15 16 17 18 23 24 25 26 27 28 58 59 60 61 62 63]  [7 8 9 10 13 14 15 16 17 18 19 23 24 25 30 31 32 58 59 60 61 62 63]  [7 8 9 10 13 14 15 16 17 18 19 23 24 25 26 27 28 58 59 60 61 62 63]  [7 8 9 10 13 14 15 16 17 18 19 20 23 24 25 30 31 32 58 59 60 61 62 63]  [7 8 9 10 13 14 15 16 17 18 19 20 23 24 25 26 27 28 58 59 60 61 62 63]  [7 8 9 10 13 14 15 16 17 18 19 20 21 58 59 60 61 62 63]  [7 8 9 10 11 58 59 60 61 62 63]
  95 post loop exit paths
  [64]  [64]  [64]  [64]  [64]  [64]  [64]  [64]  [64]  [64]  [64]  [37 44 53]  [37 44 45 46 47 50 51 52 53]  [37 44 45 46 47 48 50 51 52 53]  [37 44 45 46 47 48 49 50 51 52 53]  [37 38 39 42 43 44 53]  [37 38 39 42 43 44 45 46 47 50 51 52 53]  [37 38 39 42 43 44 45 46 47 48 50 51 52 53]  [37 38 39 42 43 44 45 46 47 48 49 50 51 52 53]  [37 38 39 40 43 44 53]  [37 38 39 40 43 44 45 46 47 50 51 52 53]  [37 38 39 40 43 44 45 46 47 48 50 51 52 53]  [37 38 39 40 43 44 45 46 47 48 49 50 51 52 53]  [34 35 36 37 44 53]  [34 35 36 37 44 45 46 47 50 51 52 53]  [34 35 36 37 44 45 46 47 48 50 51 52 53]  [34 35 36 37 44 45 46 47 48 49 50 51 52 53]  [34 35 36 37 38 39 42 43 44 53]  [34 35 36 37 38 39 42 43 44 45 46 47 50 51 52 53]  [34 35 36 37 38 39 42 43 44 45 46 47 48 50 51 52 53]  [34 35 36 37 38 39 42 43 44 45 46 47 48 49 50 51 52 53]  [34 35 36 37 38 39 40 43 44 53]  [34 35 36 37 38 39 40 43 44 45 46 47 50 51 52 53]  [34 35 36 37 38 39 40 43 44 45 46 47 48 50 51 52 53]  [34 35 36 37 38 39 40 43 44 45 46 47 48 49 50 51 52 53]  [37 44 53]  [37 44 45 46 47 50 51 52 53]  [37 44 45 46 47 48 50 51 52 53]  [37 44 45 46 47 48 49 50 51 52 53]  [37 38 39 42 43 44 53]  [37 38 39 42 43 44 45 46 47 50 51 52 53]  [37 38 39 42 43 44 45 46 47 48 50 51 52 53]  [37 38 39 42 43 44 45 46 47 48 49 50 51 52 53]  [37 38 39 40 43 44 53]  [37 38 39 40 43 44 45 46 47 50 51 52 53]  [37 38 39 40 43 44 45 46 47 48 50 51 52 53]  [37 38 39 40 43 44 45 46 47 48 49 50 51 52 53]  [34 35 36 37 44 53]  [34 35 36 37 44 45 46 47 50 51 52 53]  [34 35 36 37 44 45 46 47 48 50 51 52 53]  [34 35 36 37 44 45 46 47 48 49 50 51 52 53]  [34 35 36 37 38 39 42 43 44 53]  [34 35 36 37 38 39 42 43 44 45 46 47 50 51 52 53]  [34 35 36 37 38 39 42 43 44 45 46 47 48 50 51 52 53]  [34 35 36 37 38 39 42 43 44 45 46 47 48 49 50 51 52 53]  [34 35 36 37 38 39 40 43 44 53]  [34 35 36 37 38 39 40 43 44 45 46 47 50 51 52 53]  [34 35 36 37 38 39 40 43 44 45 46 47 48 50 51 52 53]  [34 35 36 37 38 39 40 43 44 45 46 47 48 49 50 51 52 53]  [37 44 53]  [37 44 45 46 47 50 51 52 53]  [37 44 45 46 47 48 50 51 52 53]  [37 44 45 46 47 48 49 50 51 52 53]  [37 38 39 42 43 44 53]  [37 38 39 42 43 44 45 46 47 50 51 52 53]  [37 38 39 42 43 44 45 46 47 48 50 51 52 53]  [37 38 39 42 43 44 45 46 47 48 49 50 51 52 53]  [37 38 39 40 43 44 53]  [37 38 39 40 43 44 45 46 47 50 51 52 53]  [37 38 39 40 43 44 45 46 47 48 50 51 52 53]  [37 38 39 40 43 44 45 46 47 48 49 50 51 52 53]  [34 35 36 37 44 53]  [34 35 36 37 44 45 46 47 50 51 52 53]  [34 35 36 37 44 45 46 47 48 50 51 52 53]  [34 35 36 37 44 45 46 47 48 49 50 51 52 53]  [34 35 36 37 38 39 42 43 44 53]  [34 35 36 37 38 39 42 43 44 45 46 47 50 51 52 53]  [34 35 36 37 38 39 42 43 44 45 46 47 48 50 51 52 53]  [34 35 36 37 38 39 42 43 44 45 46 47 48 49 50 51 52 53]  [34 35 36 37 38 39 40 43 44 53]  [34 35 36 37 38 39 40 43 44 45 46 47 50 51 52 53]  [34 35 36 37 38 39 40 43 44 45 46 47 48 50 51 52 53]  [34 35 36 37 38 39 40 43 44 45 46 47 48 49 50 51 52 53]  [37 44 53]  [37 44 45 46 47 50 51 52 53]  [37 44 45 46 47 48 50 51 52 53]  [37 44 45 46 47 48 49 50 51 52 53]  [37 38 39 42 43 44 53]  [37 38 39 42 43 44 45 46 47 50 51 52 53]  [37 38 39 42 43 44 45 46 47 48 50 51 52 53]  [37 38 39 42 43 44 45 46 47 48 49 50 51 52 53]  [37 38 39 40 43 44 53]  [37 38 39 40 43 44 45 46 47 50 51 52 53]  [37 38 39 40 43 44 45 46 47 48 50 51 52 53]  [37 38 39 40 43 44 45 46 47 48 49 50 51 52 53]
  ebb entry:  7
    ebb type:   block
    ebb blocks: [7 8 9 10 11 12 13 14 15]
    ebb cost:   list_max([26; 26; 14; 25])
    ebb exits:  [16 27 55 58]
    ebb succs:  [58 55 27 16]
    1 paths to exit 16
    [7 8 9 10 13 14 15]
    1 paths to exit 27
    [7 8 9 10 13 14 15]
    1 paths to exit 55
    [7 8 9]
    1 paths to exit 58
    [7 8 9 10 11]
  ebb entry:  16
    ebb type:   block
    ebb blocks: [16]
    ebb cost:   6
    ebb exits:  [17]
    ebb succs:  [17]
    1 paths to exit 17
    [16]
  ebb entry:  17
    ebb type:   loop
    ebb blocks: [17 18 19 20 21 22 23 24]
    ebb cost:   (list_max([[18*I((ln3 + 1) != ln2, ln2 = ln2;ln3 = 0, ln2 = ln2;ln3 = ln3 + 1); 24*I((ln3 + 1) != ln2, ln2 = ln2;ln3 = 0, ln2 = ln2;ln3 = ln3 + 1); 30*I((ln3 + 1) != ln2, ln2 = ln2;ln3 = 0, ln2 = ln2;ln3 = ln3 + 1)]])) + (list_max([1; 1; 1; 5]))
    ebb exits:  [25 58]
    ebb succs:  [58 25]
    3 paths to exit 25
    [17 18 23 24]
    [17 18 19 23 24]
    [17 18 19 20 23 24]
    1 paths to exit 58
    [17 18 19 20 21]
    3 loop paths
    [17 18 23]    [17 18 19 23]    [17 18 19 20 23]
    4 post loop exit paths
    [24]    [24]    [24]    [21]
  ebb entry:  25
    ebb type:   block
    ebb blocks: [25 26]
    ebb cost:   list_max([7; 6])
    ebb exits:  [27 30]
    ebb succs:  [30 27]
    1 paths to exit 27
    [25 26]
    1 paths to exit 30
    [25]
  ebb entry:  27
    ebb type:   block
    ebb blocks: [27 28 29]
    ebb cost:   list_max([12; 17])
    ebb exits:  [30 37 58]
    ebb succs:  [58 37 30]
    0 paths to exit 30

    1 paths to exit 37
    [27]
    1 paths to exit 58
    [27 28]
  ebb entry:  30
    ebb type:   block
    ebb blocks: [30]
    ebb cost:   1
    ebb exits:  [31]
    ebb succs:  [31]
    1 paths to exit 31
    [30]
  ebb entry:  31
    ebb type:   loop
    ebb blocks: [31 32 33 34 35]
    ebb cost:   17*I((ln3 + 1) != ln2, ln2 = ln2;ln3 = 0, ln2 = ln2;ln3 = ln3 + 1) + (list_max([1; 9]))
    ebb exits:  [36 58]
    ebb succs:  [58 36]
    1 paths to exit 36
    [31 34 35]
    1 paths to exit 58
    [31 32]
    1 loop paths
    [31 34]
    2 post loop exit paths
    [35]    [32]
  ebb entry:  36
    ebb type:   block
    ebb blocks: [36]
    ebb cost:   1
    ebb exits:  [37]
    ebb succs:  [37]
    1 paths to exit 37
    [36]
  ebb entry:  37
    ebb type:   block
    ebb blocks: [37 38 39 40 41 42 43 44]
    ebb cost:   list_max([7; 21 + |f25|; 24 + |f25|; 7; 21 + |f25|; 24 + |f25|])
    ebb exits:  [45 53]
    ebb succs:  [53 45]
    3 paths to exit 45
    [37 44]
    [37 38 39 42 43 44]
    [37 38 39 40 43 44]
    3 paths to exit 53
    [37 44]
    [37 38 39 42 43 44]
    [37 38 39 40 43 44]
  ebb entry:  45
    ebb type:   block
    ebb blocks: [45]
    ebb cost:   3
    ebb exits:  [46]
    ebb succs:  [46]
    1 paths to exit 46
    [45]
  ebb entry:  46
    ebb type:   loop
    ebb blocks: [46 47 48 49 50 51]
    ebb cost:   (list_max([[19*I((ln3 + 1) != ln6, ln6 = ln6;ln3 = 0, ln6 = ln6;ln3 = ln3 + 1); 25*I((ln3 + 1) != ln6, ln6 = ln6;ln3 = 0, ln6 = ln6;ln3 = ln3 + 1); 29*I((ln3 + 1) != ln6, ln6 = ln6;ln3 = 0, ln6 = ln6;ln3 = ln3 + 1)]])) + (list_max([1; 1; 1]))
    ebb exits:  [52]
    ebb succs:  [52]
    3 paths to exit 52
    [46 47 50 51]
    [46 47 48 50 51]
    [46 47 48 49 50 51]
    3 loop paths
    [46 47 50]    [46 47 48 50]    [46 47 48 49 50]
    3 post loop exit paths
    [51]    [51]    [51]
  ebb entry:  52
    ebb type:   block
    ebb blocks: [52]
    ebb cost:   1
    ebb exits:  [53]
    ebb succs:  [53]
    1 paths to exit 53
    [52]
  ebb entry:  53
    ebb type:   block
    ebb blocks: [53 54]
    ebb cost:   2
    ebb exits:  [55 73]
    ebb succs:  [55]
    0 paths to exit 55

    1 paths to exit 73
    [53]
  ebb entry:  55
    ebb type:   block
    ebb blocks: [55 56 57]
    ebb cost:   list_max([23; 12])
    ebb exits:  [58 63]
    ebb succs:  [63 58]
    0 paths to exit 58

    2 paths to exit 63
    [55 56]
    [55]
  ebb entry:  58
    ebb type:   block
    ebb blocks: [58 59 60 61 62]
    ebb cost:   list_max([47; 8; 31; 25; 19])
    ebb exits:  [63 68 70]
    ebb succs:  [63]
    1 paths to exit 63
    [58 59 60 61 62]
    1 paths to exit 68
    [58]
    3 paths to exit 70
    [58 59 60 61]
    [58 59 60]
    [58 59]
  ebb entry:  63
    ebb type:   block
    ebb blocks: [63 64]
    ebb cost:   list_max([8; 9])
    ebb exits:  [7 65]
    ebb succs:  [7]
    1 paths to exit 7
    [63]
    1 paths to exit 65
    [63 64]
ebb entry:  65
  ebb type:   block
  ebb blocks: [65]
  ebb cost:   1
  ebb exits:  [66]
  ebb succs:  [66]
  1 paths to exit 66
  [65]
ebb entry:  66
  ebb type:   block
  ebb blocks: [66 67]
  ebb cost:   8
  ebb exits:  [68 73]
  ebb succs:  [73 68]
  0 paths to exit 68

  1 paths to exit 73
  [66]
ebb entry:  68
  ebb type:   block
  ebb blocks: [68 69]
  ebb cost:   6 + |f0|
  ebb exits:  [70 74]
  ebb succs:  [74 70]
  0 paths to exit 70

  1 paths to exit 74
  [68]
ebb entry:  70
  ebb type:   block
  ebb blocks: [70 71 72]
  ebb cost:   6 + |f0|
  ebb exits:  [72 74]
  ebb succs:  [74]
  0 paths to exit 72

  1 paths to exit 74
  [70]
ebb entry:  73
  ebb type:   block
  ebb blocks: [73]
  ebb cost:   
  ebb exits:  []
  ebb succs:  []
ebb entry:  74
  ebb type:   block
  ebb blocks: [74]
  ebb cost:   
  ebb exits:  []
  ebb succs:  []
