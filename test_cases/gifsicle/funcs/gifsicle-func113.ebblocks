ebb entry:  0
  ebb type:   block
  ebb blocks: [0 1 2 3 4 5 6 7 8 9 10 11]
  ebb cost:   94
  ebb exits:  [12]
  ebb succs:  [12]
  8 paths to exit 12
  [0 2 3 6 7 8 11]
  [0 2 3 6 7 8 9]
  [0 2 3 4 7 8 11]
  [0 2 3 4 7 8 9]
  [0 1 2 3 6 7 8 11]
  [0 1 2 3 6 7 8 9]
  [0 1 2 3 4 7 8 11]
  [0 1 2 3 4 7 8 9]
ebb entry:  12
  ebb type:   block
  ebb blocks: [12]
  ebb cost:   25
  ebb exits:  [13]
  ebb succs:  [13]
  2 paths to exit 13
  [12 13]
  [12]
ebb entry:  13
  ebb type:   loop
  ebb blocks: [13 14]
  ebb cost:   10*I((i32.load@(pn2)) < ln5, ln5 = (pn1);pn2 = ((pn0)) + 12, ln5 = ln5;pn2 = pn2 + 12) + 1
  ebb exits:  [15]
  ebb succs:  [15]
  1 paths to exit 15
  [13 14]
  1 loop paths
  [13]
  1 post loop exit paths
  [14]
ebb entry:  15
  ebb type:   block
  ebb blocks: [15]
  ebb cost:   16
  ebb exits:  [16 30]
  ebb succs:  [30 16]
  1 paths to exit 16
  [15]
  1 paths to exit 30
  [15]
ebb entry:  16
  ebb type:   block
  ebb blocks: [16]
  ebb cost:   10
  ebb exits:  [17]
  ebb succs:  [17]
  1 paths to exit 17
  [16]
ebb entry:  17
  ebb type:   loop
  ebb blocks: [17 18 19 20 21 22 23 24 25 26 27 28]
  ebb cost:   (list_max([35*I((ln6 + 1) != ln15, ln15 = select((-2147483648 + 1) < ((pn0)), (pn0), -2147483648 + 1);ln6 = select(-2147483648 > 0, 0, -2147483648), ln15 = ln15;ln6 = ln6 + 1); 167*I((ln6 + 1) != ln15, ln15 = select((-2147483648 + 1) < ((pn0)), (pn0), -2147483648 + 1);ln6 = select(-2147483648 > 0, 0, -2147483648), ln15 = ln15;ln6 = ln6 + 1); 61*I((ln6 + 1) != ln15, ln15 = select((-2147483648 + 1) < ((pn0)), (pn0), -2147483648 + 1);ln6 = select(-2147483648 > 0, 0, -2147483648), ln15 = ln15;ln6 = ln6 + 1); 193*I((ln6 + 1) != ln15, ln15 = select((-2147483648 + 1) < ((pn0)), (pn0), -2147483648 + 1);ln6 = select(-2147483648 > 0, 0, -2147483648), ln15 = ln15;ln6 = ln6 + 1)])) + 1
  ebb exits:  [29]
  ebb succs:  [29]
  4 paths to exit 29
  [17 22 27 28]
  [17 22 23 24 25 26 27 28]
  [17 18 19 20 21 22 27 28]
  [17 18 19 20 21 22 23 24 25 26 27 28]
  4 loop paths
  [17 22 27]  [17 22 23 24 25 26 27]  [17 18 19 20 21 22 27]  [17 18 19 20 21 22 23 24 25 26 27]
  4 post loop exit paths
  [28]  [28]  [28]  [28]
  ebb entry:  17
    ebb type:   block
    ebb blocks: [17]
    ebb cost:   18
    ebb exits:  [18 22]
    ebb succs:  [22 18]
    1 paths to exit 18
    [17]
    1 paths to exit 22
    [17]
  ebb entry:  18
    ebb type:   block
    ebb blocks: [18]
    ebb cost:   21
    ebb exits:  [19]
    ebb succs:  [19]
    2 paths to exit 19
    [18 19]
    [18]
  ebb entry:  19
    ebb type:   loop
    ebb blocks: [19 20]
    ebb cost:   20*I((pn2 + 1) != (i32.load16_u@(pn1)), pn1 = pn1;pn2 = 0 + 1, pn1 = pn1;pn2 = pn2 + 1) + 1
    ebb exits:  [21]
    ebb succs:  [21]
    1 paths to exit 21
    [19 20]
    1 loop paths
    [19]
    1 post loop exit paths
    [20]
  ebb entry:  21
    ebb type:   block
    ebb blocks: [21]
    ebb cost:   4
    ebb exits:  [22]
    ebb succs:  [22]
    1 paths to exit 22
    [21]
  ebb entry:  22
    ebb type:   block
    ebb blocks: [22]
    ebb cost:   10
    ebb exits:  [23 27]
    ebb succs:  [27 23]
    1 paths to exit 23
    [22]
    1 paths to exit 27
    [22]
  ebb entry:  23
    ebb type:   block
    ebb blocks: [23]
    ebb cost:   130
    ebb exits:  [24]
    ebb succs:  [24]
    2 paths to exit 24
    [23 24]
    [23]
  ebb entry:  24
    ebb type:   loop
    ebb blocks: [24 25]
    ebb cost:   117*I((i32.load@(pn2)) < ((i32.load16_u@(pn1)) + (i32.load16_u@(pn1))), pn1 = pn1;pn1 = pn1;pn2 = ln7 + 12, pn1 = pn1;pn1 = pn1;pn2 = pn2 + 12) + 1
    ebb exits:  [26]
    ebb succs:  [26]
    1 paths to exit 26
    [24 25]
    1 loop paths
    [24]
    1 post loop exit paths
    [25]
  ebb entry:  26
    ebb type:   block
    ebb blocks: [26]
    ebb cost:   1
    ebb exits:  [27]
    ebb succs:  [27]
    1 paths to exit 27
    [26]
  ebb entry:  27
    ebb type:   block
    ebb blocks: [27 28]
    ebb cost:   8
    ebb exits:  [17 29]
    ebb succs:  [17]
    1 paths to exit 17
    [27]
    1 paths to exit 29
    [27 28]
ebb entry:  29
  ebb type:   block
  ebb blocks: [29]
  ebb cost:   4
  ebb exits:  [30]
  ebb succs:  [30]
  1 paths to exit 30
  [29]
ebb entry:  30
  ebb type:   block
  ebb blocks: [30]
  ebb cost:   14
  ebb exits:  [31]
  ebb succs:  [31]
  2 paths to exit 31
  [30 31]
  [30]
ebb entry:  31
  ebb type:   loop
  ebb blocks: [31 32]
  ebb cost:   10*I((i32.load@(pn2)) < ln4, ln4 = (pn1);pn2 = ((pn0)) + 12, ln4 = ln4;pn2 = pn2 + 12) + 1
  ebb exits:  [33]
  ebb succs:  [33]
  1 paths to exit 33
  [31 32]
  1 loop paths
  [31]
  1 post loop exit paths
  [32]
ebb entry:  33
  ebb type:   block
  ebb blocks: [33]
  ebb cost:   3
  ebb exits:  [34 60]
  ebb succs:  [60 34]
  1 paths to exit 34
  [33]
  1 paths to exit 60
  [33]
ebb entry:  34
  ebb type:   block
  ebb blocks: [34]
  ebb cost:   3
  ebb exits:  [35]
  ebb succs:  [35]
  1 paths to exit 35
  [34]
ebb entry:  35
  ebb type:   loop
  ebb blocks: [35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58]
  ebb cost:   (list_max([27*I((ln5 + 1) != (i32.load16_u@(pn1)), pn1 = pn1;ln5 = 0, pn1 = pn1;ln5 = ln5 + 1); 136*I((ln5 + 1) != (i32.load16_u@(pn1)), pn1 = pn1;ln5 = 0, pn1 = pn1;ln5 = ln5 + 1); 65*I((ln5 + 1) != (i32.load16_u@(pn1)), pn1 = pn1;ln5 = 0, pn1 = pn1;ln5 = ln5 + 1); 52*I((ln5 + 1) != (i32.load16_u@(pn1)), pn1 = pn1;ln5 = 0, pn1 = pn1;ln5 = ln5 + 1); 161*I((ln5 + 1) != (i32.load16_u@(pn1)), pn1 = pn1;ln5 = 0, pn1 = pn1;ln5 = ln5 + 1); 90*I((ln5 + 1) != (i32.load16_u@(pn1)), pn1 = pn1;ln5 = 0, pn1 = pn1;ln5 = ln5 + 1)])) + 6
  ebb exits:  [59 62]
  ebb succs:  [62 59]
  6 paths to exit 59
  [35 40 57 58]
  [35 40 41 42 43 44 45 50 51 52 53 54 55 56 57 58]
  [35 40 41 42 43 44 45 46 54 55 56 57 58]
  [35 36 37 38 39 40 57 58]
  [35 36 37 38 39 40 41 42 43 44 45 50 51 52 53 54 55 56 57 58]
  [35 36 37 38 39 40 41 42 43 44 45 46 54 55 56 57 58]
  2 paths to exit 62
  [35 40 41 42 43 44 48]
  [35 36 37 38 39 40 41 42 43 44 48]
  6 loop paths
  [35 40 57]  [35 40 41 42 43 44 45 50 51 52 53 54 55 56 57]  [35 40 41 42 43 44 45 46 54 55 56 57]  [35 36 37 38 39 40 57]  [35 36 37 38 39 40 41 42 43 44 45 50 51 52 53 54 55 56 57]  [35 36 37 38 39 40 41 42 43 44 45 46 54 55 56 57]
  8 post loop exit paths
  [58]  [58]  [58]  [58]  [58]  [58]  [48]  [48]
  ebb entry:  35
    ebb type:   block
    ebb blocks: [35]
    ebb cost:   5
    ebb exits:  [36 40]
    ebb succs:  [40 36]
    1 paths to exit 36
    [35]
    1 paths to exit 40
    [35]
  ebb entry:  36
    ebb type:   block
    ebb blocks: [36]
    ebb cost:   23
    ebb exits:  [37]
    ebb succs:  [37]
    2 paths to exit 37
    [36 37]
    [36]
  ebb entry:  37
    ebb type:   loop
    ebb blocks: [37 38]
    ebb cost:   20*I((ln4 + 1) != (i32.load16_u@(pn1)), pn1 = pn1;ln4 = 0 + 1, pn1 = pn1;ln4 = ln4 + 1) + 1
    ebb exits:  [39]
    ebb succs:  [39]
    1 paths to exit 39
    [37 38]
    1 loop paths
    [37]
    1 post loop exit paths
    [38]
  ebb entry:  39
    ebb type:   block
    ebb blocks: [39]
    ebb cost:   1
    ebb exits:  [40]
    ebb succs:  [40]
    1 paths to exit 40
    [39]
  ebb entry:  40
    ebb type:   block
    ebb blocks: [40]
    ebb cost:   9
    ebb exits:  [41 57]
    ebb succs:  [57 41]
    1 paths to exit 41
    [40]
    1 paths to exit 57
    [40]
  ebb entry:  41
    ebb type:   block
    ebb blocks: [41]
    ebb cost:   1
    ebb exits:  [42]
    ebb succs:  [42]
    1 paths to exit 42
    [41]
  ebb entry:  42
    ebb type:   loop
    ebb blocks: [42 43 44 45 46 47 48 49 50 51 52 53 54 55]
    ebb cost:   (list_max([106*I((i32.load@(ln6)) <= (ln5 + ((i32.load16_u@(pn1)) && 65535)), pn1 = pn1;ln5 = ln5;ln6 = ln6, pn1 = pn1;ln5 = ln5;ln6 = ln6 + 12); 35*I((i32.load@(ln6)) <= (ln5 + (ln4 && 65535)), ln4 = (pn1);ln5 = ln5;ln6 = ln6, ln4 = ln4;ln5 = ln5;ln6 = ln6 + 12)])) + 6
    ebb exits:  [56 62]
    ebb succs:  [56]
    2 paths to exit 56
    [42 43 44 45 50 51 52 53 54 55]
    [42 43 44 45 46 54 55]
    1 paths to exit 62
    [42 43 44 48]
    2 loop paths
    [42 43 44 45 50 51 52 53 54]    [42 43 44 45 46 54]
    3 post loop exit paths
    [55]    [55]    [48]
    ebb entry:  42
      ebb type:   block
      ebb blocks: [42 43 44 45 46 47 48 49]
      ebb cost:   21
      ebb exits:  [50 54 62]
      ebb succs:  [54 50]
      1 paths to exit 50
      [42 43 44 45]
      1 paths to exit 54
      [42 43 44 45 46]
      1 paths to exit 62
      [42 43 44 48]
    ebb entry:  50
      ebb type:   block
      ebb blocks: [50]
      ebb cost:   69
      ebb exits:  [51]
      ebb succs:  [51]
      2 paths to exit 51
      [50 51]
      [50]
    ebb entry:  51
      ebb type:   loop
      ebb blocks: [51 52]
      ebb cost:   58*I((ln4 + 1) != (i32.load16_u@(pn1)), pn1 = pn1;ln4 = 0 + 1, pn1 = pn1;ln4 = ln4 + 1) + 1
      ebb exits:  [53]
      ebb succs:  [53]
      1 paths to exit 53
      [51 52]
      1 loop paths
      [51]
      1 post loop exit paths
      [52]
    ebb entry:  53
      ebb type:   block
      ebb blocks: [53]
      ebb cost:   4
      ebb exits:  [54]
      ebb succs:  [54]
      1 paths to exit 54
      [53]
    ebb entry:  54
      ebb type:   block
      ebb blocks: [54 55]
      ebb cost:   15
      ebb exits:  [42 56]
      ebb succs:  [42]
      1 paths to exit 42
      [54]
      1 paths to exit 56
      [54 55]
  ebb entry:  56
    ebb type:   block
    ebb blocks: [56]
    ebb cost:   1
    ebb exits:  [57]
    ebb succs:  [57]
    1 paths to exit 57
    [56]
  ebb entry:  57
    ebb type:   block
    ebb blocks: [57 58]
    ebb cost:   14
    ebb exits:  [35 59]
    ebb succs:  [35]
    1 paths to exit 35
    [57]
    1 paths to exit 59
    [57 58]
ebb entry:  59
  ebb type:   block
  ebb blocks: [59]
  ebb cost:   1
  ebb exits:  [60]
  ebb succs:  [60]
  1 paths to exit 60
  [59]
ebb entry:  60
  ebb type:   block
  ebb blocks: [60 61]
  ebb cost:   8
  ebb exits:  [61]
  ebb succs:  []
  1 paths to exit 61
  [60]
ebb entry:  62
  ebb type:   block
  ebb blocks: [62]
  ebb cost:   0
  ebb exits:  []
  ebb succs:  []
