ebb entry:  0
  ebb type:   block
  ebb blocks: [0]
  ebb cost:   6
  ebb exits:  [1 23]
  ebb succs:  [23 1]
  1 paths to exit 1
  [0]
  1 paths to exit 23
  [0]
ebb entry:  1
  ebb type:   block
  ebb blocks: [1]
  ebb cost:   1
  ebb exits:  [2]
  ebb succs:  [2]
  1 paths to exit 2
  [1]
ebb entry:  2
  ebb type:   loop
  ebb blocks: [2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21]
  ebb cost:   (list_max([12*I((ln3 + 1) < ln4, ln4 = (pn0);ln3 = ln3, ln4 = ln4;ln3 = ln3 + 1); 30*I((ln3 + 1) < ln4, ln4 = (pn0);ln3 = ln3, ln4 = ln4;ln3 = ln3 + 1); 40*I((ln3 + 1) < (i32.load@(pn0)), pn0 = pn0;ln3 = ln3, pn0 = pn0;ln3 = ln3 + 1); 38*I((ln3 + 1) < ln4, ln4 = (pn0);ln3 = ln3, ln4 = ln4;ln3 = ln3 + 1); 44*I((ln3 + 1) < ln4, ln4 = (pn0);ln3 = ln3, ln4 = ln4;ln3 = ln3 + 1); 56*I((ln3 + 1) < (i32.load@(pn0)), pn0 = pn0;ln3 = ln3, pn0 = pn0;ln3 = ln3 + 1); 51*I((ln3 + 1) < ln4, ln4 = (pn0);ln3 = ln3, ln4 = ln4;ln3 = ln3 + 1)])) + 1
  ebb exits:  [22]
  ebb succs:  [22]
  7 paths to exit 22
  [2 3 20 21]
  [2 3 4 5 6 7 13 17 18 19 20 21]
  [2 3 4 5 6 7 13 14 15 20 21]
  [2 3 4 5 6 7 8 17 18 19 20 21]
  [2 3 4 5 6 7 8 9 17 18 19 20 21]
  [2 3 4 5 6 7 8 9 10 15 20 21]
  [2 3 4 5 6 7 8 9 10 11 17 18 19 20 21]
  7 loop paths
  [2 3 20]  [2 3 4 5 6 7 13 17 18 19 20]  [2 3 4 5 6 7 13 14 15 20]  [2 3 4 5 6 7 8 17 18 19 20]  [2 3 4 5 6 7 8 9 17 18 19 20]  [2 3 4 5 6 7 8 9 10 15 20]  [2 3 4 5 6 7 8 9 10 11 17 18 19 20]
  7 post loop exit paths
  [21]  [21]  [21]  [21]  [21]  [21]  [21]
  ebb entry:  2
    ebb type:   block
    ebb blocks: [2 3]
    ebb cost:   5
    ebb exits:  [4 20]
    ebb succs:  [20 4]
    1 paths to exit 4
    [2 3]
    1 paths to exit 20
    [2 3]
  ebb entry:  4
    ebb type:   block
    ebb blocks: [4]
    ebb cost:   1
    ebb exits:  [5]
    ebb succs:  [5]
    1 paths to exit 5
    [4]
  ebb entry:  5
    ebb type:   loop
    ebb blocks: [5 6 7 8 9 10 11 12 13 14 15 16 17 18]
    ebb cost:   (list_max([15*I(i32.load@(ln2), ln2 = pn1, ln2 = (ln2)); 23*I(i32.load@(ln2), ln2 = pn1, ln2 = (ln2)); 29*I(i32.load@(ln2), ln2 = pn1, ln2 = (ln2)); 36*I(i32.load@(ln2), ln2 = pn1, ln2 = (ln2))])) + 16
    ebb exits:  [19 20]
    ebb succs:  [20 19]
    4 paths to exit 19
    [5 6 7 13 17 18]
    [5 6 7 8 17 18]
    [5 6 7 8 9 17 18]
    [5 6 7 8 9 10 11 17 18]
    2 paths to exit 20
    [5 6 7 13 14 15]
    [5 6 7 8 9 10 15]
    4 loop paths
    [5 6 7 13 17]    [5 6 7 8 17]    [5 6 7 8 9 17]    [5 6 7 8 9 10 11 17]
    6 post loop exit paths
    [18]    [18]    [18]    [18]    [14 15]    [15]
  ebb entry:  19
    ebb type:   block
    ebb blocks: [19]
    ebb cost:   1
    ebb exits:  [20]
    ebb succs:  [20]
    1 paths to exit 20
    [19]
  ebb entry:  20
    ebb type:   block
    ebb blocks: [20 21]
    ebb cost:   8
    ebb exits:  [2 22]
    ebb succs:  [2]
    1 paths to exit 2
    [20]
    1 paths to exit 22
    [20 21]
ebb entry:  22
  ebb type:   block
  ebb blocks: [22]
  ebb cost:   1
  ebb exits:  [23]
  ebb succs:  [23]
  1 paths to exit 23
  [22]
ebb entry:  23
  ebb type:   block
  ebb blocks: [23 24]
  ebb cost:   1
  ebb exits:  [24]
  ebb succs:  []
  1 paths to exit 24
  [23]
