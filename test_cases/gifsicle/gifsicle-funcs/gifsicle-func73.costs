ebb costs:
[0]: 41
[8]: ((16 * N([ln5; m[0]], [(m[0] <= ln5)], [m[0]; m[0]], [ln5; m[0]])) + 1)
[10]: 21
[12]: ((14 * N([ln7; pn1], [((pn1 + 1) != ln7)], [m[0]; (0 + 1)], [ln7; (pn1 + 1)])) + 1)
[14]: 1
[15]: 5
[17]: (list_max((16 * N([ln5; pn1], [((pn1 + 1) != ln5)], [m[0]; 0], [ln5; (pn1 + 1)])), ((30 + |f73|) * N([ln5; pn1], [((pn1 + 1) != ln5)], [m[0]; 0], [ln5; (pn1 + 1)]))) + list_max(1, 1))
[21]: 1
[22]: 6
[23]: 68
[28]: (list_max((34 * N([m[0]; m[8]], [(m[0] != m[8])], [m[0]; m[0]], [m[0]; m[8]])), (43 * N([m[0]; m[8]], [(m[0] != m[8])], [m[0]; m[0]], [m[0]; m[8]]))) + list_max(1, 1))
[33]: 1
[35]: 13
[36]: 17
25 ebb paths found
[0 23 36]
[0 23 35 36]
[0 23 28 35 36]
[0 23 28 33 36]
[0 23 28 33 35 36]
[0 8 10 15 22 23 36]
[0 8 10 15 22 23 35 36]
[0 8 10 15 22 23 28 35 36]
[0 8 10 15 22 23 28 33 36]
[0 8 10 15 22 23 28 33 35 36]
[0 8 10 15 17 21 22 23 36]
[0 8 10 15 17 21 22 23 35 36]
[0 8 10 15 17 21 22 23 28 35 36]
[0 8 10 15 17 21 22 23 28 33 36]
[0 8 10 15 17 21 22 23 28 33 35 36]
[0 8 10 12 14 15 22 23 36]
[0 8 10 12 14 15 22 23 35 36]
[0 8 10 12 14 15 22 23 28 35 36]
[0 8 10 12 14 15 22 23 28 33 36]
[0 8 10 12 14 15 22 23 28 33 35 36]
[0 8 10 12 14 15 17 21 22 23 36]
[0 8 10 12 14 15 17 21 22 23 35 36]
[0 8 10 12 14 15 17 21 22 23 28 35 36]
[0 8 10 12 14 15 17 21 22 23 28 33 36]
[0 8 10 12 14 15 17 21 22 23 28 33 35 36]
|f73| = list_max([
  list_sum(41, 68, 17);
  list_sum(41, 68, 13, 17);
  list_sum([
    41;
    68;
    (list_max([
      34 * (N([m[0]; m[8]], [m[0] != m[8]], [m[0]; m[0]], [m[0]; m[8]]));
      43 * (N([m[0]; m[8]], [m[0] != m[8]], [m[0]; m[0]], [m[0]; m[8]]))
    ])) + (list_max(1, 1));
    13;
    17
  ]);
  list_sum([
    41;
    68;
    (list_max([
      34 * (N([m[0]; m[8]], [m[0] != m[8]], [m[0]; m[0]], [m[0]; m[8]]));
      43 * (N([m[0]; m[8]], [m[0] != m[8]], [m[0]; m[0]], [m[0]; m[8]]))
    ])) + (list_max(1, 1));
    1;
    17
  ]);
  list_sum([
    41;
    68;
    (list_max([
      34 * (N([m[0]; m[8]], [m[0] != m[8]], [m[0]; m[0]], [m[0]; m[8]]));
      43 * (N([m[0]; m[8]], [m[0] != m[8]], [m[0]; m[0]], [m[0]; m[8]]))
    ])) + (list_max(1, 1));
    1;
    13;
    17
  ]);
  list_sum([
    41;
    (16 * (N([ln5; m[0]], [m[0] <= ln5], [m[0]; m[0]], [ln5; m[0]]))) + 1;
    21;
    5;
    6;
    68;
    17
  ]);
  list_sum([
    41;
    (16 * (N([ln5; m[0]], [m[0] <= ln5], [m[0]; m[0]], [ln5; m[0]]))) + 1;
    21;
    5;
    6;
    68;
    13;
    17
  ]);
  list_sum([
    41;
    (16 * (N([ln5; m[0]], [m[0] <= ln5], [m[0]; m[0]], [ln5; m[0]]))) + 1;
    21;
    5;
    6;
    68;
    (list_max([
      34 * (N([m[0]; m[8]], [m[0] != m[8]], [m[0]; m[0]], [m[0]; m[8]]));
      43 * (N([m[0]; m[8]], [m[0] != m[8]], [m[0]; m[0]], [m[0]; m[8]]))
    ])) + (list_max(1, 1));
    13;
    17
  ]);
  list_sum([
    41;
    (16 * (N([ln5; m[0]], [m[0] <= ln5], [m[0]; m[0]], [ln5; m[0]]))) + 1;
    21;
    5;
    6;
    68;
    (list_max([
      34 * (N([m[0]; m[8]], [m[0] != m[8]], [m[0]; m[0]], [m[0]; m[8]]));
      43 * (N([m[0]; m[8]], [m[0] != m[8]], [m[0]; m[0]], [m[0]; m[8]]))
    ])) + (list_max(1, 1));
    1;
    17
  ]);
  list_sum([
    41;
    (16 * (N([ln5; m[0]], [m[0] <= ln5], [m[0]; m[0]], [ln5; m[0]]))) + 1;
    21;
    5;
    6;
    68;
    (list_max([
      34 * (N([m[0]; m[8]], [m[0] != m[8]], [m[0]; m[0]], [m[0]; m[8]]));
      43 * (N([m[0]; m[8]], [m[0] != m[8]], [m[0]; m[0]], [m[0]; m[8]]))
    ])) + (list_max(1, 1));
    1;
    13;
    17
  ]);
  list_sum([
    41;
    (16 * (N([ln5; m[0]], [m[0] <= ln5], [m[0]; m[0]], [ln5; m[0]]))) + 1;
    21;
    5;
    (list_max([
      16 * (N([ln5; pn1], [(pn1 + 1) != ln5], [m[0]; 0], [ln5; pn1 + 1]));
      (30 + |f73|) * (N([ln5; pn1], [(pn1 + 1) != ln5], [m[0]; 0], [ln5; pn1 + 1]))
    ])) + (list_max(1, 1));
    1;
    6;
    68;
    17
  ]);
  list_sum([
    41;
    (16 * (N([ln5; m[0]], [m[0] <= ln5], [m[0]; m[0]], [ln5; m[0]]))) + 1;
    21;
    5;
    (list_max([
      16 * (N([ln5; pn1], [(pn1 + 1) != ln5], [m[0]; 0], [ln5; pn1 + 1]));
      (30 + |f73|) * (N([ln5; pn1], [(pn1 + 1) != ln5], [m[0]; 0], [ln5; pn1 + 1]))
    ])) + (list_max(1, 1));
    1;
    6;
    68;
    13;
    17
  ]);
  list_sum([
    41;
    (16 * (N([ln5; m[0]], [m[0] <= ln5], [m[0]; m[0]], [ln5; m[0]]))) + 1;
    21;
    5;
    (list_max([
      16 * (N([ln5; pn1], [(pn1 + 1) != ln5], [m[0]; 0], [ln5; pn1 + 1]));
      (30 + |f73|) * (N([ln5; pn1], [(pn1 + 1) != ln5], [m[0]; 0], [ln5; pn1 + 1]))
    ])) + (list_max(1, 1));
    1;
    6;
    68;
    (list_max([
      34 * (N([m[0]; m[8]], [m[0] != m[8]], [m[0]; m[0]], [m[0]; m[8]]));
      43 * (N([m[0]; m[8]], [m[0] != m[8]], [m[0]; m[0]], [m[0]; m[8]]))
    ])) + (list_max(1, 1));
    13;
    17
  ]);
  list_sum([
    41;
    (16 * (N([ln5; m[0]], [m[0] <= ln5], [m[0]; m[0]], [ln5; m[0]]))) + 1;
    21;
    5;
    (list_max([
      16 * (N([ln5; pn1], [(pn1 + 1) != ln5], [m[0]; 0], [ln5; pn1 + 1]));
      (30 + |f73|) * (N([ln5; pn1], [(pn1 + 1) != ln5], [m[0]; 0], [ln5; pn1 + 1]))
    ])) + (list_max(1, 1));
    1;
    6;
    68;
    (list_max([
      34 * (N([m[0]; m[8]], [m[0] != m[8]], [m[0]; m[0]], [m[0]; m[8]]));
      43 * (N([m[0]; m[8]], [m[0] != m[8]], [m[0]; m[0]], [m[0]; m[8]]))
    ])) + (list_max(1, 1));
    1;
    17
  ]);
  list_sum([
    41;
    (16 * (N([ln5; m[0]], [m[0] <= ln5], [m[0]; m[0]], [ln5; m[0]]))) + 1;
    21;
    5;
    (list_max([
      16 * (N([ln5; pn1], [(pn1 + 1) != ln5], [m[0]; 0], [ln5; pn1 + 1]));
      (30 + |f73|) * (N([ln5; pn1], [(pn1 + 1) != ln5], [m[0]; 0], [ln5; pn1 + 1]))
    ])) + (list_max(1, 1));
    1;
    6;
    68;
    (list_max([
      34 * (N([m[0]; m[8]], [m[0] != m[8]], [m[0]; m[0]], [m[0]; m[8]]));
      43 * (N([m[0]; m[8]], [m[0] != m[8]], [m[0]; m[0]], [m[0]; m[8]]))
    ])) + (list_max(1, 1));
    1;
    13;
    17
  ]);
  list_sum([
    41;
    (16 * (N([ln5; m[0]], [m[0] <= ln5], [m[0]; m[0]], [ln5; m[0]]))) + 1;
    21;
    (14 * (N([ln7; pn1], [(pn1 + 1) != ln7], [m[0]; 0 + 1], [ln7; pn1 + 1]))) + 1;
    1;
    5;
    6;
    68;
    17
  ]);
  list_sum([
    41;
    (16 * (N([ln5; m[0]], [m[0] <= ln5], [m[0]; m[0]], [ln5; m[0]]))) + 1;
    21;
    (14 * (N([ln7; pn1], [(pn1 + 1) != ln7], [m[0]; 0 + 1], [ln7; pn1 + 1]))) + 1;
    1;
    5;
    6;
    68;
    13;
    17
  ]);
  list_sum([
    41;
    (16 * (N([ln5; m[0]], [m[0] <= ln5], [m[0]; m[0]], [ln5; m[0]]))) + 1;
    21;
    (14 * (N([ln7; pn1], [(pn1 + 1) != ln7], [m[0]; 0 + 1], [ln7; pn1 + 1]))) + 1;
    1;
    5;
    6;
    68;
    (list_max([
      34 * (N([m[0]; m[8]], [m[0] != m[8]], [m[0]; m[0]], [m[0]; m[8]]));
      43 * (N([m[0]; m[8]], [m[0] != m[8]], [m[0]; m[0]], [m[0]; m[8]]))
    ])) + (list_max(1, 1));
    13;
    17
  ]);
  list_sum([
    41;
    (16 * (N([ln5; m[0]], [m[0] <= ln5], [m[0]; m[0]], [ln5; m[0]]))) + 1;
    21;
    (14 * (N([ln7; pn1], [(pn1 + 1) != ln7], [m[0]; 0 + 1], [ln7; pn1 + 1]))) + 1;
    1;
    5;
    6;
    68;
    (list_max([
      34 * (N([m[0]; m[8]], [m[0] != m[8]], [m[0]; m[0]], [m[0]; m[8]]));
      43 * (N([m[0]; m[8]], [m[0] != m[8]], [m[0]; m[0]], [m[0]; m[8]]))
    ])) + (list_max(1, 1));
    1;
    17
  ]);
  list_sum([
    41;
    (16 * (N([ln5; m[0]], [m[0] <= ln5], [m[0]; m[0]], [ln5; m[0]]))) + 1;
    21;
    (14 * (N([ln7; pn1], [(pn1 + 1) != ln7], [m[0]; 0 + 1], [ln7; pn1 + 1]))) + 1;
    1;
    5;
    6;
    68;
    (list_max([
      34 * (N([m[0]; m[8]], [m[0] != m[8]], [m[0]; m[0]], [m[0]; m[8]]));
      43 * (N([m[0]; m[8]], [m[0] != m[8]], [m[0]; m[0]], [m[0]; m[8]]))
    ])) + (list_max(1, 1));
    1;
    13;
    17
  ]);
  list_sum([
    41;
    (16 * (N([ln5; m[0]], [m[0] <= ln5], [m[0]; m[0]], [ln5; m[0]]))) + 1;
    21;
    (14 * (N([ln7; pn1], [(pn1 + 1) != ln7], [m[0]; 0 + 1], [ln7; pn1 + 1]))) + 1;
    1;
    5;
    (list_max([
      16 * (N([ln5; pn1], [(pn1 + 1) != ln5], [m[0]; 0], [ln5; pn1 + 1]));
      (30 + |f73|) * (N([ln5; pn1], [(pn1 + 1) != ln5], [m[0]; 0], [ln5; pn1 + 1]))
    ])) + (list_max(1, 1));
    1;
    6;
    68;
    17
  ]);
  list_sum([
    41;
    (16 * (N([ln5; m[0]], [m[0] <= ln5], [m[0]; m[0]], [ln5; m[0]]))) + 1;
    21;
    (14 * (N([ln7; pn1], [(pn1 + 1) != ln7], [m[0]; 0 + 1], [ln7; pn1 + 1]))) + 1;
    1;
    5;
    (list_max([
      16 * (N([ln5; pn1], [(pn1 + 1) != ln5], [m[0]; 0], [ln5; pn1 + 1]));
      (30 + |f73|) * (N([ln5; pn1], [(pn1 + 1) != ln5], [m[0]; 0], [ln5; pn1 + 1]))
    ])) + (list_max(1, 1));
    1;
    6;
    68;
    13;
    17
  ]);
  list_sum([
    41;
    (16 * (N([ln5; m[0]], [m[0] <= ln5], [m[0]; m[0]], [ln5; m[0]]))) + 1;
    21;
    (14 * (N([ln7; pn1], [(pn1 + 1) != ln7], [m[0]; 0 + 1], [ln7; pn1 + 1]))) + 1;
    1;
    5;
    (list_max([
      16 * (N([ln5; pn1], [(pn1 + 1) != ln5], [m[0]; 0], [ln5; pn1 + 1]));
      (30 + |f73|) * (N([ln5; pn1], [(pn1 + 1) != ln5], [m[0]; 0], [ln5; pn1 + 1]))
    ])) + (list_max(1, 1));
    1;
    6;
    68;
    (list_max([
      34 * (N([m[0]; m[8]], [m[0] != m[8]], [m[0]; m[0]], [m[0]; m[8]]));
      43 * (N([m[0]; m[8]], [m[0] != m[8]], [m[0]; m[0]], [m[0]; m[8]]))
    ])) + (list_max(1, 1));
    13;
    17
  ]);
  list_sum([
    41;
    (16 * (N([ln5; m[0]], [m[0] <= ln5], [m[0]; m[0]], [ln5; m[0]]))) + 1;
    21;
    (14 * (N([ln7; pn1], [(pn1 + 1) != ln7], [m[0]; 0 + 1], [ln7; pn1 + 1]))) + 1;
    1;
    5;
    (list_max([
      16 * (N([ln5; pn1], [(pn1 + 1) != ln5], [m[0]; 0], [ln5; pn1 + 1]));
      (30 + |f73|) * (N([ln5; pn1], [(pn1 + 1) != ln5], [m[0]; 0], [ln5; pn1 + 1]))
    ])) + (list_max(1, 1));
    1;
    6;
    68;
    (list_max([
      34 * (N([m[0]; m[8]], [m[0] != m[8]], [m[0]; m[0]], [m[0]; m[8]]));
      43 * (N([m[0]; m[8]], [m[0] != m[8]], [m[0]; m[0]], [m[0]; m[8]]))
    ])) + (list_max(1, 1));
    1;
    17
  ]);
  list_sum([
    41;
    (16 * (N([ln5; m[0]], [m[0] <= ln5], [m[0]; m[0]], [ln5; m[0]]))) + 1;
    21;
    (14 * (N([ln7; pn1], [(pn1 + 1) != ln7], [m[0]; 0 + 1], [ln7; pn1 + 1]))) + 1;
    1;
    5;
    (list_max([
      16 * (N([ln5; pn1], [(pn1 + 1) != ln5], [m[0]; 0], [ln5; pn1 + 1]));
      (30 + |f73|) * (N([ln5; pn1], [(pn1 + 1) != ln5], [m[0]; 0], [ln5; pn1 + 1]))
    ])) + (list_max(1, 1));
    1;
    6;
    68;
    (list_max([
      34 * (N([m[0]; m[8]], [m[0] != m[8]], [m[0]; m[0]], [m[0]; m[8]]));
      43 * (N([m[0]; m[8]], [m[0] != m[8]], [m[0]; m[0]], [m[0]; m[8]]))
    ])) + (list_max(1, 1));
    1;
    13;
    17
  ])
])
