ebb costs:
[0]: 43
[4]: ((20 * N([ln6], [((ln6 + 1) != 256)], [(0 + 1)], [(ln6 + 1)])) + 1)
[6]: 1
[7]: 14
[12]: (list_max((35 * N([ln12; ln6], [((ln6 + 1) < ln12)], [m[4]; 0], [ln12; (ln6 + 1)])), ((43 + |f159|) * N([ln6; m[4]], [((ln6 + 1) < m[4])], [0; m[4]], [(ln6 + 1); m[4]]))) + list_max(1, 1))
[16]: 38
[23]: 39
[27]: (((22 + |f164|) * N([ln3; m[4]], [((ln3 + 1) < m[4])], [(1 + 1); m[4]], [(ln3 + 1); m[4]])) + 1)
[29]: 1
[30]: 121
[49]: ((1619 + list_sum(|f23|, |f24|, |f27|, |f61|, |f118|)) * N([], [((R(23, 0, i32, R(23, 0, i32, 1, 44, 0), 1, 0) + 1) < R(23, 0, i32, 1, 44, 0))], [], []))
[49]: 84
[66]: ((1363 + list_sum(|f23|, |f24|, |f27|, |f61|, |f118|)) * N([ln21; m[18]], [not((ln21 == m[18]))], [R(23, 212, i32, 1, 44, 0); m[18]], [ln21; m[18]]))
[66]: 90
[79]: (((21 + |f61|) * N([ln15; pn2], [((pn2 + 1) != ln15)], [0; select((0 > m[14]), 0, m[14])], [ln15; (pn2 + 1)])) + 1)
[82]: 3
[83]: 12
[85]: (((25 + |f61|) * N([ln11; ln23; ln28; ln6; ln7], [i32.eqz(R(61, 0, i32, ln6, ((((ln7 + -1) * ln11) shl 2) + ln23), (ln28 + (((ln7 + -1) * ln11) shl 2))))], [0; 0; 0; (0 shl 2); select(((0 + m[10]) < 0), 0, 35192)], [ln11; ln23; ln28; ln6; (ln7 + -1)])) + list_max(1, 6))
[90]: 2
[91]: 18
[93]: (list_max((63 * N([ln8; ln9], [((ln8 + 1) != ln9)], [0; 0], [(ln8 + 1); ln9])), (52 * N([ln8; ln9], [((ln8 + 1) != ln9)], [0; 0], [(ln8 + 1); ln9])), (77 * N([ln8; ln9], [((ln8 + 1) != ln9)], [0; 0], [(ln8 + 1); ln9])), (66 * N([ln8; ln9], [((ln8 + 1) != ln9)], [0; 0], [(ln8 + 1); ln9])), (88 * N([ln8; ln9], [((ln8 + 1) != ln9)], [0; 0], [(ln8 + 1); ln9])), (77 * N([ln8; ln9], [((ln8 + 1) != ln9)], [0; 0], [(ln8 + 1); ln9]))) + list_max(1, 1, 1, 1, 1, 1))
[93]: 20
[96]: ((20 * N([ln4; ln6], [((ln4 + 1) != ln6)], [0; 0], [(ln4 + 1); ln6])) + 1)
[99]: 13
[101]: ((21 * N([m[0]], [(m[0] == m[0])], [m[0]], [m[0]])) + list_max(2, 4))
[108]: 12
[110]: 1
[111]: 32
[115]: 60
[116]: 102
[126]: (list_max((11 * N([ln3; ln7], [((ln3 + 1) != ln7)], [0; 0], [(ln3 + 1); ln7])), ((27 + |f27|) * N([ln3; ln7], [((ln3 + 1) != ln7)], [0; 0], [(ln3 + 1); ln7]))) + list_max(1, 1))
[130]: 1
[131]: 134
[141]: (list_max((15 * N([ln7; pn2], [((pn2 + 1) < ln7)], [0; pn2], [ln7; (pn2 + 1)])), (50 * N([ln7; pn2], [((pn2 + 1) < ln7)], [0; pn2], [ln7; (pn2 + 1)])), (55 * N([ln7; pn2], [((pn2 + 1) < ln7)], [0; pn2], [ln7; (pn2 + 1)]))) + list_max(1, 1, 1, 3))
[141]: 20
[143]: (list_max((17 * N([ln23; ln3], [((ln3 + 1) < ln23)], [0; 0], [ln23; (ln3 + 1)])), (22 * N([ln23; ln3], [((ln3 + 1) < ln23)], [0; 0], [ln23; (ln3 + 1)]))) + list_max(1, 1, 3))
[150]: 1
[151]: 12
[153]: 3
[154]: 19
[157]: (list_max((14 * N([ln12; ln8; pn2], [(((ln8 + -1) + pn2) > ln12)], [0; 0; pn2], [ln12; (ln8 + -1); pn2])), (51 * N([ln12; ln8; pn2], [(((ln8 + -1) + pn2) > ln12)], [0; 0; pn2], [ln12; (ln8 + -1); pn2])), (56 * N([ln12; ln8; pn2], [(((ln8 + -1) + pn2) > ln12)], [0; 0; pn2], [ln12; (ln8 + -1); pn2]))) + list_max(1, 1, 1, 3))
[157]: 22
[159]: (list_max((17 * N([ln23; ln3], [((ln3 + 1) < ln23)], [0; 0], [ln23; (ln3 + 1)])), (22 * N([ln23; ln3], [((ln3 + 1) < ln23)], [0; 0], [ln23; (ln3 + 1)]))) + list_max(1, 1, 3))
[166]: 1
[167]: 11
[169]: 5
[170]: 12
[173]: (list_max((15 * N([ln4; ln5], [((ln4 + 1) < ln5)], [0; 0], [(ln4 + 1); ln5])), (50 * N([ln4; ln5], [((ln4 + 1) < ln5)], [0; 0], [(ln4 + 1); ln5])), (55 * N([ln4; ln5], [((ln4 + 1) < ln5)], [0; 0], [(ln4 + 1); ln5]))) + list_max(1, 1, 1, 3))
[173]: 18
[175]: (list_max((19 * N([ln3; ln6], [((ln3 + 1) != ln6)], [0; 0], [(ln3 + 1); ln6])), (24 * N([ln3; ln6], [((ln3 + 1) != ln6)], [0; 0], [(ln3 + 1); ln6]))) + list_max(1, 1, 3))
[182]: 1
[183]: 12
[185]: 3
[186]: 30
[189]: (list_max((13 * N([ln20; ln4; ln9], [(((ln9 + -1) + ln4) > ln20)], [0; 0; 0], [ln20; ln4; (ln9 + -1)])), (48 * N([ln20; ln4; ln9], [(((ln9 + -1) + ln4) > ln20)], [0; 0; 0], [ln20; ln4; (ln9 + -1)])), (53 * N([ln20; ln4; ln9], [(((ln9 + -1) + ln4) > ln20)], [0; 0; 0], [ln20; ln4; (ln9 + -1)]))) + list_max(1, 1, 1, 3))
[189]: 18
[191]: (list_max((19 * N([ln3; ln6], [((ln3 + 1) != ln6)], [0; 0], [(ln3 + 1); ln6])), (24 * N([ln3; ln6], [((ln3 + 1) != ln6)], [0; 0], [(ln3 + 1); ln6]))) + list_max(1, 1, 3))
[198]: 1
[199]: 10
[201]: 5
[202]: 19
[205]: (list_max((12 * N([ln5; ln6], [((ln5 + 1) != ln6)], [0; 0], [(ln5 + 1); ln6])), (47 * N([ln5; ln6], [((ln5 + 1) != ln6)], [0; 0], [(ln5 + 1); ln6])), (52 * N([ln5; ln6], [((ln5 + 1) != ln6)], [0; 0], [(ln5 + 1); ln6])), (46 * N([ln5; ln6], [((ln5 + 1) != ln6)], [0; 0], [(ln5 + 1); ln6]))) + list_max(1, 1, 1, 1))
[205]: 21
[208]: (list_max((17 * N([ln12; ln3], [((ln3 + 1) != ln12)], [0; 0], [ln12; (ln3 + 1)])), (22 * N([ln12; ln3], [((ln3 + 1) != ln12)], [0; 0], [ln12; (ln3 + 1)]))) + list_max(1, 1, 3))
[215]: 1
[216]: 8
[218]: 1
[219]: 21
[221]: 113
[233]: (list_max((64 * N([ln8; ln9], [((ln8 + 1) < ln9)], [0; 0], [(ln8 + 1); ln9])), (63 * N([ln8; ln9], [((ln8 + 1) < ln9)], [0; 0], [(ln8 + 1); ln9])), (67 * N([ln8; ln9], [((ln8 + 1) < ln9)], [0; 0], [(ln8 + 1); ln9]))) + list_max(1, 1, 1))
[233]: 24
[234]: (list_max((32 * N([ln11; ln3], [((ln3 + 1) != ln11)], [0; 0], [ln11; (ln3 + 1)])), (31 * N([ln11; ln3], [((ln3 + 1) != ln11)], [0; 0], [ln11; (ln3 + 1)])), (35 * N([ln11; ln3], [((ln3 + 1) != ln11)], [0; 0], [ln11; (ln3 + 1)]))) + list_max(1, 1, 1))
[242]: 8
[244]: 42
[253]: ((23 * N([ln17; ln3], [((ln3 + 1) != ln17)], [0; 0], [ln17; (ln3 + 1)])) + 1)
[255]: 1
[256]: 70
[264]: (list_max((19 * N([ln17; ln3], [not(((ln3 + 1) == ln17))], [0; 0], [ln17; (ln3 + 1)])), (25 * N([ln17; ln3], [not(((ln3 + 1) == ln17))], [0; 0], [ln17; (ln3 + 1)]))) + Empty)
[270]: 1
[272]: 7
[273]: 65
[285]: 65
[289]: (list_max((11 * N([ln3; ln6], [((ln3 + 1) != ln6)], [0; 0], [(ln3 + 1); ln6])), ((27 + |f27|) * N([ln3; ln6], [((ln3 + 1) != ln6)], [0; 0], [(ln3 + 1); ln6]))) + list_max(1, 1))
[293]: 1
[295]: 33
[297]: (((23 + |f24|) * N([ln13; ln6], [((ln13 + 1) != ln6)], [0; 0], [(ln13 + 1); ln6])) + 1)
[299]: 1
[300]: 59
[307]: (list_max((11 * N([ln3; ln8], [((ln3 + 1) != ln8)], [0; 0], [(ln3 + 1); ln8])), ((27 + |f27|) * N([ln3; ln8], [((ln3 + 1) != ln8)], [0; 0], [(ln3 + 1); ln8]))) + list_max(1, 1))
[311]: 1
[313]: 6
[314]: 13
[316]: 7
[318]: 3
[319]: 29
[321]: ((14 * N([ln3; ln8], [((ln3 + 1) != ln8)], [0; 0], [(ln3 + 1); ln8])) + 1)
[323]: 1
[324]: 19
[326]: (list_max((33 * N([ln11; ln5], [((ln5 + 1) != ln11)], [0; 0], [ln11; (ln5 + 1)])), (50 * N([ln11; ln5], [((ln5 + 1) != ln11)], [0; 0], [ln11; (ln5 + 1)]))) + list_max(1, 1))
[326]: 21
[328]: ((11 * N([ln6; pn2], [((ln6 shl 1) < pn2)], [0; pn2], [(ln6 shl 1); pn2])) + 1)
[330]: 4
[331]: 14
[333]: 1
[334]: 34
[340]: (list_max((13 * N([ln11; pn2], [((pn2 + 1) < ln11)], [0; pn2], [ln11; (pn2 + 1)])), (48 * N([m[4]; pn2], [((pn2 + 1) < m[4])], [m[4]; pn2], [m[4]; (pn2 + 1)])), (60 * N([m[4]; pn2], [((pn2 + 1) < m[4])], [m[4]; pn2], [m[4]; (pn2 + 1)]))) + list_max(1, 1, 1))
[340]: 22
[342]: (list_max((14 * N([ln3; ln6], [((ln3 + 1) != ln6)], [0; 0], [(ln3 + 1); ln6])), (26 * N([ln3; ln6], [((ln3 + 1) != ln6)], [0; 0], [(ln3 + 1); ln6]))) + list_max(1, 1))
[346]: 4
[347]: 8
[349]: 1
[350]: 11
[352]: (list_max((74 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), (84 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), (122 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), (147 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), (159 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((93 + |f27|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((131 + |f27|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((156 + |f27|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((168 + |f27|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), (83 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), (93 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), (131 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), (156 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), (168 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((102 + |f27|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((140 + |f27|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((165 + |f27|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((177 + |f27|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), (98 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), (108 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), (146 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), (171 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), (183 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((117 + |f27|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((155 + |f27|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((180 + |f27|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((192 + |f27|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), (123 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), (133 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), (171 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), (196 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), (208 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((142 + |f27|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((180 + |f27|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((205 + |f27|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((217 + |f27|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), (135 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), (145 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), (183 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), (208 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), (220 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((154 + |f27|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((192 + |f27|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((217 + |f27|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((229 + |f27|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), (37 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), (47 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), (85 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), (110 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), (122 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((56 + |f27|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((94 + |f27|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((119 + |f27|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((131 + |f27|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((86 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((96 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((134 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((159 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((171 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((105 + list_sum(|f27|, |f57|)) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((143 + list_sum(|f27|, |f57|)) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((168 + list_sum(|f27|, |f57|)) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((180 + list_sum(|f27|, |f57|)) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((95 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((105 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((143 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((168 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((180 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((114 + list_sum(|f27|, |f57|)) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((152 + list_sum(|f27|, |f57|)) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((177 + list_sum(|f27|, |f57|)) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((189 + list_sum(|f27|, |f57|)) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((110 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((120 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((158 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((183 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((195 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((129 + list_sum(|f27|, |f57|)) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((167 + list_sum(|f27|, |f57|)) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((192 + list_sum(|f27|, |f57|)) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((204 + list_sum(|f27|, |f57|)) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((135 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((145 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((183 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((208 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((220 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((154 + list_sum(|f27|, |f57|)) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((192 + list_sum(|f27|, |f57|)) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((217 + list_sum(|f27|, |f57|)) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((229 + list_sum(|f27|, |f57|)) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((147 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((157 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((195 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((220 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((232 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((166 + list_sum(|f27|, |f57|)) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((204 + list_sum(|f27|, |f57|)) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((229 + list_sum(|f27|, |f57|)) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((241 + list_sum(|f27|, |f57|)) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((49 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((59 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((97 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((122 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((134 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((68 + list_sum(|f27|, |f57|)) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((106 + list_sum(|f27|, |f57|)) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((131 + list_sum(|f27|, |f57|)) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((143 + list_sum(|f27|, |f57|)) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)]))) + list_max(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1))
[352]: 57
[359]: (list_max((20 * N([ln3; ln5], [((ln5 + 1) < ln3)], [0; 0], [ln3; (ln5 + 1)])), (29 * N([ln3; ln5], [((ln5 + 1) < ln3)], [0; 0], [ln3; (ln5 + 1)])), (44 * N([ln3; ln5], [((ln5 + 1) < ln3)], [0; 0], [ln3; (ln5 + 1)])), (69 * N([ln5; m[4]], [((ln5 + 1) < m[4])], [0; m[4]], [(ln5 + 1); m[4]])), (81 * N([ln5; m[4]], [((ln5 + 1) < m[4])], [0; m[4]], [(ln5 + 1); m[4]]))) + list_max(1, 1, 1, 1, 1))
[359]: 34
[364]: (list_max((14 * N([ln3; ln9], [((ln3 + 1) != ln9)], [0; 0], [(ln3 + 1); ln9])), (26 * N([ln3; ln9], [((ln3 + 1) != ln9)], [0; 0], [(ln3 + 1); ln9]))) + list_max(1, 1))
[368]: 4
[369]: 9
[370]: 8
[372]: 1
[373]: 33
[379]: (list_max((27 * N([ln11; ln3], [((ln11 + 1) < ln3)], [0; 0], [(ln11 + 1); ln3])), (52 * N([ln11; m[4]], [((ln11 + 1) < m[4])], [0; m[4]], [(ln11 + 1); m[4]])), (64 * N([ln11; m[4]], [((ln11 + 1) < m[4])], [0; m[4]], [(ln11 + 1); m[4]]))) + list_max(1, 1, 1))
[379]: 24
[381]: (list_max((14 * N([ln3; ln5], [((ln3 + 1) != ln5)], [0; 0], [(ln3 + 1); ln5])), (26 * N([ln3; ln5], [((ln3 + 1) != ln5)], [0; 0], [(ln3 + 1); ln5]))) + list_max(1, 1))
[385]: 4
[386]: 10
[388]: 1
[389]: 3
[391]: 1
[392]: 52
[398]: (list_max((28 * N([ln17; ln3], [((ln3 + 1) != ln17)], [0; 0], [ln17; (ln3 + 1)])), (46 * N([ln17; ln3], [((ln3 + 1) != ln17)], [0; 0], [ln17; (ln3 + 1)]))) + list_max(1, 1))
[402]: 1
[403]: 98
[412]: ((819 + list_sum(|f22|, |f23|, |f24|, |f27|, |f38|, |f44|, |f51|, |f54|, |f66|, |f94|, |f118|)) * N([m[4]], [((m[4] + 1) < m[4])], [m[4]], [m[4]]))
[412]: 101
[419]: (((23 + |f24|) * N([ln4; ln8], [((ln4 + 1) != ln8)], [0; 0], [(ln4 + 1); ln8])) + 1)
[421]: 1
[422]: 172
[433]: (list_max((11 * N([ln12; ln27], [((ln12 + 1) != ln27)], [0; 0], [(ln12 + 1); ln27])), (55 * N([ln12; ln27], [((ln12 + 1) != ln27)], [0; 0], [(ln12 + 1); ln27]))) + list_max(1, 1))
[433]: 24
[435]: ((22 * N([ln13; ln22], [((ln13 + 1) != ln22)], [0; 0], [(ln13 + 1); ln22])) + 1)
[437]: 1
[438]: 8
[440]: 1
[441]: 32
[444]: (list_max((11 * N([ln21; ln27], [((ln21 + 1) != ln27)], [0; 0], [(ln21 + 1); ln27])), (92 * N([ln21; ln27], [((ln21 + 1) != ln27)], [0; 0], [(ln21 + 1); ln27])), (99 * N([ln21; ln27], [((ln21 + 1) != ln27)], [0; 0], [(ln21 + 1); ln27])), ((105 + |f27|) * N([ln21; ln27], [((ln21 + 1) != ln27)], [0; 0], [(ln21 + 1); ln27])), (102 * N([ln21; ln27], [((ln21 + 1) != ln27)], [0; 0], [(ln21 + 1); ln27])), (89 * N([ln21; ln27], [((ln21 + 1) != ln27)], [0; 0], [(ln21 + 1); ln27])), (99 * N([ln21; ln27], [((ln21 + 1) != ln27)], [0; 0], [(ln21 + 1); ln27])), (106 * N([ln21; ln27], [((ln21 + 1) != ln27)], [0; 0], [(ln21 + 1); ln27])), ((112 + |f27|) * N([ln21; ln27], [((ln21 + 1) != ln27)], [0; 0], [(ln21 + 1); ln27])), (109 * N([ln21; ln27], [((ln21 + 1) != ln27)], [0; 0], [(ln21 + 1); ln27])), (96 * N([ln21; ln27], [((ln21 + 1) != ln27)], [0; 0], [(ln21 + 1); ln27])), ((138 + list_sum(|f24|, |f27|)) * N([ln21; ln27], [((ln21 + 1) != ln27)], [0; 0], [(ln21 + 1); ln27])), ((144 + list_sum(|f23|, |f24|, |f27|)) * N([ln21; ln27], [((ln21 + 1) != ln27)], [0; 0], [(ln21 + 1); ln27])), (106 * N([ln21; ln27], [((ln21 + 1) != ln27)], [0; 0], [(ln21 + 1); ln27])), (99 * N([ln21; ln27], [((ln21 + 1) != ln27)], [0; 0], [(ln21 + 1); ln27])), (95 * N([ln21; ln27], [((ln21 + 1) != ln27)], [0; 0], [(ln21 + 1); ln27]))) + list_max(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1))
[444]: 32
[446]: (list_max((51 * N([ln22; ln33], [((ln33 + 1) != ln22)], [0; 0], [ln22; (ln33 + 1)])), (58 * N([ln22; ln33], [((ln33 + 1) != ln22)], [0; 0], [ln22; (ln33 + 1)])), ((64 + |f27|) * N([ln22; ln33], [((ln33 + 1) != ln22)], [0; 0], [ln22; (ln33 + 1)])), (61 * N([ln22; ln33], [((ln33 + 1) != ln22)], [0; 0], [ln22; (ln33 + 1)])), (48 * N([ln22; ln33], [((ln33 + 1) != ln22)], [0; 0], [ln22; (ln33 + 1)])), (58 * N([ln22; ln33], [((ln33 + 1) != ln22)], [0; 0], [ln22; (ln33 + 1)])), (65 * N([ln22; ln33], [((ln33 + 1) != ln22)], [0; 0], [ln22; (ln33 + 1)])), ((71 + |f27|) * N([ln22; ln33], [((ln33 + 1) != ln22)], [0; 0], [ln22; (ln33 + 1)])), (68 * N([ln22; ln33], [((ln33 + 1) != ln22)], [0; 0], [ln22; (ln33 + 1)])), (55 * N([ln22; ln33], [((ln33 + 1) != ln22)], [0; 0], [ln22; (ln33 + 1)])), ((97 + list_sum(|f24|, |f27|)) * N([ln22; ln33], [((ln33 + 1) != ln22)], [0; 0], [ln22; (ln33 + 1)])), ((103 + list_sum(|f23|, |f24|, |f27|)) * N([ln22; ln33], [((ln33 + 1) != ln22)], [0; 0], [ln22; (ln33 + 1)])), (65 * N([ln22; ln33], [((ln33 + 1) != ln22)], [0; 0], [ln22; (ln33 + 1)])), (58 * N([ln22; ln33], [((ln33 + 1) != ln22)], [0; 0], [ln22; (ln33 + 1)])), (54 * N([ln22; ln33], [((ln33 + 1) != ln22)], [0; 0], [ln22; (ln33 + 1)]))) + list_max(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1))
[478]: 1
[479]: 8
[481]: 27
[483]: 15
[485]: 60
[487]: (list_max((11 * N([ln5; ln8], [((ln5 + 1) != ln8)], [0; 0], [(ln5 + 1); ln8])), (55 * N([ln5; ln8], [((ln5 + 1) != ln8)], [0; 0], [(ln5 + 1); ln8]))) + list_max(1, 1))
[487]: 24
[489]: ((22 * N([ln11; ln13], [((ln13 + 1) != ln11)], [0; 0], [ln11; (ln13 + 1)])) + 1)
[491]: 1
[492]: 8
[494]: 1
[495]: 112
[510]: (((23 + |f24|) * N([ln6; ln7], [((ln6 + 1) != ln7)], [0; 0], [(ln6 + 1); ln7])) + 1)
[512]: 1
[514]: 58
[516]: (list_max((11 * N([ln3; ln8], [((ln3 + 1) != ln8)], [0; 0], [(ln3 + 1); ln8])), ((27 + |f27|) * N([ln3; ln8], [((ln3 + 1) != ln8)], [0; 0], [(ln3 + 1); ln8]))) + list_max(1, 1))
[520]: 1
[521]: 59
[528]: (list_max((11 * N([ln3; ln8], [((ln3 + 1) != ln8)], [0; 0], [(ln3 + 1); ln8])), ((27 + |f27|) * N([ln3; ln8], [((ln3 + 1) != ln8)], [0; 0], [(ln3 + 1); ln8]))) + list_max(1, 1))
[532]: 1
[534]: 64
[536]: (((23 + |f24|) * N([ln6; ln7], [((ln6 + 1) != ln7)], [0; 0], [(ln6 + 1); ln7])) + 1)
[538]: 1
[539]: 13
[541]: 6
[543]: 4
[545]: 66
[550]: ((1635 + list_sum(|f23|, |f24|, |f27|, |f61|, |f117|)) * N([], [((R(23, 0, i32, R(23, 0, i32, 1, 44, 0), 1, 0) + 1) < R(23, 0, i32, 1, 44, 0))], [], []))
[550]: 84
[567]: ((1379 + list_sum(|f23|, |f24|, |f27|, |f61|, |f117|)) * N([ln24; m[18]], [not((ln24 == m[18]))], [0; m[18]], [ln24; m[18]]))
[567]: 90
[580]: (((21 + |f61|) * N([ln15; pn2], [((pn2 + 1) != ln15)], [0; pn2], [ln15; (pn2 + 1)])) + 1)
[583]: 14
[585]: (((28 + |f61|) * N([ln11; ln22; ln33; ln6; ln7], [i32.eqz(R(61, 0, i32, ln6, ((((ln7 + -1) * ln11) shl 1) + ln33), (ln22 + (((ln7 + -1) * ln11) shl 1))))], [0; 0; 0; 0; 0], [ln11; ln22; ln33; ln6; (ln7 + -1)])) + list_max(2, 8))
[592]: 17
[594]: (list_max((63 * N([ln8; ln9], [((ln8 + 1) != ln9)], [0; 0], [(ln8 + 1); ln9])), (52 * N([ln8; ln9], [((ln8 + 1) != ln9)], [0; 0], [(ln8 + 1); ln9])), (77 * N([ln8; ln9], [((ln8 + 1) != ln9)], [0; 0], [(ln8 + 1); ln9])), (66 * N([ln8; ln9], [((ln8 + 1) != ln9)], [0; 0], [(ln8 + 1); ln9])), (88 * N([ln8; ln9], [((ln8 + 1) != ln9)], [0; 0], [(ln8 + 1); ln9])), (77 * N([ln8; ln9], [((ln8 + 1) != ln9)], [0; 0], [(ln8 + 1); ln9]))) + list_max(1, 1, 1, 1, 1, 1))
[594]: 20
[597]: ((20 * N([ln4; ln6], [((ln4 + 1) != ln6)], [0; 0], [(ln4 + 1); ln6])) + 1)
[600]: 13
[602]: ((21 * N([m[0]], [(m[0] == m[0])], [m[0]], [m[0]])) + list_max(2, 4))
[609]: 12
[611]: 1
[612]: 32
[616]: 60
[617]: 102
[627]: (list_max((11 * N([ln3; ln7], [((ln3 + 1) != ln7)], [0; 0], [(ln3 + 1); ln7])), ((27 + |f27|) * N([ln3; ln7], [((ln3 + 1) != ln7)], [0; 0], [(ln3 + 1); ln7]))) + list_max(1, 1))
[631]: 1
[632]: 134
[642]: (list_max((15 * N([ln5; pn2], [((pn2 + 1) < ln5)], [0; pn2], [ln5; (pn2 + 1)])), (49 * N([ln5; pn2], [((pn2 + 1) < ln5)], [0; pn2], [ln5; (pn2 + 1)])), (56 * N([ln5; pn2], [((pn2 + 1) < ln5)], [0; pn2], [ln5; (pn2 + 1)]))) + list_max(1, 1, 1, 3))
[642]: 20
[644]: (list_max((16 * N([ln27; ln3], [((ln3 + 1) < ln27)], [0; 0], [ln27; (ln3 + 1)])), (23 * N([ln27; ln3], [((ln3 + 1) < ln27)], [0; 0], [ln27; (ln3 + 1)]))) + list_max(1, 1, 3))
[651]: 1
[652]: 12
[654]: 3
[655]: 19
[658]: (list_max((14 * N([ln12; ln8; pn2], [(((ln8 + -1) + pn2) > ln12)], [0; 0; pn2], [ln12; (ln8 + -1); pn2])), (50 * N([ln12; ln8; pn2], [(((ln8 + -1) + pn2) > ln12)], [0; 0; pn2], [ln12; (ln8 + -1); pn2])), (57 * N([ln12; ln8; pn2], [(((ln8 + -1) + pn2) > ln12)], [0; 0; pn2], [ln12; (ln8 + -1); pn2]))) + list_max(1, 1, 1, 3))
[658]: 22
[660]: (list_max((16 * N([ln27; ln3], [((ln3 + 1) < ln27)], [0; 0], [ln27; (ln3 + 1)])), (23 * N([ln27; ln3], [((ln3 + 1) < ln27)], [0; 0], [ln27; (ln3 + 1)]))) + list_max(1, 1, 3))
[667]: 1
[668]: 11
[670]: 5
[671]: 12
[674]: (list_max((15 * N([ln4; ln7], [((ln4 + 1) < ln7)], [0; 0], [(ln4 + 1); ln7])), (50 * N([ln4; ln7], [((ln4 + 1) < ln7)], [0; 0], [(ln4 + 1); ln7])), (57 * N([ln4; ln7], [((ln4 + 1) < ln7)], [0; 0], [(ln4 + 1); ln7]))) + list_max(1, 1, 1, 3))
[674]: 18
[676]: (list_max((19 * N([ln3; ln6], [((ln3 + 1) != ln6)], [0; 0], [(ln3 + 1); ln6])), (26 * N([ln3; ln6], [((ln3 + 1) != ln6)], [0; 0], [(ln3 + 1); ln6]))) + list_max(1, 1, 3))
[683]: 1
[684]: 12
[686]: 3
[687]: 30
[690]: (list_max((13 * N([ln20; ln4; ln9], [(((ln9 + -1) + ln4) > ln20)], [0; 0; 0], [ln20; ln4; (ln9 + -1)])), (46 * N([ln20; ln4; ln9], [(((ln9 + -1) + ln4) > ln20)], [0; 0; 0], [ln20; ln4; (ln9 + -1)])), (57 * N([ln20; ln4; ln9], [(((ln9 + -1) + ln4) > ln20)], [0; 0; 0], [ln20; ln4; (ln9 + -1)]))) + list_max(1, 1, 1))
[690]: 18
[692]: (list_max((17 * N([ln3; ln6], [((ln3 + 1) != ln6)], [0; 0], [(ln3 + 1); ln6])), (28 * N([ln3; ln6], [((ln3 + 1) != ln6)], [0; 0], [(ln3 + 1); ln6]))) + list_max(1, 1))
[697]: 1
[698]: 10
[700]: 5
[701]: 19
[704]: (list_max((17 * N([ln5; ln6], [((ln5 + 1) != ln6)], [0; 0], [(ln5 + 1); ln6])), (49 * N([ln5; ln6], [((ln5 + 1) != ln6)], [0; 0], [(ln5 + 1); ln6])), (47 * N([ln5; ln6], [((ln5 + 1) != ln6)], [0; 0], [(ln5 + 1); ln6])), (60 * N([ln5; ln6], [((ln5 + 1) != ln6)], [0; 0], [(ln5 + 1); ln6]))) + list_max(1, 1, 1, 1))
[704]: 23
[707]: (list_max((14 * N([ln12; ln3], [((ln3 + 1) != ln12)], [0; 0], [ln12; (ln3 + 1)])), (25 * N([ln12; ln3], [((ln3 + 1) != ln12)], [0; 0], [ln12; (ln3 + 1)]))) + list_max(1, 1))
[712]: 1
[713]: 2
[714]: 9
[716]: 1
[717]: 21
[719]: 113
[731]: (list_max((64 * N([ln8; ln9], [((ln8 + 1) < ln9)], [0; 0], [(ln8 + 1); ln9])), (63 * N([ln8; ln9], [((ln8 + 1) < ln9)], [0; 0], [(ln8 + 1); ln9])), (67 * N([ln8; ln9], [((ln8 + 1) < ln9)], [0; 0], [(ln8 + 1); ln9]))) + list_max(1, 1, 1))
[731]: 24
[732]: (list_max((32 * N([ln11; ln3], [((ln3 + 1) != ln11)], [0; 0], [ln11; (ln3 + 1)])), (31 * N([ln11; ln3], [((ln3 + 1) != ln11)], [0; 0], [ln11; (ln3 + 1)])), (35 * N([ln11; ln3], [((ln3 + 1) != ln11)], [0; 0], [ln11; (ln3 + 1)]))) + list_max(1, 1, 1))
[740]: 8
[742]: 42
[751]: ((23 * N([ln17; ln3], [((ln3 + 1) != ln17)], [0; 0], [ln17; (ln3 + 1)])) + 1)
[753]: 1
[754]: 70
[762]: (list_max((19 * N([ln17; ln3], [not(((ln3 + 1) == ln17))], [0; 0], [ln17; (ln3 + 1)])), (25 * N([ln17; ln3], [not(((ln3 + 1) == ln17))], [0; 0], [ln17; (ln3 + 1)]))) + Empty)
[768]: 1
[770]: 7
[771]: 65
[783]: 65
[787]: (list_max((11 * N([ln3; ln6], [((ln3 + 1) != ln6)], [0; 0], [(ln3 + 1); ln6])), ((27 + |f27|) * N([ln3; ln6], [((ln3 + 1) != ln6)], [0; 0], [(ln3 + 1); ln6]))) + list_max(1, 1))
[791]: 1
[793]: 33
[795]: (((23 + |f24|) * N([ln13; ln6], [((ln13 + 1) != ln6)], [0; 0], [(ln13 + 1); ln6])) + 1)
[797]: 1
[798]: 59
[805]: (list_max((11 * N([ln3; ln8], [((ln3 + 1) != ln8)], [0; 0], [(ln3 + 1); ln8])), ((27 + |f27|) * N([ln3; ln8], [((ln3 + 1) != ln8)], [0; 0], [(ln3 + 1); ln8]))) + list_max(1, 1))
[809]: 1
[811]: 6
[812]: 13
[814]: 7
[816]: 3
[817]: 29
[820]: 7
[822]: 6
[824]: 9
[827]: ((14 * N([ln3; ln8], [((ln3 + 1) != ln8)], [0; 0], [(ln3 + 1); ln8])) + 1)
[829]: 1
[830]: 19
[832]: (list_max((33 * N([ln11; ln3], [((ln11 + 1) != ln3)], [0; 0], [(ln11 + 1); ln3])), (52 * N([ln11; ln3], [((ln11 + 1) != ln3)], [0; 0], [(ln11 + 1); ln3]))) + list_max(1, 1))
[832]: 21
[834]: ((13 * N([ln4; pn2], [(((ln4 shl 1) && 65532) < pn2)], [0; pn2], [((ln4 shl 1) && 65532); pn2])) + 1)
[836]: 4
[837]: 14
[839]: 1
[840]: 34
[846]: (list_max((13 * N([ln11; ln3], [((ln11 + 1) < ln3)], [0; 0], [(ln11 + 1); ln3])), (48 * N([ln11; m[4]], [((ln11 + 1) < m[4])], [0; m[4]], [(ln11 + 1); m[4]])), (60 * N([ln11; m[4]], [((ln11 + 1) < m[4])], [0; m[4]], [(ln11 + 1); m[4]]))) + list_max(1, 1, 1))
[846]: 22
[848]: (list_max((14 * N([ln3; ln7], [((ln3 + 1) != ln7)], [0; 0], [(ln3 + 1); ln7])), (26 * N([ln3; ln7], [((ln3 + 1) != ln7)], [0; 0], [(ln3 + 1); ln7]))) + list_max(1, 1))
[852]: 4
[853]: 8
[855]: 1
[856]: 11
[858]: (list_max((72 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), (82 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), (120 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), (145 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), (157 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((91 + |f27|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((129 + |f27|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((154 + |f27|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((166 + |f27|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), (81 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), (91 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), (129 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), (154 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), (166 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((100 + |f27|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((138 + |f27|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((163 + |f27|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((175 + |f27|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), (96 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), (106 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), (144 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), (169 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), (181 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((115 + |f27|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((153 + |f27|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((178 + |f27|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((190 + |f27|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), (121 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), (131 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), (169 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), (194 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), (206 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((140 + |f27|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((178 + |f27|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((203 + |f27|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((215 + |f27|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), (133 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), (143 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), (181 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), (206 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), (218 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((152 + |f27|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((190 + |f27|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((215 + |f27|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((227 + |f27|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), (35 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), (45 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), (83 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), (108 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), (120 * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((54 + |f27|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((92 + |f27|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((117 + |f27|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((129 + |f27|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((87 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((97 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((135 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((160 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((172 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((106 + list_sum(|f27|, |f57|)) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((144 + list_sum(|f27|, |f57|)) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((169 + list_sum(|f27|, |f57|)) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((181 + list_sum(|f27|, |f57|)) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((96 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((106 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((144 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((169 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((181 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((115 + list_sum(|f27|, |f57|)) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((153 + list_sum(|f27|, |f57|)) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((178 + list_sum(|f27|, |f57|)) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((190 + list_sum(|f27|, |f57|)) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((111 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((121 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((159 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((184 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((196 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((130 + list_sum(|f27|, |f57|)) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((168 + list_sum(|f27|, |f57|)) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((193 + list_sum(|f27|, |f57|)) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((205 + list_sum(|f27|, |f57|)) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((136 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((146 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((184 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((209 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((221 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((155 + list_sum(|f27|, |f57|)) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((193 + list_sum(|f27|, |f57|)) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((218 + list_sum(|f27|, |f57|)) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((230 + list_sum(|f27|, |f57|)) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((148 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((158 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((196 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((221 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((233 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((167 + list_sum(|f27|, |f57|)) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((205 + list_sum(|f27|, |f57|)) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((230 + list_sum(|f27|, |f57|)) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((242 + list_sum(|f27|, |f57|)) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((50 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((60 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((98 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((123 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((135 + |f57|) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((69 + list_sum(|f27|, |f57|)) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((107 + list_sum(|f27|, |f57|)) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((132 + list_sum(|f27|, |f57|)) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)])), ((144 + list_sum(|f27|, |f57|)) * N([ln7], [(ln7 + -1)], [0], [(ln7 + -1)]))) + list_max(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1))
[858]: 58
[865]: (list_max((20 * N([ln3; ln5], [((ln5 + 1) < ln3)], [0; 0], [ln3; (ln5 + 1)])), (29 * N([ln3; ln5], [((ln5 + 1) < ln3)], [0; 0], [ln3; (ln5 + 1)])), (44 * N([ln3; ln5], [((ln5 + 1) < ln3)], [0; 0], [ln3; (ln5 + 1)])), (69 * N([ln5; m[4]], [((ln5 + 1) < m[4])], [0; m[4]], [(ln5 + 1); m[4]])), (81 * N([ln5; m[4]], [((ln5 + 1) < m[4])], [0; m[4]], [(ln5 + 1); m[4]]))) + list_max(1, 1, 1, 1, 1))
[865]: 34
[870]: (list_max((14 * N([ln3; ln9], [((ln3 + 1) != ln9)], [0; 0], [(ln3 + 1); ln9])), (26 * N([ln3; ln9], [((ln3 + 1) != ln9)], [0; 0], [(ln3 + 1); ln9]))) + list_max(1, 1))
[874]: 4
[875]: 9
[876]: 8
[878]: 1
[879]: 33
[885]: (list_max((27 * N([ln11; ln3], [((ln11 + 1) < ln3)], [0; 0], [(ln11 + 1); ln3])), (52 * N([ln11; m[4]], [((ln11 + 1) < m[4])], [0; m[4]], [(ln11 + 1); m[4]])), (64 * N([ln11; m[4]], [((ln11 + 1) < m[4])], [0; m[4]], [(ln11 + 1); m[4]]))) + list_max(1, 1, 1))
[885]: 24
[887]: (list_max((14 * N([ln3; ln5], [((ln3 + 1) != ln5)], [0; 0], [(ln3 + 1); ln5])), (26 * N([ln3; ln5], [((ln3 + 1) != ln5)], [0; 0], [(ln3 + 1); ln5]))) + list_max(1, 1))
[891]: 4
[892]: 10
[894]: 1
[895]: 3
[897]: 1
[898]: 52
[904]: (list_max((28 * N([ln17; ln3], [((ln3 + 1) != ln17)], [0; 0], [ln17; (ln3 + 1)])), (46 * N([ln17; ln3], [((ln3 + 1) != ln17)], [0; 0], [ln17; (ln3 + 1)]))) + list_max(1, 1))
[908]: 1
[909]: 98
[918]: ((821 + list_sum(|f22|, |f23|, |f24|, |f27|, |f38|, |f44|, |f51|, |f54|, |f66|, |f94|, |f117|)) * N([m[4]], [((m[4] + 1) < m[4])], [m[4]], [m[4]]))
[918]: 101
[925]: (((23 + |f24|) * N([ln4; ln8], [((ln4 + 1) != ln8)], [0; 0], [(ln4 + 1); ln8])) + 1)
[927]: 1
[928]: 172
[939]: (list_max((11 * N([ln12; ln27], [((ln12 + 1) != ln27)], [0; 0], [(ln12 + 1); ln27])), (55 * N([ln12; ln27], [((ln12 + 1) != ln27)], [0; 0], [(ln12 + 1); ln27]))) + list_max(1, 1))
[939]: 24
[941]: ((22 * N([ln13; ln22], [((ln13 + 1) != ln22)], [0; 0], [(ln13 + 1); ln22])) + 1)
[943]: 1
[944]: 8
[946]: 1
[947]: 32
[950]: (list_max((11 * N([ln21; ln27], [((ln21 + 1) != ln27)], [0; 0], [(ln21 + 1); ln27])), (92 * N([ln21; ln27], [((ln21 + 1) != ln27)], [0; 0], [(ln21 + 1); ln27])), (101 * N([ln21; ln27], [((ln21 + 1) != ln27)], [0; 0], [(ln21 + 1); ln27])), ((105 + |f27|) * N([ln21; ln27], [((ln21 + 1) != ln27)], [0; 0], [(ln21 + 1); ln27])), (104 * N([ln21; ln27], [((ln21 + 1) != ln27)], [0; 0], [(ln21 + 1); ln27])), (91 * N([ln21; ln27], [((ln21 + 1) != ln27)], [0; 0], [(ln21 + 1); ln27])), (99 * N([ln21; ln27], [((ln21 + 1) != ln27)], [0; 0], [(ln21 + 1); ln27])), (108 * N([ln21; ln27], [((ln21 + 1) != ln27)], [0; 0], [(ln21 + 1); ln27])), ((112 + |f27|) * N([ln21; ln27], [((ln21 + 1) != ln27)], [0; 0], [(ln21 + 1); ln27])), (111 * N([ln21; ln27], [((ln21 + 1) != ln27)], [0; 0], [(ln21 + 1); ln27])), (98 * N([ln21; ln27], [((ln21 + 1) != ln27)], [0; 0], [(ln21 + 1); ln27])), ((140 + list_sum(|f24|, |f27|)) * N([ln21; ln27], [((ln21 + 1) != ln27)], [0; 0], [(ln21 + 1); ln27])), ((146 + list_sum(|f23|, |f24|, |f27|)) * N([ln21; ln27], [((ln21 + 1) != ln27)], [0; 0], [(ln21 + 1); ln27])), (108 * N([ln21; ln27], [((ln21 + 1) != ln27)], [0; 0], [(ln21 + 1); ln27])), (101 * N([ln21; ln27], [((ln21 + 1) != ln27)], [0; 0], [(ln21 + 1); ln27])), (97 * N([ln21; ln27], [((ln21 + 1) != ln27)], [0; 0], [(ln21 + 1); ln27]))) + list_max(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1))
[950]: 32
[952]: (list_max((51 * N([ln22; ln33], [((ln33 + 1) != ln22)], [0; 0], [ln22; (ln33 + 1)])), (60 * N([ln22; ln33], [((ln33 + 1) != ln22)], [0; 0], [ln22; (ln33 + 1)])), ((64 + |f27|) * N([ln22; ln33], [((ln33 + 1) != ln22)], [0; 0], [ln22; (ln33 + 1)])), (63 * N([ln22; ln33], [((ln33 + 1) != ln22)], [0; 0], [ln22; (ln33 + 1)])), (50 * N([ln22; ln33], [((ln33 + 1) != ln22)], [0; 0], [ln22; (ln33 + 1)])), (58 * N([ln22; ln33], [((ln33 + 1) != ln22)], [0; 0], [ln22; (ln33 + 1)])), (67 * N([ln22; ln33], [((ln33 + 1) != ln22)], [0; 0], [ln22; (ln33 + 1)])), ((71 + |f27|) * N([ln22; ln33], [((ln33 + 1) != ln22)], [0; 0], [ln22; (ln33 + 1)])), (70 * N([ln22; ln33], [((ln33 + 1) != ln22)], [0; 0], [ln22; (ln33 + 1)])), (57 * N([ln22; ln33], [((ln33 + 1) != ln22)], [0; 0], [ln22; (ln33 + 1)])), ((99 + list_sum(|f24|, |f27|)) * N([ln22; ln33], [((ln33 + 1) != ln22)], [0; 0], [ln22; (ln33 + 1)])), ((105 + list_sum(|f23|, |f24|, |f27|)) * N([ln22; ln33], [((ln33 + 1) != ln22)], [0; 0], [ln22; (ln33 + 1)])), (67 * N([ln22; ln33], [((ln33 + 1) != ln22)], [0; 0], [ln22; (ln33 + 1)])), (60 * N([ln22; ln33], [((ln33 + 1) != ln22)], [0; 0], [ln22; (ln33 + 1)])), (56 * N([ln22; ln33], [((ln33 + 1) != ln22)], [0; 0], [ln22; (ln33 + 1)]))) + list_max(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1))
[984]: 1
[985]: 8
[987]: 27
[989]: 15
[991]: 60
[993]: (list_max((11 * N([ln5; ln8], [((ln5 + 1) != ln8)], [0; 0], [(ln5 + 1); ln8])), (55 * N([ln5; ln8], [((ln5 + 1) != ln8)], [0; 0], [(ln5 + 1); ln8]))) + list_max(1, 1))
[993]: 24
[995]: ((22 * N([ln11; ln13], [((ln13 + 1) != ln11)], [0; 0], [ln11; (ln13 + 1)])) + 1)
[997]: 1
[998]: 8
[1000]: 1
[1001]: 112
[1016]: (((23 + |f24|) * N([ln6; ln7], [((ln6 + 1) != ln7)], [0; 0], [(ln6 + 1); ln7])) + 1)
[1018]: 1
[1020]: 58
[1022]: (list_max((11 * N([ln3; ln8], [((ln3 + 1) != ln8)], [0; 0], [(ln3 + 1); ln8])), ((27 + |f27|) * N([ln3; ln8], [((ln3 + 1) != ln8)], [0; 0], [(ln3 + 1); ln8]))) + list_max(1, 1))
[1026]: 1
[1027]: 59
[1034]: (list_max((11 * N([ln3; ln8], [((ln3 + 1) != ln8)], [0; 0], [(ln3 + 1); ln8])), ((27 + |f27|) * N([ln3; ln8], [((ln3 + 1) != ln8)], [0; 0], [(ln3 + 1); ln8]))) + list_max(1, 1))
[1038]: 1
[1040]: 64
[1042]: (((23 + |f24|) * N([ln6; ln7], [((ln6 + 1) != ln7)], [0; 0], [(ln6 + 1); ln7])) + 1)
[1044]: 1
[1045]: 13
[1047]: 6
[1049]: 4
[1050]: 31
[1054]: (list_max(((122 + list_sum(|f47|, |f75|, |f194|)) * N([ln3; pn0], [(((ln3 + -1) + 1) < pn0)], [0; pn0], [((ln3 + -1) + 1); pn0])), ((92 + |f47|) * N([ln3; m[4]], [((ln3 + 1) < m[4])], [0; m[4]], [(ln3 + 1); m[4]])), ((82 + |f47|) * N([ln3; m[4]], [((ln3 + 1) < m[4])], [0; m[4]], [(ln3 + 1); m[4]])), (70 * N([ln3; m[4]], [((ln3 + 1) < m[4])], [0; m[4]], [(ln3 + 1); m[4]])), (57 * N([ln3; m[4]], [((ln3 + 1) < m[4])], [0; m[4]], [(ln3 + 1); m[4]])), (53 * N([ln3; m[4]], [((ln3 + 1) < m[4])], [0; m[4]], [(ln3 + 1); m[4]])), (49 * N([ln3; m[4]], [((ln3 + 1) < m[4])], [0; m[4]], [(ln3 + 1); m[4]])), (43 * N([ln3; m[4]], [((ln3 + 1) < m[4])], [0; m[4]], [(ln3 + 1); m[4]])), (40 * N([ln3; m[4]], [((ln3 + 1) < m[4])], [0; m[4]], [(ln3 + 1); m[4]])), (37 * N([ln3; m[4]], [((ln3 + 1) < m[4])], [0; m[4]], [(ln3 + 1); m[4]])), (32 * N([ln3; m[4]], [((ln3 + 1) < m[4])], [0; m[4]], [(ln3 + 1); m[4]])), (27 * N([ln3; m[4]], [((ln3 + 1) < m[4])], [0; m[4]], [(ln3 + 1); m[4]]))) + list_max(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1))
[1091]: 1
[1093]: 6
[1095]: 10
[1097]: (list_max((19 * N([ln3; ln6], [((ln3 + 1) != ln6)], [0; 0], [(ln3 + 1); ln6])), (22 * N([ln3; ln6], [((ln3 + 1) != ln6)], [0; 0], [(ln3 + 1); ln6])), (27 * N([ln3; ln6], [((ln3 + 1) != ln6)], [0; 0], [(ln3 + 1); ln6])), (31 * N([ln3; ln6], [((ln3 + 1) != ln6)], [0; 0], [(ln3 + 1); ln6]))) + list_max(1, 1, 1, 1))
[1104]: 1
[1105]: 7
[1106]: 5
[1108]: 6
[1111]: 0
[1112]: 0
0 ebb paths found
|f238| = Inf
