ebb entry:  0
  ebb type:   block
  ebb blocks: [0 1]
  ebb cost:   3
  ebb exits:  [2 14]
  ebb succs:  [2 14]
ebb entry:  2
  ebb type:   loop
  ebb blocks: [2 3 4 5 6 7 8 9 10 11 12]
  ebb cost:   (list_max([
  53 * (N([m[4]], [m[4]], [m[4]], [m[4]]));
  43 * (N([m[4]], [m[4]], [m[4]], [m[4]]));
  21 * (N([m[4]], [m[4]], [m[4]], [m[4]]));
  46 * (N([m[4]], [m[4]], [m[4]], [m[4]]));
  36 * (N([m[4]], [m[4]], [m[4]], [m[4]]));
  14 * (N([m[4]], [m[4]], [m[4]], [m[4]]))
])) + 1
  ebb exits:  [13]
  ebb succs:  []
  6 paths to exit 13
  [2 4 11 12]
  [2 4 5 6 8 9 10 11 12]
  [2 4 5 6 7 8 9 10 11 12]
  [2 3 4 11 12]
  [2 3 4 5 6 8 9 10 11 12]
  [2 3 4 5 6 7 8 9 10 11 12]
  6 loop paths
  [2 4 11]  [2 4 5 6 8 9 10 11]  [2 4 5 6 7 8 9 10 11]  [2 3 4 11]  [2 3 4 5 6 8 9 10 11]  [2 3 4 5 6 7 8 9 10 11]
  6 post loop exit paths
  [12]  [12]  [12]  [12]  [12]  [12]
nested ebbs:
  ebb entry:  2
    ebb type:   block
    ebb blocks: [2 3 4 5]
    ebb cost:   20
    ebb exits:  [6 11]
    ebb succs:  [6 11]
  ebb entry:  6
    ebb type:   loop
    ebb blocks: [6 7 8 9]
    ebb cost:   (list_max([
  27 * (N([ln2; m[4]], [(ln2 + 1) < m[4]], [0; m[4]], [ln2 + 1; m[4]]));
  17 * (N([ln2; ln3], [(ln2 + 1) < ln3], [0; m[4]], [ln2 + 1; ln3]))
])) + 1
    ebb exits:  [10]
    ebb succs:  [10]
    2 paths to exit 10
    [6 8 9]
    [6 7 8 9]
    2 loop paths
    [6 8]    [6 7 8]
    2 post loop exit paths
    [9]    [9]
  ebb entry:  10
    ebb type:   block
    ebb blocks: [10]
    ebb cost:   1
    ebb exits:  [11]
    ebb succs:  [11]
  ebb entry:  11
    ebb type:   block
    ebb blocks: [11 12]
    ebb cost:   5
    ebb exits:  [2 13]
    ebb succs:  [2 13]
ebb entry:  13
  ebb type:   block
  ebb blocks: [13]
  ebb cost:   1
  ebb exits:  [14]
  ebb succs:  [14]
ebb entry:  14
  ebb type:   block
  ebb blocks: [14 15]
  ebb cost:   1
  ebb exits:  [15]
  ebb succs:  []
ebb costs:
[0]: 3
[2]: (list_max((53 * N([m[4]], [m[4]], [m[4]], [m[4]])), (43 * N([m[4]], [m[4]], [m[4]], [m[4]])), (21 * N([m[4]], [m[4]], [m[4]], [m[4]])), (46 * N([m[4]], [m[4]], [m[4]], [m[4]])), (36 * N([m[4]], [m[4]], [m[4]], [m[4]])), (14 * N([m[4]], [m[4]], [m[4]], [m[4]]))) + 1)
[2]: 20
[6]: (list_max((27 * N([ln2; m[4]], [((ln2 + 1) < m[4])], [0; m[4]], [(ln2 + 1); m[4]])), (17 * N([ln2; ln3], [((ln2 + 1) < ln3)], [0; m[4]], [(ln2 + 1); ln3]))) + 1)
[10]: 1
[11]: 5
[13]: 1
[14]: 1
ebb costs':
[0]: 3
[2]: list_MAX((25 * N([m[4]], [m[4]], [m[4]], [m[4]])), (list_sum(26, (list_max((27 * N([ln2; m[4]], [((ln2 + 1) < m[4])], [0; m[4]], [(ln2 + 1); m[4]])), (17 * N([ln2; ln3], [((ln2 + 1) < ln3)], [0; m[4]], [(ln2 + 1); ln3]))) + 1)) * N([m[4]], [m[4]], [m[4]], [m[4]])), (list_sum(26, (list_max((27 * N([ln2; m[4]], [((ln2 + 1) < m[4])], [0; m[4]], [(ln2 + 1); m[4]])), (17 * N([ln2; ln3], [((ln2 + 1) < ln3)], [0; m[4]], [(ln2 + 1); ln3]))) + 1)) * N([m[4]], [m[4]], [m[4]], [m[4]])), (25 * N([m[4]], [m[4]], [m[4]], [m[4]])), (list_sum(26, (list_max((27 * N([ln2; m[4]], [((ln2 + 1) < m[4])], [0; m[4]], [(ln2 + 1); m[4]])), (17 * N([ln2; ln3], [((ln2 + 1) < ln3)], [0; m[4]], [(ln2 + 1); ln3]))) + 1)) * N([m[4]], [m[4]], [m[4]], [m[4]])), (list_sum(26, (list_max((27 * N([ln2; m[4]], [((ln2 + 1) < m[4])], [0; m[4]], [(ln2 + 1); m[4]])), (17 * N([ln2; ln3], [((ln2 + 1) < ln3)], [0; m[4]], [(ln2 + 1); ln3]))) + 1)) * N([m[4]], [m[4]], [m[4]], [m[4]])))
[2]: 20
[6]: (list_max((27 * N([ln2; m[4]], [((ln2 + 1) < m[4])], [0; m[4]], [(ln2 + 1); m[4]])), (17 * N([ln2; ln3], [((ln2 + 1) < ln3)], [0; m[4]], [(ln2 + 1); ln3]))) + 1)
[10]: 1
[11]: 5
[13]: 1
[14]: 1
3 ebb paths found
[0 14]
[0 2 11 13 14]
[0 2 6 10 11 13 14]
