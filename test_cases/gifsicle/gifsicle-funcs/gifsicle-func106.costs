ebb costs:
[0]: 20
[5]: ((23 * N([pn0], [((pn0 + 1) && 3)], [pn0], [(pn0 + 1)])) + 1)
[9]: 1
[10]: 21
[13]: ((25 * N([pn2], [((pn2 + -4) > 3)], [pn2], [(pn2 + -4)])) + 1)
[16]: 1
[17]: 8
[19]: ((14 * N([pn2], [(pn2 + -1)], [pn2], [(pn2 + -1)])) + list_max(1, 2))
[24]: 1
[25]: 2
[27]: 0
33 ebb paths found
[0 10 25]
[0 10 17 25]
[0 10 17 19 27]
[0 10 17 19 24 25]
[0 10 13 17 25]
[0 10 13 17 19 27]
[0 10 13 17 19 24 25]
[0 10 13 16 17 25]
[0 10 13 16 17 19 27]
[0 10 13 16 17 19 24 25]
[0 5 17 25]
[0 5 17 19 27]
[0 5 17 19 24 25]
[0 5 10 25]
[0 5 10 17 25]
[0 5 10 17 19 27]
[0 5 10 17 19 24 25]
[0 5 10 13 17 25]
[0 5 10 13 17 19 27]
[0 5 10 13 17 19 24 25]
[0 5 10 13 16 17 25]
[0 5 10 13 16 17 19 27]
[0 5 10 13 16 17 19 24 25]
[0 5 9 10 25]
[0 5 9 10 17 25]
[0 5 9 10 17 19 27]
[0 5 9 10 17 19 24 25]
[0 5 9 10 13 17 25]
[0 5 9 10 13 17 19 27]
[0 5 9 10 13 17 19 24 25]
[0 5 9 10 13 16 17 25]
[0 5 9 10 13 16 17 19 27]
[0 5 9 10 13 16 17 19 24 25]
|f106| = list_max([
  list_sum(20, 21, 2);
  list_sum(20, 21, 8, 2);
  list_sum([
    20;
    21;
    8;
    (14 * (N([pn2], [pn2 + -1], [pn2], [pn2 + -1]))) + (list_max(1, 2));
    0
  ]);
  list_sum([
    20;
    21;
    8;
    (14 * (N([pn2], [pn2 + -1], [pn2], [pn2 + -1]))) + (list_max(1, 2));
    1;
    2
  ]);
  list_sum([
    20;
    21;
    (25 * (N([pn2], [(pn2 + -4) > 3], [pn2], [pn2 + -4]))) + 1;
    8;
    2
  ]);
  list_sum([
    20;
    21;
    (25 * (N([pn2], [(pn2 + -4) > 3], [pn2], [pn2 + -4]))) + 1;
    8;
    (14 * (N([pn2], [pn2 + -1], [pn2], [pn2 + -1]))) + (list_max(1, 2));
    0
  ]);
  list_sum([
    20;
    21;
    (25 * (N([pn2], [(pn2 + -4) > 3], [pn2], [pn2 + -4]))) + 1;
    8;
    (14 * (N([pn2], [pn2 + -1], [pn2], [pn2 + -1]))) + (list_max(1, 2));
    1;
    2
  ]);
  list_sum([
    20;
    21;
    (25 * (N([pn2], [(pn2 + -4) > 3], [pn2], [pn2 + -4]))) + 1;
    1;
    8;
    2
  ]);
  list_sum([
    20;
    21;
    (25 * (N([pn2], [(pn2 + -4) > 3], [pn2], [pn2 + -4]))) + 1;
    1;
    8;
    (14 * (N([pn2], [pn2 + -1], [pn2], [pn2 + -1]))) + (list_max(1, 2));
    0
  ]);
  list_sum([
    20;
    21;
    (25 * (N([pn2], [(pn2 + -4) > 3], [pn2], [pn2 + -4]))) + 1;
    1;
    8;
    (14 * (N([pn2], [pn2 + -1], [pn2], [pn2 + -1]))) + (list_max(1, 2));
    1;
    2
  ]);
  list_sum([
    20;
    (23 * (N([pn0], [(pn0 + 1) && 3], [pn0], [pn0 + 1]))) + 1;
    8;
    2
  ]);
  list_sum([
    20;
    (23 * (N([pn0], [(pn0 + 1) && 3], [pn0], [pn0 + 1]))) + 1;
    8;
    (14 * (N([pn2], [pn2 + -1], [pn2], [pn2 + -1]))) + (list_max(1, 2));
    0
  ]);
  list_sum([
    20;
    (23 * (N([pn0], [(pn0 + 1) && 3], [pn0], [pn0 + 1]))) + 1;
    8;
    (14 * (N([pn2], [pn2 + -1], [pn2], [pn2 + -1]))) + (list_max(1, 2));
    1;
    2
  ]);
  list_sum([
    20;
    (23 * (N([pn0], [(pn0 + 1) && 3], [pn0], [pn0 + 1]))) + 1;
    21;
    2
  ]);
  list_sum([
    20;
    (23 * (N([pn0], [(pn0 + 1) && 3], [pn0], [pn0 + 1]))) + 1;
    21;
    8;
    2
  ]);
  list_sum([
    20;
    (23 * (N([pn0], [(pn0 + 1) && 3], [pn0], [pn0 + 1]))) + 1;
    21;
    8;
    (14 * (N([pn2], [pn2 + -1], [pn2], [pn2 + -1]))) + (list_max(1, 2));
    0
  ]);
  list_sum([
    20;
    (23 * (N([pn0], [(pn0 + 1) && 3], [pn0], [pn0 + 1]))) + 1;
    21;
    8;
    (14 * (N([pn2], [pn2 + -1], [pn2], [pn2 + -1]))) + (list_max(1, 2));
    1;
    2
  ]);
  list_sum([
    20;
    (23 * (N([pn0], [(pn0 + 1) && 3], [pn0], [pn0 + 1]))) + 1;
    21;
    (25 * (N([pn2], [(pn2 + -4) > 3], [pn2], [pn2 + -4]))) + 1;
    8;
    2
  ]);
  list_sum([
    20;
    (23 * (N([pn0], [(pn0 + 1) && 3], [pn0], [pn0 + 1]))) + 1;
    21;
    (25 * (N([pn2], [(pn2 + -4) > 3], [pn2], [pn2 + -4]))) + 1;
    8;
    (14 * (N([pn2], [pn2 + -1], [pn2], [pn2 + -1]))) + (list_max(1, 2));
    0
  ]);
  list_sum([
    20;
    (23 * (N([pn0], [(pn0 + 1) && 3], [pn0], [pn0 + 1]))) + 1;
    21;
    (25 * (N([pn2], [(pn2 + -4) > 3], [pn2], [pn2 + -4]))) + 1;
    8;
    (14 * (N([pn2], [pn2 + -1], [pn2], [pn2 + -1]))) + (list_max(1, 2));
    1;
    2
  ]);
  list_sum([
    20;
    (23 * (N([pn0], [(pn0 + 1) && 3], [pn0], [pn0 + 1]))) + 1;
    21;
    (25 * (N([pn2], [(pn2 + -4) > 3], [pn2], [pn2 + -4]))) + 1;
    1;
    8;
    2
  ]);
  list_sum([
    20;
    (23 * (N([pn0], [(pn0 + 1) && 3], [pn0], [pn0 + 1]))) + 1;
    21;
    (25 * (N([pn2], [(pn2 + -4) > 3], [pn2], [pn2 + -4]))) + 1;
    1;
    8;
    (14 * (N([pn2], [pn2 + -1], [pn2], [pn2 + -1]))) + (list_max(1, 2));
    0
  ]);
  list_sum([
    20;
    (23 * (N([pn0], [(pn0 + 1) && 3], [pn0], [pn0 + 1]))) + 1;
    21;
    (25 * (N([pn2], [(pn2 + -4) > 3], [pn2], [pn2 + -4]))) + 1;
    1;
    8;
    (14 * (N([pn2], [pn2 + -1], [pn2], [pn2 + -1]))) + (list_max(1, 2));
    1;
    2
  ]);
  list_sum([
    20;
    (23 * (N([pn0], [(pn0 + 1) && 3], [pn0], [pn0 + 1]))) + 1;
    1;
    21;
    2
  ]);
  list_sum([
    20;
    (23 * (N([pn0], [(pn0 + 1) && 3], [pn0], [pn0 + 1]))) + 1;
    1;
    21;
    8;
    2
  ]);
  list_sum([
    20;
    (23 * (N([pn0], [(pn0 + 1) && 3], [pn0], [pn0 + 1]))) + 1;
    1;
    21;
    8;
    (14 * (N([pn2], [pn2 + -1], [pn2], [pn2 + -1]))) + (list_max(1, 2));
    0
  ]);
  list_sum([
    20;
    (23 * (N([pn0], [(pn0 + 1) && 3], [pn0], [pn0 + 1]))) + 1;
    1;
    21;
    8;
    (14 * (N([pn2], [pn2 + -1], [pn2], [pn2 + -1]))) + (list_max(1, 2));
    1;
    2
  ]);
  list_sum([
    20;
    (23 * (N([pn0], [(pn0 + 1) && 3], [pn0], [pn0 + 1]))) + 1;
    1;
    21;
    (25 * (N([pn2], [(pn2 + -4) > 3], [pn2], [pn2 + -4]))) + 1;
    8;
    2
  ]);
  list_sum([
    20;
    (23 * (N([pn0], [(pn0 + 1) && 3], [pn0], [pn0 + 1]))) + 1;
    1;
    21;
    (25 * (N([pn2], [(pn2 + -4) > 3], [pn2], [pn2 + -4]))) + 1;
    8;
    (14 * (N([pn2], [pn2 + -1], [pn2], [pn2 + -1]))) + (list_max(1, 2));
    0
  ]);
  list_sum([
    20;
    (23 * (N([pn0], [(pn0 + 1) && 3], [pn0], [pn0 + 1]))) + 1;
    1;
    21;
    (25 * (N([pn2], [(pn2 + -4) > 3], [pn2], [pn2 + -4]))) + 1;
    8;
    (14 * (N([pn2], [pn2 + -1], [pn2], [pn2 + -1]))) + (list_max(1, 2));
    1;
    2
  ]);
  list_sum([
    20;
    (23 * (N([pn0], [(pn0 + 1) && 3], [pn0], [pn0 + 1]))) + 1;
    1;
    21;
    (25 * (N([pn2], [(pn2 + -4) > 3], [pn2], [pn2 + -4]))) + 1;
    1;
    8;
    2
  ]);
  list_sum([
    20;
    (23 * (N([pn0], [(pn0 + 1) && 3], [pn0], [pn0 + 1]))) + 1;
    1;
    21;
    (25 * (N([pn2], [(pn2 + -4) > 3], [pn2], [pn2 + -4]))) + 1;
    1;
    8;
    (14 * (N([pn2], [pn2 + -1], [pn2], [pn2 + -1]))) + (list_max(1, 2));
    0
  ]);
  list_sum([
    20;
    (23 * (N([pn0], [(pn0 + 1) && 3], [pn0], [pn0 + 1]))) + 1;
    1;
    21;
    (25 * (N([pn2], [(pn2 + -4) > 3], [pn2], [pn2 + -4]))) + 1;
    1;
    8;
    (14 * (N([pn2], [pn2 + -1], [pn2], [pn2 + -1]))) + (list_max(1, 2));
    1;
    2
  ])
])
