ebb entry:  0
  ebb type:   block
  ebb blocks: [0 1 2 3 4 5 6 7 8]
  ebb cost:   36
  ebb exits:  [9 14]
  ebb succs:  [9 14]
ebb entry:  9
  ebb type:   loop
  ebb blocks: [9 10 11]
  ebb cost:   (44 * (N([ln2; ln9], [(ln9 + 1024) + (((ln2 && 255) shr_u 3) && 28)], [0; gn0 - 1056], [(ln5 + 1) || (1 shl (ln2 && 31)); ln9]))) + 1
  ebb exits:  [12 84]
  ebb succs:  [12 84]
  1 paths to exit 12
  [9 10 11]
  1 paths to exit 84
  [9]
  1 loop paths
  [9 10]
  1 post loop exit paths
  [11]
ebb entry:  12
  ebb type:   block
  ebb blocks: [12 13]
  ebb cost:   9
  ebb exits:  [14 16]
  ebb succs:  [14]
ebb entry:  14
  ebb type:   block
  ebb blocks: [14 15 16]
  ebb cost:   5
  ebb exits:  [17 45]
  ebb succs:  [17 45]
ebb entry:  17
  ebb type:   loop
  ebb blocks: [17 18 19 20 21 22 23 24 25 26 27 28 29]
  ebb cost:   (list_max([
  35 * (N([ln4; ln5], [(1 + (ln4 + 1)) < ln5], [0; 0 + 1], [ln4 + 1; ln5]));
  34 * (N([ln3; ln5], [(1 + ln3) < ln5], [1; 0 + 1], [1 + ln3; ln5]));
  30 * (N([ln2; ln4; ln5], [((ln2 + 1) + ln4) < ln5], [1; 0; 0 + 1], [ln2 + 1; ln4; ln5]));
  32 * (N([ln4; ln5; ln8], [(1 + (ln4 + ln8)) < ln5], [0; 0 + 1; 1], [ln4 + ln8; ln5; ln8]))
])) + (list_max(1, 1, 1, 1))
  ebb exits:  [30]
  ebb succs:  [30]
  4 paths to exit 30
  [17 18 24 27 28 29]
  [17 18 24 25 28 29]
  [17 18 19 22 28 29]
  [17 18 19 20 28 29]
  4 loop paths
  [17 18 24 27 28]  [17 18 24 25 28]  [17 18 19 22 28]  [17 18 19 20 28]
  4 post loop exit paths
  [29]  [29]  [29]  [29]
ebb entry:  30
  ebb type:   block
  ebb blocks: [30]
  ebb cost:   11
  ebb exits:  [31]
  ebb succs:  [31]
ebb entry:  31
  ebb type:   loop
  ebb blocks: [31 32 33 34 35 36 37 38 39 40 41 42 43]
  ebb cost:   (list_max([
  35 * (N([ln4; ln5], [(1 + (ln4 + 1)) < ln5], [0; 0 + 1], [ln4 + 1; ln5]));
  34 * (N([ln3; ln5], [(1 + ln3) < ln5], [1; 0 + 1], [1 + ln3; ln5]));
  30 * (N([ln2; ln4; ln5], [((ln2 + 1) + ln4) < ln5], [1; 0; 0 + 1], [ln2 + 1; ln4; ln5]));
  32 * (N([ln4; ln5; ln7], [(1 + (ln4 + ln7)) < ln5], [0; 0 + 1; 1], [ln4 + ln7; ln5; ln7]))
])) + (list_max(1, 1, 1, 1))
  ebb exits:  [44]
  ebb succs:  [44]
  4 paths to exit 44
  [31 32 38 41 42 43]
  [31 32 38 39 42 43]
  [31 32 33 36 42 43]
  [31 32 33 34 42 43]
  4 loop paths
  [31 32 38 41 42]  [31 32 38 39 42]  [31 32 33 36 42]  [31 32 33 34 42]
  4 post loop exit paths
  [43]  [43]  [43]  [43]
ebb entry:  44
  ebb type:   block
  ebb blocks: [44]
  ebb cost:   3
  ebb exits:  [45]
  ebb succs:  [45]
ebb entry:  45
  ebb type:   block
  ebb blocks: [45 46 47 48 49 50]
  ebb cost:   59
  ebb exits:  [51]
  ebb succs:  [51]
ebb entry:  51
  ebb type:   loop
  ebb blocks: [51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81]
  ebb cost:   (list_max([
  41 * (N([m[0]], [not(i32.eqz((m[0] shr_u (m[0] && 31)) && 1))], [(0 + 1) || (1 shl (0 && 31))], [m[0]]));
  86 * (N([m[0]], [not(m[0] == m[0])], [(0 + 1) || (1 shl (0 && 31))], [m[0]]));
  80 * (N([m[0]], [not(m[0] != (m[0] && 255))], [(0 + 1) || (1 shl (0 && 31))], [m[0]]));
  107 * (N([m[0]], [not(m[0] == m[0])], [(0 + 1) || (1 shl (0 && 31))], [m[0]]));
  65 * (N([ln5; m[0]], [ln5 - m[0]], [0 + 1; (0 + 1) || (1 shl (0 && 31))], [ln5; m[0]]));
  (52 + |f106|) * (N([m[0]], [not(i32.eqz((m[0] shr_u (m[0] && 31)) && 1))], [(0 + 1) || (1 shl (0 && 31))], [m[0]]));
  (97 + |f106|) * (N([m[0]], [not(m[0] == m[0])], [(0 + 1) || (1 shl (0 && 31))], [m[0]]));
  (91 + |f106|) * (N([m[0]], [not(m[0] != (m[0] && 255))], [(0 + 1) || (1 shl (0 && 31))], [m[0]]));
  (118 + |f106|) * (N([m[0]], [not(m[0] == m[0])], [(0 + 1) || (1 shl (0 && 31))], [m[0]]));
  (76 + |f106|) * (N([ln5; m[0]], [ln5 - m[0]], [0 + 1; (0 + 1) || (1 shl (0 && 31))], [ln5; m[0]]));
  (55 + |f106|) * (N([m[0]], [not(i32.eqz((m[0] shr_u (m[0] && 31)) && 1))], [(0 + 1) || (1 shl (0 && 31))], [m[0]]));
  (100 + |f106|) * (N([m[0]], [not(m[0] == m[0])], [(0 + 1) || (1 shl (0 && 31))], [m[0]]));
  (94 + |f106|) * (N([m[0]], [not(m[0] != (m[0] && 255))], [(0 + 1) || (1 shl (0 && 31))], [m[0]]));
  (121 + |f106|) * (N([m[0]], [not(m[0] == m[0])], [(0 + 1) || (1 shl (0 && 31))], [m[0]]));
  (79 + |f106|) * (N([ln5; m[0]], [ln5 - m[0]], [0 + 1; (0 + 1) || (1 shl (0 && 31))], [ln5; m[0]]))
])) + Empty
  ebb exits:  [84 85 87]
  ebb succs:  []
  1 paths to exit 84
  [51 52 53 54]
  6 paths to exit 85
  [51 52 58 59 60 61 64 65 71 72]
  [51 52 58 59 60 61 64 65 66 67 68 69 70 71 72]
  [51 52 53 57 58 59 60 61 64 65 71 72]
  [51 52 53 57 58 59 60 61 64 65 66 67 68 69 70 71 72]
  [51 52 53 54 55 58 59 60 61 64 65 71 72]
  [51 52 53 54 55 58 59 60 61 64 65 66 67 68 69 70 71 72]
  0 paths to exit 87

  15 loop paths
  [51 52 58 59 60 78 79]  [51 52 58 59 60 61 64 65 71 72 73 74 75 79]  [51 52 58 59 60 61 64 65 66 67 77 78 79]  [51 52 58 59 60 61 64 65 66 67 68 69 70 71 72 73 74 75 79]  [51 52 58 59 60 61 62 78 79]  [51 52 53 57 58 59 60 78 79]  [51 52 53 57 58 59 60 61 64 65 71 72 73 74 75 79]  [51 52 53 57 58 59 60 61 64 65 66 67 77 78 79]  [51 52 53 57 58 59 60 61 64 65 66 67 68 69 70 71 72 73 74 75 79]  [51 52 53 57 58 59 60 61 62 78 79]  [51 52 53 54 55 58 59 60 78 79]  [51 52 53 54 55 58 59 60 61 64 65 71 72 73 74 75 79]  [51 52 53 54 55 58 59 60 61 64 65 66 67 77 78 79]  [51 52 53 54 55 58 59 60 61 64 65 66 67 68 69 70 71 72 73 74 75 79]  [51 52 53 54 55 58 59 60 61 62 78 79]
nested ebbs:
  ebb entry:  51
    ebb type:   block
    ebb blocks: [51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66]
    ebb cost:   72
    ebb exits:  [67 71 78 84]
    ebb succs:  [67 78 84]
  ebb entry:  67
    ebb type:   loop
    ebb blocks: [67 68 69]
    ebb cost:   (18 * (N([m[0]], [m[0]], [(0 + 1) || (1 shl (0 && 31))], [m[0]]))) + 1
    ebb exits:  [70 77]
    ebb succs:  [70 77]
    1 paths to exit 70
    [67 68 69]
    1 paths to exit 77
    [67]
    1 loop paths
    [67 68]
    1 post loop exit paths
    [69]
  ebb entry:  70
    ebb type:   block
    ebb blocks: [70 71]
    ebb cost:   2
    ebb exits:  [72]
    ebb succs:  [72]
  ebb entry:  72
    ebb type:   loop
    ebb blocks: [72 73 74]
    ebb cost:   (17 * (N([m[0]], [m[0] == m[0]], [(0 + 1) || (1 shl (0 && 31))], [m[0]]))) + 1
    ebb exits:  [75 85]
    ebb succs:  [75 85]
    1 paths to exit 75
    [72 73 74]
    1 paths to exit 85
    [72]
    1 loop paths
    [72 73]
    1 post loop exit paths
    [74]
  ebb entry:  75
    ebb type:   block
    ebb blocks: [75 76]
    ebb cost:   4
    ebb exits:  [77 79]
    ebb succs:  [77 79]
  ebb entry:  77
    ebb type:   block
    ebb blocks: [77]
    ebb cost:   4
    ebb exits:  [78]
    ebb succs:  [78]
  ebb entry:  78
    ebb type:   block
    ebb blocks: [78]
    ebb cost:   3
    ebb exits:  [79]
    ebb succs:  [79]
  ebb entry:  79
    ebb type:   block
    ebb blocks: [79 80 81]
    ebb cost:   6
    ebb exits:  [51 87]
    ebb succs:  [51 87]
ebb entry:  82
  ebb type:   block
  ebb blocks: [82 83]
  ebb cost:   1
  ebb exits:  [84 87]
  ebb succs:  [84 87]
ebb entry:  84
  ebb type:   block
  ebb blocks: [84]
  ebb cost:   3
  ebb exits:  [85]
  ebb succs:  [85]
ebb entry:  85
  ebb type:   block
  ebb blocks: [85 86]
  ebb cost:   6
  ebb exits:  [86]
  ebb succs:  []
ebb entry:  87
  ebb type:   block
  ebb blocks: [87]
  ebb cost:   0
  ebb exits:  []
  ebb succs:  []
