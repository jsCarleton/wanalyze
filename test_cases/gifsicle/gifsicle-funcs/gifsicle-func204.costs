ebb costs:
[0]: 26
[2]: (list_max((61 * N([ln8; pn2], [((ln8 + 1) != pn2)], [0; pn2], [(ln8 + 1); pn2])), (89 * N([ln8; pn2], [((ln8 + 1) != pn2)], [0; pn2], [(ln8 + 1); pn2])), (88 * N([ln8; pn2], [((ln8 + 1) != pn2)], [0; pn2], [(ln8 + 1); pn2])), (116 * N([ln8; pn2], [((ln8 + 1) != pn2)], [0; pn2], [(ln8 + 1); pn2])), ((108 + |f203|) * N([ln8; pn2], [((ln8 + 1) != pn2)], [0; pn2], [(ln8 + 1); pn2])), ((136 + |f203|) * N([ln8; pn2], [((ln8 + 1) != pn2)], [0; pn2], [(ln8 + 1); pn2])), (62 * N([ln8; pn2], [((ln8 + 1) != pn2)], [0; pn2], [(ln8 + 1); pn2])), (90 * N([ln8; pn2], [((ln8 + 1) != pn2)], [0; pn2], [(ln8 + 1); pn2])), (89 * N([ln8; pn2], [((ln8 + 1) != pn2)], [0; pn2], [(ln8 + 1); pn2])), (117 * N([ln8; pn2], [((ln8 + 1) != pn2)], [0; pn2], [(ln8 + 1); pn2])), ((109 + |f203|) * N([ln8; pn2], [((ln8 + 1) != pn2)], [0; pn2], [(ln8 + 1); pn2])), ((137 + |f203|) * N([ln8; pn2], [((ln8 + 1) != pn2)], [0; pn2], [(ln8 + 1); pn2])), (62 * N([ln8; pn2], [((ln8 + 1) != pn2)], [0; pn2], [(ln8 + 1); pn2])), (90 * N([ln8; pn2], [((ln8 + 1) != pn2)], [0; pn2], [(ln8 + 1); pn2])), (89 * N([ln8; pn2], [((ln8 + 1) != pn2)], [0; pn2], [(ln8 + 1); pn2])), (117 * N([ln8; pn2], [((ln8 + 1) != pn2)], [0; pn2], [(ln8 + 1); pn2])), ((109 + |f203|) * N([ln8; pn2], [((ln8 + 1) != pn2)], [0; pn2], [(ln8 + 1); pn2])), ((137 + |f203|) * N([ln8; pn2], [((ln8 + 1) != pn2)], [0; pn2], [(ln8 + 1); pn2])), (63 * N([ln8; pn2], [((ln8 + 1) != pn2)], [0; pn2], [(ln8 + 1); pn2])), (91 * N([ln8; pn2], [((ln8 + 1) != pn2)], [0; pn2], [(ln8 + 1); pn2])), (90 * N([ln8; pn2], [((ln8 + 1) != pn2)], [0; pn2], [(ln8 + 1); pn2])), (118 * N([ln8; pn2], [((ln8 + 1) != pn2)], [0; pn2], [(ln8 + 1); pn2])), ((110 + |f203|) * N([ln8; pn2], [((ln8 + 1) != pn2)], [0; pn2], [(ln8 + 1); pn2])), ((138 + |f203|) * N([ln8; pn2], [((ln8 + 1) != pn2)], [0; pn2], [(ln8 + 1); pn2]))) + list_max(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1))
[2]: 52
[14]: (list_max((23 * N([ln11; ln5], [i32.eqz((ln5 == ln11))], [-2147483648; -2147483648], [ln11; (ln5 + 1)])), ((43 + |f203|) * N([ln11; ln5], [i32.eqz((ln5 == ln11))], [-2147483648; -2147483648], [ln11; (ln5 + 1)]))) + list_max(1, 1))
[18]: 4
[19]: 2
[20]: 7
[22]: ((20 * N([ln6; ln7], [((ln6 + 1) != ln7)], [(m[4] + 1); m[4]], [(ln6 + 1); ln7])) + 1)
[24]: 3
[25]: 8
[27]: 1
[28]: 6
5 ebb paths found
[0 28]
[0 2 19 20 25 27 28]
[0 2 19 20 22 24 25 27 28]
[0 2 14 18 20 25 27 28]
[0 2 14 18 20 22 24 25 27 28]
|f204| = list_max([
  list_sum(26, 6);
  list_sum(26, 52, 2, 7, 8, 1, 6);
  list_sum([
    26;
    52;
    2;
    7;
    (20 * (N([ln6; ln7], [(ln6 + 1) != ln7], [m[4] + 1; m[4]], [ln6 + 1; ln7]))) + 1;
    3;
    8;
    1;
    6
  ]);
  list_sum([
    26;
    52;
    (list_max([
      23 * (N([ln11; ln5], [i32.eqz(ln5 == ln11)], [-2147483648; -2147483648], [ln11; ln5 + 1]));
      (43 + |f203|) * (N([ln11; ln5], [i32.eqz(ln5 == ln11)], [-2147483648; -2147483648], [ln11; ln5 + 1]))
    ])) + (list_max(1, 1));
    4;
    7;
    8;
    1;
    6
  ]);
  list_sum([
    26;
    52;
    (list_max([
      23 * (N([ln11; ln5], [i32.eqz(ln5 == ln11)], [-2147483648; -2147483648], [ln11; ln5 + 1]));
      (43 + |f203|) * (N([ln11; ln5], [i32.eqz(ln5 == ln11)], [-2147483648; -2147483648], [ln11; ln5 + 1]))
    ])) + (list_max(1, 1));
    4;
    7;
    (20 * (N([ln6; ln7], [(ln6 + 1) != ln7], [m[4] + 1; m[4]], [ln6 + 1; ln7]))) + 1;
    3;
    8;
    1;
    6
  ])
])
