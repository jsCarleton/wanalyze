ebb costs:
[0]: 25
[7]: (list_max((34 * N([ln6; m[0]], [((ln6 + 1) < m[0])], [0; m[0]], [(ln6 + 1); m[0]])), (45 * N([ln6; ln7], [((ln6 + 1) < ((ln6 shl 3) + ln7))], [0; m[16]], [(ln6 + 1); ln7])), (98 * N([ln2; ln6; ln7], [((ln6 + 1) < (ln7 + (ln2 shl 3)))], [m[0]; 0; m[16]], [(ln2 + 1); (ln6 + 1); ln7])), (132 * N([ln6; ln7], [((ln6 + 1) < (ln7 + (0 shl 3)))], [0; m[16]], [(ln6 + 1); ln7])), (130 * N([ln2; ln6; ln7], [((ln6 + 1) < (ln7 + (ln2 shl 3)))], [m[0]; 0; m[16]], [(ln2 + 1); (ln6 + 1); ln7])), (138 * N([ln6; ln7], [((ln6 + 1) < (ln7 + (0 shl 3)))], [0; m[16]], [(ln6 + 1); ln7])), (136 * N([ln2; ln6; ln7], [((ln6 + 1) < (ln7 + (ln2 shl 3)))], [m[0]; 0; m[16]], [(ln2 + 1); (ln6 + 1); ln7])), (144 * N([ln6; ln7], [((ln6 + 1) < (ln7 + (0 shl 3)))], [0; m[16]], [(ln6 + 1); ln7])), (142 * N([ln2; ln6; ln7], [((ln6 + 1) < (ln7 + (ln2 shl 3)))], [m[0]; 0; m[16]], [(ln2 + 1); (ln6 + 1); ln7])), (115 * N([ln6; ln7], [((ln6 + 1) < (ln7 + (0 shl 3)))], [0; m[16]], [(ln6 + 1); ln7])), (80 * N([ln6; ln7; m[4]], [((ln6 + 1) < (ln7 + (m[4] shl 3)))], [0; m[16]; m[4]], [(ln6 + 1); ln7; m[4]]))) + list_max(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 9, 33, 39, 43, (23 + |f25|), (47 + |f25|), (53 + |f25|), (57 + |f25|), (26 + |f25|), (50 + |f25|), (56 + |f25|), (60 + |f25|), 18, 42, 48, 52, (32 + |f25|), (56 + |f25|), (62 + |f25|), (66 + |f25|), (35 + |f25|), (59 + |f25|), (65 + |f25|), (69 + |f25|), 9, 33, 39, 43, (23 + |f25|), (47 + |f25|), (53 + |f25|), (57 + |f25|), (26 + |f25|), (50 + |f25|), (56 + |f25|), (60 + |f25|), 18, 42, 48, 52, (32 + |f25|), (56 + |f25|), (62 + |f25|), (66 + |f25|), (35 + |f25|), (59 + |f25|), (65 + |f25|), (69 + |f25|), 9, 33, 39, 43, (23 + |f25|), (47 + |f25|), (53 + |f25|), (57 + |f25|), (26 + |f25|), (50 + |f25|), (56 + |f25|), (60 + |f25|), 18, 42, 48, 52, (32 + |f25|), (56 + |f25|), (62 + |f25|), (66 + |f25|), (35 + |f25|), (59 + |f25|), (65 + |f25|), (69 + |f25|), 9, 33, 39, 43, (23 + |f25|), (47 + |f25|), (53 + |f25|), (57 + |f25|), (26 + |f25|), (50 + |f25|), (56 + |f25|), (60 + |f25|)))
[7]: 32
[17]: (list_max((18 * N([ln2; ln3], [((ln3 + 1) != ln2)], [m[0]; 0], [ln2; (ln3 + 1)])), (24 * N([ln2; ln3], [((ln3 + 1) != ln2)], [m[0]; 0], [ln2; (ln3 + 1)])), (30 * N([ln2; ln3], [((ln3 + 1) != ln2)], [m[0]; 0], [ln2; (ln3 + 1)]))) + list_max(1, 1, 1, 5))
[25]: 7
[27]: 17
[31]: ((17 * N([ln2; ln3], [((ln3 + 1) != ln2)], [m[0]; 0], [ln2; (ln3 + 1)])) + list_max(1, 9))
[36]: 1
[37]: 27
[46]: (list_max((19 * N([ln3; ln6], [((ln3 + 1) != ln6)], [0; 0], [(ln3 + 1); ln6])), (25 * N([ln3; ln6], [((ln3 + 1) != ln6)], [0; 0], [(ln3 + 1); ln6])), (29 * N([ln3; ln6], [((ln3 + 1) != ln6)], [0; 0], [(ln3 + 1); ln6]))) + list_max(1, 1, 1))
[52]: 1
[53]: 2
[55]: 23
[58]: 47
[63]: 9
[65]: 1
[66]: 8
[68]: 6
[70]: 6
[73]: 0
[74]: 0
34 ebb paths found
[0 73]
[0 66 73]
[0 7 58 63 65 66 73]
[0 7 55 63 65 66 73]
[0 7 55 58 63 65 66 73]
[0 7 27 58 63 65 66 73]
[0 7 27 37 53 73]
[0 7 27 37 53 55 63 65 66 73]
[0 7 27 37 53 55 58 63 65 66 73]
[0 7 27 37 46 52 53 73]
[0 7 27 37 46 52 53 55 63 65 66 73]
[0 7 27 37 46 52 53 55 58 63 65 66 73]
[0 7 27 31 58 63 65 66 73]
[0 7 27 31 36 37 53 73]
[0 7 27 31 36 37 53 55 63 65 66 73]
[0 7 27 31 36 37 53 55 58 63 65 66 73]
[0 7 27 31 36 37 46 52 53 73]
[0 7 27 31 36 37 46 52 53 55 63 65 66 73]
[0 7 27 31 36 37 46 52 53 55 58 63 65 66 73]
[0 7 17 58 63 65 66 73]
[0 7 17 25 27 58 63 65 66 73]
[0 7 17 25 27 37 53 73]
[0 7 17 25 27 37 53 55 63 65 66 73]
[0 7 17 25 27 37 53 55 58 63 65 66 73]
[0 7 17 25 27 37 46 52 53 73]
[0 7 17 25 27 37 46 52 53 55 63 65 66 73]
[0 7 17 25 27 37 46 52 53 55 58 63 65 66 73]
[0 7 17 25 27 31 58 63 65 66 73]
[0 7 17 25 27 31 36 37 53 73]
[0 7 17 25 27 31 36 37 53 55 63 65 66 73]
[0 7 17 25 27 31 36 37 53 55 58 63 65 66 73]
[0 7 17 25 27 31 36 37 46 52 53 73]
[0 7 17 25 27 31 36 37 46 52 53 55 63 65 66 73]
[0 7 17 25 27 31 36 37 46 52 53 55 58 63 65 66 73]
|f241| = list_max([
  list_sum(25, 0);
  list_sum(25, 8, 0);
  list_sum(25, 32, 47, 9, 1, 8, 0);
  list_sum(25, 32, 23, 9, 1, 8, 0);
  list_sum(25, 32, 23, 47, 9, 1, 8, 0);
  list_sum(25, 32, 17, 47, 9, 1, 8, 0);
  list_sum(25, 32, 17, 27, 2, 0);
  list_sum(25, 32, 17, 27, 2, 23, 9, 1, 8, 0);
  list_sum(25, 32, 17, 27, 2, 23, 47, 9, 1, 8, 0);
  list_sum([
    25;
    32;
    17;
    27;
    (list_max([
      19 * (N([ln3; ln6], [(ln3 + 1) != ln6], [0; 0], [ln3 + 1; ln6]));
      25 * (N([ln3; ln6], [(ln3 + 1) != ln6], [0; 0], [ln3 + 1; ln6]));
      29 * (N([ln3; ln6], [(ln3 + 1) != ln6], [0; 0], [ln3 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    1;
    2;
    0
  ]);
  list_sum([
    25;
    32;
    17;
    27;
    (list_max([
      19 * (N([ln3; ln6], [(ln3 + 1) != ln6], [0; 0], [ln3 + 1; ln6]));
      25 * (N([ln3; ln6], [(ln3 + 1) != ln6], [0; 0], [ln3 + 1; ln6]));
      29 * (N([ln3; ln6], [(ln3 + 1) != ln6], [0; 0], [ln3 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    1;
    2;
    23;
    9;
    1;
    8;
    0
  ]);
  list_sum([
    25;
    32;
    17;
    27;
    (list_max([
      19 * (N([ln3; ln6], [(ln3 + 1) != ln6], [0; 0], [ln3 + 1; ln6]));
      25 * (N([ln3; ln6], [(ln3 + 1) != ln6], [0; 0], [ln3 + 1; ln6]));
      29 * (N([ln3; ln6], [(ln3 + 1) != ln6], [0; 0], [ln3 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    1;
    2;
    23;
    47;
    9;
    1;
    8;
    0
  ]);
  list_sum([
    25;
    32;
    17;
    (17 * (N([ln2; ln3], [(ln3 + 1) != ln2], [m[0]; 0], [ln2; ln3 + 1]))) + (list_max(1, 9));
    47;
    9;
    1;
    8;
    0
  ]);
  list_sum([
    25;
    32;
    17;
    (17 * (N([ln2; ln3], [(ln3 + 1) != ln2], [m[0]; 0], [ln2; ln3 + 1]))) + (list_max(1, 9));
    1;
    27;
    2;
    0
  ]);
  list_sum([
    25;
    32;
    17;
    (17 * (N([ln2; ln3], [(ln3 + 1) != ln2], [m[0]; 0], [ln2; ln3 + 1]))) + (list_max(1, 9));
    1;
    27;
    2;
    23;
    9;
    1;
    8;
    0
  ]);
  list_sum([
    25;
    32;
    17;
    (17 * (N([ln2; ln3], [(ln3 + 1) != ln2], [m[0]; 0], [ln2; ln3 + 1]))) + (list_max(1, 9));
    1;
    27;
    2;
    23;
    47;
    9;
    1;
    8;
    0
  ]);
  list_sum([
    25;
    32;
    17;
    (17 * (N([ln2; ln3], [(ln3 + 1) != ln2], [m[0]; 0], [ln2; ln3 + 1]))) + (list_max(1, 9));
    1;
    27;
    (list_max([
      19 * (N([ln3; ln6], [(ln3 + 1) != ln6], [0; 0], [ln3 + 1; ln6]));
      25 * (N([ln3; ln6], [(ln3 + 1) != ln6], [0; 0], [ln3 + 1; ln6]));
      29 * (N([ln3; ln6], [(ln3 + 1) != ln6], [0; 0], [ln3 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    1;
    2;
    0
  ]);
  list_sum([
    25;
    32;
    17;
    (17 * (N([ln2; ln3], [(ln3 + 1) != ln2], [m[0]; 0], [ln2; ln3 + 1]))) + (list_max(1, 9));
    1;
    27;
    (list_max([
      19 * (N([ln3; ln6], [(ln3 + 1) != ln6], [0; 0], [ln3 + 1; ln6]));
      25 * (N([ln3; ln6], [(ln3 + 1) != ln6], [0; 0], [ln3 + 1; ln6]));
      29 * (N([ln3; ln6], [(ln3 + 1) != ln6], [0; 0], [ln3 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    1;
    2;
    23;
    9;
    1;
    8;
    0
  ]);
  list_sum([
    25;
    32;
    17;
    (17 * (N([ln2; ln3], [(ln3 + 1) != ln2], [m[0]; 0], [ln2; ln3 + 1]))) + (list_max(1, 9));
    1;
    27;
    (list_max([
      19 * (N([ln3; ln6], [(ln3 + 1) != ln6], [0; 0], [ln3 + 1; ln6]));
      25 * (N([ln3; ln6], [(ln3 + 1) != ln6], [0; 0], [ln3 + 1; ln6]));
      29 * (N([ln3; ln6], [(ln3 + 1) != ln6], [0; 0], [ln3 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    1;
    2;
    23;
    47;
    9;
    1;
    8;
    0
  ]);
  list_sum([
    25;
    32;
    (list_max([
      18 * (N([ln2; ln3], [(ln3 + 1) != ln2], [m[0]; 0], [ln2; ln3 + 1]));
      24 * (N([ln2; ln3], [(ln3 + 1) != ln2], [m[0]; 0], [ln2; ln3 + 1]));
      30 * (N([ln2; ln3], [(ln3 + 1) != ln2], [m[0]; 0], [ln2; ln3 + 1]))
    ])) + (list_max(1, 1, 1, 5));
    47;
    9;
    1;
    8;
    0
  ]);
  list_sum([
    25;
    32;
    (list_max([
      18 * (N([ln2; ln3], [(ln3 + 1) != ln2], [m[0]; 0], [ln2; ln3 + 1]));
      24 * (N([ln2; ln3], [(ln3 + 1) != ln2], [m[0]; 0], [ln2; ln3 + 1]));
      30 * (N([ln2; ln3], [(ln3 + 1) != ln2], [m[0]; 0], [ln2; ln3 + 1]))
    ])) + (list_max(1, 1, 1, 5));
    7;
    17;
    47;
    9;
    1;
    8;
    0
  ]);
  list_sum([
    25;
    32;
    (list_max([
      18 * (N([ln2; ln3], [(ln3 + 1) != ln2], [m[0]; 0], [ln2; ln3 + 1]));
      24 * (N([ln2; ln3], [(ln3 + 1) != ln2], [m[0]; 0], [ln2; ln3 + 1]));
      30 * (N([ln2; ln3], [(ln3 + 1) != ln2], [m[0]; 0], [ln2; ln3 + 1]))
    ])) + (list_max(1, 1, 1, 5));
    7;
    17;
    27;
    2;
    0
  ]);
  list_sum([
    25;
    32;
    (list_max([
      18 * (N([ln2; ln3], [(ln3 + 1) != ln2], [m[0]; 0], [ln2; ln3 + 1]));
      24 * (N([ln2; ln3], [(ln3 + 1) != ln2], [m[0]; 0], [ln2; ln3 + 1]));
      30 * (N([ln2; ln3], [(ln3 + 1) != ln2], [m[0]; 0], [ln2; ln3 + 1]))
    ])) + (list_max(1, 1, 1, 5));
    7;
    17;
    27;
    2;
    23;
    9;
    1;
    8;
    0
  ]);
  list_sum([
    25;
    32;
    (list_max([
      18 * (N([ln2; ln3], [(ln3 + 1) != ln2], [m[0]; 0], [ln2; ln3 + 1]));
      24 * (N([ln2; ln3], [(ln3 + 1) != ln2], [m[0]; 0], [ln2; ln3 + 1]));
      30 * (N([ln2; ln3], [(ln3 + 1) != ln2], [m[0]; 0], [ln2; ln3 + 1]))
    ])) + (list_max(1, 1, 1, 5));
    7;
    17;
    27;
    2;
    23;
    47;
    9;
    1;
    8;
    0
  ]);
  list_sum([
    25;
    32;
    (list_max([
      18 * (N([ln2; ln3], [(ln3 + 1) != ln2], [m[0]; 0], [ln2; ln3 + 1]));
      24 * (N([ln2; ln3], [(ln3 + 1) != ln2], [m[0]; 0], [ln2; ln3 + 1]));
      30 * (N([ln2; ln3], [(ln3 + 1) != ln2], [m[0]; 0], [ln2; ln3 + 1]))
    ])) + (list_max(1, 1, 1, 5));
    7;
    17;
    27;
    (list_max([
      19 * (N([ln3; ln6], [(ln3 + 1) != ln6], [0; 0], [ln3 + 1; ln6]));
      25 * (N([ln3; ln6], [(ln3 + 1) != ln6], [0; 0], [ln3 + 1; ln6]));
      29 * (N([ln3; ln6], [(ln3 + 1) != ln6], [0; 0], [ln3 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    1;
    2;
    0
  ]);
  list_sum([
    25;
    32;
    (list_max([
      18 * (N([ln2; ln3], [(ln3 + 1) != ln2], [m[0]; 0], [ln2; ln3 + 1]));
      24 * (N([ln2; ln3], [(ln3 + 1) != ln2], [m[0]; 0], [ln2; ln3 + 1]));
      30 * (N([ln2; ln3], [(ln3 + 1) != ln2], [m[0]; 0], [ln2; ln3 + 1]))
    ])) + (list_max(1, 1, 1, 5));
    7;
    17;
    27;
    (list_max([
      19 * (N([ln3; ln6], [(ln3 + 1) != ln6], [0; 0], [ln3 + 1; ln6]));
      25 * (N([ln3; ln6], [(ln3 + 1) != ln6], [0; 0], [ln3 + 1; ln6]));
      29 * (N([ln3; ln6], [(ln3 + 1) != ln6], [0; 0], [ln3 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    1;
    2;
    23;
    9;
    1;
    8;
    0
  ]);
  list_sum([
    25;
    32;
    (list_max([
      18 * (N([ln2; ln3], [(ln3 + 1) != ln2], [m[0]; 0], [ln2; ln3 + 1]));
      24 * (N([ln2; ln3], [(ln3 + 1) != ln2], [m[0]; 0], [ln2; ln3 + 1]));
      30 * (N([ln2; ln3], [(ln3 + 1) != ln2], [m[0]; 0], [ln2; ln3 + 1]))
    ])) + (list_max(1, 1, 1, 5));
    7;
    17;
    27;
    (list_max([
      19 * (N([ln3; ln6], [(ln3 + 1) != ln6], [0; 0], [ln3 + 1; ln6]));
      25 * (N([ln3; ln6], [(ln3 + 1) != ln6], [0; 0], [ln3 + 1; ln6]));
      29 * (N([ln3; ln6], [(ln3 + 1) != ln6], [0; 0], [ln3 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    1;
    2;
    23;
    47;
    9;
    1;
    8;
    0
  ]);
  list_sum([
    25;
    32;
    (list_max([
      18 * (N([ln2; ln3], [(ln3 + 1) != ln2], [m[0]; 0], [ln2; ln3 + 1]));
      24 * (N([ln2; ln3], [(ln3 + 1) != ln2], [m[0]; 0], [ln2; ln3 + 1]));
      30 * (N([ln2; ln3], [(ln3 + 1) != ln2], [m[0]; 0], [ln2; ln3 + 1]))
    ])) + (list_max(1, 1, 1, 5));
    7;
    17;
    (17 * (N([ln2; ln3], [(ln3 + 1) != ln2], [m[0]; 0], [ln2; ln3 + 1]))) + (list_max(1, 9));
    47;
    9;
    1;
    8;
    0
  ]);
  list_sum([
    25;
    32;
    (list_max([
      18 * (N([ln2; ln3], [(ln3 + 1) != ln2], [m[0]; 0], [ln2; ln3 + 1]));
      24 * (N([ln2; ln3], [(ln3 + 1) != ln2], [m[0]; 0], [ln2; ln3 + 1]));
      30 * (N([ln2; ln3], [(ln3 + 1) != ln2], [m[0]; 0], [ln2; ln3 + 1]))
    ])) + (list_max(1, 1, 1, 5));
    7;
    17;
    (17 * (N([ln2; ln3], [(ln3 + 1) != ln2], [m[0]; 0], [ln2; ln3 + 1]))) + (list_max(1, 9));
    1;
    27;
    2;
    0
  ]);
  list_sum([
    25;
    32;
    (list_max([
      18 * (N([ln2; ln3], [(ln3 + 1) != ln2], [m[0]; 0], [ln2; ln3 + 1]));
      24 * (N([ln2; ln3], [(ln3 + 1) != ln2], [m[0]; 0], [ln2; ln3 + 1]));
      30 * (N([ln2; ln3], [(ln3 + 1) != ln2], [m[0]; 0], [ln2; ln3 + 1]))
    ])) + (list_max(1, 1, 1, 5));
    7;
    17;
    (17 * (N([ln2; ln3], [(ln3 + 1) != ln2], [m[0]; 0], [ln2; ln3 + 1]))) + (list_max(1, 9));
    1;
    27;
    2;
    23;
    9;
    1;
    8;
    0
  ]);
  list_sum([
    25;
    32;
    (list_max([
      18 * (N([ln2; ln3], [(ln3 + 1) != ln2], [m[0]; 0], [ln2; ln3 + 1]));
      24 * (N([ln2; ln3], [(ln3 + 1) != ln2], [m[0]; 0], [ln2; ln3 + 1]));
      30 * (N([ln2; ln3], [(ln3 + 1) != ln2], [m[0]; 0], [ln2; ln3 + 1]))
    ])) + (list_max(1, 1, 1, 5));
    7;
    17;
    (17 * (N([ln2; ln3], [(ln3 + 1) != ln2], [m[0]; 0], [ln2; ln3 + 1]))) + (list_max(1, 9));
    1;
    27;
    2;
    23;
    47;
    9;
    1;
    8;
    0
  ]);
  list_sum([
    25;
    32;
    (list_max([
      18 * (N([ln2; ln3], [(ln3 + 1) != ln2], [m[0]; 0], [ln2; ln3 + 1]));
      24 * (N([ln2; ln3], [(ln3 + 1) != ln2], [m[0]; 0], [ln2; ln3 + 1]));
      30 * (N([ln2; ln3], [(ln3 + 1) != ln2], [m[0]; 0], [ln2; ln3 + 1]))
    ])) + (list_max(1, 1, 1, 5));
    7;
    17;
    (17 * (N([ln2; ln3], [(ln3 + 1) != ln2], [m[0]; 0], [ln2; ln3 + 1]))) + (list_max(1, 9));
    1;
    27;
    (list_max([
      19 * (N([ln3; ln6], [(ln3 + 1) != ln6], [0; 0], [ln3 + 1; ln6]));
      25 * (N([ln3; ln6], [(ln3 + 1) != ln6], [0; 0], [ln3 + 1; ln6]));
      29 * (N([ln3; ln6], [(ln3 + 1) != ln6], [0; 0], [ln3 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    1;
    2;
    0
  ]);
  list_sum([
    25;
    32;
    (list_max([
      18 * (N([ln2; ln3], [(ln3 + 1) != ln2], [m[0]; 0], [ln2; ln3 + 1]));
      24 * (N([ln2; ln3], [(ln3 + 1) != ln2], [m[0]; 0], [ln2; ln3 + 1]));
      30 * (N([ln2; ln3], [(ln3 + 1) != ln2], [m[0]; 0], [ln2; ln3 + 1]))
    ])) + (list_max(1, 1, 1, 5));
    7;
    17;
    (17 * (N([ln2; ln3], [(ln3 + 1) != ln2], [m[0]; 0], [ln2; ln3 + 1]))) + (list_max(1, 9));
    1;
    27;
    (list_max([
      19 * (N([ln3; ln6], [(ln3 + 1) != ln6], [0; 0], [ln3 + 1; ln6]));
      25 * (N([ln3; ln6], [(ln3 + 1) != ln6], [0; 0], [ln3 + 1; ln6]));
      29 * (N([ln3; ln6], [(ln3 + 1) != ln6], [0; 0], [ln3 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    1;
    2;
    23;
    9;
    1;
    8;
    0
  ]);
  list_sum([
    25;
    32;
    (list_max([
      18 * (N([ln2; ln3], [(ln3 + 1) != ln2], [m[0]; 0], [ln2; ln3 + 1]));
      24 * (N([ln2; ln3], [(ln3 + 1) != ln2], [m[0]; 0], [ln2; ln3 + 1]));
      30 * (N([ln2; ln3], [(ln3 + 1) != ln2], [m[0]; 0], [ln2; ln3 + 1]))
    ])) + (list_max(1, 1, 1, 5));
    7;
    17;
    (17 * (N([ln2; ln3], [(ln3 + 1) != ln2], [m[0]; 0], [ln2; ln3 + 1]))) + (list_max(1, 9));
    1;
    27;
    (list_max([
      19 * (N([ln3; ln6], [(ln3 + 1) != ln6], [0; 0], [ln3 + 1; ln6]));
      25 * (N([ln3; ln6], [(ln3 + 1) != ln6], [0; 0], [ln3 + 1; ln6]));
      29 * (N([ln3; ln6], [(ln3 + 1) != ln6], [0; 0], [ln3 + 1; ln6]))
    ])) + (list_max(1, 1, 1));
    1;
    2;
    23;
    47;
    9;
    1;
    8;
    0
  ])
])
