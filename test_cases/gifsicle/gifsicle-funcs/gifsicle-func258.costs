ebb costs:
[0]: 101
[18]: (list_max(((50 + list_sum(|f23|, |f24|, |f125|)) * N([ln3; m[8]], [not(((ln3 + 1) >= m[8]))], [0; 0], [(ln3 + 1); m[8]])), ((54 + list_sum(|f23|, |f24|, |f28|, |f125|)) * N([ln3; m[8]], [not(((ln3 + 1) >= m[8]))], [0; 0], [(ln3 + 1); m[8]]))) + list_max(1, 1))
[28]: 3
[30]: 9
[32]: (list_max(((13 + |f177|) * N([m[32]], [m[32]], [0], [m[32]])), ((18 + |f177|) * N([m[32]], [m[32]], [0], [m[32]])), ((42 + |f177|) * N([ln5], [R(177, 0, i32, ln5)], [m[36]], [0]))) + list_max(1, 1, 1))
[32]: 15
[37]: ((9 * N([m[0]], [m[0]], [0], [m[0]])) + 1)
[39]: 13
[40]: 5
[42]: 1
[43]: 91
[51]: (((35 + |f24|) * N([ln2; m[10]], [((ln2 + 1) < m[10])], [(0 + 1); m[10]], [(ln2 + 1); m[10]])) + 1)
[53]: 4
[54]: 8
[55]: 40
[63]: 2
[64]: 1
[66]: 3
[67]: 2
[69]: 0
72 ebb paths found
[0 67]
[0 66 67]
[0 63 64 69]
[0 63 64 66 67]
[0 30 43 66 67]
[0 30 43 55 64 69]
[0 30 43 55 64 66 67]
[0 30 43 54 55 64 69]
[0 30 43 54 55 64 66 67]
[0 30 43 51 53 54 55 64 69]
[0 30 43 51 53 54 55 64 66 67]
[0 30 32 66 67]
[0 30 32 40 42 43 66 67]
[0 30 32 40 42 43 55 64 69]
[0 30 32 40 42 43 55 64 66 67]
[0 30 32 40 42 43 54 55 64 69]
[0 30 32 40 42 43 54 55 64 66 67]
[0 30 32 40 42 43 51 53 54 55 64 69]
[0 30 32 40 42 43 51 53 54 55 64 66 67]
[0 30 32 37 39 40 42 43 66 67]
[0 30 32 37 39 40 42 43 55 64 69]
[0 30 32 37 39 40 42 43 55 64 66 67]
[0 30 32 37 39 40 42 43 54 55 64 69]
[0 30 32 37 39 40 42 43 54 55 64 66 67]
[0 30 32 37 39 40 42 43 51 53 54 55 64 69]
[0 30 32 37 39 40 42 43 51 53 54 55 64 66 67]
[0 18 66 67]
[0 18 30 43 66 67]
[0 18 30 43 55 64 69]
[0 18 30 43 55 64 66 67]
[0 18 30 43 54 55 64 69]
[0 18 30 43 54 55 64 66 67]
[0 18 30 43 51 53 54 55 64 69]
[0 18 30 43 51 53 54 55 64 66 67]
[0 18 30 32 66 67]
[0 18 30 32 40 42 43 66 67]
[0 18 30 32 40 42 43 55 64 69]
[0 18 30 32 40 42 43 55 64 66 67]
[0 18 30 32 40 42 43 54 55 64 69]
[0 18 30 32 40 42 43 54 55 64 66 67]
[0 18 30 32 40 42 43 51 53 54 55 64 69]
[0 18 30 32 40 42 43 51 53 54 55 64 66 67]
[0 18 30 32 37 39 40 42 43 66 67]
[0 18 30 32 37 39 40 42 43 55 64 69]
[0 18 30 32 37 39 40 42 43 55 64 66 67]
[0 18 30 32 37 39 40 42 43 54 55 64 69]
[0 18 30 32 37 39 40 42 43 54 55 64 66 67]
[0 18 30 32 37 39 40 42 43 51 53 54 55 64 69]
[0 18 30 32 37 39 40 42 43 51 53 54 55 64 66 67]
[0 18 28 66 67]
[0 18 28 30 43 66 67]
[0 18 28 30 43 55 64 69]
[0 18 28 30 43 55 64 66 67]
[0 18 28 30 43 54 55 64 69]
[0 18 28 30 43 54 55 64 66 67]
[0 18 28 30 43 51 53 54 55 64 69]
[0 18 28 30 43 51 53 54 55 64 66 67]
[0 18 28 30 32 66 67]
[0 18 28 30 32 40 42 43 66 67]
[0 18 28 30 32 40 42 43 55 64 69]
[0 18 28 30 32 40 42 43 55 64 66 67]
[0 18 28 30 32 40 42 43 54 55 64 69]
[0 18 28 30 32 40 42 43 54 55 64 66 67]
[0 18 28 30 32 40 42 43 51 53 54 55 64 69]
[0 18 28 30 32 40 42 43 51 53 54 55 64 66 67]
[0 18 28 30 32 37 39 40 42 43 66 67]
[0 18 28 30 32 37 39 40 42 43 55 64 69]
[0 18 28 30 32 37 39 40 42 43 55 64 66 67]
[0 18 28 30 32 37 39 40 42 43 54 55 64 69]
[0 18 28 30 32 37 39 40 42 43 54 55 64 66 67]
[0 18 28 30 32 37 39 40 42 43 51 53 54 55 64 69]
[0 18 28 30 32 37 39 40 42 43 51 53 54 55 64 66 67]
|f258| = list_max([
  list_sum(101, 2);
  list_sum(101, 3, 2);
  list_sum(101, 2, 1, 0);
  list_sum(101, 2, 1, 3, 2);
  list_sum(101, 9, 91, 3, 2);
  list_sum(101, 9, 91, 40, 1, 0);
  list_sum(101, 9, 91, 40, 1, 3, 2);
  list_sum(101, 9, 91, 8, 40, 1, 0);
  list_sum(101, 9, 91, 8, 40, 1, 3, 2);
  list_sum([
    101;
    9;
    91;
    ((35 + |f24|) * (N([ln2; m[10]], [(ln2 + 1) < m[10]], [0 + 1; m[10]], [ln2 + 1; m[10]]))) + 1;
    4;
    8;
    40;
    1;
    0
  ]);
  list_sum([
    101;
    9;
    91;
    ((35 + |f24|) * (N([ln2; m[10]], [(ln2 + 1) < m[10]], [0 + 1; m[10]], [ln2 + 1; m[10]]))) + 1;
    4;
    8;
    40;
    1;
    3;
    2
  ]);
  list_sum(101, 9, 15, 3, 2);
  list_sum(101, 9, 15, 5, 1, 91, 3, 2);
  list_sum(101, 9, 15, 5, 1, 91, 40, 1, 0);
  list_sum(101, 9, 15, 5, 1, 91, 40, 1, 3, 2);
  list_sum(101, 9, 15, 5, 1, 91, 8, 40, 1, 0);
  list_sum(101, 9, 15, 5, 1, 91, 8, 40, 1, 3, 2);
  list_sum([
    101;
    9;
    15;
    5;
    1;
    91;
    ((35 + |f24|) * (N([ln2; m[10]], [(ln2 + 1) < m[10]], [0 + 1; m[10]], [ln2 + 1; m[10]]))) + 1;
    4;
    8;
    40;
    1;
    0
  ]);
  list_sum([
    101;
    9;
    15;
    5;
    1;
    91;
    ((35 + |f24|) * (N([ln2; m[10]], [(ln2 + 1) < m[10]], [0 + 1; m[10]], [ln2 + 1; m[10]]))) + 1;
    4;
    8;
    40;
    1;
    3;
    2
  ]);
  list_sum([
    101;
    9;
    15;
    (9 * (N([m[0]], [m[0]], [0], [m[0]]))) + 1;
    13;
    5;
    1;
    91;
    3;
    2
  ]);
  list_sum([
    101;
    9;
    15;
    (9 * (N([m[0]], [m[0]], [0], [m[0]]))) + 1;
    13;
    5;
    1;
    91;
    40;
    1;
    0
  ]);
  list_sum([
    101;
    9;
    15;
    (9 * (N([m[0]], [m[0]], [0], [m[0]]))) + 1;
    13;
    5;
    1;
    91;
    40;
    1;
    3;
    2
  ]);
  list_sum([
    101;
    9;
    15;
    (9 * (N([m[0]], [m[0]], [0], [m[0]]))) + 1;
    13;
    5;
    1;
    91;
    8;
    40;
    1;
    0
  ]);
  list_sum([
    101;
    9;
    15;
    (9 * (N([m[0]], [m[0]], [0], [m[0]]))) + 1;
    13;
    5;
    1;
    91;
    8;
    40;
    1;
    3;
    2
  ]);
  list_sum([
    101;
    9;
    15;
    (9 * (N([m[0]], [m[0]], [0], [m[0]]))) + 1;
    13;
    5;
    1;
    91;
    ((35 + |f24|) * (N([ln2; m[10]], [(ln2 + 1) < m[10]], [0 + 1; m[10]], [ln2 + 1; m[10]]))) + 1;
    4;
    8;
    40;
    1;
    0
  ]);
  list_sum([
    101;
    9;
    15;
    (9 * (N([m[0]], [m[0]], [0], [m[0]]))) + 1;
    13;
    5;
    1;
    91;
    ((35 + |f24|) * (N([ln2; m[10]], [(ln2 + 1) < m[10]], [0 + 1; m[10]], [ln2 + 1; m[10]]))) + 1;
    4;
    8;
    40;
    1;
    3;
    2
  ]);
  list_sum([
    101;
    (list_max([
      (50 + (list_sum(|f23|, |f24|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]));
      (54 + (list_sum(|f23|, |f24|, |f28|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]))
    ])) + (list_max(1, 1));
    3;
    2
  ]);
  list_sum([
    101;
    (list_max([
      (50 + (list_sum(|f23|, |f24|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]));
      (54 + (list_sum(|f23|, |f24|, |f28|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]))
    ])) + (list_max(1, 1));
    9;
    91;
    3;
    2
  ]);
  list_sum([
    101;
    (list_max([
      (50 + (list_sum(|f23|, |f24|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]));
      (54 + (list_sum(|f23|, |f24|, |f28|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]))
    ])) + (list_max(1, 1));
    9;
    91;
    40;
    1;
    0
  ]);
  list_sum([
    101;
    (list_max([
      (50 + (list_sum(|f23|, |f24|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]));
      (54 + (list_sum(|f23|, |f24|, |f28|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]))
    ])) + (list_max(1, 1));
    9;
    91;
    40;
    1;
    3;
    2
  ]);
  list_sum([
    101;
    (list_max([
      (50 + (list_sum(|f23|, |f24|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]));
      (54 + (list_sum(|f23|, |f24|, |f28|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]))
    ])) + (list_max(1, 1));
    9;
    91;
    8;
    40;
    1;
    0
  ]);
  list_sum([
    101;
    (list_max([
      (50 + (list_sum(|f23|, |f24|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]));
      (54 + (list_sum(|f23|, |f24|, |f28|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]))
    ])) + (list_max(1, 1));
    9;
    91;
    8;
    40;
    1;
    3;
    2
  ]);
  list_sum([
    101;
    (list_max([
      (50 + (list_sum(|f23|, |f24|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]));
      (54 + (list_sum(|f23|, |f24|, |f28|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]))
    ])) + (list_max(1, 1));
    9;
    91;
    ((35 + |f24|) * (N([ln2; m[10]], [(ln2 + 1) < m[10]], [0 + 1; m[10]], [ln2 + 1; m[10]]))) + 1;
    4;
    8;
    40;
    1;
    0
  ]);
  list_sum([
    101;
    (list_max([
      (50 + (list_sum(|f23|, |f24|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]));
      (54 + (list_sum(|f23|, |f24|, |f28|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]))
    ])) + (list_max(1, 1));
    9;
    91;
    ((35 + |f24|) * (N([ln2; m[10]], [(ln2 + 1) < m[10]], [0 + 1; m[10]], [ln2 + 1; m[10]]))) + 1;
    4;
    8;
    40;
    1;
    3;
    2
  ]);
  list_sum([
    101;
    (list_max([
      (50 + (list_sum(|f23|, |f24|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]));
      (54 + (list_sum(|f23|, |f24|, |f28|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]))
    ])) + (list_max(1, 1));
    9;
    15;
    3;
    2
  ]);
  list_sum([
    101;
    (list_max([
      (50 + (list_sum(|f23|, |f24|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]));
      (54 + (list_sum(|f23|, |f24|, |f28|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]))
    ])) + (list_max(1, 1));
    9;
    15;
    5;
    1;
    91;
    3;
    2
  ]);
  list_sum([
    101;
    (list_max([
      (50 + (list_sum(|f23|, |f24|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]));
      (54 + (list_sum(|f23|, |f24|, |f28|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]))
    ])) + (list_max(1, 1));
    9;
    15;
    5;
    1;
    91;
    40;
    1;
    0
  ]);
  list_sum([
    101;
    (list_max([
      (50 + (list_sum(|f23|, |f24|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]));
      (54 + (list_sum(|f23|, |f24|, |f28|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]))
    ])) + (list_max(1, 1));
    9;
    15;
    5;
    1;
    91;
    40;
    1;
    3;
    2
  ]);
  list_sum([
    101;
    (list_max([
      (50 + (list_sum(|f23|, |f24|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]));
      (54 + (list_sum(|f23|, |f24|, |f28|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]))
    ])) + (list_max(1, 1));
    9;
    15;
    5;
    1;
    91;
    8;
    40;
    1;
    0
  ]);
  list_sum([
    101;
    (list_max([
      (50 + (list_sum(|f23|, |f24|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]));
      (54 + (list_sum(|f23|, |f24|, |f28|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]))
    ])) + (list_max(1, 1));
    9;
    15;
    5;
    1;
    91;
    8;
    40;
    1;
    3;
    2
  ]);
  list_sum([
    101;
    (list_max([
      (50 + (list_sum(|f23|, |f24|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]));
      (54 + (list_sum(|f23|, |f24|, |f28|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]))
    ])) + (list_max(1, 1));
    9;
    15;
    5;
    1;
    91;
    ((35 + |f24|) * (N([ln2; m[10]], [(ln2 + 1) < m[10]], [0 + 1; m[10]], [ln2 + 1; m[10]]))) + 1;
    4;
    8;
    40;
    1;
    0
  ]);
  list_sum([
    101;
    (list_max([
      (50 + (list_sum(|f23|, |f24|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]));
      (54 + (list_sum(|f23|, |f24|, |f28|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]))
    ])) + (list_max(1, 1));
    9;
    15;
    5;
    1;
    91;
    ((35 + |f24|) * (N([ln2; m[10]], [(ln2 + 1) < m[10]], [0 + 1; m[10]], [ln2 + 1; m[10]]))) + 1;
    4;
    8;
    40;
    1;
    3;
    2
  ]);
  list_sum([
    101;
    (list_max([
      (50 + (list_sum(|f23|, |f24|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]));
      (54 + (list_sum(|f23|, |f24|, |f28|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]))
    ])) + (list_max(1, 1));
    9;
    15;
    (9 * (N([m[0]], [m[0]], [0], [m[0]]))) + 1;
    13;
    5;
    1;
    91;
    3;
    2
  ]);
  list_sum([
    101;
    (list_max([
      (50 + (list_sum(|f23|, |f24|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]));
      (54 + (list_sum(|f23|, |f24|, |f28|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]))
    ])) + (list_max(1, 1));
    9;
    15;
    (9 * (N([m[0]], [m[0]], [0], [m[0]]))) + 1;
    13;
    5;
    1;
    91;
    40;
    1;
    0
  ]);
  list_sum([
    101;
    (list_max([
      (50 + (list_sum(|f23|, |f24|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]));
      (54 + (list_sum(|f23|, |f24|, |f28|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]))
    ])) + (list_max(1, 1));
    9;
    15;
    (9 * (N([m[0]], [m[0]], [0], [m[0]]))) + 1;
    13;
    5;
    1;
    91;
    40;
    1;
    3;
    2
  ]);
  list_sum([
    101;
    (list_max([
      (50 + (list_sum(|f23|, |f24|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]));
      (54 + (list_sum(|f23|, |f24|, |f28|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]))
    ])) + (list_max(1, 1));
    9;
    15;
    (9 * (N([m[0]], [m[0]], [0], [m[0]]))) + 1;
    13;
    5;
    1;
    91;
    8;
    40;
    1;
    0
  ]);
  list_sum([
    101;
    (list_max([
      (50 + (list_sum(|f23|, |f24|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]));
      (54 + (list_sum(|f23|, |f24|, |f28|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]))
    ])) + (list_max(1, 1));
    9;
    15;
    (9 * (N([m[0]], [m[0]], [0], [m[0]]))) + 1;
    13;
    5;
    1;
    91;
    8;
    40;
    1;
    3;
    2
  ]);
  list_sum([
    101;
    (list_max([
      (50 + (list_sum(|f23|, |f24|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]));
      (54 + (list_sum(|f23|, |f24|, |f28|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]))
    ])) + (list_max(1, 1));
    9;
    15;
    (9 * (N([m[0]], [m[0]], [0], [m[0]]))) + 1;
    13;
    5;
    1;
    91;
    ((35 + |f24|) * (N([ln2; m[10]], [(ln2 + 1) < m[10]], [0 + 1; m[10]], [ln2 + 1; m[10]]))) + 1;
    4;
    8;
    40;
    1;
    0
  ]);
  list_sum([
    101;
    (list_max([
      (50 + (list_sum(|f23|, |f24|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]));
      (54 + (list_sum(|f23|, |f24|, |f28|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]))
    ])) + (list_max(1, 1));
    9;
    15;
    (9 * (N([m[0]], [m[0]], [0], [m[0]]))) + 1;
    13;
    5;
    1;
    91;
    ((35 + |f24|) * (N([ln2; m[10]], [(ln2 + 1) < m[10]], [0 + 1; m[10]], [ln2 + 1; m[10]]))) + 1;
    4;
    8;
    40;
    1;
    3;
    2
  ]);
  list_sum([
    101;
    (list_max([
      (50 + (list_sum(|f23|, |f24|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]));
      (54 + (list_sum(|f23|, |f24|, |f28|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]))
    ])) + (list_max(1, 1));
    3;
    3;
    2
  ]);
  list_sum([
    101;
    (list_max([
      (50 + (list_sum(|f23|, |f24|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]));
      (54 + (list_sum(|f23|, |f24|, |f28|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]))
    ])) + (list_max(1, 1));
    3;
    9;
    91;
    3;
    2
  ]);
  list_sum([
    101;
    (list_max([
      (50 + (list_sum(|f23|, |f24|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]));
      (54 + (list_sum(|f23|, |f24|, |f28|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]))
    ])) + (list_max(1, 1));
    3;
    9;
    91;
    40;
    1;
    0
  ]);
  list_sum([
    101;
    (list_max([
      (50 + (list_sum(|f23|, |f24|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]));
      (54 + (list_sum(|f23|, |f24|, |f28|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]))
    ])) + (list_max(1, 1));
    3;
    9;
    91;
    40;
    1;
    3;
    2
  ]);
  list_sum([
    101;
    (list_max([
      (50 + (list_sum(|f23|, |f24|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]));
      (54 + (list_sum(|f23|, |f24|, |f28|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]))
    ])) + (list_max(1, 1));
    3;
    9;
    91;
    8;
    40;
    1;
    0
  ]);
  list_sum([
    101;
    (list_max([
      (50 + (list_sum(|f23|, |f24|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]));
      (54 + (list_sum(|f23|, |f24|, |f28|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]))
    ])) + (list_max(1, 1));
    3;
    9;
    91;
    8;
    40;
    1;
    3;
    2
  ]);
  list_sum([
    101;
    (list_max([
      (50 + (list_sum(|f23|, |f24|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]));
      (54 + (list_sum(|f23|, |f24|, |f28|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]))
    ])) + (list_max(1, 1));
    3;
    9;
    91;
    ((35 + |f24|) * (N([ln2; m[10]], [(ln2 + 1) < m[10]], [0 + 1; m[10]], [ln2 + 1; m[10]]))) + 1;
    4;
    8;
    40;
    1;
    0
  ]);
  list_sum([
    101;
    (list_max([
      (50 + (list_sum(|f23|, |f24|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]));
      (54 + (list_sum(|f23|, |f24|, |f28|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]))
    ])) + (list_max(1, 1));
    3;
    9;
    91;
    ((35 + |f24|) * (N([ln2; m[10]], [(ln2 + 1) < m[10]], [0 + 1; m[10]], [ln2 + 1; m[10]]))) + 1;
    4;
    8;
    40;
    1;
    3;
    2
  ]);
  list_sum([
    101;
    (list_max([
      (50 + (list_sum(|f23|, |f24|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]));
      (54 + (list_sum(|f23|, |f24|, |f28|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]))
    ])) + (list_max(1, 1));
    3;
    9;
    15;
    3;
    2
  ]);
  list_sum([
    101;
    (list_max([
      (50 + (list_sum(|f23|, |f24|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]));
      (54 + (list_sum(|f23|, |f24|, |f28|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]))
    ])) + (list_max(1, 1));
    3;
    9;
    15;
    5;
    1;
    91;
    3;
    2
  ]);
  list_sum([
    101;
    (list_max([
      (50 + (list_sum(|f23|, |f24|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]));
      (54 + (list_sum(|f23|, |f24|, |f28|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]))
    ])) + (list_max(1, 1));
    3;
    9;
    15;
    5;
    1;
    91;
    40;
    1;
    0
  ]);
  list_sum([
    101;
    (list_max([
      (50 + (list_sum(|f23|, |f24|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]));
      (54 + (list_sum(|f23|, |f24|, |f28|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]))
    ])) + (list_max(1, 1));
    3;
    9;
    15;
    5;
    1;
    91;
    40;
    1;
    3;
    2
  ]);
  list_sum([
    101;
    (list_max([
      (50 + (list_sum(|f23|, |f24|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]));
      (54 + (list_sum(|f23|, |f24|, |f28|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]))
    ])) + (list_max(1, 1));
    3;
    9;
    15;
    5;
    1;
    91;
    8;
    40;
    1;
    0
  ]);
  list_sum([
    101;
    (list_max([
      (50 + (list_sum(|f23|, |f24|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]));
      (54 + (list_sum(|f23|, |f24|, |f28|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]))
    ])) + (list_max(1, 1));
    3;
    9;
    15;
    5;
    1;
    91;
    8;
    40;
    1;
    3;
    2
  ]);
  list_sum([
    101;
    (list_max([
      (50 + (list_sum(|f23|, |f24|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]));
      (54 + (list_sum(|f23|, |f24|, |f28|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]))
    ])) + (list_max(1, 1));
    3;
    9;
    15;
    5;
    1;
    91;
    ((35 + |f24|) * (N([ln2; m[10]], [(ln2 + 1) < m[10]], [0 + 1; m[10]], [ln2 + 1; m[10]]))) + 1;
    4;
    8;
    40;
    1;
    0
  ]);
  list_sum([
    101;
    (list_max([
      (50 + (list_sum(|f23|, |f24|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]));
      (54 + (list_sum(|f23|, |f24|, |f28|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]))
    ])) + (list_max(1, 1));
    3;
    9;
    15;
    5;
    1;
    91;
    ((35 + |f24|) * (N([ln2; m[10]], [(ln2 + 1) < m[10]], [0 + 1; m[10]], [ln2 + 1; m[10]]))) + 1;
    4;
    8;
    40;
    1;
    3;
    2
  ]);
  list_sum([
    101;
    (list_max([
      (50 + (list_sum(|f23|, |f24|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]));
      (54 + (list_sum(|f23|, |f24|, |f28|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]))
    ])) + (list_max(1, 1));
    3;
    9;
    15;
    (9 * (N([m[0]], [m[0]], [0], [m[0]]))) + 1;
    13;
    5;
    1;
    91;
    3;
    2
  ]);
  list_sum([
    101;
    (list_max([
      (50 + (list_sum(|f23|, |f24|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]));
      (54 + (list_sum(|f23|, |f24|, |f28|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]))
    ])) + (list_max(1, 1));
    3;
    9;
    15;
    (9 * (N([m[0]], [m[0]], [0], [m[0]]))) + 1;
    13;
    5;
    1;
    91;
    40;
    1;
    0
  ]);
  list_sum([
    101;
    (list_max([
      (50 + (list_sum(|f23|, |f24|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]));
      (54 + (list_sum(|f23|, |f24|, |f28|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]))
    ])) + (list_max(1, 1));
    3;
    9;
    15;
    (9 * (N([m[0]], [m[0]], [0], [m[0]]))) + 1;
    13;
    5;
    1;
    91;
    40;
    1;
    3;
    2
  ]);
  list_sum([
    101;
    (list_max([
      (50 + (list_sum(|f23|, |f24|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]));
      (54 + (list_sum(|f23|, |f24|, |f28|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]))
    ])) + (list_max(1, 1));
    3;
    9;
    15;
    (9 * (N([m[0]], [m[0]], [0], [m[0]]))) + 1;
    13;
    5;
    1;
    91;
    8;
    40;
    1;
    0
  ]);
  list_sum([
    101;
    (list_max([
      (50 + (list_sum(|f23|, |f24|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]));
      (54 + (list_sum(|f23|, |f24|, |f28|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]))
    ])) + (list_max(1, 1));
    3;
    9;
    15;
    (9 * (N([m[0]], [m[0]], [0], [m[0]]))) + 1;
    13;
    5;
    1;
    91;
    8;
    40;
    1;
    3;
    2
  ]);
  list_sum([
    101;
    (list_max([
      (50 + (list_sum(|f23|, |f24|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]));
      (54 + (list_sum(|f23|, |f24|, |f28|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]))
    ])) + (list_max(1, 1));
    3;
    9;
    15;
    (9 * (N([m[0]], [m[0]], [0], [m[0]]))) + 1;
    13;
    5;
    1;
    91;
    ((35 + |f24|) * (N([ln2; m[10]], [(ln2 + 1) < m[10]], [0 + 1; m[10]], [ln2 + 1; m[10]]))) + 1;
    4;
    8;
    40;
    1;
    0
  ]);
  list_sum([
    101;
    (list_max([
      (50 + (list_sum(|f23|, |f24|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]));
      (54 + (list_sum(|f23|, |f24|, |f28|, |f125|))) * (N([ln3; m[8]], [not((ln3 + 1) >= m[8])], [0; 0], [ln3 + 1; m[8]]))
    ])) + (list_max(1, 1));
    3;
    9;
    15;
    (9 * (N([m[0]], [m[0]], [0], [m[0]]))) + 1;
    13;
    5;
    1;
    91;
    ((35 + |f24|) * (N([ln2; m[10]], [(ln2 + 1) < m[10]], [0 + 1; m[10]], [ln2 + 1; m[10]]))) + 1;
    4;
    8;
    40;
    1;
    3;
    2
  ])
])
