ebb entry:  0
  ebb type:   block
  ebb blocks: [0 1 2 3 4 5 6 7 8 9 10]
  ebb cost:   37
  ebb exits:  [11 16 35 40 45 47]
  ebb succs:  [11 16 35 40 45 47]
ebb entry:  11
  ebb type:   loop
  ebb blocks: [11 12 13]
  ebb cost:   (22 * (N([pn0], [(pn0 + 1) & 3], [pn0], [pn0 + 1]))) + 1
  ebb exits:  [14 45]
  ebb succs:  [14 45]
  1 paths to exit 14
  [11 12 13]
  1 paths to exit 45
  [11]
  1 loop paths
  [11 12]
  1 post loop exit paths
  [13]
ebb entry:  14
  ebb type:   block
  ebb blocks: [14 15]
  ebb cost:   1
  ebb exits:  [16 35]
  ebb succs:  [16 35]
ebb entry:  16
  ebb type:   block
  ebb blocks: [16 17 18 19]
  ebb cost:   10
  ebb exits:  [20 24 29]
  ebb succs:  [20 24 29]
ebb entry:  20
  ebb type:   loop
  ebb blocks: [20 21 22]
  ebb cost:   (19 * (N([pn0; pn2], [(pn0 + (pn2 + -1)) & 3], [pn0; pn2], [pn0; pn2 + -1]))) + 1
  ebb exits:  [23 45]
  ebb succs:  [23 45]
  1 paths to exit 23
  [20 21 22]
  1 paths to exit 45
  [20]
  1 loop paths
  [20 21]
  1 post loop exit paths
  [22]
ebb entry:  23
  ebb type:   block
  ebb blocks: [23]
  ebb cost:   1
  ebb exits:  [24]
  ebb succs:  [24]
ebb entry:  24
  ebb type:   block
  ebb blocks: [24 25]
  ebb cost:   5
  ebb exits:  [26 29]
  ebb succs:  [26 29]
ebb entry:  26
  ebb type:   loop
  ebb blocks: [26 27]
  ebb cost:   (15 * (N([pn2], [(pn2 + -4) > 3], [pn2 + -4], [pn2 + -4]))) + 1
  ebb exits:  [28]
  ebb succs:  [28]
  1 paths to exit 28
  [26 27]
  1 loop paths
  [26]
  1 post loop exit paths
  [27]
ebb entry:  28
  ebb type:   block
  ebb blocks: [28]
  ebb cost:   1
  ebb exits:  [29]
  ebb succs:  [29]
ebb entry:  29
  ebb type:   block
  ebb blocks: [29 30]
  ebb cost:   4
  ebb exits:  [31 45]
  ebb succs:  [31 45]
ebb entry:  31
  ebb type:   loop
  ebb blocks: [31 32]
  ebb cost:   (13 * (N([pn2], [pn2 + -1], [pn2 + -1], [pn2 + -1]))) + 1
  ebb exits:  [33]
  ebb succs:  [33]
  1 paths to exit 33
  [31 32]
  1 loop paths
  [31]
  1 post loop exit paths
  [32]
ebb entry:  33
  ebb type:   block
  ebb blocks: [33 34]
  ebb cost:   1
  ebb exits:  [35 45]
  ebb succs:  [35 45]
ebb entry:  35
  ebb type:   block
  ebb blocks: [35 36]
  ebb cost:   5
  ebb exits:  [37 40]
  ebb succs:  [37 40]
ebb entry:  37
  ebb type:   loop
  ebb blocks: [37 38]
  ebb cost:   (19 * (N([pn2], [(pn2 + -4) > 3], [pn2 + -4], [pn2 + -4]))) + 1
  ebb exits:  [39]
  ebb succs:  [39]
  1 paths to exit 39
  [37 38]
  1 loop paths
  [37]
  1 post loop exit paths
  [38]
ebb entry:  39
  ebb type:   block
  ebb blocks: [39]
  ebb cost:   1
  ebb exits:  [40]
  ebb succs:  [40]
ebb entry:  40
  ebb type:   block
  ebb blocks: [40 41]
  ebb cost:   4
  ebb exits:  [42 45]
  ebb succs:  [42 45]
ebb entry:  42
  ebb type:   loop
  ebb blocks: [42 43]
  ebb cost:   (17 * (N([pn2], [pn2 + -1], [pn2 + -1], [pn2 + -1]))) + 1
  ebb exits:  [44]
  ebb succs:  [44]
  1 paths to exit 44
  [42 43]
  1 loop paths
  [42]
  1 post loop exit paths
  [43]
ebb entry:  44
  ebb type:   block
  ebb blocks: [44]
  ebb cost:   1
  ebb exits:  [45]
  ebb succs:  [45]
ebb entry:  45
  ebb type:   block
  ebb blocks: [45 46]
  ebb cost:   1
  ebb exits:  [46]
  ebb succs:  []
ebb entry:  47
  ebb type:   block
  ebb blocks: [47]
  ebb cost:   0
  ebb exits:  []
  ebb succs:  []
ebb costs:
[0]: 37
[11]: ((22 * N([pn0], [((pn0 + 1) & 3)], [pn0], [(pn0 + 1)])) + 1)
[14]: 1
[16]: 10
[20]: ((19 * N([pn0; pn2], [((pn0 + (pn2 + -1)) & 3)], [pn0; pn2], [pn0; (pn2 + -1)])) + 1)
[23]: 1
[24]: 5
[26]: ((15 * N([pn2], [((pn2 + -4) > 3)], [(pn2 + -4)], [(pn2 + -4)])) + 1)
[28]: 1
[29]: 4
[31]: ((13 * N([pn2], [(pn2 + -1)], [(pn2 + -1)], [(pn2 + -1)])) + 1)
[33]: 1
[35]: 5
[37]: ((19 * N([pn2], [((pn2 + -4) > 3)], [(pn2 + -4)], [(pn2 + -4)])) + 1)
[39]: 1
[40]: 4
[42]: ((17 * N([pn2], [(pn2 + -1)], [(pn2 + -1)], [(pn2 + -1)])) + 1)
[44]: 1
[45]: 1
[47]: 0
75 ebb paths found
[0 47]
[0 45]
[0 40 45]
[0 40 42 44 45]
[0 35 40 45]
[0 35 40 42 44 45]
[0 35 37 39 40 45]
[0 35 37 39 40 42 44 45]
[0 16 29 45]
[0 16 29 31 33 45]
[0 16 29 31 33 35 40 45]
[0 16 29 31 33 35 40 42 44 45]
[0 16 29 31 33 35 37 39 40 45]
[0 16 29 31 33 35 37 39 40 42 44 45]
[0 16 24 29 45]
[0 16 24 29 31 33 45]
[0 16 24 29 31 33 35 40 45]
[0 16 24 29 31 33 35 40 42 44 45]
[0 16 24 29 31 33 35 37 39 40 45]
[0 16 24 29 31 33 35 37 39 40 42 44 45]
[0 16 24 26 28 29 45]
[0 16 24 26 28 29 31 33 45]
[0 16 24 26 28 29 31 33 35 40 45]
[0 16 24 26 28 29 31 33 35 40 42 44 45]
[0 16 24 26 28 29 31 33 35 37 39 40 45]
[0 16 24 26 28 29 31 33 35 37 39 40 42 44 45]
[0 16 20 45]
[0 16 20 23 24 29 45]
[0 16 20 23 24 29 31 33 45]
[0 16 20 23 24 29 31 33 35 40 45]
[0 16 20 23 24 29 31 33 35 40 42 44 45]
[0 16 20 23 24 29 31 33 35 37 39 40 45]
[0 16 20 23 24 29 31 33 35 37 39 40 42 44 45]
[0 16 20 23 24 26 28 29 45]
[0 16 20 23 24 26 28 29 31 33 45]
[0 16 20 23 24 26 28 29 31 33 35 40 45]
[0 16 20 23 24 26 28 29 31 33 35 40 42 44 45]
[0 16 20 23 24 26 28 29 31 33 35 37 39 40 45]
[0 16 20 23 24 26 28 29 31 33 35 37 39 40 42 44 45]
[0 11 45]
[0 11 14 35 40 45]
[0 11 14 35 40 42 44 45]
[0 11 14 35 37 39 40 45]
[0 11 14 35 37 39 40 42 44 45]
[0 11 14 16 29 45]
[0 11 14 16 29 31 33 45]
[0 11 14 16 29 31 33 35 40 45]
[0 11 14 16 29 31 33 35 40 42 44 45]
[0 11 14 16 29 31 33 35 37 39 40 45]
[0 11 14 16 29 31 33 35 37 39 40 42 44 45]
[0 11 14 16 24 29 45]
[0 11 14 16 24 29 31 33 45]
[0 11 14 16 24 29 31 33 35 40 45]
[0 11 14 16 24 29 31 33 35 40 42 44 45]
[0 11 14 16 24 29 31 33 35 37 39 40 45]
[0 11 14 16 24 29 31 33 35 37 39 40 42 44 45]
[0 11 14 16 24 26 28 29 45]
[0 11 14 16 24 26 28 29 31 33 45]
[0 11 14 16 24 26 28 29 31 33 35 40 45]
[0 11 14 16 24 26 28 29 31 33 35 40 42 44 45]
[0 11 14 16 24 26 28 29 31 33 35 37 39 40 45]
[0 11 14 16 24 26 28 29 31 33 35 37 39 40 42 44 45]
[0 11 14 16 20 45]
[0 11 14 16 20 23 24 29 45]
[0 11 14 16 20 23 24 29 31 33 45]
[0 11 14 16 20 23 24 29 31 33 35 40 45]
[0 11 14 16 20 23 24 29 31 33 35 40 42 44 45]
[0 11 14 16 20 23 24 29 31 33 35 37 39 40 45]
[0 11 14 16 20 23 24 29 31 33 35 37 39 40 42 44 45]
[0 11 14 16 20 23 24 26 28 29 45]
[0 11 14 16 20 23 24 26 28 29 31 33 45]
[0 11 14 16 20 23 24 26 28 29 31 33 35 40 45]
[0 11 14 16 20 23 24 26 28 29 31 33 35 40 42 44 45]
[0 11 14 16 20 23 24 26 28 29 31 33 35 37 39 40 45]
[0 11 14 16 20 23 24 26 28 29 31 33 35 37 39 40 42 44 45]
