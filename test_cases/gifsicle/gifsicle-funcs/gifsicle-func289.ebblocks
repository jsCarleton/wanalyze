ebb entry:  0
  ebb type:   block
  ebb blocks: [0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23]
  ebb cost:   99
  ebb exits:  [24 185 208]
  ebb succs:  [208 185 24]
ebb entry:  24
  ebb type:   loop
  ebb blocks: [24 25 26 27 28 29 30]
  ebb cost:   (list_max([
  28 * (N([pF1], [((pF1 - (f64.convert_i32_u(0))) * 1000000000.) != 0.], [(R(187, 58, f64, (gn0 - 560) + 44, 44)) + (R(187, 58, f64, (gn0 - 560) + 44, 44))], [(pF1 - (f64.convert_i32_u(0))) * 1000000000.]));
  29 * (N([pF1], [((pF1 - (f64.convert_i32_u(i32.trunc_f64_u(pF1)))) * 1000000000.) != 0.], [(R(187, 58, f64, (gn0 - 560) + 44, 44)) + (R(187, 58, f64, (gn0 - 560) + 44, 44))], [(pF1 - (f64.convert_i32_u(i32.trunc_f64_u(pF1)))) * 1000000000.]))
])) + (list_max(1, 1))
  ebb exits:  [31]
  ebb succs:  [31]
  2 paths to exit 31
  [24 25 28 29 30]
  [24 25 26 29 30]
  2 loop paths
  [24 25 28 29]  [24 25 26 29]
  2 post loop exit paths
  [30]  [30]
ebb entry:  31
  ebb type:   block
  ebb blocks: [31 32 33 34 35]
  ebb cost:   12
  ebb exits:  [36 51]
  ebb succs:  [51 36]
ebb entry:  36
  ebb type:   loop
  ebb blocks: [36 37 38 39 40 41 42 43 44 45 46 47 48 49]
  ebb cost:   (list_max([
  35 * (N([m[44]; pn3], [(m[44] - (select(pn3 < 29, 29, pn3))) > 0], [0; 0], [m[44] - (select(pn3 < 29, 29, pn3)); m[44] - (select(pn3 < 29, 29, pn3))]));
  43 * (N([m[44]; pn3], [(m[44] - (select(pn3 < 29, 29, pn3))) > 0], [0; 0], [m[44] - (select(pn3 < 29, 29, pn3)); m[44] - (select(pn3 < 29, 29, pn3))]));
  72 * (N([m[44]; pn3], [(m[44] - (select(pn3 < 29, 29, pn3))) > 0], [0; 0], [m[44] - (select(pn3 < 29, 29, pn3)); m[44] - (select(pn3 < 29, 29, pn3))]));
  80 * (N([m[44]; pn3], [(m[44] - (select(pn3 < 29, 29, pn3))) > 0], [0; 0], [m[44] - (select(pn3 < 29, 29, pn3)); m[44] - (select(pn3 < 29, 29, pn3))]));
  79 * (N([m[44]; pn3], [(m[44] - (select(pn3 < 29, 29, pn3))) > 0], [0; 0], [m[44] - (select(pn3 < 29, 29, pn3)); m[44] - (select(pn3 < 29, 29, pn3))]));
  87 * (N([m[44]; pn3], [(m[44] - (select(pn3 < 29, 29, pn3))) > 0], [0; 0], [m[44] - (select(pn3 < 29, 29, pn3)); m[44] - (select(pn3 < 29, 29, pn3))]))
])) + (list_max(1, 1, 1, 1, 1, 1))
  ebb exits:  [50]
  ebb succs:  []
  6 paths to exit 50
  [36 37 43 44 47 48 49]
  [36 37 43 44 45 46 47 48 49]
  [36 37 38 39 40 41 43 44 47 48 49]
  [36 37 38 39 40 41 43 44 45 46 47 48 49]
  [36 37 38 39 40 41 42 43 44 47 48 49]
  [36 37 38 39 40 41 42 43 44 45 46 47 48 49]
  6 loop paths
  [36 37 43 44 47 48]  [36 37 43 44 45 46 47 48]  [36 37 38 39 40 41 43 44 47 48]  [36 37 38 39 40 41 43 44 45 46 47 48]  [36 37 38 39 40 41 42 43 44 47 48]  [36 37 38 39 40 41 42 43 44 45 46 47 48]
  6 post loop exit paths
  [49]  [49]  [49]  [49]  [49]  [49]
nested ebbs:
  ebb entry:  36
    ebb type:   block
    ebb blocks: [36 37 38]
    ebb cost:   21
    ebb exits:  [39 43]
    ebb succs:  [39 39]
  ebb entry:  39
    ebb type:   loop
    ebb blocks: [39 40]
    ebb cost:   (25 * (N([ln6; ln7], [(ln6 + -4) >= ln7], [(((select(0 < 0, (gn0 - 560) + 336, (gn0 - 560) + 48)) + 4) + -4) + -4; select(0 < 0, (gn0 - 560) + 336, (gn0 - 560) + 48)], [ln6 + -4; ln7]))) + 1
    ebb exits:  [41]
    ebb succs:  [41 41]
    1 paths to exit 41
    [39 40]
    1 loop paths
    [39]
    1 post loop exit paths
    [40]
  ebb entry:  41
    ebb type:   block
    ebb blocks: [41 42 43]
    ebb cost:   13
    ebb exits:  [44]
    ebb succs:  [44 44]
  ebb entry:  44
    ebb type:   loop
    ebb blocks: [44 45 46 47]
    ebb cost:   (12 * (N([m[0]], [i32.eqz(m[0])], [0], [m[0]]))) + (list_max(1, 2))
    ebb exits:  [48]
    ebb succs:  [48 48]
    2 paths to exit 48
    [44 47]
    [44 45 46 47]
    1 loop paths
    [44 45]
    2 post loop exit paths
    [47]    [46 47]
  ebb entry:  48
    ebb type:   block
    ebb blocks: [48 49]
    ebb cost:   14
    ebb exits:  [36 50]
    ebb succs:  [50 36 36]
ebb entry:  50
  ebb type:   block
  ebb blocks: [50]
  ebb cost:   1
  ebb exits:  [51]
  ebb succs:  [51]
ebb entry:  51
  ebb type:   block
  ebb blocks: [51 52]
  ebb cost:   17
  ebb exits:  [53 65]
  ebb succs:  [65 53]
ebb entry:  53
  ebb type:   loop
  ebb blocks: [53 54 55 56 57 58 59 60 61 62 63]
  ebb cost:   (list_max([
  93 * (N([m[44]; pn3], [(m[44] + (select(pn3 < -9, 0 - pn3, 9))) < 0], [0 - (select(0 < 29, 29, 0)); 0 - (select(0 < 29, 29, 0))], [m[44] + (select(pn3 < -9, 0 - pn3, 9)); m[44] + (select(pn3 < -9, 0 - pn3, 9))]));
  101 * (N([m[44]; pn3], [(m[44] + (select(pn3 < -9, 0 - pn3, 9))) < 0], [0 - (select(0 < 29, 29, 0)); 0 - (select(0 < 29, 29, 0))], [m[44] + (select(pn3 < -9, 0 - pn3, 9)); m[44] + (select(pn3 < -9, 0 - pn3, 9))]));
  53 * (N([m[44]; pn3], [(m[44] + (select(pn3 < -9, 0 - pn3, 9))) < 0], [0 - (select(0 < 29, 29, 0)); 0 - (select(0 < 29, 29, 0))], [m[44] + (select(pn3 < -9, 0 - pn3, 9)); m[44] + (select(pn3 < -9, 0 - pn3, 9))]))
])) + (list_max(1, 1, 1))
  ebb exits:  [64]
  ebb succs:  []
  3 paths to exit 64
  [53 54 57 58 59 60 62 63]
  [53 54 57 58 59 60 61 62 63]
  [53 54 55 62 63]
  3 loop paths
  [53 54 57 58 59 60 62]  [53 54 57 58 59 60 61 62]  [53 54 55 62]
  3 post loop exit paths
  [63]  [63]  [63]
nested ebbs:
  ebb entry:  53
    ebb type:   block
    ebb blocks: [53 54 55 56 57]
    ebb cost:   29
    ebb exits:  [58 62]
    ebb succs:  [62 58 62 58]
  ebb entry:  58
    ebb type:   loop
    ebb blocks: [58 59]
    ebb cost:   (22 * (N([ln6; ln8], [(ln8 + 4) < ln6], [(select(0 < 0, (gn0 - 560) + 336, (gn0 - 560) + 48)) + 4; (select(0 < 0, (gn0 - 560) + 336, (gn0 - 560) + 48)) + 4], [ln6; ln8 + 4]))) + 1
    ebb exits:  [60]
    ebb succs:  [60 60]
    1 paths to exit 60
    [58 59]
    1 loop paths
    [58]
    1 post loop exit paths
    [59]
  ebb entry:  60
    ebb type:   block
    ebb blocks: [60 61]
    ebb cost:   19
    ebb exits:  [62]
    ebb succs:  [62 62]
  ebb entry:  62
    ebb type:   block
    ebb blocks: [62 63]
    ebb cost:   31
    ebb exits:  [53 64]
    ebb succs:  [64 53 53]
ebb entry:  64
  ebb type:   block
  ebb blocks: [64]
  ebb cost:   1
  ebb exits:  [65]
  ebb succs:  [65]
ebb entry:  65
  ebb type:   block
  ebb blocks: [65 66 67 68]
  ebb cost:   24
  ebb exits:  [69 72]
  ebb succs:  [72 69]
ebb entry:  69
  ebb type:   loop
  ebb blocks: [69 70]
  ebb cost:   (11 * (N([ln13; pn3], [ln13 >= (pn3 * 10)], [0; 10 * 10], [ln13; pn3 * 10]))) + 1
  ebb exits:  [71]
  ebb succs:  [71]
  1 paths to exit 71
  [69 70]
  1 loop paths
  [69]
  1 post loop exit paths
  [70]
ebb entry:  71
  ebb type:   block
  ebb blocks: [71]
  ebb cost:   1
  ebb exits:  [72]
  ebb succs:  [72]
ebb entry:  72
  ebb type:   block
  ebb blocks: [72 73 74]
  ebb cost:   65
  ebb exits:  [75 78 98]
  ebb succs:  [98 78 75]
ebb entry:  75
  ebb type:   loop
  ebb blocks: [75 76]
  ebb cost:   (11 * (N([ln13], [(ln13 + 1) != 8], [(((((((select(pn3 < 0, pn3, 6)) - (select((pn5 || 32) == 102, 0, 0))) - (((pn5 || 32) == 103) && ((select(pn3 < 0, pn3, 6)) != 0))) + 9216) /s 9) * -9) + ((((select(pn3 < 0, pn3, 6)) - (select((pn5 || 32) == 102, 0, 0))) - (((pn5 || 32) == 103) && ((select(pn3 < 0, pn3, 6)) != 0))) + 9216)) + 1], [ln13 + 1]))) + 1
  ebb exits:  [77]
  ebb succs:  [77]
  1 paths to exit 77
  [75 76]
  1 loop paths
  [75]
  1 post loop exit paths
  [76]
ebb entry:  77
  ebb type:   block
  ebb blocks: [77]
  ebb cost:   1
  ebb exits:  [78]
  ebb succs:  [78]
ebb entry:  78
  ebb type:   block
  ebb blocks: [78 79 80 81 82 83 84 85 86]
  ebb cost:   87
  ebb exits:  [87 92 97]
  ebb succs:  [97 92 87]
ebb entry:  87
  ebb type:   loop
  ebb blocks: [87 88 89 90]
  ebb cost:   (list_max([
  21 * (N([ln12], [(ln12 + 1) > 999999999], [(((((((select(pn3 < 0, pn3, 6)) - (select((pn5 || 32) == 102, 0, 0))) - (((pn5 || 32) == 103) && ((select(pn3 < 0, pn3, 6)) != 0))) + 9216) /s 9) shl 2) + (select(0 < 0, (gn0 - 560) + 340, ((gn0 - 560) + 48) || 4))) + -4096], [ln12 + -4]));
  28 * (N([ln7], [((ln7 + -4) + 1) > 999999999], [select(0 < 0, (gn0 - 560) + 336, (gn0 - 560) + 48)], [ln7 + -4]))
])) + (list_max(1, 1))
  ebb exits:  [91]
  ebb succs:  [91]
  2 paths to exit 91
  [87 89 90]
  [87 88 89 90]
  2 loop paths
  [87 89]  [87 88 89]
  2 post loop exit paths
  [90]  [90]
ebb entry:  91
  ebb type:   block
  ebb blocks: [91]
  ebb cost:   1
  ebb exits:  [92]
  ebb succs:  [92]
ebb entry:  92
  ebb type:   block
  ebb blocks: [92 93]
  ebb cost:   17
  ebb exits:  [94 97]
  ebb succs:  [97 94]
ebb entry:  94
  ebb type:   loop
  ebb blocks: [94 95]
  ebb cost:   (11 * (N([ln11; pn3], [ln11 >= (pn3 * 10)], [10 + (0 - (0 - ((0 /u 10) * 10))); 10 * 10], [ln11; pn3 * 10]))) + 1
  ebb exits:  [96]
  ebb succs:  [96]
  1 paths to exit 96
  [94 95]
  1 loop paths
  [94]
  1 post loop exit paths
  [95]
ebb entry:  96
  ebb type:   block
  ebb blocks: [96]
  ebb cost:   1
  ebb exits:  [97]
  ebb succs:  [97]
ebb entry:  97
  ebb type:   block
  ebb blocks: [97]
  ebb cost:   11
  ebb exits:  [98]
  ebb succs:  [98]
ebb entry:  98
  ebb type:   block
  ebb blocks: [98 99]
  ebb cost:   2
  ebb exits:  [100]
  ebb succs:  [100]
ebb entry:  100
  ebb type:   loop
  ebb blocks: [100 101 102]
  ebb cost:   (14 * (N([m[0]], [i32.eqz(m[0])], [0], [m[0]]))) + 1
  ebb exits:  [103 104]
  ebb succs:  [104 103]
  1 paths to exit 103
  [100 101 102]
  1 paths to exit 104
  [100]
  1 loop paths
  [100 101]
  1 post loop exit paths
  [102]
ebb entry:  103
  ebb type:   block
  ebb blocks: [103]
  ebb cost:   2
  ebb exits:  [104]
  ebb succs:  [104]
ebb entry:  104
  ebb type:   block
  ebb blocks: [104 105 106 107 108 109 110 111 112 113]
  ebb cost:   60
  ebb exits:  [114 117 121]
  ebb succs:  [121 117 114]
ebb entry:  114
  ebb type:   loop
  ebb blocks: [114 115]
  ebb cost:   (12 * (N([ln13; pn3], [i32.eqz(pn3 rem_u (ln13 * 10))], [0; pn3], [ln13 * 10; pn3]))) + 1
  ebb exits:  [116]
  ebb succs:  [116]
  1 paths to exit 116
  [114 115]
  1 loop paths
  [114]
  1 post loop exit paths
  [115]
ebb entry:  116
  ebb type:   block
  ebb blocks: [116]
  ebb cost:   1
  ebb exits:  [117]
  ebb succs:  [117]
ebb entry:  117
  ebb type:   block
  ebb blocks: [117 118 119 120]
  ebb cost:   37
  ebb exits:  [121]
  ebb succs:  [121]
ebb entry:  121
  ebb type:   block
  ebb blocks: [121 122 123 124]
  ebb cost:   43
  ebb exits:  [125 128 129]
  ebb succs:  [129 128 125]
ebb entry:  125
  ebb type:   loop
  ebb blocks: [125 126]
  ebb cost:   (12 * (N([ln16; ln6], [(ln16 - (ln6 + -1)) < 2], [0; 0], [ln16; ln6 + -1]))) + 1
  ebb exits:  [127]
  ebb succs:  [127]
  1 paths to exit 127
  [125 126]
  1 loop paths
  [125]
  1 post loop exit paths
  [126]
ebb entry:  127
  ebb type:   block
  ebb blocks: [127]
  ebb cost:   1
  ebb exits:  [128]
  ebb succs:  [128]
ebb entry:  128
  ebb type:   block
  ebb blocks: [128]
  ebb cost:   20
  ebb exits:  [129]
  ebb succs:  [129]
ebb entry:  129
  ebb type:   block
  ebb blocks: [129 130 131 132 133]
  ebb cost:   51
  ebb exits:  [134 160]
  ebb succs:  [160 134]
ebb entry:  134
  ebb type:   loop
  ebb blocks: [134 135 136 137 138 139 140 141 142 143 144 145]
  ebb cost:   (list_max([
  (27 + (list_sum(|f39|, |f78|))) * (N([ln14; ln7], [(ln7 + 4) <= ln14], [0; 0], [ln14; ln7 + 4]));
  (33 + (list_sum(|f39|, |f78|))) * (N([ln14; ln7], [(ln7 + 4) <= ln14], [0; 0], [ln14; ln7 + 4]));
  (29 + (list_sum(|f39|, |f78|))) * (N([ln14; ln7], [(ln7 + 4) <= ln14], [0; 0], [ln14; ln7 + 4]));
  (44 + (list_sum(|f39|, |f78|))) * (N([ln14; ln7], [(ln7 + 4) <= ln14], [0; 0], [ln14; ln7 + 4]))
])) + (list_max(1, 1, 1, 1))
  ebb exits:  [146]
  ebb succs:  []
  4 paths to exit 146
  [134 135 142 144 145]
  [134 135 142 143 144 145]
  [134 135 136 144 145]
  [134 135 136 137 138 139 140 144 145]
  4 loop paths
  [134 135 142 144]  [134 135 142 143 144]  [134 135 136 144]  [134 135 136 137 138 139 140 144]
  4 post loop exit paths
  [145]  [145]  [145]  [145]
nested ebbs:
  ebb entry:  134
    ebb type:   block
    ebb blocks: [134 135 136 137]
    ebb cost:   17
    ebb exits:  [138 142 144]
    ebb succs:  [144 142 138 144 142 138]
  ebb entry:  138
    ebb type:   loop
    ebb blocks: [138 139]
    ebb cost:   (12 * (N([ln6; ln9], [(ln6 + -1) > (ln9 + 16)], [0; 0], [ln6 + -1; ln9]))) + 1
    ebb exits:  [140]
    ebb succs:  [140 140]
    1 paths to exit 140
    [138 139]
    1 loop paths
    [138]
    1 post loop exit paths
    [139]
  ebb entry:  140
    ebb type:   block
    ebb blocks: [140 141]
    ebb cost:   1
    ebb exits:  [142 144]
    ebb succs:  [144 142 144 142]
  ebb entry:  142
    ebb type:   block
    ebb blocks: [142 143]
    ebb cost:   10
    ebb exits:  [144]
    ebb succs:  [144 144]
  ebb entry:  144
    ebb type:   block
    ebb blocks: [144 145]
    ebb cost:   14
    ebb exits:  [134 146]
    ebb succs:  [146 134 134]
ebb entry:  146
  ebb type:   block
  ebb blocks: [146 147 148 149]
  ebb cost:   16
  ebb exits:  [150 181]
  ebb succs:  [181 150]
ebb entry:  150
  ebb type:   loop
  ebb blocks: [150 151 152 153 154 155 156 157]
  ebb cost:   (list_max([
  (38 + (list_sum(|f39|, |f78|))) * (N([ln10], [ln10 > 9], [0], [ln10 + -9]));
  (53 + (list_sum(|f39|, |f78|))) * (N([ln10], [ln10 > 9], [0], [ln10 + -9]))
])) + (list_max(1, 1))
  ebb exits:  [158 182]
  ebb succs:  []
  2 paths to exit 158
  [150 155 156 157]
  [150 151 152 153 154 155 156 157]
  2 paths to exit 182
  [150 155]
  [150 151 152 153 154 155]
  2 loop paths
  [150 155 156]  [150 151 152 153 154 155 156]
  2 post loop exit paths
  [157]  [157]
nested ebbs:
  ebb entry:  150
    ebb type:   block
    ebb blocks: [150 151]
    ebb cost:   11
    ebb exits:  [152 155]
    ebb succs:  [155 152 155 152]
  ebb entry:  152
    ebb type:   loop
    ebb blocks: [152 153]
    ebb cost:   (12 * (N([ln6; ln9], [(ln6 + -1) > (ln9 + 16)], [0; 0], [ln6 + -1; ln9]))) + 1
    ebb exits:  [154]
    ebb succs:  [154 154]
    1 paths to exit 154
    [152 153]
    1 loop paths
    [152]
    1 post loop exit paths
    [153]
  ebb entry:  154
    ebb type:   block
    ebb blocks: [154]
    ebb cost:   1
    ebb exits:  [155]
    ebb succs:  [155 155]
  ebb entry:  155
    ebb type:   block
    ebb blocks: [155 156 157]
    ebb cost:   29
    ebb exits:  [150 158 182]
    ebb succs:  [182 158 150 150]
ebb entry:  158
  ebb type:   block
  ebb blocks: [158 159]
  ebb cost:   1
  ebb exits:  [160 182]
  ebb succs:  [182 160]
ebb entry:  160
  ebb type:   block
  ebb blocks: [160 161 162]
  ebb cost:   27
  ebb exits:  [163 179]
  ebb succs:  [179 163]
ebb entry:  163
  ebb type:   loop
  ebb blocks: [163 164 165 166 167 168 169 170 171 172 173 174 175 176 177]
  ebb cost:   (list_max([
  (56 + (list_sum(|f39|, |f78|))) * (N([ln10; ln11; m[0]], [(ln10 - (ln11 - ((R(78, 0, i32, ln11, m[0])) + 1))) > -1], [0; 0; m[0]], [ln10 - (ln11 - ((R(78, 4, i32, ln11, m[0])) + 1)); ln11; m[0]]));
  (61 + (list_sum(|f39|, |f78|))) * (N([ln10; ln11; m[0]], [(ln10 - (ln11 - ((R(78, 0, i32, ln11, m[0])) + 1))) > -1], [0; 0; m[0]], [ln10 - (ln11 - ((R(78, 4, i32, ln11, m[0])) + 1)); ln11; m[0]]));
  (46 + (list_sum(|f39|, |f78|))) * (N([ln10; ln11; m[0]], [(ln10 - (ln11 - (R(78, 0, i32, ln11, m[0])))) > -1], [0; 0; m[0]], [ln10 - (ln11 - (R(78, 4, i32, ln11, m[0]))); ln11; m[0]]));
  (61 + (list_sum(|f39|, |f78|))) * (N([ln10; ln11; m[0]], [(ln10 - (ln11 - ((R(78, 0, i32, ln11, m[0])) + -1))) > -1], [0; 0; m[0]], [ln10 - (ln11 - ((R(78, 4, i32, ln11, m[0])) + -1)); ln11; 48]));
  (62 + (list_sum(|f39|, |f78|))) * (N([ln10; ln11; pn3], [(ln10 - (ln11 - (pn3 + 1))) > -1], [0; 0; pn3], [ln10 - (ln11 - (pn3 + 1)); ln11; pn3]));
  (67 + (list_sum(|f39|, |f78|))) * (N([ln10; ln11; pn3], [(ln10 - (ln11 - (pn3 + 1))) > -1], [0; 0; pn3], [ln10 - (ln11 - (pn3 + 1)); ln11; pn3]));
  (52 + (list_sum(|f39|, |f78|))) * (N([ln10; ln11; pn3], [(ln10 - (ln11 - pn3)) > -1], [0; 0; pn3], [ln10 - (ln11 - pn3); ln11; pn3]));
  (67 + (list_sum(|f39|, |f78|))) * (N([ln10; ln11; pn3], [(ln10 - (ln11 - (pn3 + -1))) > -1], [0; 0; pn3], [ln10 - (ln11 - (pn3 + -1)); ln11; pn3]))
])) + (list_max(1, 1, 1, 1, 1, 1, 1, 1))
  ebb exits:  [178 179]
  ebb succs:  []
  8 paths to exit 178
  [163 165 166 173 175 176 177]
  [163 165 166 173 174 175 176 177]
  [163 165 166 167 175 176 177]
  [163 165 166 167 168 169 170 171 175 176 177]
  [163 164 165 166 173 175 176 177]
  [163 164 165 166 173 174 175 176 177]
  [163 164 165 166 167 175 176 177]
  [163 164 165 166 167 168 169 170 171 175 176 177]
  8 paths to exit 179
  [163 165 166 173 175]
  [163 165 166 173 174 175]
  [163 165 166 167 175]
  [163 165 166 167 168 169 170 171 175]
  [163 164 165 166 173 175]
  [163 164 165 166 173 174 175]
  [163 164 165 166 167 175]
  [163 164 165 166 167 168 169 170 171 175]
  8 loop paths
  [163 165 166 173 175 176]  [163 165 166 173 174 175 176]  [163 165 166 167 175 176]  [163 165 166 167 168 169 170 171 175 176]  [163 164 165 166 173 175 176]  [163 164 165 166 173 174 175 176]  [163 164 165 166 167 175 176]  [163 164 165 166 167 168 169 170 171 175 176]
  8 post loop exit paths
  [177]  [177]  [177]  [177]  [177]  [177]  [177]  [177]
nested ebbs:
  ebb entry:  163
    ebb type:   block
    ebb blocks: [163 164 165 166 167 168]
    ebb cost:   26
    ebb exits:  [169 173 175]
    ebb succs:  [175 173 169 175 173 169]
  ebb entry:  169
    ebb type:   loop
    ebb blocks: [169 170]
    ebb cost:   (12 * (N([ln6; ln9], [(ln6 + -1) > (ln9 + 16)], [0; 0], [ln6 + -1; ln9]))) + 1
    ebb exits:  [171]
    ebb succs:  [171 171]
    1 paths to exit 171
    [169 170]
    1 loop paths
    [169]
    1 post loop exit paths
    [170]
  ebb entry:  171
    ebb type:   block
    ebb blocks: [171 172]
    ebb cost:   1
    ebb exits:  [173 175]
    ebb succs:  [175 173 175 173]
  ebb entry:  173
    ebb type:   block
    ebb blocks: [173 174]
    ebb cost:   21
    ebb exits:  [175]
    ebb succs:  [175 175]
  ebb entry:  175
    ebb type:   block
    ebb blocks: [175 176 177]
    ebb cost:   28
    ebb exits:  [163 178 179]
    ebb succs:  [179 178 163 163]
ebb entry:  178
  ebb type:   block
  ebb blocks: [178]
  ebb cost:   1
  ebb exits:  [179]
  ebb succs:  [179]
ebb entry:  179
  ebb type:   block
  ebb blocks: [179 180]
  ebb cost:   15
  ebb exits:  [181 183]
  ebb succs:  [183 181]
ebb entry:  181
  ebb type:   block
  ebb blocks: [181]
  ebb cost:   3
  ebb exits:  [182]
  ebb succs:  [182]
ebb entry:  182
  ebb type:   block
  ebb blocks: [182]
  ebb cost:   9
  ebb exits:  [183]
  ebb succs:  [183]
ebb entry:  183
  ebb type:   block
  ebb blocks: [183 184]
  ebb cost:   1
  ebb exits:  [185 208]
  ebb succs:  [208 185]
ebb entry:  185
  ebb type:   block
  ebb blocks: [185 186 187 188]
  ebb cost:   24
  ebb exits:  [189 195]
  ebb succs:  [195 189]
ebb entry:  189
  ebb type:   loop
  ebb blocks: [189 190]
  ebb cost:   (9 * (N([ln6], [ln6 + -1], [0], [ln6 + -1]))) + 1
  ebb exits:  [191]
  ebb succs:  [191]
  1 paths to exit 191
  [189 190]
  1 loop paths
  [189]
  1 post loop exit paths
  [190]
ebb entry:  191
  ebb type:   block
  ebb blocks: [191 192 193 194]
  ebb cost:   14
  ebb exits:  [195]
  ebb succs:  [195]
ebb entry:  195
  ebb type:   block
  ebb blocks: [195 196 197]
  ebb cost:   56
  ebb exits:  [198]
  ebb succs:  [198]
ebb entry:  198
  ebb type:   loop
  ebb blocks: [198 199 200 201 202 203 204 205 206]
  ebb cost:   (list_max([
  51 * (N([pF1], [((pF1 - (f64.convert_i32_s(-2147483648))) * 16.) != 0.], [pF1], [(pF1 - (f64.convert_i32_s(-2147483648))) * 16.]));
  59 * (N([pF1], [((pF1 - (f64.convert_i32_s(-2147483648))) * 16.) != 0.], [pF1], [(pF1 - (f64.convert_i32_s(-2147483648))) * 16.]));
  52 * (N([pF1], [((pF1 - (f64.convert_i32_s(i32.trunc_f64_s(pF1)))) * 16.) != 0.], [pF1], [(pF1 - (f64.convert_i32_s(i32.trunc_f64_s(pF1)))) * 16.]));
  60 * (N([pF1], [((pF1 - (f64.convert_i32_s(i32.trunc_f64_s(pF1)))) * 16.) != 0.], [pF1], [(pF1 - (f64.convert_i32_s(i32.trunc_f64_s(pF1)))) * 16.]))
])) + (list_max(1, 1, 1, 1))
  ebb exits:  [207]
  ebb succs:  [207]
  4 paths to exit 207
  [198 199 202 203 205 206]
  [198 199 202 203 204 205 206]
  [198 199 200 203 205 206]
  [198 199 200 203 204 205 206]
  4 loop paths
  [198 199 202 203 205]  [198 199 202 203 204 205]  [198 199 200 203 205]  [198 199 200 203 204 205]
  4 post loop exit paths
  [206]  [206]  [206]  [206]
ebb entry:  207
  ebb type:   block
  ebb blocks: [207]
  ebb cost:   77
  ebb exits:  [208]
  ebb succs:  [208]
ebb entry:  208
  ebb type:   block
  ebb blocks: [208 209]
  ebb cost:   19
  ebb exits:  [209]
  ebb succs:  []
