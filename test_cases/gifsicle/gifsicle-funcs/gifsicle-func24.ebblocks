ebb entry:  0
  ebb type:   block
  ebb blocks: [0 1 2 3 4 5 6 7 8 9 10 11 12]
  ebb cost:   29
  ebb exits:  [13 17 30 47]
  ebb succs:  [13 17 30 47]
ebb entry:  13
  ebb type:   loop
  ebb blocks: [13 14 15]
  ebb cost:   (19 * (N([pn2], [(pn2 + 1) & 3], [pn0], [pn2 + 1]))) + 1
  ebb exits:  [16 17]
  ebb succs:  [16 17]
  1 paths to exit 16
  [13 14 15]
  1 paths to exit 17
  [13]
  1 loop paths
  [13 14]
  1 post loop exit paths
  [15]
ebb entry:  16
  ebb type:   block
  ebb blocks: [16]
  ebb cost:   1
  ebb exits:  [17]
  ebb succs:  [17]
ebb entry:  17
  ebb type:   block
  ebb blocks: [17 18 19 20]
  ebb cost:   16
  ebb exits:  [21 24]
  ebb succs:  [21 24]
ebb entry:  21
  ebb type:   loop
  ebb blocks: [21 22]
  ebb cost:   (75 * (N([ln5; pn2], [(pn2 - -64) <= ln5], [((pn0 + pn2) & -4) + -64; (pn0 + 1) - -64], [ln5; pn2 - -64]))) + 1
  ebb exits:  [23]
  ebb succs:  [23]
  1 paths to exit 23
  [21 22]
  1 loop paths
  [21]
  1 post loop exit paths
  [22]
ebb entry:  23
  ebb type:   block
  ebb blocks: [23]
  ebb cost:   1
  ebb exits:  [24]
  ebb succs:  [24]
ebb entry:  24
  ebb type:   block
  ebb blocks: [24 25]
  ebb cost:   5
  ebb exits:  [26 40]
  ebb succs:  [26 40]
ebb entry:  26
  ebb type:   loop
  ebb blocks: [26 27]
  ebb cost:   (15 * (N([ln4; pn2], [(pn2 + 4) < ln4], [(pn0 + pn2) & -4; (pn0 + 1) + 4], [ln4; pn2 + 4]))) + 1
  ebb exits:  [28]
  ebb succs:  [28]
  1 paths to exit 28
  [26 27]
  1 loop paths
  [26]
  1 post loop exit paths
  [27]
ebb entry:  28
  ebb type:   block
  ebb blocks: [28 29]
  ebb cost:   1
  ebb exits:  [30 40]
  ebb succs:  [30 40]
ebb entry:  30
  ebb type:   block
  ebb blocks: [30 31 32 33 34 35 36]
  ebb cost:   14
  ebb exits:  [37 40]
  ebb succs:  [37 40]
ebb entry:  37
  ebb type:   loop
  ebb blocks: [37 38]
  ebb cost:   (27 * (N([ln4; pn2], [(pn2 + 4) <= ln4], [(pn0 + pn2) + -4; pn0 + 4], [ln4; pn2 + 4]))) + 1
  ebb exits:  [39]
  ebb succs:  [39]
  1 paths to exit 39
  [37 38]
  1 loop paths
  [37]
  1 post loop exit paths
  [38]
ebb entry:  39
  ebb type:   block
  ebb blocks: [39]
  ebb cost:   1
  ebb exits:  [40]
  ebb succs:  [40]
ebb entry:  40
  ebb type:   block
  ebb blocks: [40 41]
  ebb cost:   5
  ebb exits:  [42 45]
  ebb succs:  [42 45]
ebb entry:  42
  ebb type:   loop
  ebb blocks: [42 43]
  ebb cost:   (15 * (N([ln3; pn2], [(pn2 + 1) != ln3], [pn0 + pn2; (pn0 + 4) + 1], [ln3; pn2 + 1]))) + 1
  ebb exits:  [44]
  ebb succs:  [44]
  1 paths to exit 44
  [42 43]
  1 loop paths
  [42]
  1 post loop exit paths
  [43]
ebb entry:  44
  ebb type:   block
  ebb blocks: [44]
  ebb cost:   1
  ebb exits:  [45]
  ebb succs:  [45]
ebb entry:  45
  ebb type:   block
  ebb blocks: [45 46]
  ebb cost:   2
  ebb exits:  [46]
  ebb succs:  []
ebb entry:  47
  ebb type:   block
  ebb blocks: [47]
  ebb cost:   0
  ebb exits:  []
  ebb succs:  []
ebb costs:
[0]: 29
[13]: ((19 * N([pn2], [((pn2 + 1) & 3)], [pn0], [(pn2 + 1)])) + 1)
[16]: 1
[17]: 16
[21]: ((75 * N([ln5; pn2], [((pn2 - -64) <= ln5)], [(((pn0 + pn2) & -4) + -64); ((pn0 + 1) - -64)], [ln5; (pn2 - -64)])) + 1)
[23]: 1
[24]: 5
[26]: ((15 * N([ln4; pn2], [((pn2 + 4) < ln4)], [((pn0 + pn2) & -4); ((pn0 + 1) + 4)], [ln4; (pn2 + 4)])) + 1)
[28]: 1
[30]: 14
[37]: ((27 * N([ln4; pn2], [((pn2 + 4) <= ln4)], [((pn0 + pn2) + -4); (pn0 + 4)], [ln4; (pn2 + 4)])) + 1)
[39]: 1
[40]: 5
[42]: ((15 * N([ln3; pn2], [((pn2 + 1) != ln3)], [(pn0 + pn2); ((pn0 + 4) + 1)], [ln3; (pn2 + 1)])) + 1)
[44]: 1
[45]: 2
[47]: 0
53 ebb paths found
[0 47]
[0 30 40 45]
[0 30 40 42 44 45]
[0 30 37 39 40 45]
[0 30 37 39 40 42 44 45]
[0 17 24 40 45]
[0 17 24 40 42 44 45]
[0 17 24 26 28 40 45]
[0 17 24 26 28 40 42 44 45]
[0 17 24 26 28 30 40 45]
[0 17 24 26 28 30 40 42 44 45]
[0 17 24 26 28 30 37 39 40 45]
[0 17 24 26 28 30 37 39 40 42 44 45]
[0 17 21 23 24 40 45]
[0 17 21 23 24 40 42 44 45]
[0 17 21 23 24 26 28 40 45]
[0 17 21 23 24 26 28 40 42 44 45]
[0 17 21 23 24 26 28 30 40 45]
[0 17 21 23 24 26 28 30 40 42 44 45]
[0 17 21 23 24 26 28 30 37 39 40 45]
[0 17 21 23 24 26 28 30 37 39 40 42 44 45]
[0 13 17 24 40 45]
[0 13 17 24 40 42 44 45]
[0 13 17 24 26 28 40 45]
[0 13 17 24 26 28 40 42 44 45]
[0 13 17 24 26 28 30 40 45]
[0 13 17 24 26 28 30 40 42 44 45]
[0 13 17 24 26 28 30 37 39 40 45]
[0 13 17 24 26 28 30 37 39 40 42 44 45]
[0 13 17 21 23 24 40 45]
[0 13 17 21 23 24 40 42 44 45]
[0 13 17 21 23 24 26 28 40 45]
[0 13 17 21 23 24 26 28 40 42 44 45]
[0 13 17 21 23 24 26 28 30 40 45]
[0 13 17 21 23 24 26 28 30 40 42 44 45]
[0 13 17 21 23 24 26 28 30 37 39 40 45]
[0 13 17 21 23 24 26 28 30 37 39 40 42 44 45]
[0 13 16 17 24 40 45]
[0 13 16 17 24 40 42 44 45]
[0 13 16 17 24 26 28 40 45]
[0 13 16 17 24 26 28 40 42 44 45]
[0 13 16 17 24 26 28 30 40 45]
[0 13 16 17 24 26 28 30 40 42 44 45]
[0 13 16 17 24 26 28 30 37 39 40 45]
[0 13 16 17 24 26 28 30 37 39 40 42 44 45]
[0 13 16 17 21 23 24 40 45]
[0 13 16 17 21 23 24 40 42 44 45]
[0 13 16 17 21 23 24 26 28 40 45]
[0 13 16 17 21 23 24 26 28 40 42 44 45]
[0 13 16 17 21 23 24 26 28 30 40 45]
[0 13 16 17 21 23 24 26 28 30 40 42 44 45]
[0 13 16 17 21 23 24 26 28 30 37 39 40 45]
[0 13 16 17 21 23 24 26 28 30 37 39 40 42 44 45]
