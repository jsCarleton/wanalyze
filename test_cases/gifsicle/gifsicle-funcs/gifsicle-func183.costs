|f183| = list_max([
  134;
  list_sum([
    294;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    288;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    280;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    274;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    293;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    287;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    279;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    273;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    293;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    287;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    279;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    273;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    290;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    284;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    276;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    270;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    289;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    283;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    275;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    269;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    289;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    283;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    275;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    269;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    255;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    249;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    241;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    235;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    254;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    248;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    240;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    234;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    254;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    248;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    240;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    234;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    290;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    284;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    276;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    270;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    289;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    283;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    275;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    269;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    289;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    283;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    275;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    269;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    286;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    280;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    272;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    266;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    285;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    279;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    271;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    265;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    285;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    279;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    271;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    265;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    251;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    245;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    237;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    231;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    250;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    244;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    236;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    230;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    250;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    244;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    236;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    230;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    281;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    275;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    267;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    261;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    280;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    274;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    266;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    260;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    280;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    274;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    266;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    260;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    277;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    271;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    263;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    257;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    276;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    270;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    262;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    256;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    276;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    270;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    262;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    256;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    227;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    221;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    213;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    207;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    205;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    199;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    156;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    214;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    208;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    200;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    194;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    285;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    279;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    271;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    265;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    284;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    278;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    270;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    264;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    284;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    278;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    270;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    264;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    281;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    275;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    267;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    261;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    280;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    274;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    266;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    260;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    280;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    274;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    266;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    260;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    246;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    240;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    232;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    226;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    245;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    239;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    231;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    225;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    245;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    239;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    231;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    225;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    281;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    275;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    267;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    261;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    280;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    274;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    266;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    260;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    280;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    274;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    266;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    260;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    277;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    271;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    263;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    257;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    276;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    270;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    262;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    256;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    276;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    270;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    262;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    256;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    242;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    236;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    228;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    222;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    241;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    235;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    227;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    221;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    241;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    235;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    227;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    221;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    272;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    266;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    258;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    252;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    271;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    265;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    257;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    251;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    271;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    265;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    257;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    251;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    268;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    262;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    254;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    248;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    267;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    261;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    253;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    247;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    267;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    261;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    253;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    247;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    218;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    212;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    204;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    198;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    196;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    190;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    285;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    279;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    271;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    265;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    284;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    278;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    270;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    264;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    284;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    278;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    270;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    264;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    281;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    275;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    267;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    261;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    280;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    274;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    266;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    260;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    280;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    274;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    266;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    260;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    246;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    240;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    232;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    226;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    245;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    239;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    231;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    225;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    245;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    239;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    231;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    225;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    281;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    275;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    267;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    261;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    280;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    274;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    266;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    260;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    280;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    274;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    266;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    260;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    277;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    271;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    263;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    257;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    276;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    270;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    262;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    256;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    276;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    270;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    262;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    256;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    242;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    236;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    228;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    222;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    241;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    235;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    227;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    221;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    241;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    235;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    227;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    221;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    272;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    266;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    258;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    252;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    271;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    265;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    257;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    251;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    271;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    265;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    257;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    251;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    268;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    262;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    254;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    248;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    267;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    261;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    253;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    247;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    267;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    261;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    253;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    247;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    218;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    212;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    204;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    198;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    196;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    190;
    (list_max([
      37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]));
      (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    290;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    284;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    276;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    270;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    289;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    283;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    275;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    269;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    289;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    283;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    275;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    269;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    286;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    280;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    272;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    266;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    285;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    279;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    271;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    265;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    285;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    279;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    271;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    265;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    251;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    245;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    237;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    231;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    250;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    244;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    236;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    230;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    250;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    244;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    236;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    230;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    286;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    280;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    272;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    266;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    285;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    279;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    271;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    265;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    285;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    279;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    271;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    265;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    282;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    276;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    268;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    262;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    281;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    275;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    267;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    261;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    281;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    275;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    267;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    261;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    247;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    241;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    233;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    227;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    246;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    240;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    232;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    226;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    246;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    240;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    232;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    226;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    277;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    271;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    263;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    257;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    276;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    270;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    262;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    256;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    276;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    270;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    262;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    256;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    273;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    267;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    259;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    253;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    272;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    266;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    258;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    252;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    272;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    266;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    258;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    252;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    223;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    217;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    209;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    203;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    201;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    195;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    152;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    210;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    204;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    196;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    190;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    281;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    275;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    267;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    261;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    280;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    274;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    266;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    260;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    280;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    274;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    266;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    260;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    277;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    271;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    263;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    257;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    276;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    270;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    262;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    256;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    276;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    270;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    262;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    256;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    242;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    236;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    228;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    222;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    241;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    235;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    227;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    221;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    241;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    235;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    227;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    221;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    277;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    271;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    263;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    257;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    276;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    270;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    262;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    256;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    276;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    270;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    262;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    256;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    273;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    267;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    259;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    253;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    272;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    266;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    258;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    252;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    272;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    266;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    258;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    252;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    238;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    232;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    224;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    218;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    237;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    231;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    223;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    217;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    237;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    231;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    223;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    217;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    268;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    262;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    254;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    248;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    267;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    261;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    253;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    247;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    267;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    261;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    253;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    247;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    264;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    258;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    250;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    244;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    263;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    257;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    249;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    243;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    263;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    257;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    249;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    243;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    214;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    208;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    200;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    194;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    192;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    186;
    (list_max([
      41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]));
      (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    281;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    275;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    267;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    261;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    280;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    274;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    266;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    260;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    280;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    274;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    266;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    260;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    277;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    271;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    263;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    257;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    276;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    270;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    262;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    256;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    276;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    270;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    262;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    256;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    242;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    236;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    228;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    222;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    241;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    235;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    227;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    221;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    241;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    235;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    227;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    221;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    277;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    271;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    263;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    257;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    276;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    270;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    262;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    256;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    276;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    270;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    262;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    256;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    273;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    267;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    259;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    253;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    272;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    266;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    258;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    252;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    272;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    266;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    258;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    252;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    238;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    232;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    224;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    218;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    237;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    231;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    223;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    217;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    237;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    231;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    223;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    217;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    268;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    262;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    254;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    248;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    267;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    261;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    253;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    247;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    267;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    261;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    253;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    247;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    264;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    258;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    250;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    244;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    263;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    257;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    249;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    243;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    263;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    257;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    249;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    243;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    214;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    208;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    200;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    194;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    192;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    186;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    262;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    256;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    248;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    242;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    261;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    255;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    247;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    241;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    261;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    255;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    247;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    241;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    258;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    252;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    244;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    238;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    257;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    251;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    243;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    237;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    257;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    251;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    243;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    237;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    223;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    217;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    209;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    203;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    222;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    216;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    208;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    202;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    222;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    216;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    208;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    202;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    258;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    252;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    244;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    238;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    257;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    251;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    243;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    237;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    257;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    251;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    243;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    237;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    254;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    248;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    240;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    234;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    253;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    247;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    239;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    233;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    253;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    247;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    239;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    233;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    219;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    213;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    205;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    199;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    218;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    212;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    204;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    198;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    218;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    212;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    204;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    198;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    249;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    243;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    235;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    229;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    248;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    242;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    234;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    228;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    248;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    242;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    234;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    228;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    245;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    239;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    231;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    225;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    244;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    238;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    230;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    224;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    244;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    238;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    230;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    224;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    137;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    131;
    (list_max([
      (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]));
      (14 + (list_sum(|f53|, |f31|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]))
    ])) + 1
  ]);
  list_sum([
    166;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1
  ]);
  list_sum([
    160;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1
  ]);
  list_sum([
    152;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1
  ]);
  list_sum([
    146;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1
  ]);
  list_sum([
    165;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1
  ]);
  list_sum([
    159;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1
  ]);
  list_sum([
    151;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1
  ]);
  list_sum([
    145;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1
  ]);
  list_sum([
    165;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1
  ]);
  list_sum([
    159;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1
  ]);
  list_sum([
    151;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1
  ]);
  list_sum([
    145;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1
  ]);
  list_sum([
    162;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1
  ]);
  list_sum([
    156;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1
  ]);
  list_sum([
    148;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1
  ]);
  list_sum([
    142;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1
  ]);
  list_sum([
    161;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1
  ]);
  list_sum([
    155;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1
  ]);
  list_sum([
    147;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1
  ]);
  list_sum([
    141;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1
  ]);
  list_sum([
    161;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1
  ]);
  list_sum([
    155;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1
  ]);
  list_sum([
    147;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1
  ]);
  list_sum([
    141;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1
  ]);
  list_sum([
    127;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1
  ]);
  list_sum([
    121;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1
  ]);
  list_sum([
    113;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1
  ]);
  list_sum([
    107;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1
  ]);
  list_sum([
    126;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1
  ]);
  list_sum([
    120;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1
  ]);
  list_sum([
    112;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1
  ]);
  list_sum([
    106;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1
  ]);
  list_sum([
    126;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1
  ]);
  list_sum([
    120;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1
  ]);
  list_sum([
    112;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1
  ]);
  list_sum([
    106;
    (list_max([
      34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
    ])) + 1
  ]);
  list_sum([
    162;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1
  ]);
  list_sum([
    156;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1
  ]);
  list_sum([
    148;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1
  ]);
  list_sum([
    142;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1
  ]);
  list_sum([
    161;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1
  ]);
  list_sum([
    155;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1
  ]);
  list_sum([
    147;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1
  ]);
  list_sum([
    141;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1
  ]);
  list_sum([
    161;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1
  ]);
  list_sum([
    155;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1
  ]);
  list_sum([
    147;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1
  ]);
  list_sum([
    141;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1
  ]);
  list_sum([
    158;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1
  ]);
  list_sum([
    152;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1
  ]);
  list_sum([
    144;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1
  ]);
  list_sum([
    138;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1
  ]);
  list_sum([
    157;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1
  ]);
  list_sum([
    151;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1
  ]);
  list_sum([
    143;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1
  ]);
  list_sum([
    137;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1
  ]);
  list_sum([
    157;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1
  ]);
  list_sum([
    151;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1
  ]);
  list_sum([
    143;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1
  ]);
  list_sum([
    137;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1
  ]);
  list_sum([
    123;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1
  ]);
  list_sum([
    117;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1
  ]);
  list_sum([
    109;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1
  ]);
  list_sum([
    103;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1
  ]);
  list_sum([
    122;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1
  ]);
  list_sum([
    116;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1
  ]);
  list_sum([
    108;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1
  ]);
  list_sum([
    102;
    (list_max([
      (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
      (44 + (list_sum(|f58|, |f31|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
    ])) + 1
  ]);
  list_sum([
    122;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1
  ]);
  list_sum([
    116;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1
  ]);
  list_sum([
    153;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1
  ]);
  list_sum([
    147;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1
  ]);
  list_sum([
    139;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1
  ]);
  list_sum([
    133;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1
  ]);
  list_sum([
    152;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1
  ]);
  list_sum([
    146;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1
  ]);
  list_sum([
    138;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1
  ]);
  list_sum([
    132;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1
  ]);
  list_sum([
    152;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1
  ]);
  list_sum([
    146;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1
  ]);
  list_sum([
    138;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1
  ]);
  list_sum([
    132;
    (list_max([
      34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
      (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 | (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 | (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
    ])) + 1
  ]);
  list_sum([
    149;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1
  ]);
  list_sum([
    143;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1
  ]);
  list_sum([
    135;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1
  ]);
  list_sum([
    129;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1
  ]);
  list_sum([
    148;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1
  ]);
  list_sum([
    142;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1
  ]);
  list_sum([
    134;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1
  ]);
  list_sum([
    128;
    (list_max([
      38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1
  ]);
  list_sum([
    148;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1
  ]);
  list_sum([
    142;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1
  ]);
  list_sum([
    99;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1
  ]);
  list_sum([
    93;
    (list_max([
      22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
      (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
    ])) + 1
  ])
])
