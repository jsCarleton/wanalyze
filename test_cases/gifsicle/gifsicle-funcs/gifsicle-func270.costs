ebb costs:
[0]: 36
[9]: ((44 * N([ln2; ln9], [((ln9 + 1024) + (((ln2 && 255) shr_u 3) && 28))], [0; (gn0 - 1056)], [((ln5 + 1) || (1 shl (ln2 && 31))); ln9])) + 1)
[12]: 9
[14]: 5
[17]: (list_max((35 * N([ln4; ln5], [((1 + (ln4 + 1)) < ln5)], [0; (0 + 1)], [(ln4 + 1); ln5])), (34 * N([ln3; ln5], [((1 + ln3) < ln5)], [1; (0 + 1)], [(1 + ln3); ln5])), (30 * N([ln2; ln4; ln5], [(((ln2 + 1) + ln4) < ln5)], [1; 0; (0 + 1)], [(ln2 + 1); ln4; ln5])), (32 * N([ln4; ln5; ln8], [((1 + (ln4 + ln8)) < ln5)], [0; (0 + 1); 1], [(ln4 + ln8); ln5; ln8]))) + list_max(1, 1, 1, 1))
[30]: 11
[31]: (list_max((35 * N([ln4; ln5], [((1 + (ln4 + 1)) < ln5)], [0; (0 + 1)], [(ln4 + 1); ln5])), (34 * N([ln3; ln5], [((1 + ln3) < ln5)], [1; (0 + 1)], [(1 + ln3); ln5])), (30 * N([ln2; ln4; ln5], [(((ln2 + 1) + ln4) < ln5)], [1; 0; (0 + 1)], [(ln2 + 1); ln4; ln5])), (32 * N([ln4; ln5; ln7], [((1 + (ln4 + ln7)) < ln5)], [0; (0 + 1); 1], [(ln4 + ln7); ln5; ln7]))) + list_max(1, 1, 1, 1))
[44]: 3
[45]: 59
[51]: (list_max((41 * N([m[0]], [not(i32.eqz(((m[0] shr_u (m[0] && 31)) && 1)))], [((0 + 1) || (1 shl (0 && 31)))], [m[0]])), (86 * N([m[0]], [not((m[0] == m[0]))], [((0 + 1) || (1 shl (0 && 31)))], [m[0]])), (80 * N([m[0]], [not((m[0] != (m[0] && 255)))], [((0 + 1) || (1 shl (0 && 31)))], [m[0]])), (107 * N([m[0]], [not((m[0] == m[0]))], [((0 + 1) || (1 shl (0 && 31)))], [m[0]])), (65 * N([ln5; m[0]], [(ln5 - m[0])], [(0 + 1); ((0 + 1) || (1 shl (0 && 31)))], [ln5; m[0]])), ((52 + |f106|) * N([m[0]], [not(i32.eqz(((m[0] shr_u (m[0] && 31)) && 1)))], [((0 + 1) || (1 shl (0 && 31)))], [m[0]])), ((97 + |f106|) * N([m[0]], [not((m[0] == m[0]))], [((0 + 1) || (1 shl (0 && 31)))], [m[0]])), ((91 + |f106|) * N([m[0]], [not((m[0] != (m[0] && 255)))], [((0 + 1) || (1 shl (0 && 31)))], [m[0]])), ((118 + |f106|) * N([m[0]], [not((m[0] == m[0]))], [((0 + 1) || (1 shl (0 && 31)))], [m[0]])), ((76 + |f106|) * N([ln5; m[0]], [(ln5 - m[0])], [(0 + 1); ((0 + 1) || (1 shl (0 && 31)))], [ln5; m[0]])), ((55 + |f106|) * N([m[0]], [not(i32.eqz(((m[0] shr_u (m[0] && 31)) && 1)))], [((0 + 1) || (1 shl (0 && 31)))], [m[0]])), ((100 + |f106|) * N([m[0]], [not((m[0] == m[0]))], [((0 + 1) || (1 shl (0 && 31)))], [m[0]])), ((94 + |f106|) * N([m[0]], [not((m[0] != (m[0] && 255)))], [((0 + 1) || (1 shl (0 && 31)))], [m[0]])), ((121 + |f106|) * N([m[0]], [not((m[0] == m[0]))], [((0 + 1) || (1 shl (0 && 31)))], [m[0]])), ((79 + |f106|) * N([ln5; m[0]], [(ln5 - m[0])], [(0 + 1); ((0 + 1) || (1 shl (0 && 31)))], [ln5; m[0]]))) + Empty)
[51]: 72
[67]: ((18 * N([m[0]], [m[0]], [((0 + 1) || (1 shl (0 && 31)))], [m[0]])) + 1)
[70]: 2
[72]: ((17 * N([m[0]], [(m[0] == m[0])], [((0 + 1) || (1 shl (0 && 31)))], [m[0]])) + 1)
[75]: 4
[77]: 4
[78]: 3
[79]: 6
[82]: 1
[84]: 3
[85]: 6
[87]: 0
25 ebb paths found
[0 14 45 51 84 85]
[0 14 45 51 78 79 87]
[0 14 45 51 67 77 78 79 87]
[0 14 45 51 67 70 72 85]
[0 14 45 51 67 70 72 75 79 87]
[0 14 45 51 67 70 72 75 77 78 79 87]
[0 14 17 30 31 44 45 51 84 85]
[0 14 17 30 31 44 45 51 78 79 87]
[0 14 17 30 31 44 45 51 67 77 78 79 87]
[0 14 17 30 31 44 45 51 67 70 72 85]
[0 14 17 30 31 44 45 51 67 70 72 75 79 87]
[0 14 17 30 31 44 45 51 67 70 72 75 77 78 79 87]
[0 9 84 85]
[0 9 12 14 45 51 84 85]
[0 9 12 14 45 51 78 79 87]
[0 9 12 14 45 51 67 77 78 79 87]
[0 9 12 14 45 51 67 70 72 85]
[0 9 12 14 45 51 67 70 72 75 79 87]
[0 9 12 14 45 51 67 70 72 75 77 78 79 87]
[0 9 12 14 17 30 31 44 45 51 84 85]
[0 9 12 14 17 30 31 44 45 51 78 79 87]
[0 9 12 14 17 30 31 44 45 51 67 77 78 79 87]
[0 9 12 14 17 30 31 44 45 51 67 70 72 85]
[0 9 12 14 17 30 31 44 45 51 67 70 72 75 79 87]
[0 9 12 14 17 30 31 44 45 51 67 70 72 75 77 78 79 87]
|f270| = list_max([
  list_sum(36, 5, 59, 72, 3, 6);
  list_sum(36, 5, 59, 72, 3, 6, 0);
  list_sum([
    36;
    5;
    59;
    72;
    (18 * (N([m[0]], [m[0]], [(0 + 1) || (1 shl (0 && 31))], [m[0]]))) + 1;
    4;
    3;
    6;
    0
  ]);
  list_sum([
    36;
    5;
    59;
    72;
    (18 * (N([m[0]], [m[0]], [(0 + 1) || (1 shl (0 && 31))], [m[0]]))) + 1;
    2;
    (17 * (N([m[0]], [m[0] == m[0]], [(0 + 1) || (1 shl (0 && 31))], [m[0]]))) + 1;
    6
  ]);
  list_sum([
    36;
    5;
    59;
    72;
    (18 * (N([m[0]], [m[0]], [(0 + 1) || (1 shl (0 && 31))], [m[0]]))) + 1;
    2;
    (17 * (N([m[0]], [m[0] == m[0]], [(0 + 1) || (1 shl (0 && 31))], [m[0]]))) + 1;
    4;
    6;
    0
  ]);
  list_sum([
    36;
    5;
    59;
    72;
    (18 * (N([m[0]], [m[0]], [(0 + 1) || (1 shl (0 && 31))], [m[0]]))) + 1;
    2;
    (17 * (N([m[0]], [m[0] == m[0]], [(0 + 1) || (1 shl (0 && 31))], [m[0]]))) + 1;
    4;
    4;
    3;
    6;
    0
  ]);
  list_sum([
    36;
    5;
    (list_max([
      35 * (N([ln4; ln5], [(1 + (ln4 + 1)) < ln5], [0; 0 + 1], [ln4 + 1; ln5]));
      34 * (N([ln3; ln5], [(1 + ln3) < ln5], [1; 0 + 1], [1 + ln3; ln5]));
      30 * (N([ln2; ln4; ln5], [((ln2 + 1) + ln4) < ln5], [1; 0; 0 + 1], [ln2 + 1; ln4; ln5]));
      32 * (N([ln4; ln5; ln8], [(1 + (ln4 + ln8)) < ln5], [0; 0 + 1; 1], [ln4 + ln8; ln5; ln8]))
    ])) + (list_max(1, 1, 1, 1));
    11;
    (list_max([
      35 * (N([ln4; ln5], [(1 + (ln4 + 1)) < ln5], [0; 0 + 1], [ln4 + 1; ln5]));
      34 * (N([ln3; ln5], [(1 + ln3) < ln5], [1; 0 + 1], [1 + ln3; ln5]));
      30 * (N([ln2; ln4; ln5], [((ln2 + 1) + ln4) < ln5], [1; 0; 0 + 1], [ln2 + 1; ln4; ln5]));
      32 * (N([ln4; ln5; ln7], [(1 + (ln4 + ln7)) < ln5], [0; 0 + 1; 1], [ln4 + ln7; ln5; ln7]))
    ])) + (list_max(1, 1, 1, 1));
    3;
    59;
    72;
    3;
    6
  ]);
  list_sum([
    36;
    5;
    (list_max([
      35 * (N([ln4; ln5], [(1 + (ln4 + 1)) < ln5], [0; 0 + 1], [ln4 + 1; ln5]));
      34 * (N([ln3; ln5], [(1 + ln3) < ln5], [1; 0 + 1], [1 + ln3; ln5]));
      30 * (N([ln2; ln4; ln5], [((ln2 + 1) + ln4) < ln5], [1; 0; 0 + 1], [ln2 + 1; ln4; ln5]));
      32 * (N([ln4; ln5; ln8], [(1 + (ln4 + ln8)) < ln5], [0; 0 + 1; 1], [ln4 + ln8; ln5; ln8]))
    ])) + (list_max(1, 1, 1, 1));
    11;
    (list_max([
      35 * (N([ln4; ln5], [(1 + (ln4 + 1)) < ln5], [0; 0 + 1], [ln4 + 1; ln5]));
      34 * (N([ln3; ln5], [(1 + ln3) < ln5], [1; 0 + 1], [1 + ln3; ln5]));
      30 * (N([ln2; ln4; ln5], [((ln2 + 1) + ln4) < ln5], [1; 0; 0 + 1], [ln2 + 1; ln4; ln5]));
      32 * (N([ln4; ln5; ln7], [(1 + (ln4 + ln7)) < ln5], [0; 0 + 1; 1], [ln4 + ln7; ln5; ln7]))
    ])) + (list_max(1, 1, 1, 1));
    3;
    59;
    72;
    3;
    6;
    0
  ]);
  list_sum([
    36;
    5;
    (list_max([
      35 * (N([ln4; ln5], [(1 + (ln4 + 1)) < ln5], [0; 0 + 1], [ln4 + 1; ln5]));
      34 * (N([ln3; ln5], [(1 + ln3) < ln5], [1; 0 + 1], [1 + ln3; ln5]));
      30 * (N([ln2; ln4; ln5], [((ln2 + 1) + ln4) < ln5], [1; 0; 0 + 1], [ln2 + 1; ln4; ln5]));
      32 * (N([ln4; ln5; ln8], [(1 + (ln4 + ln8)) < ln5], [0; 0 + 1; 1], [ln4 + ln8; ln5; ln8]))
    ])) + (list_max(1, 1, 1, 1));
    11;
    (list_max([
      35 * (N([ln4; ln5], [(1 + (ln4 + 1)) < ln5], [0; 0 + 1], [ln4 + 1; ln5]));
      34 * (N([ln3; ln5], [(1 + ln3) < ln5], [1; 0 + 1], [1 + ln3; ln5]));
      30 * (N([ln2; ln4; ln5], [((ln2 + 1) + ln4) < ln5], [1; 0; 0 + 1], [ln2 + 1; ln4; ln5]));
      32 * (N([ln4; ln5; ln7], [(1 + (ln4 + ln7)) < ln5], [0; 0 + 1; 1], [ln4 + ln7; ln5; ln7]))
    ])) + (list_max(1, 1, 1, 1));
    3;
    59;
    72;
    (18 * (N([m[0]], [m[0]], [(0 + 1) || (1 shl (0 && 31))], [m[0]]))) + 1;
    4;
    3;
    6;
    0
  ]);
  list_sum([
    36;
    5;
    (list_max([
      35 * (N([ln4; ln5], [(1 + (ln4 + 1)) < ln5], [0; 0 + 1], [ln4 + 1; ln5]));
      34 * (N([ln3; ln5], [(1 + ln3) < ln5], [1; 0 + 1], [1 + ln3; ln5]));
      30 * (N([ln2; ln4; ln5], [((ln2 + 1) + ln4) < ln5], [1; 0; 0 + 1], [ln2 + 1; ln4; ln5]));
      32 * (N([ln4; ln5; ln8], [(1 + (ln4 + ln8)) < ln5], [0; 0 + 1; 1], [ln4 + ln8; ln5; ln8]))
    ])) + (list_max(1, 1, 1, 1));
    11;
    (list_max([
      35 * (N([ln4; ln5], [(1 + (ln4 + 1)) < ln5], [0; 0 + 1], [ln4 + 1; ln5]));
      34 * (N([ln3; ln5], [(1 + ln3) < ln5], [1; 0 + 1], [1 + ln3; ln5]));
      30 * (N([ln2; ln4; ln5], [((ln2 + 1) + ln4) < ln5], [1; 0; 0 + 1], [ln2 + 1; ln4; ln5]));
      32 * (N([ln4; ln5; ln7], [(1 + (ln4 + ln7)) < ln5], [0; 0 + 1; 1], [ln4 + ln7; ln5; ln7]))
    ])) + (list_max(1, 1, 1, 1));
    3;
    59;
    72;
    (18 * (N([m[0]], [m[0]], [(0 + 1) || (1 shl (0 && 31))], [m[0]]))) + 1;
    2;
    (17 * (N([m[0]], [m[0] == m[0]], [(0 + 1) || (1 shl (0 && 31))], [m[0]]))) + 1;
    6
  ]);
  list_sum([
    36;
    5;
    (list_max([
      35 * (N([ln4; ln5], [(1 + (ln4 + 1)) < ln5], [0; 0 + 1], [ln4 + 1; ln5]));
      34 * (N([ln3; ln5], [(1 + ln3) < ln5], [1; 0 + 1], [1 + ln3; ln5]));
      30 * (N([ln2; ln4; ln5], [((ln2 + 1) + ln4) < ln5], [1; 0; 0 + 1], [ln2 + 1; ln4; ln5]));
      32 * (N([ln4; ln5; ln8], [(1 + (ln4 + ln8)) < ln5], [0; 0 + 1; 1], [ln4 + ln8; ln5; ln8]))
    ])) + (list_max(1, 1, 1, 1));
    11;
    (list_max([
      35 * (N([ln4; ln5], [(1 + (ln4 + 1)) < ln5], [0; 0 + 1], [ln4 + 1; ln5]));
      34 * (N([ln3; ln5], [(1 + ln3) < ln5], [1; 0 + 1], [1 + ln3; ln5]));
      30 * (N([ln2; ln4; ln5], [((ln2 + 1) + ln4) < ln5], [1; 0; 0 + 1], [ln2 + 1; ln4; ln5]));
      32 * (N([ln4; ln5; ln7], [(1 + (ln4 + ln7)) < ln5], [0; 0 + 1; 1], [ln4 + ln7; ln5; ln7]))
    ])) + (list_max(1, 1, 1, 1));
    3;
    59;
    72;
    (18 * (N([m[0]], [m[0]], [(0 + 1) || (1 shl (0 && 31))], [m[0]]))) + 1;
    2;
    (17 * (N([m[0]], [m[0] == m[0]], [(0 + 1) || (1 shl (0 && 31))], [m[0]]))) + 1;
    4;
    6;
    0
  ]);
  list_sum([
    36;
    5;
    (list_max([
      35 * (N([ln4; ln5], [(1 + (ln4 + 1)) < ln5], [0; 0 + 1], [ln4 + 1; ln5]));
      34 * (N([ln3; ln5], [(1 + ln3) < ln5], [1; 0 + 1], [1 + ln3; ln5]));
      30 * (N([ln2; ln4; ln5], [((ln2 + 1) + ln4) < ln5], [1; 0; 0 + 1], [ln2 + 1; ln4; ln5]));
      32 * (N([ln4; ln5; ln8], [(1 + (ln4 + ln8)) < ln5], [0; 0 + 1; 1], [ln4 + ln8; ln5; ln8]))
    ])) + (list_max(1, 1, 1, 1));
    11;
    (list_max([
      35 * (N([ln4; ln5], [(1 + (ln4 + 1)) < ln5], [0; 0 + 1], [ln4 + 1; ln5]));
      34 * (N([ln3; ln5], [(1 + ln3) < ln5], [1; 0 + 1], [1 + ln3; ln5]));
      30 * (N([ln2; ln4; ln5], [((ln2 + 1) + ln4) < ln5], [1; 0; 0 + 1], [ln2 + 1; ln4; ln5]));
      32 * (N([ln4; ln5; ln7], [(1 + (ln4 + ln7)) < ln5], [0; 0 + 1; 1], [ln4 + ln7; ln5; ln7]))
    ])) + (list_max(1, 1, 1, 1));
    3;
    59;
    72;
    (18 * (N([m[0]], [m[0]], [(0 + 1) || (1 shl (0 && 31))], [m[0]]))) + 1;
    2;
    (17 * (N([m[0]], [m[0] == m[0]], [(0 + 1) || (1 shl (0 && 31))], [m[0]]))) + 1;
    4;
    4;
    3;
    6;
    0
  ]);
  list_sum([
    36;
    (44 * (N([ln2; ln9], [(ln9 + 1024) + (((ln2 && 255) shr_u 3) && 28)], [0; gn0 - 1056], [(ln5 + 1) || (1 shl (ln2 && 31)); ln9]))) + 1;
    3;
    6
  ]);
  list_sum([
    36;
    (44 * (N([ln2; ln9], [(ln9 + 1024) + (((ln2 && 255) shr_u 3) && 28)], [0; gn0 - 1056], [(ln5 + 1) || (1 shl (ln2 && 31)); ln9]))) + 1;
    9;
    5;
    59;
    72;
    3;
    6
  ]);
  list_sum([
    36;
    (44 * (N([ln2; ln9], [(ln9 + 1024) + (((ln2 && 255) shr_u 3) && 28)], [0; gn0 - 1056], [(ln5 + 1) || (1 shl (ln2 && 31)); ln9]))) + 1;
    9;
    5;
    59;
    72;
    3;
    6;
    0
  ]);
  list_sum([
    36;
    (44 * (N([ln2; ln9], [(ln9 + 1024) + (((ln2 && 255) shr_u 3) && 28)], [0; gn0 - 1056], [(ln5 + 1) || (1 shl (ln2 && 31)); ln9]))) + 1;
    9;
    5;
    59;
    72;
    (18 * (N([m[0]], [m[0]], [(0 + 1) || (1 shl (0 && 31))], [m[0]]))) + 1;
    4;
    3;
    6;
    0
  ]);
  list_sum([
    36;
    (44 * (N([ln2; ln9], [(ln9 + 1024) + (((ln2 && 255) shr_u 3) && 28)], [0; gn0 - 1056], [(ln5 + 1) || (1 shl (ln2 && 31)); ln9]))) + 1;
    9;
    5;
    59;
    72;
    (18 * (N([m[0]], [m[0]], [(0 + 1) || (1 shl (0 && 31))], [m[0]]))) + 1;
    2;
    (17 * (N([m[0]], [m[0] == m[0]], [(0 + 1) || (1 shl (0 && 31))], [m[0]]))) + 1;
    6
  ]);
  list_sum([
    36;
    (44 * (N([ln2; ln9], [(ln9 + 1024) + (((ln2 && 255) shr_u 3) && 28)], [0; gn0 - 1056], [(ln5 + 1) || (1 shl (ln2 && 31)); ln9]))) + 1;
    9;
    5;
    59;
    72;
    (18 * (N([m[0]], [m[0]], [(0 + 1) || (1 shl (0 && 31))], [m[0]]))) + 1;
    2;
    (17 * (N([m[0]], [m[0] == m[0]], [(0 + 1) || (1 shl (0 && 31))], [m[0]]))) + 1;
    4;
    6;
    0
  ]);
  list_sum([
    36;
    (44 * (N([ln2; ln9], [(ln9 + 1024) + (((ln2 && 255) shr_u 3) && 28)], [0; gn0 - 1056], [(ln5 + 1) || (1 shl (ln2 && 31)); ln9]))) + 1;
    9;
    5;
    59;
    72;
    (18 * (N([m[0]], [m[0]], [(0 + 1) || (1 shl (0 && 31))], [m[0]]))) + 1;
    2;
    (17 * (N([m[0]], [m[0] == m[0]], [(0 + 1) || (1 shl (0 && 31))], [m[0]]))) + 1;
    4;
    4;
    3;
    6;
    0
  ]);
  list_sum([
    36;
    (44 * (N([ln2; ln9], [(ln9 + 1024) + (((ln2 && 255) shr_u 3) && 28)], [0; gn0 - 1056], [(ln5 + 1) || (1 shl (ln2 && 31)); ln9]))) + 1;
    9;
    5;
    (list_max([
      35 * (N([ln4; ln5], [(1 + (ln4 + 1)) < ln5], [0; 0 + 1], [ln4 + 1; ln5]));
      34 * (N([ln3; ln5], [(1 + ln3) < ln5], [1; 0 + 1], [1 + ln3; ln5]));
      30 * (N([ln2; ln4; ln5], [((ln2 + 1) + ln4) < ln5], [1; 0; 0 + 1], [ln2 + 1; ln4; ln5]));
      32 * (N([ln4; ln5; ln8], [(1 + (ln4 + ln8)) < ln5], [0; 0 + 1; 1], [ln4 + ln8; ln5; ln8]))
    ])) + (list_max(1, 1, 1, 1));
    11;
    (list_max([
      35 * (N([ln4; ln5], [(1 + (ln4 + 1)) < ln5], [0; 0 + 1], [ln4 + 1; ln5]));
      34 * (N([ln3; ln5], [(1 + ln3) < ln5], [1; 0 + 1], [1 + ln3; ln5]));
      30 * (N([ln2; ln4; ln5], [((ln2 + 1) + ln4) < ln5], [1; 0; 0 + 1], [ln2 + 1; ln4; ln5]));
      32 * (N([ln4; ln5; ln7], [(1 + (ln4 + ln7)) < ln5], [0; 0 + 1; 1], [ln4 + ln7; ln5; ln7]))
    ])) + (list_max(1, 1, 1, 1));
    3;
    59;
    72;
    3;
    6
  ]);
  list_sum([
    36;
    (44 * (N([ln2; ln9], [(ln9 + 1024) + (((ln2 && 255) shr_u 3) && 28)], [0; gn0 - 1056], [(ln5 + 1) || (1 shl (ln2 && 31)); ln9]))) + 1;
    9;
    5;
    (list_max([
      35 * (N([ln4; ln5], [(1 + (ln4 + 1)) < ln5], [0; 0 + 1], [ln4 + 1; ln5]));
      34 * (N([ln3; ln5], [(1 + ln3) < ln5], [1; 0 + 1], [1 + ln3; ln5]));
      30 * (N([ln2; ln4; ln5], [((ln2 + 1) + ln4) < ln5], [1; 0; 0 + 1], [ln2 + 1; ln4; ln5]));
      32 * (N([ln4; ln5; ln8], [(1 + (ln4 + ln8)) < ln5], [0; 0 + 1; 1], [ln4 + ln8; ln5; ln8]))
    ])) + (list_max(1, 1, 1, 1));
    11;
    (list_max([
      35 * (N([ln4; ln5], [(1 + (ln4 + 1)) < ln5], [0; 0 + 1], [ln4 + 1; ln5]));
      34 * (N([ln3; ln5], [(1 + ln3) < ln5], [1; 0 + 1], [1 + ln3; ln5]));
      30 * (N([ln2; ln4; ln5], [((ln2 + 1) + ln4) < ln5], [1; 0; 0 + 1], [ln2 + 1; ln4; ln5]));
      32 * (N([ln4; ln5; ln7], [(1 + (ln4 + ln7)) < ln5], [0; 0 + 1; 1], [ln4 + ln7; ln5; ln7]))
    ])) + (list_max(1, 1, 1, 1));
    3;
    59;
    72;
    3;
    6;
    0
  ]);
  list_sum([
    36;
    (44 * (N([ln2; ln9], [(ln9 + 1024) + (((ln2 && 255) shr_u 3) && 28)], [0; gn0 - 1056], [(ln5 + 1) || (1 shl (ln2 && 31)); ln9]))) + 1;
    9;
    5;
    (list_max([
      35 * (N([ln4; ln5], [(1 + (ln4 + 1)) < ln5], [0; 0 + 1], [ln4 + 1; ln5]));
      34 * (N([ln3; ln5], [(1 + ln3) < ln5], [1; 0 + 1], [1 + ln3; ln5]));
      30 * (N([ln2; ln4; ln5], [((ln2 + 1) + ln4) < ln5], [1; 0; 0 + 1], [ln2 + 1; ln4; ln5]));
      32 * (N([ln4; ln5; ln8], [(1 + (ln4 + ln8)) < ln5], [0; 0 + 1; 1], [ln4 + ln8; ln5; ln8]))
    ])) + (list_max(1, 1, 1, 1));
    11;
    (list_max([
      35 * (N([ln4; ln5], [(1 + (ln4 + 1)) < ln5], [0; 0 + 1], [ln4 + 1; ln5]));
      34 * (N([ln3; ln5], [(1 + ln3) < ln5], [1; 0 + 1], [1 + ln3; ln5]));
      30 * (N([ln2; ln4; ln5], [((ln2 + 1) + ln4) < ln5], [1; 0; 0 + 1], [ln2 + 1; ln4; ln5]));
      32 * (N([ln4; ln5; ln7], [(1 + (ln4 + ln7)) < ln5], [0; 0 + 1; 1], [ln4 + ln7; ln5; ln7]))
    ])) + (list_max(1, 1, 1, 1));
    3;
    59;
    72;
    (18 * (N([m[0]], [m[0]], [(0 + 1) || (1 shl (0 && 31))], [m[0]]))) + 1;
    4;
    3;
    6;
    0
  ]);
  list_sum([
    36;
    (44 * (N([ln2; ln9], [(ln9 + 1024) + (((ln2 && 255) shr_u 3) && 28)], [0; gn0 - 1056], [(ln5 + 1) || (1 shl (ln2 && 31)); ln9]))) + 1;
    9;
    5;
    (list_max([
      35 * (N([ln4; ln5], [(1 + (ln4 + 1)) < ln5], [0; 0 + 1], [ln4 + 1; ln5]));
      34 * (N([ln3; ln5], [(1 + ln3) < ln5], [1; 0 + 1], [1 + ln3; ln5]));
      30 * (N([ln2; ln4; ln5], [((ln2 + 1) + ln4) < ln5], [1; 0; 0 + 1], [ln2 + 1; ln4; ln5]));
      32 * (N([ln4; ln5; ln8], [(1 + (ln4 + ln8)) < ln5], [0; 0 + 1; 1], [ln4 + ln8; ln5; ln8]))
    ])) + (list_max(1, 1, 1, 1));
    11;
    (list_max([
      35 * (N([ln4; ln5], [(1 + (ln4 + 1)) < ln5], [0; 0 + 1], [ln4 + 1; ln5]));
      34 * (N([ln3; ln5], [(1 + ln3) < ln5], [1; 0 + 1], [1 + ln3; ln5]));
      30 * (N([ln2; ln4; ln5], [((ln2 + 1) + ln4) < ln5], [1; 0; 0 + 1], [ln2 + 1; ln4; ln5]));
      32 * (N([ln4; ln5; ln7], [(1 + (ln4 + ln7)) < ln5], [0; 0 + 1; 1], [ln4 + ln7; ln5; ln7]))
    ])) + (list_max(1, 1, 1, 1));
    3;
    59;
    72;
    (18 * (N([m[0]], [m[0]], [(0 + 1) || (1 shl (0 && 31))], [m[0]]))) + 1;
    2;
    (17 * (N([m[0]], [m[0] == m[0]], [(0 + 1) || (1 shl (0 && 31))], [m[0]]))) + 1;
    6
  ]);
  list_sum([
    36;
    (44 * (N([ln2; ln9], [(ln9 + 1024) + (((ln2 && 255) shr_u 3) && 28)], [0; gn0 - 1056], [(ln5 + 1) || (1 shl (ln2 && 31)); ln9]))) + 1;
    9;
    5;
    (list_max([
      35 * (N([ln4; ln5], [(1 + (ln4 + 1)) < ln5], [0; 0 + 1], [ln4 + 1; ln5]));
      34 * (N([ln3; ln5], [(1 + ln3) < ln5], [1; 0 + 1], [1 + ln3; ln5]));
      30 * (N([ln2; ln4; ln5], [((ln2 + 1) + ln4) < ln5], [1; 0; 0 + 1], [ln2 + 1; ln4; ln5]));
      32 * (N([ln4; ln5; ln8], [(1 + (ln4 + ln8)) < ln5], [0; 0 + 1; 1], [ln4 + ln8; ln5; ln8]))
    ])) + (list_max(1, 1, 1, 1));
    11;
    (list_max([
      35 * (N([ln4; ln5], [(1 + (ln4 + 1)) < ln5], [0; 0 + 1], [ln4 + 1; ln5]));
      34 * (N([ln3; ln5], [(1 + ln3) < ln5], [1; 0 + 1], [1 + ln3; ln5]));
      30 * (N([ln2; ln4; ln5], [((ln2 + 1) + ln4) < ln5], [1; 0; 0 + 1], [ln2 + 1; ln4; ln5]));
      32 * (N([ln4; ln5; ln7], [(1 + (ln4 + ln7)) < ln5], [0; 0 + 1; 1], [ln4 + ln7; ln5; ln7]))
    ])) + (list_max(1, 1, 1, 1));
    3;
    59;
    72;
    (18 * (N([m[0]], [m[0]], [(0 + 1) || (1 shl (0 && 31))], [m[0]]))) + 1;
    2;
    (17 * (N([m[0]], [m[0] == m[0]], [(0 + 1) || (1 shl (0 && 31))], [m[0]]))) + 1;
    4;
    6;
    0
  ]);
  list_sum([
    36;
    (44 * (N([ln2; ln9], [(ln9 + 1024) + (((ln2 && 255) shr_u 3) && 28)], [0; gn0 - 1056], [(ln5 + 1) || (1 shl (ln2 && 31)); ln9]))) + 1;
    9;
    5;
    (list_max([
      35 * (N([ln4; ln5], [(1 + (ln4 + 1)) < ln5], [0; 0 + 1], [ln4 + 1; ln5]));
      34 * (N([ln3; ln5], [(1 + ln3) < ln5], [1; 0 + 1], [1 + ln3; ln5]));
      30 * (N([ln2; ln4; ln5], [((ln2 + 1) + ln4) < ln5], [1; 0; 0 + 1], [ln2 + 1; ln4; ln5]));
      32 * (N([ln4; ln5; ln8], [(1 + (ln4 + ln8)) < ln5], [0; 0 + 1; 1], [ln4 + ln8; ln5; ln8]))
    ])) + (list_max(1, 1, 1, 1));
    11;
    (list_max([
      35 * (N([ln4; ln5], [(1 + (ln4 + 1)) < ln5], [0; 0 + 1], [ln4 + 1; ln5]));
      34 * (N([ln3; ln5], [(1 + ln3) < ln5], [1; 0 + 1], [1 + ln3; ln5]));
      30 * (N([ln2; ln4; ln5], [((ln2 + 1) + ln4) < ln5], [1; 0; 0 + 1], [ln2 + 1; ln4; ln5]));
      32 * (N([ln4; ln5; ln7], [(1 + (ln4 + ln7)) < ln5], [0; 0 + 1; 1], [ln4 + ln7; ln5; ln7]))
    ])) + (list_max(1, 1, 1, 1));
    3;
    59;
    72;
    (18 * (N([m[0]], [m[0]], [(0 + 1) || (1 shl (0 && 31))], [m[0]]))) + 1;
    2;
    (17 * (N([m[0]], [m[0] == m[0]], [(0 + 1) || (1 shl (0 && 31))], [m[0]]))) + 1;
    4;
    4;
    3;
    6;
    0
  ])
])
