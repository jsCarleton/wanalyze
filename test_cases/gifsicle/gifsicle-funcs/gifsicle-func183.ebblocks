ebb entry:  0
  ebb type:   block
  ebb blocks: [0 1 2 3 4 5 6 7]
  ebb cost:   16
  ebb exits:  [8 75]
  ebb succs:  [75 8]
ebb entry:  8
  ebb type:   loop
  ebb blocks: [8 9 10 11 12 13 14]
  ebb cost:   (list_max([
  (14 + (list_sum(|f31|, |f53|))) * (N([pn0], [R(53, 0, i32, R(31, 0, i32, pn0))], [pn0], [pn0]));
  (19 + |f53|) * (N([m[0]], [R(53, 0, i32, m[0])], [m[0]], [m[0]]))
])) + (list_max(1, 1))
  ebb exits:  [15]
  ebb succs:  [15]
  2 paths to exit 15
  [8 9 12 13 14]
  [8 9 10 13 14]
  2 loop paths
  [8 9 12 13]  [8 9 10 13]
  2 post loop exit paths
  [14]  [14]
ebb entry:  15
  ebb type:   block
  ebb blocks: [15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54]
  ebb cost:   109
  ebb exits:  [55 63 80 147 148]
  ebb succs:  [148 147 80 63 55]
ebb entry:  55
  ebb type:   loop
  ebb blocks: [55 56 57 58 59 60 61]
  ebb cost:   (list_max([
  (32 + |f31|) * (N([pn0; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, ((R(31, 0, i32, pn0)) + -48) <= 9)], [pn0; 0; (R(31, 24, i32, pn0)) + -48], [pn0; pn2 + (pn1 * 10); (R(31, 11, i32, pn0)) + -48]));
  37 * (N([m[0]; pn1; pn2], [select((pn2 + (pn1 * 10)) < 429496729, 0, (m[0] + -48) <= 9)], [m[0]; 0; (R(31, 24, i32, pn0)) + -48], [m[0]; pn2 + (pn1 * 10); m[0] + -48]))
])) + (list_max(1, 1))
  ebb exits:  [62]
  ebb succs:  [62]
  2 paths to exit 62
  [55 56 59 60 61]
  [55 56 57 60 61]
  2 loop paths
  [55 56 59 60]  [55 56 57 60]
  2 post loop exit paths
  [61]  [61]
ebb entry:  62
  ebb type:   block
  ebb blocks: [62]
  ebb cost:   4
  ebb exits:  [63]
  ebb succs:  [63]
ebb entry:  63
  ebb type:   block
  ebb blocks: [63 64]
  ebb cost:   12
  ebb exits:  [65 77]
  ebb succs:  [77 65]
ebb entry:  65
  ebb type:   loop
  ebb blocks: [65 66 67 68 69 70 71 72]
  ebb cost:   (list_max([
  (36 + |f31|) * (N([lN10; lN11; pn0], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u((R(31, 0, i32, pn0)) + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); pn0], [(lN10 + lN11) * 10; i64.extend_i32_u((R(31, 7, i32, pn0)) + -48); pn0]));
  41 * (N([lN10; lN11; m[0]], [((lN10 + lN11) * 10) <= ((i64.extend_i32_u(m[0] + -48)) xor -1)], [0 * 10; i64.extend_i32_u((R(31, 24, i32, pn0)) + -48); m[0]], [(lN10 + lN11) * 10; i64.extend_i32_u(m[0] + -48); m[0]]))
])) + (list_max(1, 1))
  ebb exits:  [73 77]
  ebb succs:  [77 73]
  2 paths to exit 73
  [65 66 69 70 71 72]
  [65 66 67 70 71 72]
  2 paths to exit 77
  [65 66 69 70]
  [65 66 67 70]
  2 loop paths
  [65 66 69 70 71]  [65 66 67 70 71]
  2 post loop exit paths
  [72]  [72]
ebb entry:  73
  ebb type:   block
  ebb blocks: [73 74]
  ebb cost:   3
  ebb exits:  [75 125]
  ebb succs:  [125 75]
ebb entry:  75
  ebb type:   block
  ebb blocks: [75 76]
  ebb cost:   6
  ebb exits:  [77 148]
  ebb succs:  [148 77]
ebb entry:  77
  ebb type:   block
  ebb blocks: [77 78 79]
  ebb cost:   7
  ebb exits:  [80 125 135]
  ebb succs:  [135 125 80]
ebb entry:  80
  ebb type:   block
  ebb blocks: [80 81 82]
  ebb cost:   15
  ebb exits:  [83 91 104]
  ebb succs:  [104 91 83]
ebb entry:  83
  ebb type:   loop
  ebb blocks: [83 84 85 86 87 88 89]
  ebb cost:   (list_max([
  (29 + |f31|) * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]));
  34 * (N([ln5; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 + (pn1 * ln5)) <= 119304646)], [0; m[0]; select(pn1, 10, pn1); m[0]], [pn2 + (pn1 * ln5); m[0]; pn1; m[0]]))
])) + (list_max(1, 1))
  ebb exits:  [90]
  ebb succs:  [90]
  2 paths to exit 90
  [83 84 87 88 89]
  [83 84 85 88 89]
  2 loop paths
  [83 84 87 88]  [83 84 85 88]
  2 post loop exit paths
  [89]  [89]
ebb entry:  90
  ebb type:   block
  ebb blocks: [90]
  ebb cost:   4
  ebb exits:  [91]
  ebb succs:  [91]
ebb entry:  91
  ebb type:   block
  ebb blocks: [91 92]
  ebb cost:   8
  ebb exits:  [93 125]
  ebb succs:  [125 93]
ebb entry:  93
  ebb type:   loop
  ebb blocks: [93 94 95 96 97 98 99 100 101]
  ebb cost:   (list_max([
  (44 + (list_sum(|f31|, |f58|))) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]));
  (49 + |f58|) * (N([m[8]], [i64.eqz(m[8])], [m[8]], [m[8]]))
])) + (list_max(1, 1))
  ebb exits:  [102 125]
  ebb succs:  [125 102]
  2 paths to exit 102
  [93 94 95 98 99 100 101]
  [93 94 95 96 99 100 101]
  3 paths to exit 125
  [93 94 95 98 99]
  [93 94 95 96 99]
  [93]
  2 loop paths
  [93 94 95 98 99 100]  [93 94 95 96 99 100]
  2 post loop exit paths
  [101]  [101]
ebb entry:  102
  ebb type:   block
  ebb blocks: [102 103]
  ebb cost:   1
  ebb exits:  [104 125]
  ebb succs:  [125 104]
ebb entry:  104
  ebb type:   block
  ebb blocks: [104 105]
  ebb cost:   20
  ebb exits:  [106 114]
  ebb succs:  [114 106]
ebb entry:  106
  ebb type:   loop
  ebb blocks: [106 107 108 109 110 111 112]
  ebb cost:   (list_max([
  (29 + |f31|) * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 || (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 || (ln5 shl ln8); ln8; m[0]; pn1; m[0]]));
  34 * (N([ln5; ln8; m[0]; pn1; pn2], [select(pn1 > m[0], 0, (pn2 || (ln5 shl ln8)) <= 134217727)], [0; m[0]; m[0]; select(pn1, 10, pn1); m[0]], [pn2 || (ln5 shl ln8); ln8; m[0]; pn1; m[0]]))
])) + (list_max(1, 1))
  ebb exits:  [113]
  ebb succs:  [113]
  2 paths to exit 113
  [106 107 110 111 112]
  [106 107 108 111 112]
  2 loop paths
  [106 107 110 111]  [106 107 108 111]
  2 post loop exit paths
  [112]  [112]
ebb entry:  113
  ebb type:   block
  ebb blocks: [113]
  ebb cost:   4
  ebb exits:  [114]
  ebb succs:  [114]
ebb entry:  114
  ebb type:   block
  ebb blocks: [114 115]
  ebb cost:   14
  ebb exits:  [116 125]
  ebb succs:  [125 116]
ebb entry:  116
  ebb type:   loop
  ebb blocks: [116 117 118 119 120 121 122 123]
  ebb cost:   (list_max([
  (33 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
  38 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
])) + (list_max(1, 1))
  ebb exits:  [124 125]
  ebb succs:  [125 124]
  2 paths to exit 124
  [116 117 120 121 122 123]
  [116 117 118 121 122 123]
  2 paths to exit 125
  [116 117 120 121]
  [116 117 118 121]
  2 loop paths
  [116 117 120 121 122]  [116 117 118 121 122]
  2 post loop exit paths
  [123]  [123]
ebb entry:  124
  ebb type:   block
  ebb blocks: [124]
  ebb cost:   1
  ebb exits:  [125]
  ebb succs:  [125]
ebb entry:  125
  ebb type:   block
  ebb blocks: [125 126]
  ebb cost:   8
  ebb exits:  [127 135]
  ebb succs:  [135 127]
ebb entry:  127
  ebb type:   loop
  ebb blocks: [127 128 129 130 131 132 133]
  ebb cost:   (list_max([
  (17 + |f31|) * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]));
  22 * (N([m[0]; pn1], [pn1 > m[0]], [m[0]; select(pn1, 10, pn1)], [m[0]; pn1]))
])) + (list_max(1, 1))
  ebb exits:  [134]
  ebb succs:  [134]
  2 paths to exit 134
  [127 128 131 132 133]
  [127 128 129 132 133]
  2 loop paths
  [127 128 131 132]  [127 128 129 132]
  2 post loop exit paths
  [133]  [133]
ebb entry:  134
  ebb type:   block
  ebb blocks: [134]
  ebb cost:   14
  ebb exits:  [135]
  ebb succs:  [135]
ebb entry:  135
  ebb type:   block
  ebb blocks: [135 136 137 138 139 140 141 142 143 144 145 146]
  ebb cost:   36
  ebb exits:  [147 148]
  ebb succs:  [148 147]
ebb entry:  147
  ebb type:   block
  ebb blocks: [147]
  ebb cost:   6
  ebb exits:  [148]
  ebb succs:  [148]
ebb entry:  148
  ebb type:   block
  ebb blocks: [148 149]
  ebb cost:   6
  ebb exits:  [149]
  ebb succs:  []
