ebb entry:  0
  ebb type:   block
  ebb blocks: [0 1 2 3 4]
  ebb cost:   11
  ebb exits:  [5 10]
  ebb succs:  [10 5]
ebb entry:  5
  ebb type:   loop
  ebb blocks: [5 6 7]
  ebb cost:   (14 * (N([ln2; ln4], [(ln2 + 1) != ln4], [0; m[4]], [ln2 + 1; ln4]))) + 1
  ebb exits:  [8 10]
  ebb succs:  [10 8]
  1 paths to exit 8
  [5 6 7]
  1 paths to exit 10
  [5]
  1 loop paths
  [5 6]
  1 post loop exit paths
  [7]
ebb entry:  8
  ebb type:   block
  ebb blocks: [8 9]
  ebb cost:   2
  ebb exits:  [10 33]
  ebb succs:  [33 10]
ebb entry:  10
  ebb type:   block
  ebb blocks: [10 11 12 13 14 15 16 17 18 19]
  ebb cost:   26
  ebb exits:  [20 24 31 33]
  ebb succs:  [33 31 24 20]
ebb entry:  20
  ebb type:   loop
  ebb blocks: [20 21]
  ebb cost:   (24 * (N([ln3; ln4], [(ln3 + 1) != ln4], [(0 + 1) + 1; m[4]], [ln3 + 1; ln4]))) + 1
  ebb exits:  [22]
  ebb succs:  [22]
  1 paths to exit 22
  [20 21]
  1 loop paths
  [20]
  1 post loop exit paths
  [21]
ebb entry:  22
  ebb type:   block
  ebb blocks: [22 23]
  ebb cost:   1
  ebb exits:  [24 31]
  ebb succs:  [31 24]
ebb entry:  24
  ebb type:   block
  ebb blocks: [24 25]
  ebb cost:   27
  ebb exits:  [26 31]
  ebb succs:  [31 26]
ebb entry:  26
  ebb type:   loop
  ebb blocks: [26 27 28 29]
  ebb cost:   (list_max([
  16 * (N([ln3; ln4], [(ln3 + 1) != ln4], [0 + 1; m[4]], [ln3 + 1; ln4]));
  40 * (N([ln3; ln4], [(ln3 + 1) != ln4], [0 + 1; m[4]], [ln3 + 1; ln4]))
])) + (list_max(1, 1))
  ebb exits:  [30]
  ebb succs:  [30]
  2 paths to exit 30
  [26 28 29]
  [26 27 28 29]
  2 loop paths
  [26 28]  [26 27 28]
  2 post loop exit paths
  [29]  [29]
ebb entry:  30
  ebb type:   block
  ebb blocks: [30]
  ebb cost:   1
  ebb exits:  [31]
  ebb succs:  [31]
ebb entry:  31
  ebb type:   block
  ebb blocks: [31 32]
  ebb cost:   2
  ebb exits:  [32]
  ebb succs:  []
ebb entry:  33
  ebb type:   block
  ebb blocks: [33]
  ebb cost:   0
  ebb exits:  []
  ebb succs:  []
