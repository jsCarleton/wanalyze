|f41| = list_max([
  123;
  list_sum([
    155;
    (list_max([
      (90 + (list_sum(|f20|, |f17|, |f4|))) * (N([ln3; ln5], [not((ln5 - ln3) == -1)], [R(4, 74, i32, gn5 + 16, 146); ((R(20, 41, i32, 0, pn0 + 20)) - (R(20, 32, i32, 0, pn0 + 28))) + pn2], [-1; ln5 - ln3]));
      (83 + (list_sum(|f20|, |f17|, |f4|))) * (N([ln3; ln5; ln6], [not((ln5 - ln3) == (R(4, 0, i32, ln6, 146)))], [R(4, 74, i32, gn5 + 16, 146); ((R(20, 41, i32, 0, pn0 + 20)) - (R(20, 32, i32, 0, pn0 + 28))) + pn2; gn5 + 32], [R(4, 63, i32, ln6, 146); ln5 - ln3; ln6]));
      (90 + (list_sum(|f20|, |f17|, |f4|))) * (N([ln3; ln5], [not((ln5 - ln3) == -1)], [R(4, 74, i32, gn5 + 16, 146); ((R(20, 41, i32, 0, pn0 + 20)) - (R(20, 32, i32, 0, pn0 + 28))) + pn2], [-1; ln5 - ln3]));
      (83 + (list_sum(|f20|, |f17|, |f4|))) * (N([ln3; ln5; ln6], [not((ln5 - ln3) == (R(4, 0, i32, ln6, 146)))], [R(4, 74, i32, gn5 + 16, 146); ((R(20, 41, i32, 0, pn0 + 20)) - (R(20, 32, i32, 0, pn0 + 28))) + pn2; gn5 + 32], [R(4, 63, i32, ln6, 146); ln5 - ln3; ln6]));
      (87 + (list_sum(|f20|, |f17|, |f4|))) * (N([ln3; ln5], [not((ln5 - ln3) == -1)], [R(4, 74, i32, gn5 + 16, 146); ((R(20, 41, i32, 0, pn0 + 20)) - (R(20, 32, i32, 0, pn0 + 28))) + pn2], [-1; ln5 - ln3]));
      (80 + (list_sum(|f20|, |f17|, |f4|))) * (N([ln3; ln5; ln6], [not((ln5 - ln3) == (R(4, 0, i32, ln6, 146)))], [R(4, 74, i32, gn5 + 16, 146); ((R(20, 41, i32, 0, pn0 + 20)) - (R(20, 32, i32, 0, pn0 + 28))) + pn2; gn5 + 32], [R(4, 61, i32, ln6, 146); ln5 - ln3; ln6]));
      (87 + (list_sum(|f20|, |f17|, |f4|))) * (N([ln3; ln5], [not((ln5 - ln3) == -1)], [R(4, 74, i32, gn5 + 16, 146); ((R(20, 41, i32, 0, pn0 + 20)) - (R(20, 32, i32, 0, pn0 + 28))) + pn2], [-1; ln5 - ln3]));
      (80 + (list_sum(|f20|, |f17|, |f4|))) * (N([ln3; ln5; ln6], [not((ln5 - ln3) == (R(4, 0, i32, ln6, 146)))], [R(4, 74, i32, gn5 + 16, 146); ((R(20, 41, i32, 0, pn0 + 20)) - (R(20, 32, i32, 0, pn0 + 28))) + pn2; gn5 + 32], [R(4, 61, i32, ln6, 146); ln5 - ln3; ln6]))
    ])) + 1
  ]);
  list_sum([
    135;
    (list_max([
      (90 + (list_sum(|f20|, |f17|, |f4|))) * (N([ln3; ln5], [not((ln5 - ln3) == -1)], [R(4, 74, i32, gn5 + 16, 146); ((R(20, 41, i32, 0, pn0 + 20)) - (R(20, 32, i32, 0, pn0 + 28))) + pn2], [-1; ln5 - ln3]));
      (83 + (list_sum(|f20|, |f17|, |f4|))) * (N([ln3; ln5; ln6], [not((ln5 - ln3) == (R(4, 0, i32, ln6, 146)))], [R(4, 74, i32, gn5 + 16, 146); ((R(20, 41, i32, 0, pn0 + 20)) - (R(20, 32, i32, 0, pn0 + 28))) + pn2; gn5 + 32], [R(4, 63, i32, ln6, 146); ln5 - ln3; ln6]));
      (90 + (list_sum(|f20|, |f17|, |f4|))) * (N([ln3; ln5], [not((ln5 - ln3) == -1)], [R(4, 74, i32, gn5 + 16, 146); ((R(20, 41, i32, 0, pn0 + 20)) - (R(20, 32, i32, 0, pn0 + 28))) + pn2], [-1; ln5 - ln3]));
      (83 + (list_sum(|f20|, |f17|, |f4|))) * (N([ln3; ln5; ln6], [not((ln5 - ln3) == (R(4, 0, i32, ln6, 146)))], [R(4, 74, i32, gn5 + 16, 146); ((R(20, 41, i32, 0, pn0 + 20)) - (R(20, 32, i32, 0, pn0 + 28))) + pn2; gn5 + 32], [R(4, 63, i32, ln6, 146); ln5 - ln3; ln6]));
      (87 + (list_sum(|f20|, |f17|, |f4|))) * (N([ln3; ln5], [not((ln5 - ln3) == -1)], [R(4, 74, i32, gn5 + 16, 146); ((R(20, 41, i32, 0, pn0 + 20)) - (R(20, 32, i32, 0, pn0 + 28))) + pn2], [-1; ln5 - ln3]));
      (80 + (list_sum(|f20|, |f17|, |f4|))) * (N([ln3; ln5; ln6], [not((ln5 - ln3) == (R(4, 0, i32, ln6, 146)))], [R(4, 74, i32, gn5 + 16, 146); ((R(20, 41, i32, 0, pn0 + 20)) - (R(20, 32, i32, 0, pn0 + 28))) + pn2; gn5 + 32], [R(4, 61, i32, ln6, 146); ln5 - ln3; ln6]));
      (87 + (list_sum(|f20|, |f17|, |f4|))) * (N([ln3; ln5], [not((ln5 - ln3) == -1)], [R(4, 74, i32, gn5 + 16, 146); ((R(20, 41, i32, 0, pn0 + 20)) - (R(20, 32, i32, 0, pn0 + 28))) + pn2], [-1; ln5 - ln3]));
      (80 + (list_sum(|f20|, |f17|, |f4|))) * (N([ln3; ln5; ln6], [not((ln5 - ln3) == (R(4, 0, i32, ln6, 146)))], [R(4, 74, i32, gn5 + 16, 146); ((R(20, 41, i32, 0, pn0 + 20)) - (R(20, 32, i32, 0, pn0 + 28))) + pn2; gn5 + 32], [R(4, 61, i32, ln6, 146); ln5 - ln3; ln6]))
    ])) + 1
  ]);
  list_sum([
    123;
    (list_max([
      (90 + (list_sum(|f20|, |f17|, |f4|))) * (N([ln3; ln5], [not((ln5 - ln3) == -1)], [R(4, 74, i32, gn5 + 16, 146); ((R(20, 41, i32, 0, pn0 + 20)) - (R(20, 32, i32, 0, pn0 + 28))) + pn2], [-1; ln5 - ln3]));
      (83 + (list_sum(|f20|, |f17|, |f4|))) * (N([ln3; ln5; ln6], [not((ln5 - ln3) == (R(4, 0, i32, ln6, 146)))], [R(4, 74, i32, gn5 + 16, 146); ((R(20, 41, i32, 0, pn0 + 20)) - (R(20, 32, i32, 0, pn0 + 28))) + pn2; gn5 + 32], [R(4, 63, i32, ln6, 146); ln5 - ln3; ln6]));
      (90 + (list_sum(|f20|, |f17|, |f4|))) * (N([ln3; ln5], [not((ln5 - ln3) == -1)], [R(4, 74, i32, gn5 + 16, 146); ((R(20, 41, i32, 0, pn0 + 20)) - (R(20, 32, i32, 0, pn0 + 28))) + pn2], [-1; ln5 - ln3]));
      (83 + (list_sum(|f20|, |f17|, |f4|))) * (N([ln3; ln5; ln6], [not((ln5 - ln3) == (R(4, 0, i32, ln6, 146)))], [R(4, 74, i32, gn5 + 16, 146); ((R(20, 41, i32, 0, pn0 + 20)) - (R(20, 32, i32, 0, pn0 + 28))) + pn2; gn5 + 32], [R(4, 63, i32, ln6, 146); ln5 - ln3; ln6]));
      (87 + (list_sum(|f20|, |f17|, |f4|))) * (N([ln3; ln5], [not((ln5 - ln3) == -1)], [R(4, 74, i32, gn5 + 16, 146); ((R(20, 41, i32, 0, pn0 + 20)) - (R(20, 32, i32, 0, pn0 + 28))) + pn2], [-1; ln5 - ln3]));
      (80 + (list_sum(|f20|, |f17|, |f4|))) * (N([ln3; ln5; ln6], [not((ln5 - ln3) == (R(4, 0, i32, ln6, 146)))], [R(4, 74, i32, gn5 + 16, 146); ((R(20, 41, i32, 0, pn0 + 20)) - (R(20, 32, i32, 0, pn0 + 28))) + pn2; gn5 + 32], [R(4, 61, i32, ln6, 146); ln5 - ln3; ln6]));
      (87 + (list_sum(|f20|, |f17|, |f4|))) * (N([ln3; ln5], [not((ln5 - ln3) == -1)], [R(4, 74, i32, gn5 + 16, 146); ((R(20, 41, i32, 0, pn0 + 20)) - (R(20, 32, i32, 0, pn0 + 28))) + pn2], [-1; ln5 - ln3]));
      (80 + (list_sum(|f20|, |f17|, |f4|))) * (N([ln3; ln5; ln6], [not((ln5 - ln3) == (R(4, 0, i32, ln6, 146)))], [R(4, 74, i32, gn5 + 16, 146); ((R(20, 41, i32, 0, pn0 + 20)) - (R(20, 32, i32, 0, pn0 + 28))) + pn2; gn5 + 32], [R(4, 61, i32, ln6, 146); ln5 - ln3; ln6]))
    ])) + 1
  ])
])
