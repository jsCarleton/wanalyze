digraph finite_state_machine {
    label = "allium.wasm - function 43"
    labelloc =  t
    labelfontsize = 16
    labelfontcolor = black
    labelfontname = "Helvetica"
    node [shape = doublecircle]; E R ;
node [shape=circle, fontcolor=black, style="", label="0(10)"]0
node [shape=circle, fontcolor=black, style="", label="1(3)"]1
node [shape=circle, fontcolor=black, style="", label="2(12)"]2
node [shape=circle, fontcolor=black, style="", label="3(16)"]3
node [shape=circle, fontcolor=black, style="", label="4(1)"]4
node [shape=circle, fontcolor=black, style="", label="5(60)"]5
node [shape=circle, fontcolor=black, style="", label="6(343)"]6
node [shape=circle, fontcolor=black, style="", label="7(11)"]7
node [shape=circle, fontcolor=black, style="", label="8(2)"]8
node [shape=circle, fontcolor=black, style="", label="9(2)"]9
node [shape=circle, fontcolor=black, style="", label="10(10)"]10
node [shape=circle, fontcolor=black, style="", label="11(546)"]11
node [shape=circle, fontcolor=black, style="", label="12(1710)"]12
node [shape=circle, fontcolor=black, style="", label="13(1)"]13
node [shape=circle, fontcolor=black, style="", label="14(67)"]14
node [shape=circle, fontcolor=black, style="", label="15(1679)"]15
node [shape=circle, fontcolor=black, style="", label="16(1)"]16
node [shape=circle, fontcolor=black, style="", label="17(107)"]17
node [shape=circle, fontcolor=black, style="", label="18(9)"]18
node [shape=circle, fontcolor=black, style="", label="19(3)"]19
node [shape=circle, fontcolor=black, style="", label="20(1)"]20
node [shape=circle, fontcolor=black, style="", label="21(1)"]21
node [shape=circle, fontcolor=black, style="", label="22(1)"]22
node [shape=circle, fontcolor=black, style="", label="23(3)"]23
node [shape=circle, fontcolor=black, style="", label="24(55)"]24
node [shape=circle, fontcolor=black, style="", label="E"]E
node [shape=circle, fontcolor=black, style="", label="R"]R
    0 -> 1[label="if"];
    0 -> 2[label="else"];
    1 -> 2[label="end"];
    2 -> 3[label="if"];
    2 -> 5[label="else"];
    3 -> R[label="return"];
    5 -> 6[label="if"];
    5 -> 23[label="else"];
    6 -> 7[label="loop"];
    7 -> 8[label="if"];
    7 -> 9[label="else"];
    8 -> 10[label="end"];
    9 -> 10[label="end"];
    10 -> 11[label="if"];
    10 -> 18[label="else"];
    11 -> 12[label="loop"];
    12 -> 13[label="~br_if"];
    12 -> 12[color="red" fontcolor="red" label="br_if"];
    13 -> 14[label="end"];
    14 -> 15[label="loop"];
    15 -> 16[label="~br_if"];
    15 -> 15[color="red" fontcolor="red" label="br_if"];
    16 -> 17[label="end"];
    17 -> 18[label="end"];
    18 -> 19[label="if"];
    18 -> 21[label="else"];
    19 -> 7[color="red" fontcolor="red" label="br"];
    21 -> 22[label="end"];
    22 -> 24[label="end"];
    23 -> 24[label="end"];
    24 -> E[label="end"];
}
