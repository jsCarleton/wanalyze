Loops found in function 75 in these bblocks: 4.
Simple br_if conditions in: 4.
Simple br conditions in: .
Loop block: [3 4 5]
  Loop exits: [5]
  Looping path: [4]
  Looping path: [4]
  Path to loop: [0 3]
Code paths from the root bblock to a loop bblock and the VM state at the conclusion of the loop bblock:
[0 3] 62
cost:    62; 
stack:   []; 
params:  [pn0, 0, pN2]; 
locals:  [pn1 + ((((i32.wrap_i64(pN2)) * 12) + -12) shl 3), pn0 + 8, pn0 + 16, pn0 + 24, pn0 + 32, pn0 + 40, pn0 + 48, pn0 + 56, pn0 - -64, pn0 + 72, pn0 + 80, pn0 + 88]; 
globals: [gn0 (tableBase), gn1 (DYNAMICTOP_PTR), gn2 (STACKTOP), gn3 (STACK_MAX), gn1 (DYNAMICTOP_PTR), gn2 (STACKTOP), gn3 (STACK_MAX), 0, 0, 0]

Simple brif loop condition in bblock 4:	(i64.extend_i32_u(pn1 + 1)) < pN2
Loop condition variables: pn1, pN2
SSA of loop:
-t0 = ln3
-t1 = 0
-t2 = pn0
-t3 = 0
-t4 = rN0
-t5 = ln3
-t6 = 8
-t7 = ln4
-t8 = 0
-t9 = rN0
-t10 = ln3
-t11 = 16
-t12 = ln5
-t13 = 0
-t14 = rN0
-t15 = ln3
-t16 = 24
-t17 = ln6
-t18 = 0
-t19 = rN0
-t20 = ln3
-t21 = 32
-t22 = ln7
-t23 = 0
-t24 = rN0
-t25 = ln3
-t26 = 40
-t27 = ln8
-t28 = 0
-t29 = rN0
-t30 = ln3
-t31 = 48
-t32 = ln9
-t33 = 0
-t34 = rN0
-t35 = ln3
-t36 = 56
-t37 = ln10
-t38 = 0
-t39 = rN0
-t40 = ln3
-t41 = -64
-t42 = t40 - t41
-t43 = 0
-t44 = ln11
-t45 = 0
-t46 = rN0
-t47 = ln3
-t48 = 72
-t49 = ln12
-t50 = 0
-t51 = rN0
-t52 = ln3
-t53 = 80
-t54 = ln13
-t55 = 0
-t56 = rN0
-t57 = ln3
-t58 = 88
-t59 = ln14
-t60 = 0
-t61 = rN0
-t62 = ln3
-t63 = -96
-t64 = t62 + t63
-ln3 = t64
-t66 = pn0
-t67 = pn1
-t68 = 1
-t69 = t67 + t68
-pn1 = t69
-t71 = i64.extend_i32_u(t69)
-t72 = pN2
-t73 = t71 < t72
Loop variable calculations:
+pN2 = pN2
+pn1 = pn1 + 1
