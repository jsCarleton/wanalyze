Loops found in function 73 in these bblocks: 4.
Simple br_if conditions in: 4.
Simple br conditions in: .
Loop block: [3 4 5]
  Loop exits: [5]
  Looping path: [4]
  Looping path: [4]
  Path to loop: [0 3]
Code paths from the root bblock to a loop bblock and the VM state at the conclusion of the loop bblock:
[0 3] 60
cost:    60; 
stack:   []; 
params:  [pn0, pn1, pn2 + ((((i32.wrap_i64(pN3)) * 12) + -12) shl 3), pN3]; 
locals:  [pn0 + 8, pn0 + 16, pn0 + 24, pn0 + 32, pn0 + 40, pn0 + 48, pn0 + 56, pn0 - -64, pn0 + 72, pn0 + 80, pn0 + 88, ln15, ln16, ln17, ln18, ln19, ln20, ln21, ln22, ln23, ln24, ln25, ln26]; 
globals: [gn0 (tableBase), gn1 (DYNAMICTOP_PTR), gn2 (STACKTOP), gn3 (STACK_MAX), gn1 (DYNAMICTOP_PTR), gn2 (STACKTOP), gn3 (STACK_MAX), 0, 0, 0]

Simple brif loop condition in bblock 4:	(i64.extend_i32_u(ln15 + 1)) < pN3
Loop condition variables: ln15, pN3
SSA of loop:
-t0 = pn0
-t1 = 0
-t2 = pn0
-t3 = 0
-t4 = rN0
-t5 = pn1
-t6 = 0
-t7 = rN0
-t8 = t4 xor t7
-t9 = ln4
-t10 = 0
-t11 = ln4
-t12 = 0
-t13 = rN0
-t14 = pn1
-t15 = 8
-t16 = t14 + t15
-ln16 = t16
-t18 = 0
-t19 = rN0
-t20 = t13 xor t19
-t21 = ln5
-t22 = 0
-t23 = ln5
-t24 = 0
-t25 = rN0
-t26 = pn1
-t27 = 16
-t28 = t26 + t27
-ln17 = t28
-t30 = 0
-t31 = rN0
-t32 = t25 xor t31
-t33 = ln6
-t34 = 0
-t35 = ln6
-t36 = 0
-t37 = rN0
-t38 = pn1
-t39 = 24
-t40 = t38 + t39
-ln18 = t40
-t42 = 0
-t43 = rN0
-t44 = t37 xor t43
-t45 = ln7
-t46 = 0
-t47 = ln7
-t48 = 0
-t49 = rN0
-t50 = pn1
-t51 = 32
-t52 = t50 + t51
-ln19 = t52
-t54 = 0
-t55 = rN0
-t56 = t49 xor t55
-t57 = ln8
-t58 = 0
-t59 = ln8
-t60 = 0
-t61 = rN0
-t62 = pn1
-t63 = 40
-t64 = t62 + t63
-ln20 = t64
-t66 = 0
-t67 = rN0
-t68 = t61 xor t67
-t69 = ln9
-t70 = 0
-t71 = ln9
-t72 = 0
-t73 = rN0
-t74 = pn1
-t75 = 48
-t76 = t74 + t75
-ln21 = t76
-t78 = 0
-t79 = rN0
-t80 = t73 xor t79
-t81 = ln10
-t82 = 0
-t83 = ln10
-t84 = 0
-t85 = rN0
-t86 = pn1
-t87 = 56
-t88 = t86 + t87
-ln22 = t88
-t90 = 0
-t91 = rN0
-t92 = t85 xor t91
-t93 = ln11
-t94 = 0
-t95 = ln11
-t96 = 0
-t97 = rN0
-t98 = pn1
-t99 = -64
-t100 = t98 - t99
-ln23 = t100
-t102 = 0
-t103 = rN0
-t104 = t97 xor t103
-t105 = ln12
-t106 = 0
-t107 = ln12
-t108 = 0
-t109 = rN0
-t110 = pn1
-t111 = 72
-t112 = t110 + t111
-ln24 = t112
-t114 = 0
-t115 = rN0
-t116 = t109 xor t115
-t117 = ln13
-t118 = 0
-t119 = ln13
-t120 = 0
-t121 = rN0
-t122 = pn1
-t123 = 80
-t124 = t122 + t123
-ln25 = t124
-t126 = 0
-t127 = rN0
-t128 = t121 xor t127
-t129 = ln14
-t130 = 0
-t131 = ln14
-t132 = 0
-t133 = rN0
-t134 = pn1
-t135 = 88
-t136 = t134 + t135
-ln26 = t136
-t138 = 0
-t139 = rN0
-t140 = t133 xor t139
-t141 = pn0
-t142 = pn2
-t143 = 0
-t144 = pn0
-t145 = 0
-t146 = rN0
-t147 = pn1
-t148 = 0
-t149 = rN0
-t150 = t146 xor t149
-t151 = pn2
-t152 = 8
-t153 = ln4
-t154 = 0
-t155 = rN0
-t156 = ln16
-t157 = 0
-t158 = rN0
-t159 = t155 xor t158
-t160 = pn2
-t161 = 16
-t162 = ln5
-t163 = 0
-t164 = rN0
-t165 = ln17
-t166 = 0
-t167 = rN0
-t168 = t164 xor t167
-t169 = pn2
-t170 = 24
-t171 = ln6
-t172 = 0
-t173 = rN0
-t174 = ln18
-t175 = 0
-t176 = rN0
-t177 = t173 xor t176
-t178 = pn2
-t179 = 32
-t180 = ln7
-t181 = 0
-t182 = rN0
-t183 = ln19
-t184 = 0
-t185 = rN0
-t186 = t182 xor t185
-t187 = pn2
-t188 = 40
-t189 = ln8
-t190 = 0
-t191 = rN0
-t192 = ln20
-t193 = 0
-t194 = rN0
-t195 = t191 xor t194
-t196 = pn2
-t197 = 48
-t198 = ln9
-t199 = 0
-t200 = rN0
-t201 = ln21
-t202 = 0
-t203 = rN0
-t204 = t200 xor t203
-t205 = pn2
-t206 = 56
-t207 = ln10
-t208 = 0
-t209 = rN0
-t210 = ln22
-t211 = 0
-t212 = rN0
-t213 = t209 xor t212
-t214 = pn2
-t215 = -64
-t216 = t214 - t215
-t217 = 0
-t218 = ln11
-t219 = 0
-t220 = rN0
-t221 = ln23
-t222 = 0
-t223 = rN0
-t224 = t220 xor t223
-t225 = pn2
-t226 = 72
-t227 = ln12
-t228 = 0
-t229 = rN0
-t230 = ln24
-t231 = 0
-t232 = rN0
-t233 = t229 xor t232
-t234 = pn2
-t235 = 80
-t236 = ln13
-t237 = 0
-t238 = rN0
-t239 = ln25
-t240 = 0
-t241 = rN0
-t242 = t238 xor t241
-t243 = pn2
-t244 = 88
-t245 = ln14
-t246 = 0
-t247 = rN0
-t248 = ln26
-t249 = 0
-t250 = rN0
-t251 = t247 xor t250
-t252 = pn1
-t253 = 96
-t254 = t252 + t253
-pn1 = t254
-t256 = pn2
-t257 = -96
-t258 = t256 + t257
-pn2 = t258
-t260 = ln15
-t261 = 1
-t262 = t260 + t261
-ln15 = t262
-t264 = i64.extend_i32_u(t262)
-t265 = pN3
-t266 = t264 < t265
Loop variable calculations:
+pN3 = pN3
+ln15 = ln15 + 1
