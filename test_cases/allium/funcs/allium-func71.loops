Loops found in function 71 in these bblocks: 12.
Simple br_if conditions in: 12.
Simple br conditions in: .
Loop block: [11 12 13]
Code paths from the root bblock to a loop bblock and the VM state at the conclusion of the loop bblock:
[0 1 2 3 4 6 8 9 11]
cost:    144; 
stack:   []; 
params:  [pn0, pn1]; 
locals:  [gn2 (STACKTOP), 0, rn0, rn0 + (rn0 shl 3), rn0, rn0, gn2 (STACKTOP) + rn0, pn0 + 116, rn0 shl 3, pn0 + 120]; 
globals: [gn0 (tableBase), gn1 (DYNAMICTOP_PTR), gn2 (STACKTOP), gn3 (STACK_MAX), gn1 (DYNAMICTOP_PTR), gn2 (STACKTOP) - -64, gn3 (STACK_MAX), 0, 0, 0]

[0 1 2 3 4 6 8 10 11]
cost:    177; 
stack:   []; 
params:  [pn0, pn1]; 
locals:  [gn2 (STACKTOP), 0, rn0, rn0 + (rn0 shl 3), rn0, rn0, gn2 (STACKTOP) + rn0, pn0 + 116, rn0 shl 3, pn0 + 120]; 
globals: [gn0 (tableBase), gn1 (DYNAMICTOP_PTR), gn2 (STACKTOP), gn3 (STACK_MAX), gn1 (DYNAMICTOP_PTR), gn2 (STACKTOP) - -64, gn3 (STACK_MAX), 0, 0, 0]

[0 1 2 3 5 6 8 9 11]
cost:    148; 
stack:   []; 
params:  [pn0, pn1]; 
locals:  [gn2 (STACKTOP), 0, rn0, rn0 + (rn0 shl 3), rn0, rn0, gn2 (STACKTOP) + rn0, pn0 + 116, rn0 shl 3, pn0 + 120]; 
globals: [gn0 (tableBase), gn1 (DYNAMICTOP_PTR), gn2 (STACKTOP), gn3 (STACK_MAX), gn1 (DYNAMICTOP_PTR), gn2 (STACKTOP) - -64, gn3 (STACK_MAX), 0, 0, 0]

[0 1 2 3 5 6 8 10 11]
cost:    181; 
stack:   []; 
params:  [pn0, pn1]; 
locals:  [gn2 (STACKTOP), 0, rn0, rn0 + (rn0 shl 3), rn0, rn0, gn2 (STACKTOP) + rn0, pn0 + 116, rn0 shl 3, pn0 + 120]; 
globals: [gn0 (tableBase), gn1 (DYNAMICTOP_PTR), gn2 (STACKTOP), gn3 (STACK_MAX), gn1 (DYNAMICTOP_PTR), gn2 (STACKTOP) - -64, gn3 (STACK_MAX), 0, 0, 0]

[0 1 2 7 8 9 11]
cost:    139; 
stack:   []; 
params:  [pn0, pn1]; 
locals:  [gn2 (STACKTOP), 0, rn0, rn0 + (rn0 shl 3), rn0, rn0, gn2 (STACKTOP) + rn0, pn0 + 116, rn0 shl 3, pn0 + 120]; 
globals: [gn0 (tableBase), gn1 (DYNAMICTOP_PTR), gn2 (STACKTOP), gn3 (STACK_MAX), gn1 (DYNAMICTOP_PTR), gn2 (STACKTOP) - -64, gn3 (STACK_MAX), 0, 0, 0]

[0 1 2 7 8 10 11]
cost:    172; 
stack:   []; 
params:  [pn0, pn1]; 
locals:  [gn2 (STACKTOP), 0, rn0, rn0 + (rn0 shl 3), rn0, rn0, gn2 (STACKTOP) + rn0, pn0 + 116, rn0 shl 3, pn0 + 120]; 
globals: [gn0 (tableBase), gn1 (DYNAMICTOP_PTR), gn2 (STACKTOP), gn3 (STACK_MAX), gn1 (DYNAMICTOP_PTR), gn2 (STACKTOP) - -64, gn3 (STACK_MAX), 0, 0, 0]

[0 2 3 4 6 8 9 11]
cost:    141; 
stack:   []; 
params:  [pn0, pn1]; 
locals:  [gn2 (STACKTOP), 0, rn0, rn0 + (rn0 shl 3), rn0, rn0, gn2 (STACKTOP) + rn0, pn0 + 116, rn0 shl 3, pn0 + 120]; 
globals: [gn0 (tableBase), gn1 (DYNAMICTOP_PTR), gn2 (STACKTOP), gn3 (STACK_MAX), gn1 (DYNAMICTOP_PTR), gn2 (STACKTOP) - -64, gn3 (STACK_MAX), 0, 0, 0]

[0 2 3 4 6 8 10 11]
cost:    174; 
stack:   []; 
params:  [pn0, pn1]; 
locals:  [gn2 (STACKTOP), 0, rn0, rn0 + (rn0 shl 3), rn0, rn0, gn2 (STACKTOP) + rn0, pn0 + 116, rn0 shl 3, pn0 + 120]; 
globals: [gn0 (tableBase), gn1 (DYNAMICTOP_PTR), gn2 (STACKTOP), gn3 (STACK_MAX), gn1 (DYNAMICTOP_PTR), gn2 (STACKTOP) - -64, gn3 (STACK_MAX), 0, 0, 0]

[0 2 3 5 6 8 9 11]
cost:    145; 
stack:   []; 
params:  [pn0, pn1]; 
locals:  [gn2 (STACKTOP), 0, rn0, rn0 + (rn0 shl 3), rn0, rn0, gn2 (STACKTOP) + rn0, pn0 + 116, rn0 shl 3, pn0 + 120]; 
globals: [gn0 (tableBase), gn1 (DYNAMICTOP_PTR), gn2 (STACKTOP), gn3 (STACK_MAX), gn1 (DYNAMICTOP_PTR), gn2 (STACKTOP) - -64, gn3 (STACK_MAX), 0, 0, 0]

[0 2 3 5 6 8 10 11]
cost:    178; 
stack:   []; 
params:  [pn0, pn1]; 
locals:  [gn2 (STACKTOP), 0, rn0, rn0 + (rn0 shl 3), rn0, rn0, gn2 (STACKTOP) + rn0, pn0 + 116, rn0 shl 3, pn0 + 120]; 
globals: [gn0 (tableBase), gn1 (DYNAMICTOP_PTR), gn2 (STACKTOP), gn3 (STACK_MAX), gn1 (DYNAMICTOP_PTR), gn2 (STACKTOP) - -64, gn3 (STACK_MAX), 0, 0, 0]

[0 2 7 8 9 11]
cost:    136; 
stack:   []; 
params:  [pn0, pn1]; 
locals:  [gn2 (STACKTOP), 0, rn0, rn0 + (rn0 shl 3), rn0, rn0, gn2 (STACKTOP) + rn0, pn0 + 116, rn0 shl 3, pn0 + 120]; 
globals: [gn0 (tableBase), gn1 (DYNAMICTOP_PTR), gn2 (STACKTOP), gn3 (STACK_MAX), gn1 (DYNAMICTOP_PTR), gn2 (STACKTOP) - -64, gn3 (STACK_MAX), 0, 0, 0]

[0 2 7 8 10 11]
cost:    169; 
stack:   []; 
params:  [pn0, pn1]; 
locals:  [gn2 (STACKTOP), 0, rn0, rn0 + (rn0 shl 3), rn0, rn0, gn2 (STACKTOP) + rn0, pn0 + 116, rn0 shl 3, pn0 + 120]; 
globals: [gn0 (tableBase), gn1 (DYNAMICTOP_PTR), gn2 (STACKTOP), gn3 (STACK_MAX), gn1 (DYNAMICTOP_PTR), gn2 (STACKTOP) - -64, gn3 (STACK_MAX), 0, 0, 0]

Simple brif loop condition in bblock 12:	(ln3 + 1) != 8
Loop condition variables: ln3
SSA of loop:
-t0 = pn1
-t1 = ln3
-t2 = 2
-t3 = t1 shl t2
-t4 = t0 + t3
-ln7 = t4
-t6 = 0
-t7 = pn0
-t8 = 68
-t9 = t7 + t8
-t10 = ln3
-t11 = 2
-t12 = t10 shl t11
-t13 = t9 + t12
-t14 = 0
-t15 = rn0
-ln8 = t15
-t17 = 24
-t18 = t15 shr_u t17
-t19 = ln7
-t20 = 1
-t21 = ln8
-t22 = 16
-t23 = t21 shr_u t22
-t24 = ln7
-t25 = 2
-t26 = ln8
-t27 = 8
-t28 = t26 shr_u t27
-t29 = ln7
-t30 = 3
-t31 = ln8
-t32 = ln3
-t33 = 1
-t34 = t32 + t33
-ln3 = t34
-t36 = 8
-t37 = t34 != t36
Loop variable calculations:
+ln3 = ln3 + 1
