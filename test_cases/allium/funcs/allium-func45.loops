Loops found in function 45 in these bblocks: 7 13 18 25 29.
Simple br_if conditions in: 7 29.
Simple br conditions in: 14.
Loop block: [6 7 8]
  Loop path: [6 7 8]
  Loop path: [6 7]
Loop block: [12 13 14 15 16]
  Loop path: [12 13 16]
  Loop path: [12 13 14]
Loop block: [17 18 19 20 21 22 23]
  Loop path: [17 18 20 22 23]
  Loop path: [17 18 20 22]
  Loop path: [17 18 20 21 22 23]
  Loop path: [17 18 20 21 22]
  Loop path: [17 18 19 20 22 23]
  Loop path: [17 18 19 20 22]
  Loop path: [17 18 19 20 21 22 23]
  Loop path: [17 18 19 20 21 22]
Loop block: [24 25 26 27 28 29 30 31 32 33 34]
  Loop path: [24 25 27 28 29 30 31 34]
  Loop path: [24 25 27 28 29 30 31 32]
  Loop path: [24 25 27 28 29]
  Loop path: [24 25 26 28 29 30 31 34]
  Loop path: [24 25 26 28 29 30 31 32]
  Loop path: [24 25 26 28 29]
Loop block: [28 29 30]
  Loop path: [28 29 30]
  Loop path: [28 29]
Code paths from the root bblock to a loop bblock and the VM state at the conclusion of the loop bblock:
[0 3 6]
cost:    18; 
stack:   []; 
params:  [pn0, pn1, pn2]; 
locals:  [rn0, rn0, rn0, lN6, lN7, lN8, lN9, lN10, lN11]; 
globals: [gn0 (tableBase), gn1 (DYNAMICTOP_PTR), gn2 (STACKTOP), gn3 (STACK_MAX), gn1 (DYNAMICTOP_PTR), gn2 (STACKTOP), gn3 (STACK_MAX), 0, 0, 0]

Simple brif loop condition in bblock 7:	(lN8 + 1) < 8
Loop condition variables: lN8
SSA of loop:
-t0 = ln4
-t1 = lN8
-t2 = i32.wrap_i64(t1)
-t3 = 2
-t4 = t2 shl t3
-t5 = t0 + t4
-t6 = 0
-t7 = ln3
-t8 = ln3
-t9 = 768
-t10 = t8 + t9
-ln3 = t10
-t12 = lN8
-t13 = 1
-t14 = t12 + t13
-lN8 = t14
-t16 = 8
-t17 = t14 < t16
Loop variable calculations:
+lN8 = lN8 + 1
Simple brif loop condition in bblock 29:	((lN6 + lN8) rem_u 8) != 0
Loop condition variables: lN6, lN8
SSA of loop:
-t0 = ln3
-t1 = pn1
-t2 = ln4
-t3 = ln3
-t4 = 0
-t5 = rN0
-lN10 = t5
-t7 = 8
-t8 = t5 rem_u t7
-t9 = i32.wrap_i64(t8)
-t10 = 2
-t11 = t9 shl t10
-t12 = t2 + t11
-t13 = 0
-t14 = rn0
-pn2 = t14
-t16 = ln4
-t17 = lN6
-t18 = i32.wrap_i64(t17)
-t19 = 2
-t20 = t18 shl t19
-t21 = t16 + t20
-t22 = 0
-t23 = rn0
-pn1 = t23
-t25 = 8
-t26 = lN6
-t27 = lN8
-t28 = t26 + t27
-lN6 = t28
-t30 = 8
-t31 = t28 rem_u t30
-lN6 = t31
-t33 = 0
-t34 = t31 != t33
Loop variable calculations:
+lN8 = lN8
+lN6 = (lN6 + lN8) rem_u 8
