ebb entry:  0
  ebb type:   block
  ebb blocks: [0 1 2 3 4 5 6 7 8 9]
  ebb cost:   list_max([26 + |f2855|; 21; 50 + (list_max([|f2855|; |f2874|])); 45 + (list_max([|f2855|; |f2874|])); 37 + |f2855|; 32; 61 + (list_max([|f2855|; |f2874|])); 56 + (list_max([|f2855|; |f2874|])); 53 + |f2855|; 48; 77 + (list_max([|f2855|; |f2874|])); 72 + (list_max([|f2855|; |f2874|])); 64 + |f2855|; 59; 88 + (list_max([|f2855|; |f2874|])); 83 + (list_max([|f2855|; |f2874|])); 18; 42 + (list_max([|f2855|; |f2874|])); 29; 53 + (list_max([|f2855|; |f2874|])); 45; 69 + (list_max([|f2855|; |f2874|])); 56; 80 + (list_max([|f2855|; |f2874|]))])
  ebb exits:  [10 34]
  ebb succs:  [34 10]
  16 paths to exit 10
  [0 2 3 5 7 8 9]
  [0 2 3 5 7 8]
  [0 2 3 5 6 7 8 9]
  [0 2 3 5 6 7 8]
  [0 2 3 4 5 7 8 9]
  [0 2 3 4 5 7 8]
  [0 2 3 4 5 6 7 8 9]
  [0 2 3 4 5 6 7 8]
  [0 1 2 3 5 7 8 9]
  [0 1 2 3 5 7 8]
  [0 1 2 3 5 6 7 8 9]
  [0 1 2 3 5 6 7 8]
  [0 1 2 3 4 5 7 8 9]
  [0 1 2 3 4 5 7 8]
  [0 1 2 3 4 5 6 7 8 9]
  [0 1 2 3 4 5 6 7 8]
  8 paths to exit 34
  [0 2 3 5 7]
  [0 2 3 5 6 7]
  [0 2 3 4 5 7]
  [0 2 3 4 5 6 7]
  [0 1 2 3 5 7]
  [0 1 2 3 5 6 7]
  [0 1 2 3 4 5 7]
  [0 1 2 3 4 5 6 7]
ebb entry:  10
  ebb type:   block
  ebb blocks: [10]
  ebb cost:   1
  ebb exits:  [11]
  ebb succs:  [11]
  1 paths to exit 11
  [10]
ebb entry:  11
  ebb type:   loop
  ebb blocks: [11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29]
  ebb cost:   (list_max([[22*I(pn1 > ln5, ln5 = ln5;pn1 = pn1, ln5 = ln5 + 1;pn1 = pn1); 41 + |f2855|*I(rn0 > ln5, ln5 = ln5;rn0 = rn0, ln5 = ln5 + 1;rn0 = rn0); 39*I(pn1 > ln5, ln5 = ln5;pn1 = pn1, ln5 = ln5 + 1;pn1 = pn1); 55 + |f2855|*I(rn0 > ln5, ln5 = ln5;rn0 = rn0, ln5 = ln5 + 1;rn0 = rn0); 53 + |f2855|*I((rn0 > ln3) > ln5, ln5 = ln5;ln3 = ln3;rn0 = rn0, ln5 = ln5 + 1;ln3 = (rn0 > ln3) > ln5;rn0 = rn0); 55 + (list_max([|f994|; |f2855|]))*I(rn0 > ln5, ln5 = ln5;rn0 = rn0, ln5 = ln5 + 1;rn0 = rn0); 53 + |f994|*I(rn0 > ln5, ln5 = ln5;rn0 = rn0, ln5 = ln5 + 1;rn0 = rn0); 69 + (list_max([|f994|; |f2855|]))*I(rn0 > ln5, ln5 = ln5;rn0 = rn0, ln5 = ln5 + 1;rn0 = rn0); 67 + (list_max([|f994|; |f2855|]))*I((rn0 > ln3) > ln5, ln5 = ln5;ln3 = ln3;rn0 = rn0, ln5 = ln5 + 1;ln3 = (rn0 > ln3) > ln5;rn0 = rn0); 30 + |f2855|*I(pn1 > ln5, ln5 = ln5;pn1 = pn1, ln5 = ln5 + 1;pn1 = pn1); 49 + |f2855|*I(rn0 > ln5, ln5 = ln5;rn0 = rn0, ln5 = ln5 + 1;rn0 = rn0); 47 + |f2855|*I(pn1 > ln5, ln5 = ln5;pn1 = pn1, ln5 = ln5 + 1;pn1 = pn1); 63 + |f2855|*I(rn0 > ln5, ln5 = ln5;rn0 = rn0, ln5 = ln5 + 1;rn0 = rn0); 61 + |f2855|*I((rn0 > rn0) > ln5, ln5 = ln5;rn0 = rn0;rn0 = rn0, ln5 = ln5 + 1;rn0 = rn0;rn0 = rn0); 63 + (list_max([|f994|; |f2855|]))*I(rn0 > ln5, ln5 = ln5;rn0 = rn0, ln5 = ln5 + 1;rn0 = rn0); 61 + (list_max([|f994|; |f2855|]))*I(rn0 > ln5, ln5 = ln5;rn0 = rn0, ln5 = ln5 + 1;rn0 = rn0); 77 + (list_max([|f994|; |f2855|]))*I(rn0 > ln5, ln5 = ln5;rn0 = rn0, ln5 = ln5 + 1;rn0 = rn0); 75 + (list_max([|f994|; |f2855|]))*I((rn0 > rn0) > ln5, ln5 = ln5;rn0 = rn0;rn0 = rn0, ln5 = ln5 + 1;rn0 = rn0;rn0 = rn0)]])) + (list_max([1; 2; 1; 2; 1; 2; 1; 2; 1; 2; 1; 2; 1; 2; 1; 2; 1; 2; 1; 2; 1; 2; 1; 2; 1; 2; 1; 2; 1; 2; 1; 2; 1; 2; 1; 2]))
  ebb exits:  [30 39]
  ebb succs:  [39 30]
  36 paths to exit 30
  [11 13 26 29]
  [11 13 26 27 28 29]
  [11 13 14 15 18 21 22 24 25 26 29]
  [11 13 14 15 18 21 22 24 25 26 27 28 29]
  [11 13 14 15 18 21 22 23 25 26 29]
  [11 13 14 15 18 21 22 23 25 26 27 28 29]
  [11 13 14 15 18 19 20 21 22 24 25 26 29]
  [11 13 14 15 18 19 20 21 22 24 25 26 27 28 29]
  [11 13 14 15 18 19 20 21 22 23 25 26 29]
  [11 13 14 15 18 19 20 21 22 23 25 26 27 28 29]
  [11 13 14 15 16 17 18 21 22 24 25 26 29]
  [11 13 14 15 16 17 18 21 22 24 25 26 27 28 29]
  [11 13 14 15 16 17 18 21 22 23 25 26 29]
  [11 13 14 15 16 17 18 21 22 23 25 26 27 28 29]
  [11 13 14 15 16 17 18 19 20 21 22 24 25 26 29]
  [11 13 14 15 16 17 18 19 20 21 22 24 25 26 27 28 29]
  [11 13 14 15 16 17 18 19 20 21 22 23 25 26 29]
  [11 13 14 15 16 17 18 19 20 21 22 23 25 26 27 28 29]
  [11 12 13 26 29]
  [11 12 13 26 27 28 29]
  [11 12 13 14 15 18 21 22 24 25 26 29]
  [11 12 13 14 15 18 21 22 24 25 26 27 28 29]
  [11 12 13 14 15 18 21 22 23 25 26 29]
  [11 12 13 14 15 18 21 22 23 25 26 27 28 29]
  [11 12 13 14 15 18 19 20 21 22 24 25 26 29]
  [11 12 13 14 15 18 19 20 21 22 24 25 26 27 28 29]
  [11 12 13 14 15 18 19 20 21 22 23 25 26 29]
  [11 12 13 14 15 18 19 20 21 22 23 25 26 27 28 29]
  [11 12 13 14 15 16 17 18 21 22 24 25 26 29]
  [11 12 13 14 15 16 17 18 21 22 24 25 26 27 28 29]
  [11 12 13 14 15 16 17 18 21 22 23 25 26 29]
  [11 12 13 14 15 16 17 18 21 22 23 25 26 27 28 29]
  [11 12 13 14 15 16 17 18 19 20 21 22 24 25 26 29]
  [11 12 13 14 15 16 17 18 19 20 21 22 24 25 26 27 28 29]
  [11 12 13 14 15 16 17 18 19 20 21 22 23 25 26 29]
  [11 12 13 14 15 16 17 18 19 20 21 22 23 25 26 27 28 29]
  2 paths to exit 39
  [11 13 14 15 16]
  [11 12 13 14 15 16]
  18 loop paths
  [11 13 26 27]  [11 13 14 15 18 21 22 24 25 26 27]  [11 13 14 15 18 21 22 23 25 26 27]  [11 13 14 15 18 19 20 21 22 24 25 26 27]  [11 13 14 15 18 19 20 21 22 23 25 26 27]  [11 13 14 15 16 17 18 21 22 24 25 26 27]  [11 13 14 15 16 17 18 21 22 23 25 26 27]  [11 13 14 15 16 17 18 19 20 21 22 24 25 26 27]  [11 13 14 15 16 17 18 19 20 21 22 23 25 26 27]  [11 12 13 26 27]  [11 12 13 14 15 18 21 22 24 25 26 27]  [11 12 13 14 15 18 21 22 23 25 26 27]  [11 12 13 14 15 18 19 20 21 22 24 25 26 27]  [11 12 13 14 15 18 19 20 21 22 23 25 26 27]  [11 12 13 14 15 16 17 18 21 22 24 25 26 27]  [11 12 13 14 15 16 17 18 21 22 23 25 26 27]  [11 12 13 14 15 16 17 18 19 20 21 22 24 25 26 27]  [11 12 13 14 15 16 17 18 19 20 21 22 23 25 26 27]
  36 post loop exit paths
  [29]  [28 29]  [29]  [28 29]  [29]  [28 29]  [29]  [28 29]  [29]  [28 29]  [29]  [28 29]  [29]  [28 29]  [29]  [28 29]  [29]  [28 29]  [29]  [28 29]  [29]  [28 29]  [29]  [28 29]  [29]  [28 29]  [29]  [28 29]  [29]  [28 29]  [29]  [28 29]  [29]  [28 29]  [29]  [28 29]
  ebb entry:  11
    ebb type:   block
    ebb blocks: [11 12 13]
    ebb cost:   list_max([9; 17 + |f2855|; 9; 17 + |f2855|])
    ebb exits:  [14 26]
    ebb succs:  [26 14]
    2 paths to exit 14
    [11 13]
    [11 12 13]
    2 paths to exit 26
    [11 13]
    [11 12 13]
  ebb entry:  14
    ebb type:   block
    ebb blocks: [14]
    ebb cost:   1
    ebb exits:  [15]
    ebb succs:  [15]
    1 paths to exit 15
    [14]
  ebb entry:  15
    ebb type:   loop
    ebb blocks: [15 16 17 18 19 20 21]
    ebb cost:   (list_max([[22 + |f2855|*I(rn0 > ln3, ln3 = ln3;rn0 = rn0, ln3 = ln3 + 1;rn0 = rn0); 36 + (list_max([|f994|; |f2855|]))*I(rn0 > ln3, ln3 = ln3;rn0 = rn0, ln3 = ln3 + 1;rn0 = rn0)]])) + (list_max([1; 2; 1; 2]))
    ebb exits:  [22 39]
    ebb succs:  [22]
    4 paths to exit 22
    [15 18 21]
    [15 18 19 20 21]
    [15 16 17 18 21]
    [15 16 17 18 19 20 21]
    1 paths to exit 39
    [15 16]
    2 loop paths
    [15 18 19]    [15 16 17 18 19]
    4 post loop exit paths
    [21]    [20 21]    [21]    [20 21]
  ebb entry:  22
    ebb type:   block
    ebb blocks: [22 23 24 25]
    ebb cost:   list_max([8 + |f2855|; 6])
    ebb exits:  [26]
    ebb succs:  [26]
    2 paths to exit 26
    [22 24 25]
    [22 23 25]
  ebb entry:  26
    ebb type:   block
    ebb blocks: [26 27 28 29]
    ebb cost:   list_max([4; 15])
    ebb exits:  [11 30]
    ebb succs:  [11]
    0 paths to exit 11

    2 paths to exit 30
    [26 29]
    [26 27 28 29]
ebb entry:  30
  ebb type:   block
  ebb blocks: [30 31 32 33]
  ebb cost:   list_max([8 + |f2855|; 6])
  ebb exits:  [34]
  ebb succs:  [34]
  2 paths to exit 34
  [30 32 33]
  [30 31 33]
ebb entry:  34
  ebb type:   block
  ebb blocks: [34 35 36 37 38]
  ebb cost:   list_max([5; 4])
  ebb exits:  [39 41 42]
  ebb succs:  [42 41 39]
  0 paths to exit 39

  1 paths to exit 41
  [34 35]
  1 paths to exit 42
  [34 37]
ebb entry:  39
  ebb type:   block
  ebb blocks: [39 40]
  ebb cost:   39
  ebb exits:  [40]
  ebb succs:  []
  1 paths to exit 40
  [39]
ebb entry:  41
  ebb type:   block
  ebb blocks: [41]
  ebb cost:   
  ebb exits:  []
  ebb succs:  []
ebb entry:  42
  ebb type:   block
  ebb blocks: [42]
  ebb cost:   
  ebb exits:  []
  ebb succs:  []
