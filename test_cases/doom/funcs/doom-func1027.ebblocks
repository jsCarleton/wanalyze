ebb entry:  0
  ebb type:   block
  ebb blocks: [0 1 2 3 4 5 6 7 8 9 10]
  ebb cost:   list_max([35 + (list_max([|f2855|; |f2874|])); 16; 50 + (list_max([|f2855|; |f2874|])); 31 + (list_max([|f2855|; |f2874|])); 46 + (list_max([|f2855|; |f2874|])); 27; 61 + (list_max([|f2855|; |f2874|])); 42 + (list_max([|f2855|; |f2874|])); 59 + (list_max([|f2855|; |f2874|])); 40; 74 + (list_max([|f2855|; |f2874|])); 55 + (list_max([|f2855|; |f2874|])); 70 + (list_max([|f2855|; |f2874|])); 51; 85 + (list_max([|f2855|; |f2874|])); 66 + (list_max([|f2855|; |f2874|])); 18; 33 + (list_max([|f2855|; |f2874|])); 29; 44 + (list_max([|f2855|; |f2874|])); 42; 57 + (list_max([|f2855|; |f2874|])); 53; 68 + (list_max([|f2855|; |f2874|]))])
  ebb exits:  [11 33]
  ebb succs:  [33 11]
  16 paths to exit 11
  [0 2 3 5 7 8 9 10]
  [0 2 3 5 7 8]
  [0 2 3 5 6 7 8 9 10]
  [0 2 3 5 6 7 8]
  [0 2 3 4 5 7 8 9 10]
  [0 2 3 4 5 7 8]
  [0 2 3 4 5 6 7 8 9 10]
  [0 2 3 4 5 6 7 8]
  [0 1 2 3 5 7 8 9 10]
  [0 1 2 3 5 7 8]
  [0 1 2 3 5 6 7 8 9 10]
  [0 1 2 3 5 6 7 8]
  [0 1 2 3 4 5 7 8 9 10]
  [0 1 2 3 4 5 7 8]
  [0 1 2 3 4 5 6 7 8 9 10]
  [0 1 2 3 4 5 6 7 8]
  8 paths to exit 33
  [0 2 3 5 7 8 9]
  [0 2 3 5 6 7 8 9]
  [0 2 3 4 5 7 8 9]
  [0 2 3 4 5 6 7 8 9]
  [0 1 2 3 5 7 8 9]
  [0 1 2 3 5 6 7 8 9]
  [0 1 2 3 4 5 7 8 9]
  [0 1 2 3 4 5 6 7 8 9]
ebb entry:  11
  ebb type:   block
  ebb blocks: [11]
  ebb cost:   1
  ebb exits:  [12]
  ebb succs:  [12]
  1 paths to exit 12
  [11]
ebb entry:  12
  ebb type:   loop
  ebb blocks: [12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31]
  ebb cost:   (list_max([[20*I(i32.eqz(ln5), ln5 = ln5, ln5 = ln5); 40 + |f2855|*I(i32.eqz(rn0), rn0 = rn0, rn0 = rn0); 32*I(i32.eqz(ln5), ln5 = ln5, ln5 = ln5); 51 + |f2855|*I(i32.eqz(rn0), rn0 = rn0, rn0 = rn0); 43*I(i32.eqz(ln5), ln5 = ln5, ln5 = ln5); 55 + (list_max([|f2855|; |f2874|]))*I(i32.eqz(rn0), rn0 = rn0, rn0 = rn0); 75 + (list_max([|f2855|; |f2874|]))*I(i32.eqz(rn0), rn0 = rn0, rn0 = rn0); 67 + (list_max([|f2855|; |f2874|]))*I(i32.eqz(rn0), rn0 = rn0, rn0 = rn0); 86 + (list_max([|f2855|; |f2874|]))*I(i32.eqz(rn0), rn0 = rn0, rn0 = rn0); 78 + (list_max([|f2855|; |f2874|]))*I(i32.eqz(rn0), rn0 = rn0, rn0 = rn0); 72 + (list_max([|f2855|; |f2874|]))*I(i32.eqz(rn0), rn0 = rn0, rn0 = rn0); 92 + (list_max([|f2855|; |f2874|]))*I(i32.eqz(rn0), rn0 = rn0, rn0 = rn0); 84 + (list_max([|f2855|; |f2874|]))*I(i32.eqz(rn0), rn0 = rn0, rn0 = rn0); 103 + (list_max([|f2855|; |f2874|]))*I(i32.eqz(rn0), rn0 = rn0, rn0 = rn0); 95 + (list_max([|f2855|; |f2874|]))*I(i32.eqz(rn0), rn0 = rn0, rn0 = rn0)]])) + (list_max([1; 2; 1; 2; 1; 2; 1; 2; 1; 2; 1; 2; 1; 2; 1; 2; 1; 2; 1; 2; 1; 2; 1; 2; 1; 2; 1; 2; 1; 2; 5 + |f2874|]))
  ebb exits:  [32 33 35 37]
  ebb succs:  [37 35 33 32]
  30 paths to exit 32
  [12 19 28 31]
  [12 19 28 29 30 31]
  [12 19 20 23 25 26 27 28 31]
  [12 19 20 23 25 26 27 28 29 30 31]
  [12 19 20 23 24 27 28 31]
  [12 19 20 23 24 27 28 29 30 31]
  [12 19 20 21 22 23 25 26 27 28 31]
  [12 19 20 21 22 23 25 26 27 28 29 30 31]
  [12 19 20 21 22 23 24 27 28 31]
  [12 19 20 21 22 23 24 27 28 29 30 31]
  [12 13 16 18 19 28 31]
  [12 13 16 18 19 28 29 30 31]
  [12 13 16 18 19 20 23 25 26 27 28 31]
  [12 13 16 18 19 20 23 25 26 27 28 29 30 31]
  [12 13 16 18 19 20 23 24 27 28 31]
  [12 13 16 18 19 20 23 24 27 28 29 30 31]
  [12 13 16 18 19 20 21 22 23 25 26 27 28 31]
  [12 13 16 18 19 20 21 22 23 25 26 27 28 29 30 31]
  [12 13 16 18 19 20 21 22 23 24 27 28 31]
  [12 13 16 18 19 20 21 22 23 24 27 28 29 30 31]
  [12 13 16 17 18 19 28 31]
  [12 13 16 17 18 19 28 29 30 31]
  [12 13 16 17 18 19 20 23 25 26 27 28 31]
  [12 13 16 17 18 19 20 23 25 26 27 28 29 30 31]
  [12 13 16 17 18 19 20 23 24 27 28 31]
  [12 13 16 17 18 19 20 23 24 27 28 29 30 31]
  [12 13 16 17 18 19 20 21 22 23 25 26 27 28 31]
  [12 13 16 17 18 19 20 21 22 23 25 26 27 28 29 30 31]
  [12 13 16 17 18 19 20 21 22 23 24 27 28 31]
  [12 13 16 17 18 19 20 21 22 23 24 27 28 29 30 31]
  6 paths to exit 33
  [12 19 20 23 25]
  [12 19 20 21 22 23 25]
  [12 13 16 18 19 20 23 25]
  [12 13 16 18 19 20 21 22 23 25]
  [12 13 16 17 18 19 20 23 25]
  [12 13 16 17 18 19 20 21 22 23 25]
  3 paths to exit 35
  [12 19 20 21]
  [12 13 16 18 19 20 21]
  [12 13 16 17 18 19 20 21]
  1 paths to exit 37
  [12 13 14]
  15 loop paths
  [12 19 28 29]  [12 19 20 23 25 26 27 28 29]  [12 19 20 23 24 27 28 29]  [12 19 20 21 22 23 25 26 27 28 29]  [12 19 20 21 22 23 24 27 28 29]  [12 13 16 18 19 28 29]  [12 13 16 18 19 20 23 25 26 27 28 29]  [12 13 16 18 19 20 23 24 27 28 29]  [12 13 16 18 19 20 21 22 23 25 26 27 28 29]  [12 13 16 18 19 20 21 22 23 24 27 28 29]  [12 13 16 17 18 19 28 29]  [12 13 16 17 18 19 20 23 25 26 27 28 29]  [12 13 16 17 18 19 20 23 24 27 28 29]  [12 13 16 17 18 19 20 21 22 23 25 26 27 28 29]  [12 13 16 17 18 19 20 21 22 23 24 27 28 29]
  31 post loop exit paths
  [31]  [30 31]  [31]  [30 31]  [31]  [30 31]  [31]  [30 31]  [31]  [30 31]  [31]  [30 31]  [31]  [30 31]  [31]  [30 31]  [31]  [30 31]  [31]  [30 31]  [31]  [30 31]  [31]  [30 31]  [31]  [30 31]  [31]  [30 31]  [31]  [30 31]  [14]
ebb entry:  32
  ebb type:   block
  ebb blocks: [32]
  ebb cost:   1
  ebb exits:  [33]
  ebb succs:  [33]
  1 paths to exit 33
  [32]
ebb entry:  33
  ebb type:   block
  ebb blocks: [33 34]
  ebb cost:   1
  ebb exits:  [35 37]
  ebb succs:  [37 35]
  0 paths to exit 35

  1 paths to exit 37
  [33]
ebb entry:  35
  ebb type:   block
  ebb blocks: [35 36]
  ebb cost:   35
  ebb exits:  [36]
  ebb succs:  []
  1 paths to exit 36
  [35]
ebb entry:  37
  ebb type:   block
  ebb blocks: [37]
  ebb cost:   
  ebb exits:  []
  ebb succs:  []
