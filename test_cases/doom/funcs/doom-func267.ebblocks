ebb entry:  0
  ebb type:   block
  ebb blocks: [0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15]
  ebb cost:   list_max([43; 24; 50 + |f2794|; 31 + |f2794|; 51 + |f266|; 32 + |f266|; 58 + (list_max([|f266|; |f2794|])); 39 + (list_max([|f266|; |f2794|])); 54; 35; 61 + |f2794|; 42 + |f2794|; 62 + |f266|; 43 + |f266|; 69 + (list_max([|f266|; |f2794|])); 50 + (list_max([|f266|; |f2794|])); 61; 42; 68 + |f2794|; 49 + |f2794|; 69 + |f266|; 50 + |f266|; 76 + (list_max([|f266|; |f2794|])); 57 + (list_max([|f266|; |f2794|])); 72; 53; 79 + |f2794|; 60 + |f2794|; 80 + |f266|; 61 + |f266|; 87 + (list_max([|f266|; |f2794|])); 68 + (list_max([|f266|; |f2794|])); 26; 33 + |f2794|; 34 + |f266|; 41 + (list_max([|f266|; |f2794|])); 37; 44 + |f2794|; 45 + |f266|; 52 + (list_max([|f266|; |f2794|])); 44; 51 + |f2794|; 52 + |f266|; 59 + (list_max([|f266|; |f2794|])); 55; 62 + |f2794|; 63 + |f266|; 70 + (list_max([|f266|; |f2794|])); 23 + |f266|; 34 + |f266|; 41 + |f266|; 52 + |f266|])
  ebb exits:  [16 26 40]
  ebb succs:  [40 26 16]
  32 paths to exit 16
  [0 2 3 4 6 7 10 12 13 14 15]
  [0 2 3 4 6 7 10 12 13]
  [0 2 3 4 6 7 10 11 12 13 14 15]
  [0 2 3 4 6 7 10 11 12 13]
  [0 2 3 4 6 7 8 9 10 12 13 14 15]
  [0 2 3 4 6 7 8 9 10 12 13]
  [0 2 3 4 6 7 8 9 10 11 12 13 14 15]
  [0 2 3 4 6 7 8 9 10 11 12 13]
  [0 2 3 4 5 6 7 10 12 13 14 15]
  [0 2 3 4 5 6 7 10 12 13]
  [0 2 3 4 5 6 7 10 11 12 13 14 15]
  [0 2 3 4 5 6 7 10 11 12 13]
  [0 2 3 4 5 6 7 8 9 10 12 13 14 15]
  [0 2 3 4 5 6 7 8 9 10 12 13]
  [0 2 3 4 5 6 7 8 9 10 11 12 13 14 15]
  [0 2 3 4 5 6 7 8 9 10 11 12 13]
  [0 1 2 3 4 6 7 10 12 13 14 15]
  [0 1 2 3 4 6 7 10 12 13]
  [0 1 2 3 4 6 7 10 11 12 13 14 15]
  [0 1 2 3 4 6 7 10 11 12 13]
  [0 1 2 3 4 6 7 8 9 10 12 13 14 15]
  [0 1 2 3 4 6 7 8 9 10 12 13]
  [0 1 2 3 4 6 7 8 9 10 11 12 13 14 15]
  [0 1 2 3 4 6 7 8 9 10 11 12 13]
  [0 1 2 3 4 5 6 7 10 12 13 14 15]
  [0 1 2 3 4 5 6 7 10 12 13]
  [0 1 2 3 4 5 6 7 10 11 12 13 14 15]
  [0 1 2 3 4 5 6 7 10 11 12 13]
  [0 1 2 3 4 5 6 7 8 9 10 12 13 14 15]
  [0 1 2 3 4 5 6 7 8 9 10 12 13]
  [0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15]
  [0 1 2 3 4 5 6 7 8 9 10 11 12 13]
  16 paths to exit 26
  [0 2 3 4 6 7 10 12 13 14]
  [0 2 3 4 6 7 10 11 12 13 14]
  [0 2 3 4 6 7 8 9 10 12 13 14]
  [0 2 3 4 6 7 8 9 10 11 12 13 14]
  [0 2 3 4 5 6 7 10 12 13 14]
  [0 2 3 4 5 6 7 10 11 12 13 14]
  [0 2 3 4 5 6 7 8 9 10 12 13 14]
  [0 2 3 4 5 6 7 8 9 10 11 12 13 14]
  [0 1 2 3 4 6 7 10 12 13 14]
  [0 1 2 3 4 6 7 10 11 12 13 14]
  [0 1 2 3 4 6 7 8 9 10 12 13 14]
  [0 1 2 3 4 6 7 8 9 10 11 12 13 14]
  [0 1 2 3 4 5 6 7 10 12 13 14]
  [0 1 2 3 4 5 6 7 10 11 12 13 14]
  [0 1 2 3 4 5 6 7 8 9 10 12 13 14]
  [0 1 2 3 4 5 6 7 8 9 10 11 12 13 14]
  4 paths to exit 40
  [0 2 3 4 6 7 8]
  [0 2 3 4 5 6 7 8]
  [0 1 2 3 4 6 7 8]
  [0 1 2 3 4 5 6 7 8]
ebb entry:  16
  ebb type:   block
  ebb blocks: [16]
  ebb cost:   1
  ebb exits:  [17]
  ebb succs:  [17]
  1 paths to exit 17
  [16]
ebb entry:  17
  ebb type:   loop
  ebb blocks: [17 18 19 20 21 22 23 24]
  ebb cost:   (list_max([[19*I(not(ln1 == ln3), ln3 = ln3;ln1 = ln1, ln3 = ln3 + 1;ln1 = ln1); 29 + |f2661|*I(not(ln1 == ln3), ln3 = ln3;ln1 = ln1, ln3 = ln3 + 1;ln1 = ln1)]])) + (list_max([1; 1]))
  ebb exits:  [25 26 40]
  ebb succs:  [40 26 25]
  2 paths to exit 25
  [17 20 24]
  [17 18 19 20 24]
  2 paths to exit 26
  [17 20 21]
  [17 18 19 20 21]
  1 paths to exit 40
  [17 18]
  2 loop paths
  [17 20 21 22]  [17 18 19 20 21 22]
  2 post loop exit paths
  [24]  [24]
ebb entry:  25
  ebb type:   block
  ebb blocks: [25]
  ebb cost:   1
  ebb exits:  [26]
  ebb succs:  [26]
  1 paths to exit 26
  [25]
ebb entry:  26
  ebb type:   block
  ebb blocks: [26 27 28 29 30 31 32 33 34 35 36 37 38 39]
  ebb cost:   list_max([34 + |f266|; 44 + (list_max([|f266|; |f2791|])); 29 + |f2791|; 42 + |f266|; 52 + (list_max([|f266|; |f2791|])); 37 + (list_max([|f266|; |f2791|])); 20 + |f266|; 44 + (list_max([|f266|; |f2791|])); 54 + (list_max([|f266|; |f2791|])); 39 + |f2791|; 52 + (list_max([|f266|; |f2791|])); 62 + (list_max([|f266|; |f2791|])); 47 + (list_max([|f266|; |f2791|])); 30 + (list_max([|f266|; |f2791|])); 15 + |f2791|; 29; 37 + |f266|; 39 + |f2791|; 47 + (list_max([|f266|; |f2791|])); 37 + |f266|; 45 + |f266|; 47 + (list_max([|f266|; |f2791|])); 55 + (list_max([|f266|; |f2791|])); 39 + |f2791|; 47 + (list_max([|f266|; |f2791|])); 49 + |f2791|; 57 + (list_max([|f266|; |f2791|])); 47 + (list_max([|f266|; |f2791|])); 55 + (list_max([|f266|; |f2791|])); 57 + (list_max([|f266|; |f2791|])); 65 + (list_max([|f266|; |f2791|]))])
  ebb exits:  [40 42]
  ebb succs:  [42 40]
  15 paths to exit 40
  [26 29 32 35 36]
  [26 29 32 33 34 35 36]
  [26 29 32 33]
  [26 29 30 31 32 35 36]
  [26 29 30 31 32 33 34 35 36]
  [26 29 30 31 32 33]
  [26 29 30]
  [26 27 28 29 32 35 36]
  [26 27 28 29 32 33 34 35 36]
  [26 27 28 29 32 33]
  [26 27 28 29 30 31 32 35 36]
  [26 27 28 29 30 31 32 33 34 35 36]
  [26 27 28 29 30 31 32 33]
  [26 27 28 29 30]
  [26 27]
  16 paths to exit 42
  [26 29 32 35 38]
  [26 29 32 35 36 37 38]
  [26 29 32 33 34 35 38]
  [26 29 32 33 34 35 36 37 38]
  [26 29 30 31 32 35 38]
  [26 29 30 31 32 35 36 37 38]
  [26 29 30 31 32 33 34 35 38]
  [26 29 30 31 32 33 34 35 36 37 38]
  [26 27 28 29 32 35 38]
  [26 27 28 29 32 35 36 37 38]
  [26 27 28 29 32 33 34 35 38]
  [26 27 28 29 32 33 34 35 36 37 38]
  [26 27 28 29 30 31 32 35 38]
  [26 27 28 29 30 31 32 35 36 37 38]
  [26 27 28 29 30 31 32 33 34 35 38]
  [26 27 28 29 30 31 32 33 34 35 36 37 38]
ebb entry:  40
  ebb type:   block
  ebb blocks: [40 41]
  ebb cost:   29
  ebb exits:  [41]
  ebb succs:  []
  1 paths to exit 41
  [40]
ebb entry:  42
  ebb type:   block
  ebb blocks: [42]
  ebb cost:   
  ebb exits:  []
  ebb succs:  []
