ebb entry:  0
  ebb type:   block
  ebb blocks: [0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18]
  ebb cost:   list_max([23; 41 + |f2037|; 42 + (list_max([|f2021|; |f2037|])); 30; 48 + |f2037|; 49 + (list_max([|f2021|; |f2037|])); 38 + |f1674|; 56 + (list_max([|f1674|; |f2037|])); 57 + (list_max([|f1674|; |f2021|; |f2037|])); 32 + |f1631|; 50 + (list_max([|f1631|; |f2037|])); 51 + (list_max([|f1631|; |f2021|; |f2037|])); 39 + |f1631|; 57 + (list_max([|f1631|; |f2037|])); 58 + (list_max([|f1631|; |f2021|; |f2037|])); 47 + (list_max([|f1631|; |f1674|])); 65 + (list_max([|f1631|; |f1674|; |f2037|])); 66 + (list_max([|f1631|; |f1674|; |f2021|; |f2037|])); 34; 52 + |f2037|; 53 + (list_max([|f2021|; |f2037|])); 41; 59 + |f2037|; 60 + (list_max([|f2021|; |f2037|])); 49 + |f1674|; 67 + (list_max([|f1674|; |f2037|])); 68 + (list_max([|f1674|; |f2021|; |f2037|])); 43 + |f1631|; 61 + (list_max([|f1631|; |f2037|])); 62 + (list_max([|f1631|; |f2021|; |f2037|])); 50 + |f1631|; 68 + (list_max([|f1631|; |f2037|])); 69 + (list_max([|f1631|; |f2021|; |f2037|])); 58 + (list_max([|f1631|; |f1674|])); 76 + (list_max([|f1631|; |f1674|; |f2037|])); 77 + (list_max([|f1631|; |f1674|; |f2021|; |f2037|])); 47; 65 + |f2037|; 66 + (list_max([|f2021|; |f2037|])); 54; 72 + |f2037|; 73 + (list_max([|f2021|; |f2037|])); 62 + |f1674|; 80 + (list_max([|f1674|; |f2037|])); 81 + (list_max([|f1674|; |f2021|; |f2037|])); 56 + |f1631|; 74 + (list_max([|f1631|; |f2037|])); 75 + (list_max([|f1631|; |f2021|; |f2037|])); 63 + |f1631|; 81 + (list_max([|f1631|; |f2037|])); 82 + (list_max([|f1631|; |f2021|; |f2037|])); 71 + (list_max([|f1631|; |f1674|])); 89 + (list_max([|f1631|; |f1674|; |f2037|])); 90 + (list_max([|f1631|; |f1674|; |f2021|; |f2037|])); 58; 76 + |f2037|; 77 + (list_max([|f2021|; |f2037|])); 65; 83 + |f2037|; 84 + (list_max([|f2021|; |f2037|])); 73 + |f1674|; 91 + (list_max([|f1674|; |f2037|])); 92 + (list_max([|f1674|; |f2021|; |f2037|])); 67 + |f1631|; 85 + (list_max([|f1631|; |f2037|])); 86 + (list_max([|f1631|; |f2021|; |f2037|])); 74 + |f1631|; 92 + (list_max([|f1631|; |f2037|])); 93 + (list_max([|f1631|; |f2021|; |f2037|])); 82 + (list_max([|f1631|; |f1674|])); 100 + (list_max([|f1631|; |f1674|; |f2037|])); 101 + (list_max([|f1631|; |f1674|; |f2021|; |f2037|])); 30 + |f1674|; 39 + (list_max([|f1631|; |f1674|])); 41 + |f1674|; 50 + (list_max([|f1631|; |f1674|])); 54 + |f1674|; 63 + (list_max([|f1631|; |f1674|])); 65 + |f1674|; 74 + (list_max([|f1631|; |f1674|]))])
  ebb exits:  [19 115]
  ebb succs:  [115 19]
  72 paths to exit 19
  [0 2 3 5 7 12 17 18]
  [0 2 3 5 7 12 13 15 16 17 18]
  [0 2 3 5 7 12 13 14 16 17 18]
  [0 2 3 5 7 8 11 12 17 18]
  [0 2 3 5 7 8 11 12 13 15 16 17 18]
  [0 2 3 5 7 8 11 12 13 14 16 17 18]
  [0 2 3 5 7 8 9 10 11 12 17 18]
  [0 2 3 5 7 8 9 10 11 12 13 15 16 17 18]
  [0 2 3 5 7 8 9 10 11 12 13 14 16 17 18]
  [0 2 3 5 6 7 12 17 18]
  [0 2 3 5 6 7 12 13 15 16 17 18]
  [0 2 3 5 6 7 12 13 14 16 17 18]
  [0 2 3 5 6 7 8 11 12 17 18]
  [0 2 3 5 6 7 8 11 12 13 15 16 17 18]
  [0 2 3 5 6 7 8 11 12 13 14 16 17 18]
  [0 2 3 5 6 7 8 9 10 11 12 17 18]
  [0 2 3 5 6 7 8 9 10 11 12 13 15 16 17 18]
  [0 2 3 5 6 7 8 9 10 11 12 13 14 16 17 18]
  [0 2 3 4 5 7 12 17 18]
  [0 2 3 4 5 7 12 13 15 16 17 18]
  [0 2 3 4 5 7 12 13 14 16 17 18]
  [0 2 3 4 5 7 8 11 12 17 18]
  [0 2 3 4 5 7 8 11 12 13 15 16 17 18]
  [0 2 3 4 5 7 8 11 12 13 14 16 17 18]
  [0 2 3 4 5 7 8 9 10 11 12 17 18]
  [0 2 3 4 5 7 8 9 10 11 12 13 15 16 17 18]
  [0 2 3 4 5 7 8 9 10 11 12 13 14 16 17 18]
  [0 2 3 4 5 6 7 12 17 18]
  [0 2 3 4 5 6 7 12 13 15 16 17 18]
  [0 2 3 4 5 6 7 12 13 14 16 17 18]
  [0 2 3 4 5 6 7 8 11 12 17 18]
  [0 2 3 4 5 6 7 8 11 12 13 15 16 17 18]
  [0 2 3 4 5 6 7 8 11 12 13 14 16 17 18]
  [0 2 3 4 5 6 7 8 9 10 11 12 17 18]
  [0 2 3 4 5 6 7 8 9 10 11 12 13 15 16 17 18]
  [0 2 3 4 5 6 7 8 9 10 11 12 13 14 16 17 18]
  [0 1 2 3 5 7 12 17 18]
  [0 1 2 3 5 7 12 13 15 16 17 18]
  [0 1 2 3 5 7 12 13 14 16 17 18]
  [0 1 2 3 5 7 8 11 12 17 18]
  [0 1 2 3 5 7 8 11 12 13 15 16 17 18]
  [0 1 2 3 5 7 8 11 12 13 14 16 17 18]
  [0 1 2 3 5 7 8 9 10 11 12 17 18]
  [0 1 2 3 5 7 8 9 10 11 12 13 15 16 17 18]
  [0 1 2 3 5 7 8 9 10 11 12 13 14 16 17 18]
  [0 1 2 3 5 6 7 12 17 18]
  [0 1 2 3 5 6 7 12 13 15 16 17 18]
  [0 1 2 3 5 6 7 12 13 14 16 17 18]
  [0 1 2 3 5 6 7 8 11 12 17 18]
  [0 1 2 3 5 6 7 8 11 12 13 15 16 17 18]
  [0 1 2 3 5 6 7 8 11 12 13 14 16 17 18]
  [0 1 2 3 5 6 7 8 9 10 11 12 17 18]
  [0 1 2 3 5 6 7 8 9 10 11 12 13 15 16 17 18]
  [0 1 2 3 5 6 7 8 9 10 11 12 13 14 16 17 18]
  [0 1 2 3 4 5 7 12 17 18]
  [0 1 2 3 4 5 7 12 13 15 16 17 18]
  [0 1 2 3 4 5 7 12 13 14 16 17 18]
  [0 1 2 3 4 5 7 8 11 12 17 18]
  [0 1 2 3 4 5 7 8 11 12 13 15 16 17 18]
  [0 1 2 3 4 5 7 8 11 12 13 14 16 17 18]
  [0 1 2 3 4 5 7 8 9 10 11 12 17 18]
  [0 1 2 3 4 5 7 8 9 10 11 12 13 15 16 17 18]
  [0 1 2 3 4 5 7 8 9 10 11 12 13 14 16 17 18]
  [0 1 2 3 4 5 6 7 12 17 18]
  [0 1 2 3 4 5 6 7 12 13 15 16 17 18]
  [0 1 2 3 4 5 6 7 12 13 14 16 17 18]
  [0 1 2 3 4 5 6 7 8 11 12 17 18]
  [0 1 2 3 4 5 6 7 8 11 12 13 15 16 17 18]
  [0 1 2 3 4 5 6 7 8 11 12 13 14 16 17 18]
  [0 1 2 3 4 5 6 7 8 9 10 11 12 17 18]
  [0 1 2 3 4 5 6 7 8 9 10 11 12 13 15 16 17 18]
  [0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 16 17 18]
  8 paths to exit 115
  [0 2 3 5 7 8 9]
  [0 2 3 5 6 7 8 9]
  [0 2 3 4 5 7 8 9]
  [0 2 3 4 5 6 7 8 9]
  [0 1 2 3 5 7 8 9]
  [0 1 2 3 5 6 7 8 9]
  [0 1 2 3 4 5 7 8 9]
  [0 1 2 3 4 5 6 7 8 9]
ebb entry:  19
  ebb type:   block
  ebb blocks: [19]
  ebb cost:   1
  ebb exits:  [20]
  ebb succs:  [20]
  1 paths to exit 20
  [19]
ebb entry:  20
  ebb type:   loop
  ebb blocks: [20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44]
  ebb cost:   (list_max([[32*I(i32.eqz(ln1), ln1 = i32.eqz(ln1), ln1 = i32.eqz(ln1)); 29*I(ln1, ln1 = i32.eqz(ln1), ln1 = ln1); 45*I(i32.eqz(ln1), ln1 = i32.eqz(ln1), ln1 = i32.eqz(rn0)); 42*I(ln1, ln1 = i32.eqz(ln1), ln1 = rn0); 62 + (list_max([|f2037|; |f2855|; |f2874|]))*I(i32.eqz(rn0), rn0 = rn0, rn0 = rn0); 59 + (list_max([|f2037|; |f2855|; |f2874|]))*I(rn0, rn0 = rn0, rn0 = rn0); 75 + (list_max([|f2037|; |f2855|; |f2874|]))*I(i32.eqz(rn0), rn0 = rn0, rn0 = rn0); 72 + (list_max([|f2037|; |f2855|; |f2874|]))*I(rn0, rn0 = rn0, rn0 = rn0); 27 + |f2855|*I(1, , ); 66 + (list_max([|f2037|; |f2041|; |f2056|; |f2855|; |f2874|]))*I(i32.eqz(rn0), rn0 = rn0, rn0 = rn0); 63 + (list_max([|f2037|; |f2041|; |f2056|; |f2855|; |f2874|]))*I(rn0, rn0 = rn0, rn0 = rn0); 79 + (list_max([|f2037|; |f2041|; |f2056|; |f2855|; |f2874|]))*I(i32.eqz(rn0), rn0 = rn0, rn0 = rn0); 76 + (list_max([|f2037|; |f2041|; |f2056|; |f2855|; |f2874|]))*I(rn0, rn0 = rn0, rn0 = rn0); 31 + (list_max([|f2041|; |f2056|; |f2855|]))*I(1, , ); 45 + |f2855|*I(i32.eqz(rn0), rn0 = rn0, rn0 = rn0); 42 + |f2855|*I(rn0, rn0 = rn0, rn0 = rn0); 58 + |f2855|*I(i32.eqz(rn0), rn0 = rn0, rn0 = rn0); 55 + |f2855|*I(rn0, rn0 = rn0, rn0 = rn0); 75 + (list_max([|f2037|; |f2855|; |f2874|]))*I(i32.eqz(rn0), rn0 = rn0, rn0 = rn0); 72 + (list_max([|f2037|; |f2855|; |f2874|]))*I(rn0, rn0 = rn0, rn0 = rn0); 88 + (list_max([|f2037|; |f2855|; |f2874|]))*I(i32.eqz(rn0), rn0 = rn0, rn0 = rn0); 85 + (list_max([|f2037|; |f2855|; |f2874|]))*I(rn0, rn0 = rn0, rn0 = rn0); 40 + |f2855|*I(1, , ); 79 + (list_max([|f2037|; |f2041|; |f2056|; |f2855|; |f2874|]))*I(i32.eqz(rn0), rn0 = rn0, rn0 = rn0); 76 + (list_max([|f2037|; |f2041|; |f2056|; |f2855|; |f2874|]))*I(rn0, rn0 = rn0, rn0 = rn0); 92 + (list_max([|f2037|; |f2041|; |f2056|; |f2855|; |f2874|]))*I(i32.eqz(rn0), rn0 = rn0, rn0 = rn0); 89 + (list_max([|f2037|; |f2041|; |f2056|; |f2855|; |f2874|]))*I(rn0, rn0 = rn0, rn0 = rn0); 44 + (list_max([|f2041|; |f2056|; |f2855|]))*I(1, , )]])) + (list_max([1; 2; 1; 2; 1; 2; 1; 2; 1; 2; 1; 2; 1; 2; 1; 2; 1; 2; 1; 2; 1; 2; 1; 2; 1; 2; 1; 2; 1; 2; 1; 2; 1; 2; 1; 2; 1; 2; 1; 2; 1; 2; 1; 2; 1; 2; 1; 2; 1; 2; 1; 2; 1; 2; 1; 2]))
  ebb exits:  [45 93 115]
  ebb succs:  [115 93 45]
  56 paths to exit 45
  [20 23 24 34 37 39 40 41 44]
  [20 23 24 34 37 39 40 41 42 43 44]
  [20 23 24 34 37 38 40 41 44]
  [20 23 24 34 37 38 40 41 42 43 44]
  [20 23 24 34 35 36 37 39 40 41 44]
  [20 23 24 34 35 36 37 39 40 41 42 43 44]
  [20 23 24 34 35 36 37 38 40 41 44]
  [20 23 24 34 35 36 37 38 40 41 42 43 44]
  [20 23 24 25 26 30 33 34 37 39 40 41 44]
  [20 23 24 25 26 30 33 34 37 39 40 41 42 43 44]
  [20 23 24 25 26 30 33 34 37 38 40 41 44]
  [20 23 24 25 26 30 33 34 37 38 40 41 42 43 44]
  [20 23 24 25 26 30 33 34 35 36 37 39 40 41 44]
  [20 23 24 25 26 30 33 34 35 36 37 39 40 41 42 43 44]
  [20 23 24 25 26 30 33 34 35 36 37 38 40 41 44]
  [20 23 24 25 26 30 33 34 35 36 37 38 40 41 42 43 44]
  [20 23 24 25 26 30 31 41 44]
  [20 23 24 25 26 30 31 41 42 43 44]
  [20 23 24 25 26 27 33 34 37 39 40 41 44]
  [20 23 24 25 26 27 33 34 37 39 40 41 42 43 44]
  [20 23 24 25 26 27 33 34 37 38 40 41 44]
  [20 23 24 25 26 27 33 34 37 38 40 41 42 43 44]
  [20 23 24 25 26 27 33 34 35 36 37 39 40 41 44]
  [20 23 24 25 26 27 33 34 35 36 37 39 40 41 42 43 44]
  [20 23 24 25 26 27 33 34 35 36 37 38 40 41 44]
  [20 23 24 25 26 27 33 34 35 36 37 38 40 41 42 43 44]
  [20 23 24 25 26 27 28 41 44]
  [20 23 24 25 26 27 28 41 42 43 44]
  [20 21 22 23 24 34 37 39 40 41 44]
  [20 21 22 23 24 34 37 39 40 41 42 43 44]
  [20 21 22 23 24 34 37 38 40 41 44]
  [20 21 22 23 24 34 37 38 40 41 42 43 44]
  [20 21 22 23 24 34 35 36 37 39 40 41 44]
  [20 21 22 23 24 34 35 36 37 39 40 41 42 43 44]
  [20 21 22 23 24 34 35 36 37 38 40 41 44]
  [20 21 22 23 24 34 35 36 37 38 40 41 42 43 44]
  [20 21 22 23 24 25 26 30 33 34 37 39 40 41 44]
  [20 21 22 23 24 25 26 30 33 34 37 39 40 41 42 43 44]
  [20 21 22 23 24 25 26 30 33 34 37 38 40 41 44]
  [20 21 22 23 24 25 26 30 33 34 37 38 40 41 42 43 44]
  [20 21 22 23 24 25 26 30 33 34 35 36 37 39 40 41 44]
  [20 21 22 23 24 25 26 30 33 34 35 36 37 39 40 41 42 43 44]
  [20 21 22 23 24 25 26 30 33 34 35 36 37 38 40 41 44]
  [20 21 22 23 24 25 26 30 33 34 35 36 37 38 40 41 42 43 44]
  [20 21 22 23 24 25 26 30 31 41 44]
  [20 21 22 23 24 25 26 30 31 41 42 43 44]
  [20 21 22 23 24 25 26 27 33 34 37 39 40 41 44]
  [20 21 22 23 24 25 26 27 33 34 37 39 40 41 42 43 44]
  [20 21 22 23 24 25 26 27 33 34 37 38 40 41 44]
  [20 21 22 23 24 25 26 27 33 34 37 38 40 41 42 43 44]
  [20 21 22 23 24 25 26 27 33 34 35 36 37 39 40 41 44]
  [20 21 22 23 24 25 26 27 33 34 35 36 37 39 40 41 42 43 44]
  [20 21 22 23 24 25 26 27 33 34 35 36 37 38 40 41 44]
  [20 21 22 23 24 25 26 27 33 34 35 36 37 38 40 41 42 43 44]
  [20 21 22 23 24 25 26 27 28 41 44]
  [20 21 22 23 24 25 26 27 28 41 42 43 44]
  1 paths to exit 93
  [20 21]
  6 paths to exit 115
  [20 23 24 34 35]
  [20 23 24 25 26 30 33 34 35]
  [20 23 24 25 26 27 33 34 35]
  [20 21 22 23 24 34 35]
  [20 21 22 23 24 25 26 30 33 34 35]
  [20 21 22 23 24 25 26 27 33 34 35]
  28 loop paths
  [20 23 24 34 37 39 40 41 42]  [20 23 24 34 37 38 40 41 42]  [20 23 24 34 35 36 37 39 40 41 42]  [20 23 24 34 35 36 37 38 40 41 42]  [20 23 24 25 26 30 33 34 37 39 40 41 42]  [20 23 24 25 26 30 33 34 37 38 40 41 42]  [20 23 24 25 26 30 33 34 35 36 37 39 40 41 42]  [20 23 24 25 26 30 33 34 35 36 37 38 40 41 42]  [20 23 24 25 26 30 31 41 42]  [20 23 24 25 26 27 33 34 37 39 40 41 42]  [20 23 24 25 26 27 33 34 37 38 40 41 42]  [20 23 24 25 26 27 33 34 35 36 37 39 40 41 42]  [20 23 24 25 26 27 33 34 35 36 37 38 40 41 42]  [20 23 24 25 26 27 28 41 42]  [20 21 22 23 24 34 37 39 40 41 42]  [20 21 22 23 24 34 37 38 40 41 42]  [20 21 22 23 24 34 35 36 37 39 40 41 42]  [20 21 22 23 24 34 35 36 37 38 40 41 42]  [20 21 22 23 24 25 26 30 33 34 37 39 40 41 42]  [20 21 22 23 24 25 26 30 33 34 37 38 40 41 42]  [20 21 22 23 24 25 26 30 33 34 35 36 37 39 40 41 42]  [20 21 22 23 24 25 26 30 33 34 35 36 37 38 40 41 42]  [20 21 22 23 24 25 26 30 31 41 42]  [20 21 22 23 24 25 26 27 33 34 37 39 40 41 42]  [20 21 22 23 24 25 26 27 33 34 37 38 40 41 42]  [20 21 22 23 24 25 26 27 33 34 35 36 37 39 40 41 42]  [20 21 22 23 24 25 26 27 33 34 35 36 37 38 40 41 42]  [20 21 22 23 24 25 26 27 28 41 42]
  56 post loop exit paths
  [44]  [43 44]  [44]  [43 44]  [44]  [43 44]  [44]  [43 44]  [44]  [43 44]  [44]  [43 44]  [44]  [43 44]  [44]  [43 44]  [44]  [43 44]  [44]  [43 44]  [44]  [43 44]  [44]  [43 44]  [44]  [43 44]  [44]  [43 44]  [44]  [43 44]  [44]  [43 44]  [44]  [43 44]  [44]  [43 44]  [44]  [43 44]  [44]  [43 44]  [44]  [43 44]  [44]  [43 44]  [44]  [43 44]  [44]  [43 44]  [44]  [43 44]  [44]  [43 44]  [44]  [43 44]  [44]  [43 44]
ebb entry:  45
  ebb type:   block
  ebb blocks: [45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92]
  ebb cost:   Infinite
  ebb exits:  [93 110 115]
  ebb succs:  [115 110 93]
  unknown number of paths to exit 93
  unknown number of paths to exit 110
  unknown number of paths to exit 115
ebb entry:  93
  ebb type:   block
  ebb blocks: [93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109]
  ebb cost:   list_max([11; 19 + |f2037|; 25; 33 + |f2037|; 36 + |f1637|; 44 + (list_max([|f1637|; |f2037|])); 30; 38 + |f2037|; 39; 47 + |f2037|; 50 + |f1637|; 58 + (list_max([|f1637|; |f2037|])); 41 + |f1637|; 49 + (list_max([|f1637|; |f2037|])); 50 + |f1637|; 58 + (list_max([|f1637|; |f2037|])); 61 + |f1637|; 69 + (list_max([|f1637|; |f2037|])); 35 + |f2874|; 43 + (list_max([|f2037|; |f2874|])); 44 + |f2874|; 52 + (list_max([|f2037|; |f2874|])); 55 + (list_max([|f1637|; |f2874|])); 63 + (list_max([|f1637|; |f2037|; |f2874|])); 46 + (list_max([|f1637|; |f2874|])); 54 + (list_max([|f1637|; |f2037|; |f2874|])); 55 + (list_max([|f1637|; |f2874|])); 63 + (list_max([|f1637|; |f2037|; |f2874|])); 66 + (list_max([|f1637|; |f2874|])); 74 + (list_max([|f1637|; |f2037|; |f2874|])); 29 + |f1637|; 43 + |f1637|; 54 + |f1637|; 32 + |f1637|; 48 + (list_max([|f1637|; |f2874|])); 59 + (list_max([|f1637|; |f2874|])); 37 + (list_max([|f1637|; |f2874|]))])
  ebb exits:  [110 115]
  ebb succs:  [115 110]
  30 paths to exit 110
  [93 94 107 109]
  [93 94 107 108 109]
  [93 94 95 103 106 107 109]
  [93 94 95 103 106 107 108 109]
  [93 94 95 103 104 105 106 107 109]
  [93 94 95 103 104 105 106 107 108 109]
  [93 94 95 96 98 101 107 109]
  [93 94 95 96 98 101 107 108 109]
  [93 94 95 96 98 101 102 103 106 107 109]
  [93 94 95 96 98 101 102 103 106 107 108 109]
  [93 94 95 96 98 101 102 103 104 105 106 107 109]
  [93 94 95 96 98 101 102 103 104 105 106 107 108 109]
  [93 94 95 96 98 99 100 101 107 109]
  [93 94 95 96 98 99 100 101 107 108 109]
  [93 94 95 96 98 99 100 101 102 103 106 107 109]
  [93 94 95 96 98 99 100 101 102 103 106 107 108 109]
  [93 94 95 96 98 99 100 101 102 103 104 105 106 107 109]
  [93 94 95 96 98 99 100 101 102 103 104 105 106 107 108 109]
  [93 94 95 96 97 98 101 107 109]
  [93 94 95 96 97 98 101 107 108 109]
  [93 94 95 96 97 98 101 102 103 106 107 109]
  [93 94 95 96 97 98 101 102 103 106 107 108 109]
  [93 94 95 96 97 98 101 102 103 104 105 106 107 109]
  [93 94 95 96 97 98 101 102 103 104 105 106 107 108 109]
  [93 94 95 96 97 98 99 100 101 107 109]
  [93 94 95 96 97 98 99 100 101 107 108 109]
  [93 94 95 96 97 98 99 100 101 102 103 106 107 109]
  [93 94 95 96 97 98 99 100 101 102 103 106 107 108 109]
  [93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 109]
  [93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109]
  7 paths to exit 115
  [93 94 95 103 104]
  [93 94 95 96 98 101 102 103 104]
  [93 94 95 96 98 99 100 101 102 103 104]
  [93 94 95 96 98 99]
  [93 94 95 96 97 98 101 102 103 104]
  [93 94 95 96 97 98 99 100 101 102 103 104]
  [93 94 95 96 97 98 99]
ebb entry:  110
  ebb type:   block
  ebb blocks: [110 111 112 113 114]
  ebb cost:   list_max([9; 4])
  ebb exits:  [115 117 118]
  ebb succs:  [118 117 115]
  0 paths to exit 115

  1 paths to exit 117
  [110 111]
  1 paths to exit 118
  [110 113]
ebb entry:  115
  ebb type:   block
  ebb blocks: [115 116]
  ebb cost:   36
  ebb exits:  [116]
  ebb succs:  []
  1 paths to exit 116
  [115]
ebb entry:  117
  ebb type:   block
  ebb blocks: [117]
  ebb cost:   
  ebb exits:  []
  ebb succs:  []
ebb entry:  118
  ebb type:   block
  ebb blocks: [118]
  ebb cost:   
  ebb exits:  []
  ebb succs:  []
