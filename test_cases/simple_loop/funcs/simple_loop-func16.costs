ebb costs:
[0]: 23
[12]: ((18 + |f15|) * (N([m[1]], [m[1]], [m[1]], [m[1]]))) + 1
[15]: 3
[17]: 19
[21]: 42
[34]: list_max([(41 + |f55|) * (N([m[8]], [not(m[8] != 0)], [m[8]], [m[8]])); (52 + |f55|) * (N([lN11; lN12; m[0]], [not((lN12 * lN11) > ((i64.extend_i32_u(-48 + m[0])) xor -1))], [i64.extend_i32_u(select(pn2, 10, pn2)); 0; m[0]], [lN11; lN12; m[0]])); (61 + |f55|) * (N([lN11; lN12; m[0]], [not((lN12 * lN11) > ((i64.extend_i32_u(-48 + m[0])) xor -1))], [i64.extend_i32_u(select(pn2, 10, pn2)); 0; m[0]], [lN11; (lN12 * lN11) + (i64.extend_i32_u(-48 + m[0])); m[0]])); (51 + |f55|) * (N([m[8]], [not(m[8] != 0)], [m[8]], [m[8]])); (62 + |f55|) * (N([lN11; lN12; m[0]], [not((lN12 * lN11) > ((i64.extend_i32_u(-87 + m[0])) xor -1))], [i64.extend_i32_u(select(pn2, 10, pn2)); 0; m[0]], [lN11; lN12; m[0]])); (71 + |f55|) * (N([lN11; lN12; m[0]], [not((lN12 * lN11) > ((i64.extend_i32_u(-87 + m[0])) xor -1))], [i64.extend_i32_u(select(pn2, 10, pn2)); 0; m[0]], [lN11; (lN12 * lN11) + (i64.extend_i32_u(-87 + m[0])); m[0]])); (62 + |f55|) * (N([m[8]], [not(m[8] != 0)], [m[8]], [m[8]])); (73 + |f55|) * (N([lN11; lN12; m[0]], [not((lN12 * lN11) > ((i64.extend_i32_u(-55 + m[0])) xor -1))], [i64.extend_i32_u(select(pn2, 10, pn2)); 0; m[0]], [lN11; lN12; m[0]])); (82 + |f55|) * (N([lN11; lN12; m[0]], [not((lN12 * lN11) > ((i64.extend_i32_u(-55 + m[0])) xor -1))], [i64.extend_i32_u(select(pn2, 10, pn2)); 0; m[0]], [lN11; (lN12 * lN11) + (i64.extend_i32_u(-55 + m[0])); m[0]]))])
[46]: 1
[48]: 52
[68]: 6
[70]: 0
5 ebb paths found
[0 68]
[0 21 34 48 68]
[0 12 17 21 34 48 68]
[0 12 15 21 34 48 68]
[0 12 15 17 21 34 48 68]
|f16| = list_max([
  list_sum([23; 6]);
  list_sum([
    23;
    42;
    list_max([
      (41 + |f55|) * (N([m[8]], [not(m[8] != 0)], [m[8]], [m[8]]));
      (52 + |f55|) * (N([lN11; lN12; m[0]], [not((lN12 * lN11) > ((i64.extend_i32_u(-48 + m[0])) xor -1))], [i64.extend_i32_u(select(pn2, 10, pn2)); 0; m[0]], [lN11; lN12; m[0]]));
      (61 + |f55|) * (N([lN11; lN12; m[0]], [not((lN12 * lN11) > ((i64.extend_i32_u(-48 + m[0])) xor -1))], [i64.extend_i32_u(select(pn2, 10, pn2)); 0; m[0]], [lN11; (lN12 * lN11) + (i64.extend_i32_u(-48 + m[0])); m[0]]));
      (51 + |f55|) * (N([m[8]], [not(m[8] != 0)], [m[8]], [m[8]]));
      (62 + |f55|) * (N([lN11; lN12; m[0]], [not((lN12 * lN11) > ((i64.extend_i32_u(-87 + m[0])) xor -1))], [i64.extend_i32_u(select(pn2, 10, pn2)); 0; m[0]], [lN11; lN12; m[0]]));
      (71 + |f55|) * (N([lN11; lN12; m[0]], [not((lN12 * lN11) > ((i64.extend_i32_u(-87 + m[0])) xor -1))], [i64.extend_i32_u(select(pn2, 10, pn2)); 0; m[0]], [lN11; (lN12 * lN11) + (i64.extend_i32_u(-87 + m[0])); m[0]]));
      (62 + |f55|) * (N([m[8]], [not(m[8] != 0)], [m[8]], [m[8]]));
      (73 + |f55|) * (N([lN11; lN12; m[0]], [not((lN12 * lN11) > ((i64.extend_i32_u(-55 + m[0])) xor -1))], [i64.extend_i32_u(select(pn2, 10, pn2)); 0; m[0]], [lN11; lN12; m[0]]));
      (82 + |f55|) * (N([lN11; lN12; m[0]], [not((lN12 * lN11) > ((i64.extend_i32_u(-55 + m[0])) xor -1))], [i64.extend_i32_u(select(pn2, 10, pn2)); 0; m[0]], [lN11; (lN12 * lN11) + (i64.extend_i32_u(-55 + m[0])); m[0]]))
    ]);
    52;
    6
  ]);
  list_sum([
    23;
    ((18 + |f15|) * (N([m[1]], [m[1]], [m[1]], [m[1]]))) + 1;
    19;
    42;
    list_max([
      (41 + |f55|) * (N([m[8]], [not(m[8] != 0)], [m[8]], [m[8]]));
      (52 + |f55|) * (N([lN11; lN12; m[0]], [not((lN12 * lN11) > ((i64.extend_i32_u(-48 + m[0])) xor -1))], [i64.extend_i32_u(select(pn2, 10, pn2)); 0; m[0]], [lN11; lN12; m[0]]));
      (61 + |f55|) * (N([lN11; lN12; m[0]], [not((lN12 * lN11) > ((i64.extend_i32_u(-48 + m[0])) xor -1))], [i64.extend_i32_u(select(pn2, 10, pn2)); 0; m[0]], [lN11; (lN12 * lN11) + (i64.extend_i32_u(-48 + m[0])); m[0]]));
      (51 + |f55|) * (N([m[8]], [not(m[8] != 0)], [m[8]], [m[8]]));
      (62 + |f55|) * (N([lN11; lN12; m[0]], [not((lN12 * lN11) > ((i64.extend_i32_u(-87 + m[0])) xor -1))], [i64.extend_i32_u(select(pn2, 10, pn2)); 0; m[0]], [lN11; lN12; m[0]]));
      (71 + |f55|) * (N([lN11; lN12; m[0]], [not((lN12 * lN11) > ((i64.extend_i32_u(-87 + m[0])) xor -1))], [i64.extend_i32_u(select(pn2, 10, pn2)); 0; m[0]], [lN11; (lN12 * lN11) + (i64.extend_i32_u(-87 + m[0])); m[0]]));
      (62 + |f55|) * (N([m[8]], [not(m[8] != 0)], [m[8]], [m[8]]));
      (73 + |f55|) * (N([lN11; lN12; m[0]], [not((lN12 * lN11) > ((i64.extend_i32_u(-55 + m[0])) xor -1))], [i64.extend_i32_u(select(pn2, 10, pn2)); 0; m[0]], [lN11; lN12; m[0]]));
      (82 + |f55|) * (N([lN11; lN12; m[0]], [not((lN12 * lN11) > ((i64.extend_i32_u(-55 + m[0])) xor -1))], [i64.extend_i32_u(select(pn2, 10, pn2)); 0; m[0]], [lN11; (lN12 * lN11) + (i64.extend_i32_u(-55 + m[0])); m[0]]))
    ]);
    52;
    6
  ]);
  list_sum([
    23;
    ((18 + |f15|) * (N([m[1]], [m[1]], [m[1]], [m[1]]))) + 1;
    3;
    42;
    list_max([
      (41 + |f55|) * (N([m[8]], [not(m[8] != 0)], [m[8]], [m[8]]));
      (52 + |f55|) * (N([lN11; lN12; m[0]], [not((lN12 * lN11) > ((i64.extend_i32_u(-48 + m[0])) xor -1))], [i64.extend_i32_u(select(pn2, 10, pn2)); 0; m[0]], [lN11; lN12; m[0]]));
      (61 + |f55|) * (N([lN11; lN12; m[0]], [not((lN12 * lN11) > ((i64.extend_i32_u(-48 + m[0])) xor -1))], [i64.extend_i32_u(select(pn2, 10, pn2)); 0; m[0]], [lN11; (lN12 * lN11) + (i64.extend_i32_u(-48 + m[0])); m[0]]));
      (51 + |f55|) * (N([m[8]], [not(m[8] != 0)], [m[8]], [m[8]]));
      (62 + |f55|) * (N([lN11; lN12; m[0]], [not((lN12 * lN11) > ((i64.extend_i32_u(-87 + m[0])) xor -1))], [i64.extend_i32_u(select(pn2, 10, pn2)); 0; m[0]], [lN11; lN12; m[0]]));
      (71 + |f55|) * (N([lN11; lN12; m[0]], [not((lN12 * lN11) > ((i64.extend_i32_u(-87 + m[0])) xor -1))], [i64.extend_i32_u(select(pn2, 10, pn2)); 0; m[0]], [lN11; (lN12 * lN11) + (i64.extend_i32_u(-87 + m[0])); m[0]]));
      (62 + |f55|) * (N([m[8]], [not(m[8] != 0)], [m[8]], [m[8]]));
      (73 + |f55|) * (N([lN11; lN12; m[0]], [not((lN12 * lN11) > ((i64.extend_i32_u(-55 + m[0])) xor -1))], [i64.extend_i32_u(select(pn2, 10, pn2)); 0; m[0]], [lN11; lN12; m[0]]));
      (82 + |f55|) * (N([lN11; lN12; m[0]], [not((lN12 * lN11) > ((i64.extend_i32_u(-55 + m[0])) xor -1))], [i64.extend_i32_u(select(pn2, 10, pn2)); 0; m[0]], [lN11; (lN12 * lN11) + (i64.extend_i32_u(-55 + m[0])); m[0]]))
    ]);
    52;
    6
  ]);
  list_sum([
    23;
    ((18 + |f15|) * (N([m[1]], [m[1]], [m[1]], [m[1]]))) + 1;
    3;
    19;
    42;
    list_max([
      (41 + |f55|) * (N([m[8]], [not(m[8] != 0)], [m[8]], [m[8]]));
      (52 + |f55|) * (N([lN11; lN12; m[0]], [not((lN12 * lN11) > ((i64.extend_i32_u(-48 + m[0])) xor -1))], [i64.extend_i32_u(select(pn2, 10, pn2)); 0; m[0]], [lN11; lN12; m[0]]));
      (61 + |f55|) * (N([lN11; lN12; m[0]], [not((lN12 * lN11) > ((i64.extend_i32_u(-48 + m[0])) xor -1))], [i64.extend_i32_u(select(pn2, 10, pn2)); 0; m[0]], [lN11; (lN12 * lN11) + (i64.extend_i32_u(-48 + m[0])); m[0]]));
      (51 + |f55|) * (N([m[8]], [not(m[8] != 0)], [m[8]], [m[8]]));
      (62 + |f55|) * (N([lN11; lN12; m[0]], [not((lN12 * lN11) > ((i64.extend_i32_u(-87 + m[0])) xor -1))], [i64.extend_i32_u(select(pn2, 10, pn2)); 0; m[0]], [lN11; lN12; m[0]]));
      (71 + |f55|) * (N([lN11; lN12; m[0]], [not((lN12 * lN11) > ((i64.extend_i32_u(-87 + m[0])) xor -1))], [i64.extend_i32_u(select(pn2, 10, pn2)); 0; m[0]], [lN11; (lN12 * lN11) + (i64.extend_i32_u(-87 + m[0])); m[0]]));
      (62 + |f55|) * (N([m[8]], [not(m[8] != 0)], [m[8]], [m[8]]));
      (73 + |f55|) * (N([lN11; lN12; m[0]], [not((lN12 * lN11) > ((i64.extend_i32_u(-55 + m[0])) xor -1))], [i64.extend_i32_u(select(pn2, 10, pn2)); 0; m[0]], [lN11; lN12; m[0]]));
      (82 + |f55|) * (N([lN11; lN12; m[0]], [not((lN12 * lN11) > ((i64.extend_i32_u(-55 + m[0])) xor -1))], [i64.extend_i32_u(select(pn2, 10, pn2)); 0; m[0]], [lN11; (lN12 * lN11) + (i64.extend_i32_u(-55 + m[0])); m[0]]))
    ]);
    52;
    6
  ])
])
