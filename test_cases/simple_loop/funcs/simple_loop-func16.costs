ebb costs:
[0]: 23
[12]: ((18 + |f15|) * (N([ln7], [i32.load8_u@(ln7)], [ln7 = pn0], [ln7 = ln7 + 1]))) + 1
[15]: 3
[17]: 19
[21]: 42
[34]: list_max([(41 + |f55|) * (N([ln4], [not((i64.load@(ln4)) != 0)], [ln4 = gn0 - 16], [ln4 = ln4])); (52 + |f55|) * (N([lN11; lN12; ln7], [not((lN12 * lN11) > ((i64.extend_i32_u(-48 + (i32.load8_s@(ln7)))) xor -1))], [lN11 = i64.extend_i32_u(select(pn2, 10, pn2)); lN12 = 0; ln7 = pn0], [lN11 = lN11; lN12 = lN12; ln7 = ln7 + 1])); (61 + |f55|) * (N([lN11; lN12; ln7], [not((lN12 * lN11) > ((i64.extend_i32_u(-48 + (i32.load8_s@(ln7)))) xor -1))], [lN11 = i64.extend_i32_u(select(pn2, 10, pn2)); lN12 = 0; ln7 = pn0], [lN11 = lN11; lN12 = (lN12 * lN11) + (i64.extend_i32_u(-48 + ((ln7)))); ln7 = ln7 + 1])); (51 + |f55|) * (N([ln4], [not((i64.load@(ln4)) != 0)], [ln4 = gn0 - 16], [ln4 = ln4])); (62 + |f55|) * (N([lN11; lN12; ln7], [not((lN12 * lN11) > ((i64.extend_i32_u(-87 + (i32.load8_s@(ln7)))) xor -1))], [lN11 = i64.extend_i32_u(select(pn2, 10, pn2)); lN12 = 0; ln7 = pn0], [lN11 = lN11; lN12 = lN12; ln7 = ln7 + 1])); (71 + |f55|) * (N([lN11; lN12; ln7], [not((lN12 * lN11) > ((i64.extend_i32_u(-87 + (i32.load8_s@(ln7)))) xor -1))], [lN11 = i64.extend_i32_u(select(pn2, 10, pn2)); lN12 = 0; ln7 = pn0], [lN11 = lN11; lN12 = (lN12 * lN11) + (i64.extend_i32_u(-87 + ((ln7)))); ln7 = ln7 + 1])); (62 + |f55|) * (N([ln4], [not((i64.load@(ln4)) != 0)], [ln4 = gn0 - 16], [ln4 = ln4])); (73 + |f55|) * (N([lN11; lN12; ln7], [not((lN12 * lN11) > ((i64.extend_i32_u(-55 + (i32.load8_s@(ln7)))) xor -1))], [lN11 = i64.extend_i32_u(select(pn2, 10, pn2)); lN12 = 0; ln7 = pn0], [lN11 = lN11; lN12 = lN12; ln7 = ln7 + 1])); (82 + |f55|) * (N([lN11; lN12; ln7], [not((lN12 * lN11) > ((i64.extend_i32_u(-55 + (i32.load8_s@(ln7)))) xor -1))], [lN11 = i64.extend_i32_u(select(pn2, 10, pn2)); lN12 = 0; ln7 = pn0], [lN11 = lN11; lN12 = (lN12 * lN11) + (i64.extend_i32_u(-55 + ((ln7)))); ln7 = ln7 + 1]))])
[46]: 1
[48]: 52
[68]: 6
[70]: 0
5 ebb paths found
[0 68]
[0 21 34 48 68]
[0 12 17 21 34 48 68]
[0 12 15 21 34 48 68]
[0 12 15 17 21 34 48 68]
|f16| = list_max([
  list_sum([23; 6]);
  list_sum([
    23;
    42;
    list_max([
      (41 + |f55|) * (N([ln4], [not((i64.load@(ln4)) != 0)], [ln4 = gn0 - 16], [ln4 = ln4]));
      (52 + |f55|) * (N([lN11; lN12; ln7], [not((lN12 * lN11) > ((i64.extend_i32_u(-48 + (i32.load8_s@(ln7)))) xor -1))], [lN11 = i64.extend_i32_u(select(pn2, 10, pn2)); lN12 = 0; ln7 = pn0], [lN11 = lN11; lN12 = lN12; ln7 = ln7 + 1]));
      (61 + |f55|) * (N([lN11; lN12; ln7], [not((lN12 * lN11) > ((i64.extend_i32_u(-48 + (i32.load8_s@(ln7)))) xor -1))], [lN11 = i64.extend_i32_u(select(pn2, 10, pn2)); lN12 = 0; ln7 = pn0], [lN11 = lN11; lN12 = (lN12 * lN11) + (i64.extend_i32_u(-48 + ((ln7)))); ln7 = ln7 + 1]));
      (51 + |f55|) * (N([ln4], [not((i64.load@(ln4)) != 0)], [ln4 = gn0 - 16], [ln4 = ln4]));
      (62 + |f55|) * (N([lN11; lN12; ln7], [not((lN12 * lN11) > ((i64.extend_i32_u(-87 + (i32.load8_s@(ln7)))) xor -1))], [lN11 = i64.extend_i32_u(select(pn2, 10, pn2)); lN12 = 0; ln7 = pn0], [lN11 = lN11; lN12 = lN12; ln7 = ln7 + 1]));
      (71 + |f55|) * (N([lN11; lN12; ln7], [not((lN12 * lN11) > ((i64.extend_i32_u(-87 + (i32.load8_s@(ln7)))) xor -1))], [lN11 = i64.extend_i32_u(select(pn2, 10, pn2)); lN12 = 0; ln7 = pn0], [lN11 = lN11; lN12 = (lN12 * lN11) + (i64.extend_i32_u(-87 + ((ln7)))); ln7 = ln7 + 1]));
      (62 + |f55|) * (N([ln4], [not((i64.load@(ln4)) != 0)], [ln4 = gn0 - 16], [ln4 = ln4]));
      (73 + |f55|) * (N([lN11; lN12; ln7], [not((lN12 * lN11) > ((i64.extend_i32_u(-55 + (i32.load8_s@(ln7)))) xor -1))], [lN11 = i64.extend_i32_u(select(pn2, 10, pn2)); lN12 = 0; ln7 = pn0], [lN11 = lN11; lN12 = lN12; ln7 = ln7 + 1]));
      (82 + |f55|) * (N([lN11; lN12; ln7], [not((lN12 * lN11) > ((i64.extend_i32_u(-55 + (i32.load8_s@(ln7)))) xor -1))], [lN11 = i64.extend_i32_u(select(pn2, 10, pn2)); lN12 = 0; ln7 = pn0], [lN11 = lN11; lN12 = (lN12 * lN11) + (i64.extend_i32_u(-55 + ((ln7)))); ln7 = ln7 + 1]))
    ]);
    52;
    6
  ]);
  list_sum([
    23;
    ((18 + |f15|) * (N([ln7], [i32.load8_u@(ln7)], [ln7 = pn0], [ln7 = ln7 + 1]))) + 1;
    19;
    42;
    list_max([
      (41 + |f55|) * (N([ln4], [not((i64.load@(ln4)) != 0)], [ln4 = gn0 - 16], [ln4 = ln4]));
      (52 + |f55|) * (N([lN11; lN12; ln7], [not((lN12 * lN11) > ((i64.extend_i32_u(-48 + (i32.load8_s@(ln7)))) xor -1))], [lN11 = i64.extend_i32_u(select(pn2, 10, pn2)); lN12 = 0; ln7 = pn0], [lN11 = lN11; lN12 = lN12; ln7 = ln7 + 1]));
      (61 + |f55|) * (N([lN11; lN12; ln7], [not((lN12 * lN11) > ((i64.extend_i32_u(-48 + (i32.load8_s@(ln7)))) xor -1))], [lN11 = i64.extend_i32_u(select(pn2, 10, pn2)); lN12 = 0; ln7 = pn0], [lN11 = lN11; lN12 = (lN12 * lN11) + (i64.extend_i32_u(-48 + ((ln7)))); ln7 = ln7 + 1]));
      (51 + |f55|) * (N([ln4], [not((i64.load@(ln4)) != 0)], [ln4 = gn0 - 16], [ln4 = ln4]));
      (62 + |f55|) * (N([lN11; lN12; ln7], [not((lN12 * lN11) > ((i64.extend_i32_u(-87 + (i32.load8_s@(ln7)))) xor -1))], [lN11 = i64.extend_i32_u(select(pn2, 10, pn2)); lN12 = 0; ln7 = pn0], [lN11 = lN11; lN12 = lN12; ln7 = ln7 + 1]));
      (71 + |f55|) * (N([lN11; lN12; ln7], [not((lN12 * lN11) > ((i64.extend_i32_u(-87 + (i32.load8_s@(ln7)))) xor -1))], [lN11 = i64.extend_i32_u(select(pn2, 10, pn2)); lN12 = 0; ln7 = pn0], [lN11 = lN11; lN12 = (lN12 * lN11) + (i64.extend_i32_u(-87 + ((ln7)))); ln7 = ln7 + 1]));
      (62 + |f55|) * (N([ln4], [not((i64.load@(ln4)) != 0)], [ln4 = gn0 - 16], [ln4 = ln4]));
      (73 + |f55|) * (N([lN11; lN12; ln7], [not((lN12 * lN11) > ((i64.extend_i32_u(-55 + (i32.load8_s@(ln7)))) xor -1))], [lN11 = i64.extend_i32_u(select(pn2, 10, pn2)); lN12 = 0; ln7 = pn0], [lN11 = lN11; lN12 = lN12; ln7 = ln7 + 1]));
      (82 + |f55|) * (N([lN11; lN12; ln7], [not((lN12 * lN11) > ((i64.extend_i32_u(-55 + (i32.load8_s@(ln7)))) xor -1))], [lN11 = i64.extend_i32_u(select(pn2, 10, pn2)); lN12 = 0; ln7 = pn0], [lN11 = lN11; lN12 = (lN12 * lN11) + (i64.extend_i32_u(-55 + ((ln7)))); ln7 = ln7 + 1]))
    ]);
    52;
    6
  ]);
  list_sum([
    23;
    ((18 + |f15|) * (N([ln7], [i32.load8_u@(ln7)], [ln7 = pn0], [ln7 = ln7 + 1]))) + 1;
    3;
    42;
    list_max([
      (41 + |f55|) * (N([ln4], [not((i64.load@(ln4)) != 0)], [ln4 = gn0 - 16], [ln4 = ln4]));
      (52 + |f55|) * (N([lN11; lN12; ln7], [not((lN12 * lN11) > ((i64.extend_i32_u(-48 + (i32.load8_s@(ln7)))) xor -1))], [lN11 = i64.extend_i32_u(select(pn2, 10, pn2)); lN12 = 0; ln7 = pn0], [lN11 = lN11; lN12 = lN12; ln7 = ln7 + 1]));
      (61 + |f55|) * (N([lN11; lN12; ln7], [not((lN12 * lN11) > ((i64.extend_i32_u(-48 + (i32.load8_s@(ln7)))) xor -1))], [lN11 = i64.extend_i32_u(select(pn2, 10, pn2)); lN12 = 0; ln7 = pn0], [lN11 = lN11; lN12 = (lN12 * lN11) + (i64.extend_i32_u(-48 + ((ln7)))); ln7 = ln7 + 1]));
      (51 + |f55|) * (N([ln4], [not((i64.load@(ln4)) != 0)], [ln4 = gn0 - 16], [ln4 = ln4]));
      (62 + |f55|) * (N([lN11; lN12; ln7], [not((lN12 * lN11) > ((i64.extend_i32_u(-87 + (i32.load8_s@(ln7)))) xor -1))], [lN11 = i64.extend_i32_u(select(pn2, 10, pn2)); lN12 = 0; ln7 = pn0], [lN11 = lN11; lN12 = lN12; ln7 = ln7 + 1]));
      (71 + |f55|) * (N([lN11; lN12; ln7], [not((lN12 * lN11) > ((i64.extend_i32_u(-87 + (i32.load8_s@(ln7)))) xor -1))], [lN11 = i64.extend_i32_u(select(pn2, 10, pn2)); lN12 = 0; ln7 = pn0], [lN11 = lN11; lN12 = (lN12 * lN11) + (i64.extend_i32_u(-87 + ((ln7)))); ln7 = ln7 + 1]));
      (62 + |f55|) * (N([ln4], [not((i64.load@(ln4)) != 0)], [ln4 = gn0 - 16], [ln4 = ln4]));
      (73 + |f55|) * (N([lN11; lN12; ln7], [not((lN12 * lN11) > ((i64.extend_i32_u(-55 + (i32.load8_s@(ln7)))) xor -1))], [lN11 = i64.extend_i32_u(select(pn2, 10, pn2)); lN12 = 0; ln7 = pn0], [lN11 = lN11; lN12 = lN12; ln7 = ln7 + 1]));
      (82 + |f55|) * (N([lN11; lN12; ln7], [not((lN12 * lN11) > ((i64.extend_i32_u(-55 + (i32.load8_s@(ln7)))) xor -1))], [lN11 = i64.extend_i32_u(select(pn2, 10, pn2)); lN12 = 0; ln7 = pn0], [lN11 = lN11; lN12 = (lN12 * lN11) + (i64.extend_i32_u(-55 + ((ln7)))); ln7 = ln7 + 1]))
    ]);
    52;
    6
  ]);
  list_sum([
    23;
    ((18 + |f15|) * (N([ln7], [i32.load8_u@(ln7)], [ln7 = pn0], [ln7 = ln7 + 1]))) + 1;
    3;
    19;
    42;
    list_max([
      (41 + |f55|) * (N([ln4], [not((i64.load@(ln4)) != 0)], [ln4 = gn0 - 16], [ln4 = ln4]));
      (52 + |f55|) * (N([lN11; lN12; ln7], [not((lN12 * lN11) > ((i64.extend_i32_u(-48 + (i32.load8_s@(ln7)))) xor -1))], [lN11 = i64.extend_i32_u(select(pn2, 10, pn2)); lN12 = 0; ln7 = pn0], [lN11 = lN11; lN12 = lN12; ln7 = ln7 + 1]));
      (61 + |f55|) * (N([lN11; lN12; ln7], [not((lN12 * lN11) > ((i64.extend_i32_u(-48 + (i32.load8_s@(ln7)))) xor -1))], [lN11 = i64.extend_i32_u(select(pn2, 10, pn2)); lN12 = 0; ln7 = pn0], [lN11 = lN11; lN12 = (lN12 * lN11) + (i64.extend_i32_u(-48 + ((ln7)))); ln7 = ln7 + 1]));
      (51 + |f55|) * (N([ln4], [not((i64.load@(ln4)) != 0)], [ln4 = gn0 - 16], [ln4 = ln4]));
      (62 + |f55|) * (N([lN11; lN12; ln7], [not((lN12 * lN11) > ((i64.extend_i32_u(-87 + (i32.load8_s@(ln7)))) xor -1))], [lN11 = i64.extend_i32_u(select(pn2, 10, pn2)); lN12 = 0; ln7 = pn0], [lN11 = lN11; lN12 = lN12; ln7 = ln7 + 1]));
      (71 + |f55|) * (N([lN11; lN12; ln7], [not((lN12 * lN11) > ((i64.extend_i32_u(-87 + (i32.load8_s@(ln7)))) xor -1))], [lN11 = i64.extend_i32_u(select(pn2, 10, pn2)); lN12 = 0; ln7 = pn0], [lN11 = lN11; lN12 = (lN12 * lN11) + (i64.extend_i32_u(-87 + ((ln7)))); ln7 = ln7 + 1]));
      (62 + |f55|) * (N([ln4], [not((i64.load@(ln4)) != 0)], [ln4 = gn0 - 16], [ln4 = ln4]));
      (73 + |f55|) * (N([lN11; lN12; ln7], [not((lN12 * lN11) > ((i64.extend_i32_u(-55 + (i32.load8_s@(ln7)))) xor -1))], [lN11 = i64.extend_i32_u(select(pn2, 10, pn2)); lN12 = 0; ln7 = pn0], [lN11 = lN11; lN12 = lN12; ln7 = ln7 + 1]));
      (82 + |f55|) * (N([lN11; lN12; ln7], [not((lN12 * lN11) > ((i64.extend_i32_u(-55 + (i32.load8_s@(ln7)))) xor -1))], [lN11 = i64.extend_i32_u(select(pn2, 10, pn2)); lN12 = 0; ln7 = pn0], [lN11 = lN11; lN12 = (lN12 * lN11) + (i64.extend_i32_u(-55 + ((ln7)))); ln7 = ln7 + 1]))
    ]);
    52;
    6
  ])
])
