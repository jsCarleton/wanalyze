ebb entry:  0
  ebb type:   block
  ebb blocks: [0 1 2 3 4]
  ebb cost:   27
  ebb exits:  [5]
  ebb succs:  [5]
ebb entry:  5
  ebb type:   loop
  ebb blocks: [5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265]
  ebb cost:   list_max([
  (85 + |f34|) * (N([pn1], [(pn1 + 1) - pn1], [pn1], [pn1 + 2]));
  (373 + (list_sum([|f26|; |f34|]))) * (N([pn1], [(pn1 + 1) - pn1], [pn1], [(((((pn1 + 2) + 3) + 1) + 3) + 4) + 1]));
  (438 + (list_sum([|f26|; |f34|]))) * (N([pn1], [(pn1 + 1) - pn1], [pn1], [(((((pn1 + 2) + 3) + 1) + 3) + 4) + 1]));
  (443 + (list_sum([|f26|; |f34|]))) * (N([pn1], [(pn1 + 1) - pn1], [pn1], [(((((pn1 + 2) + 3) + 1) + 3) + 4) + 1]));
  (443 + (list_sum([|f26|; |f34|]))) * (N([pn1], [(pn1 + 1) - pn1], [pn1], [(((((pn1 + 2) + 3) + 1) + 3) + 4) + 1]));
  (444 + (list_sum([|f26|; |f34|]))) * (N([pn1], [(pn1 + 1) - pn1], [pn1], [(((((pn1 + 2) + 3) + 1) + 3) + 4) + 1]));
  (443 + (list_sum([|f26|; |f34|]))) * (N([pn1], [(pn1 + 1) - pn1], [pn1], [(((((pn1 + 2) + 3) + 1) + 3) + 4) + 1]));
  (443 + (list_sum([|f26|; |f34|]))) * (N([pn1], [(pn1 + 1) - pn1], [pn1], [(((((pn1 + 2) + 3) + 1) + 3) + 4) + 1]));
  (443 + (list_sum([|f26|; |f34|]))) * (N([pn1], [(pn1 + 1) - pn1], [pn1], [(((((pn1 + 2) + 3) + 1) + 3) + 4) + 1]));
  (444 + (list_sum([|f26|; |f34|]))) * (N([pn1], [(pn1 + 1) - pn1], [pn1], [(((((pn1 + 2) + 3) + 1) + 3) + 4) + 1]));
  (559 + (list_sum([|f26|; |f34|; |f40|; |f51|]))) * (N([pn1], [(pn1 + 1) - pn1], [pn1], [(((((pn1 + 2) + 3) + 1) + 3) + 4) + 1]));
  (456 + (list_sum([|f26|; |f34|]))) * (N([pn1], [(pn1 + 1) - pn1], [pn1], [(((((pn1 + 2) + 3) + 1) + 3) + 4) + 1]));
  (578 + (list_sum([|f26|; |f34|; |f37|; |f40|]))) * (N([pn1], [(pn1 + 1) - pn1], [pn1], [(((((pn1 + 2) + 3) + 1) + 3) + 4) + 1]))
])
  ebb exits:  [266 268 269 270 271 273]
  ebb succs:  []
  unknown number of paths to exit 266
  unknown number of paths to exit 268
  unknown number of paths to exit 269
  unknown number of paths to exit 270
  unknown number of paths to exit 271
  unknown number of paths to exit 273
  13 loop paths
  [5 6 7 8 9 10 11 12 13 14 15 16 19 20 21 22 25 26 27 28 29 30 31 32]  [5 6 7 8 9 10 11 12 13 14 15 16 19 20 21 22 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 42 43 44 45 46 47 48 49 50 51 52 53 54 55 63 64 68 69 70 73 74 75 76 77 78 79 87 90 91 92 93 94 95 96 97 98 99 100 101 108]  [5 6 7 8 9 10 11 12 13 14 15 16 19 20 21 22 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 42 43 44 45 46 47 48 49 50 51 52 53 54 55 63 64 68 69 70 73 74 75 76 77 78 79 87 90 91 92 93 94 95 96 97 98 99 100 101 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 136 137 138 139 140 141 142 143]  [5 6 7 8 9 10 11 12 13 14 15 16 19 20 21 22 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 42 43 44 45 46 47 48 49 50 51 52 53 54 55 63 64 68 69 70 73 74 75 76 77 78 79 87 90 91 92 93 94 95 96 97 98 99 100 101 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 136 137 138 139 140 141 142 143 145]  [5 6 7 8 9 10 11 12 13 14 15 16 19 20 21 22 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 42 43 44 45 46 47 48 49 50 51 52 53 54 55 63 64 68 69 70 73 74 75 76 77 78 79 87 90 91 92 93 94 95 96 97 98 99 100 101 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 136 137 138 139 140 141 142 143 147]  [5 6 7 8 9 10 11 12 13 14 15 16 19 20 21 22 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 42 43 44 45 46 47 48 49 50 51 52 53 54 55 63 64 68 69 70 73 74 75 76 77 78 79 87 90 91 92 93 94 95 96 97 98 99 100 101 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 136 137 138 139 140 141 142 143 149]  [5 6 7 8 9 10 11 12 13 14 15 16 19 20 21 22 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 42 43 44 45 46 47 48 49 50 51 52 53 54 55 63 64 68 69 70 73 74 75 76 77 78 79 87 90 91 92 93 94 95 96 97 98 99 100 101 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 136 137 138 139 140 141 142 143 151]  [5 6 7 8 9 10 11 12 13 14 15 16 19 20 21 22 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 42 43 44 45 46 47 48 49 50 51 52 53 54 55 63 64 68 69 70 73 74 75 76 77 78 79 87 90 91 92 93 94 95 96 97 98 99 100 101 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 136 137 138 139 140 141 142 143 153]  [5 6 7 8 9 10 11 12 13 14 15 16 19 20 21 22 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 42 43 44 45 46 47 48 49 50 51 52 53 54 55 63 64 68 69 70 73 74 75 76 77 78 79 87 90 91 92 93 94 95 96 97 98 99 100 101 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 136 137 138 139 140 141 142 143 155]  [5 6 7 8 9 10 11 12 13 14 15 16 19 20 21 22 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 42 43 44 45 46 47 48 49 50 51 52 53 54 55 63 64 68 69 70 73 74 75 76 77 78 79 87 90 91 92 93 94 95 96 97 98 99 100 101 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 136 137 138 139 140 141 142 143 157]  [5 6 7 8 9 10 11 12 13 14 15 16 19 20 21 22 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 42 43 44 45 46 47 48 49 50 51 52 53 54 55 63 64 68 69 70 73 74 75 76 77 78 79 87 90 91 92 93 94 95 96 97 98 99 100 101 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 128 129 201 202 203 204 205 206 207 208 209 214 215 216 219 220 221 222 223 224 225]  [5 6 7 8 9 10 11 12 13 14 15 16 19 20 21 22 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 42 43 44 45 46 47 48 49 50 51 52 53 54 55 63 64 68 69 70 73 74 75 76 77 78 79 87 90 91 92 93 94 95 96 97 98 99 100 101 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 128 129 227 228 229 230 231]  [5 6 7 8 9 10 11 12 13 14 15 16 19 20 21 22 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 42 43 44 45 46 47 48 49 50 51 52 53 54 55 63 64 68 69 70 73 74 75 76 77 78 79 87 90 91 92 93 94 95 96 97 98 99 100 101 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 159 160 161 162 177 178 179 180 181 182 183 186 260 261 262 263]
nested ebbs:
  ebb entry:  5
    ebb type:   block
    ebb blocks: [5 6 7 8 9 10 11 12]
    ebb cost:   25
    ebb exits:  [13 240 268]
    ebb succs:  [268 240 13 240 13]
  ebb entry:  13
    ebb type:   loop
    ebb blocks: [13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237]
    ebb cost:   20 * (N([ln14], [not((ln14 && 255) != 37)], [m[0]], [m[1]]))
    ebb exits:  [5 258 260 261 265 268 269 270]
    ebb succs:  []
    0 paths to exit 5

    unknown number of paths to exit 258
    unknown number of paths to exit 260
    unknown number of paths to exit 261
    unknown number of paths to exit 265
    unknown number of paths to exit 268
    unknown number of paths to exit 269
    unknown number of paths to exit 270
    1 loop paths
    [13 14 15 16 19 236]
nested ebbs:
    ebb entry:  13
      ebb type:   block
      ebb blocks: [13 14 15 16 17 18 19 20]
      ebb cost:   15
      ebb exits:  [21 28 236]
      ebb succs:  [236 28 21 236 28 21 236 28 21]
    ebb entry:  21
      ebb type:   loop
      ebb blocks: [21 22 23 24 25 26]
      ebb cost:   (22 * (N([m[2]], [m[2] == 37], [m[2]], [m[2]]))) + (list_max([1; 3]))
      ebb exits:  [27 28]
      ebb succs:  [28 27 28 27 28 27]
      1 paths to exit 27
      [21 22 25 26]
      1 paths to exit 28
      [21 22 23]
      1 loop paths
      [21 22 25]
      2 post loop exit paths
      [26]      [23]
    ebb entry:  27
      ebb type:   block
      ebb blocks: [27]
      ebb cost:   1
      ebb exits:  [28]
      ebb succs:  [28 28 28]
    ebb entry:  28
      ebb type:   block
      ebb blocks: [28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43]
      ebb cost:   82
      ebb exits:  [5 44 48 268]
      ebb succs:  [268 48 44 5 48 44 5 48 44]
    ebb entry:  44
      ebb type:   loop
      ebb blocks: [44 45 46]
      ebb cost:   (28 * (N([m[1]], [(1 shl (m[1] + -32)) && 75913], [m[1]], [m[1]]))) + 1
      ebb exits:  [47 48]
      ebb succs:  [48 47 48 47 48 47]
      1 paths to exit 47
      [44 45 46]
      1 paths to exit 48
      [44]
      1 loop paths
      [44 45]
      1 post loop exit paths
      [46]
    ebb entry:  47
      ebb type:   block
      ebb blocks: [47]
      ebb cost:   1
      ebb exits:  [48]
      ebb succs:  [48 48 48]
    ebb entry:  48
      ebb type:   block
      ebb blocks: [48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90]
      ebb cost:   126
      ebb exits:  [91 258 268]
      ebb succs:  [268 258 91 258 91 91]
    ebb entry:  91
      ebb type:   loop
      ebb blocks: [91 92 93]
      ebb cost:   (31 * (N([m[0]], [(m[0] + -1) < 8], [m[0]], [m[0]]))) + 1
      ebb exits:  [94 269]
      ebb succs:  [269 94 94 94]
      1 paths to exit 94
      [91 92 93]
      1 paths to exit 269
      [91]
      1 loop paths
      [91 92]
      1 post loop exit paths
      [93]
    ebb entry:  94
      ebb type:   block
      ebb blocks: [94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203]
      ebb cost:   174
      ebb exits:  [5 204 225 227 234 260 261 265 268 269]
      ebb succs:  [269 268 265 261 260 234 227 225 204 5 265 261 260 234 227 225 204 5 234 227 225 204]
    ebb entry:  204
      ebb type:   loop
      ebb blocks: [204 205 206 207 208 209 210 211]
      ebb cost:   ((33 + |f51|) * (N([ln12; ln20; rn(f51(m[0],ln7 + 4), 0)], [ln20 > (rn(f51(m[0],ln7 + 4), 0) + ln12)], [0; 0; rn(f51(m[0],ln7 + 4), 0)], [rn(f51(ln15,tn4 + tn5), 8) + ln12; ln20; rn(f51(m[0],ln7 + 4), 0)]))) + (list_max([1; 1; 1]))
      ebb exits:  [212 214]
      ebb succs:  [214 212 214 212 214 212]
      2 paths to exit 212
      [204 205 206 211]
      [204 205 206 207 211]
      2 paths to exit 214
      [204 205 206 207 208 209]
      [204]
      1 loop paths
      [204 205 206 207 208]
      3 post loop exit paths
      [211]      [211]      [209]
    ebb entry:  212
      ebb type:   block
      ebb blocks: [212 213]
      ebb cost:   3
      ebb exits:  [214 270]
      ebb succs:  [270 214 214 214]
    ebb entry:  214
      ebb type:   block
      ebb blocks: [214 215 216 217 218 219]
      ebb cost:   21
      ebb exits:  [220 225 269]
      ebb succs:  [269 225 220 225 220 225 220]
    ebb entry:  220
      ebb type:   loop
      ebb blocks: [220 221 222 223]
      ebb cost:   ((31 + (list_sum([|f34|; |f51|]))) * (N([ln12; ln15; rn(f51(m[0],ln7 + 4), 0)], [(rn(f51(m[0],ln7 + 4), 0) + ln15) < ln12], [0; 0; rn(f51(m[0],ln7 + 4), 0)], [ln12; rn(f51(ln13,tn4 + tn5), 8) + ln15; rn(f51(m[0],ln7 + 4), 0)]))) + 1
      ebb exits:  [224 225]
      ebb succs:  [225 224 225 224 225 224]
      1 paths to exit 224
      [220 221 222 223]
      2 paths to exit 225
      [220 221]
      [220]
      1 loop paths
      [220 221 222]
      1 post loop exit paths
      [223]
    ebb entry:  224
      ebb type:   block
      ebb blocks: [224]
      ebb cost:   1
      ebb exits:  [225]
      ebb succs:  [225 225 225]
    ebb entry:  225
      ebb type:   block
      ebb blocks: [225 226]
      ebb cost:   16
      ebb exits:  [5 227]
      ebb succs:  [227 5 227 5 227]
    ebb entry:  227
      ebb type:   block
      ebb blocks: [227 228 229 230 231 232 233]
      ebb cost:   25
      ebb exits:  [5 234 268 269]
      ebb succs:  [269 268 234 5 234 5 234]
    ebb entry:  234
      ebb type:   block
      ebb blocks: [234 235]
      ebb cost:   13
      ebb exits:  [236 261]
      ebb succs:  [261 236 261 236 236]
    ebb entry:  236
      ebb type:   block
      ebb blocks: [236 237]
      ebb cost:   8
      ebb exits:  [13]
      ebb succs:  [13 13 13]
  ebb entry:  238
    ebb type:   block
    ebb blocks: [238 239]
    ebb cost:   1
    ebb exits:  [240 273]
    ebb succs:  [273 240 240]
  ebb entry:  240
    ebb type:   block
    ebb blocks: [240 241 242 243]
    ebb cost:   9
    ebb exits:  [244 265 271]
    ebb succs:  [271 265 244 265 244]
  ebb entry:  244
    ebb type:   loop
    ebb blocks: [244 245 246 247]
    ebb cost:   ((27 + |f36|) * (N([ln12], [(ln12 + 1) != 10], [0], [ln12 + 1]))) + 1
    ebb exits:  [250 271]
    ebb succs:  [271 250 250]
    1 paths to exit 250
    [244]
    1 paths to exit 271
    [244 245 246]
    1 loop paths
    [244 245]
    1 post loop exit paths
    [246]
  ebb entry:  248
    ebb type:   block
    ebb blocks: [248 249]
    ebb cost:   1
    ebb exits:  [250 273]
    ebb succs:  [273 250 250]
  ebb entry:  250
    ebb type:   block
    ebb blocks: [250 251]
    ebb cost:   7
    ebb exits:  [252 271]
    ebb succs:  [271 252 252]
  ebb entry:  252
    ebb type:   loop
    ebb blocks: [252 253 254 255]
    ebb cost:   17 * (N([ln12], [not((ln12 + 1) == 10)], [0], [ln12 + 1]))
    ebb exits:  [258 271]
    ebb succs:  [271 258 258]
    1 paths to exit 258
    [252]
    1 paths to exit 271
    [252 253]
    1 loop paths
    [252 253 254]
  ebb entry:  256
    ebb type:   block
    ebb blocks: [256 257]
    ebb cost:   1
    ebb exits:  [258 273]
    ebb succs:  [273 258 258]
  ebb entry:  258
    ebb type:   block
    ebb blocks: [258 259]
    ebb cost:   3
    ebb exits:  [260 269]
    ebb succs:  [269 260 260]
  ebb entry:  260
    ebb type:   block
    ebb blocks: [260]
    ebb cost:   3
    ebb exits:  [261]
    ebb succs:  [261 261]
  ebb entry:  261
    ebb type:   block
    ebb blocks: [261 262 263 264]
    ebb cost:   67
    ebb exits:  [5 265 268 269]
    ebb succs:  [269 268 265 5 265 5]
  ebb entry:  265
    ebb type:   block
    ebb blocks: [265]
    ebb cost:   1
    ebb exits:  [266]
    ebb succs:  [266]
ebb entry:  266
  ebb type:   block
  ebb blocks: [266 267]
  ebb cost:   3
  ebb exits:  [268 271]
  ebb succs:  [271 268]
ebb entry:  268
  ebb type:   block
  ebb blocks: [268]
  ebb cost:   3
  ebb exits:  [269]
  ebb succs:  [269]
ebb entry:  269
  ebb type:   block
  ebb blocks: [269]
  ebb cost:   4
  ebb exits:  [270]
  ebb succs:  [270]
ebb entry:  270
  ebb type:   block
  ebb blocks: [270]
  ebb cost:   3
  ebb exits:  [271]
  ebb succs:  [271]
ebb entry:  271
  ebb type:   block
  ebb blocks: [271 272]
  ebb cost:   6
  ebb exits:  [272]
  ebb succs:  []
ebb entry:  273
  ebb type:   block
  ebb blocks: [273]
  ebb cost:   0
  ebb exits:  []
  ebb succs:  []
