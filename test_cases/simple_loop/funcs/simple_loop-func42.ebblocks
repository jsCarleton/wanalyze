ebb entry:  0
  ebb type:   block
  ebb blocks: [0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27]
  ebb cost:   109
  ebb exits:  [28 229 268]
  ebb succs:  [268 229 28]
ebb entry:  28
  ebb type:   loop
  ebb blocks: [28 29 30 31 32 33 34 35]
  ebb cost:   (list_max([
  31 * (N([pF1], [((pF1 - (f64.convert_i32_u(0))) * 1000000000.) != 0.], [pF1 = rF0 + rF0], [pF1 = (pF1 - (f64.convert_i32_u(0))) * 1000000000.]));
  32 * (N([pF1], [((pF1 - (f64.convert_i32_u(i32.trunc_f64_u(pF1)))) * 1000000000.) != 0.], [pF1 = rF0 + rF0], [pF1 = (pF1 - (f64.convert_i32_u(i32.trunc_f64_u(pF1)))) * 1000000000.]))
])) + (list_max([1; 1]))
  ebb exits:  [36]
  ebb succs:  [36]
  2 paths to exit 36
  [28 29 30 33 34 35]
  [28 29 30 31 34 35]
  2 loop paths
  [28 29 30 33 34]  [28 29 30 31 34]
  2 post loop exit paths
  [35]  [35]
ebb entry:  36
  ebb type:   block
  ebb blocks: [36 37 38 39 40 41]
  ebb cost:   13
  ebb exits:  [42 58]
  ebb succs:  [58 42]
ebb entry:  42
  ebb type:   loop
  ebb blocks: [42 43 44 45 46 47 48 49 50 51 52 53 54 55 56]
  ebb cost:   (list_max([
  35 * (N([m[44]; pn3], [(m[44] - pn3) > 0], [m[44] = 0; pn3 = 0], [m[44] = m[44] - (select(pn3 < 29, 29, pn3)); pn3 = m[44] - (select(pn3 < 29, 29, pn3))]));
  44 * (N([m[44]; pn3], [(m[44] - pn3) > 0], [m[44] = 0; pn3 = 0], [m[44] = m[44] - (select(pn3 < 29, 29, pn3)); pn3 = m[44] - (select(pn3 < 29, 29, pn3))]));
  72 * (N([m[44]; pn3], [(m[44] - pn3) > 0], [m[44] = 0; pn3 = 0], [m[44] = m[44] - (select(pn3 < 29, 29, pn3)); pn3 = m[44] - (select(pn3 < 29, 29, pn3))]));
  81 * (N([m[44]; pn3], [(m[44] - pn3) > 0], [m[44] = 0; pn3 = 0], [m[44] = m[44] - (select(pn3 < 29, 29, pn3)); pn3 = m[44] - (select(pn3 < 29, 29, pn3))]));
  79 * (N([m[44]; pn3], [(m[44] - pn3) > 0], [m[44] = 0; pn3 = 0], [m[44] = m[44] - (select(pn3 < 29, 29, pn3)); pn3 = m[44] - (select(pn3 < 29, 29, pn3))]));
  88 * (N([m[44]; pn3], [(m[44] - pn3) > 0], [m[44] = 0; pn3 = 0], [m[44] = m[44] - (select(pn3 < 29, 29, pn3)); pn3 = m[44] - (select(pn3 < 29, 29, pn3))]))
])) + (list_max([1; 1; 1; 1; 1; 1]))
  ebb exits:  [57]
  ebb succs:  []
  6 paths to exit 57
  [42 43 49 50 51 55 56]
  [42 43 49 50 51 52 53 54 55 56]
  [42 43 44 45 46 47 49 50 51 55 56]
  [42 43 44 45 46 47 49 50 51 52 53 54 55 56]
  [42 43 44 45 46 47 48 49 50 51 55 56]
  [42 43 44 45 46 47 48 49 50 51 52 53 54 55 56]
  6 loop paths
  [42 43 49 50 51 55]  [42 43 49 50 51 52 53 54 55]  [42 43 44 45 46 47 49 50 51 55]  [42 43 44 45 46 47 49 50 51 52 53 54 55]  [42 43 44 45 46 47 48 49 50 51 55]  [42 43 44 45 46 47 48 49 50 51 52 53 54 55]
  6 post loop exit paths
  [56]  [56]  [56]  [56]  [56]  [56]
nested ebbs:
  ebb entry:  42
    ebb type:   block
    ebb blocks: [42 43 44]
    ebb cost:   21
    ebb exits:  [45 49]
    ebb succs:  [49 45 49 45]
  ebb entry:  45
    ebb type:   loop
    ebb blocks: [45 46]
    ebb cost:   (25 * (N([ln10; ln18], [(ln10 + -4) >= ln18], [ln10 = (((((gn0 - 560) + 48) + (select(0 < 0, 288, 0))) + 4) + -4) + -4; ln18 = ((gn0 - 560) + 48) + (select(0 < 0, 288, 0))], [ln10 = ln10 + -4; ln18 = ln18]))) + 1
    ebb exits:  [47]
    ebb succs:  [47 47]
    1 paths to exit 47
    [45 46]
    1 loop paths
    [45]
    1 post loop exit paths
    [46]
  ebb entry:  47
    ebb type:   block
    ebb blocks: [47 48]
    ebb cost:   12
    ebb exits:  [49]
    ebb succs:  [49 49]
  ebb entry:  49
    ebb type:   block
    ebb blocks: [49 50]
    ebb cost:   2
    ebb exits:  [51]
    ebb succs:  [51 51]
  ebb entry:  51
    ebb type:   loop
    ebb blocks: [51 52 53]
    ebb cost:   (12 * (N([m[0]], [i32.eqz(m[0])], [m[0] = 0], [m[0] = m[0]]))) + 1
    ebb exits:  [54 55]
    ebb succs:  [55 54 55 54]
    1 paths to exit 54
    [51 52 53]
    1 paths to exit 55
    [51]
    1 loop paths
    [51 52]
    1 post loop exit paths
    [53]
  ebb entry:  54
    ebb type:   block
    ebb blocks: [54]
    ebb cost:   1
    ebb exits:  [55]
    ebb succs:  [55 55]
  ebb entry:  55
    ebb type:   block
    ebb blocks: [55 56]
    ebb cost:   14
    ebb exits:  [42 57]
    ebb succs:  [57 42 42]
ebb entry:  57
  ebb type:   block
  ebb blocks: [57]
  ebb cost:   1
  ebb exits:  [58]
  ebb succs:  [58]
ebb entry:  58
  ebb type:   block
  ebb blocks: [58 59 60]
  ebb cost:   18
  ebb exits:  [61 74]
  ebb succs:  [74 61]
ebb entry:  61
  ebb type:   loop
  ebb blocks: [61 62 63 64 65 66 67 68 69 70 71 72]
  ebb cost:   (list_max([
  96 * (N([m[44]; pn3], [(m[44] + (0 - pn3)) < 0], [m[44] = 0 - (select(0 < 29, 29, 0)); pn3 = 0 - (select(0 < 29, 29, 0))], [m[44] = m[44] + (select((0 - pn3) < 9, 9, 0 - pn3)); pn3 = m[44] + (select((0 - pn3) < 9, 9, 0 - pn3))]));
  104 * (N([m[44]; pn3], [(m[44] + (0 - pn3)) < 0], [m[44] = 0 - (select(0 < 29, 29, 0)); pn3 = 0 - (select(0 < 29, 29, 0))], [m[44] = m[44] + (select((0 - pn3) < 9, 9, 0 - pn3)); pn3 = m[44] + (select((0 - pn3) < 9, 9, 0 - pn3))]));
  56 * (N([m[44]; pn3], [(m[44] + (0 - pn3)) < 0], [m[44] = 0 - (select(0 < 29, 29, 0)); pn3 = 0 - (select(0 < 29, 29, 0))], [m[44] = m[44] + (select((0 - pn3) < 9, 9, 0 - pn3)); pn3 = m[44] + (select((0 - pn3) < 9, 9, 0 - pn3))]))
])) + (list_max([1; 1; 1]))
  ebb exits:  [73]
  ebb succs:  []
  3 paths to exit 73
  [61 62 63 66 67 68 69 71 72]
  [61 62 63 66 67 68 69 70 71 72]
  [61 62 63 64 71 72]
  3 loop paths
  [61 62 63 66 67 68 69 71]  [61 62 63 66 67 68 69 70 71]  [61 62 63 64 71]
  3 post loop exit paths
  [72]  [72]  [72]
nested ebbs:
  ebb entry:  61
    ebb type:   block
    ebb blocks: [61 62 63 64 65 66]
    ebb cost:   31
    ebb exits:  [67 71]
    ebb succs:  [71 67 71 67]
  ebb entry:  67
    ebb type:   loop
    ebb blocks: [67 68]
    ebb cost:   (22 * (N([ln10; ln11], [(ln11 + 4) < ln10], [ln10 = (((gn0 - 560) + 48) + (select(0 < 0, 288, 0))) + 4; ln11 = (((gn0 - 560) + 48) + (select(0 < 0, 288, 0))) + 4], [ln10 = ln10; ln11 = ln11 + 4]))) + 1
    ebb exits:  [69]
    ebb succs:  [69 69]
    1 paths to exit 69
    [67 68]
    1 loop paths
    [67]
    1 post loop exit paths
    [68]
  ebb entry:  69
    ebb type:   block
    ebb blocks: [69 70]
    ebb cost:   14
    ebb exits:  [71]
    ebb succs:  [71 71]
  ebb entry:  71
    ebb type:   block
    ebb blocks: [71 72]
    ebb cost:   37
    ebb exits:  [61 73]
    ebb succs:  [73 61 61]
ebb entry:  73
  ebb type:   block
  ebb blocks: [73]
  ebb cost:   1
  ebb exits:  [74]
  ebb succs:  [74]
ebb entry:  74
  ebb type:   block
  ebb blocks: [74 75 76 77]
  ebb cost:   24
  ebb exits:  [78 81]
  ebb succs:  [81 78]
ebb entry:  78
  ebb type:   loop
  ebb blocks: [78 79]
  ebb cost:   (11 * (N([ln11; ln12], [ln12 >= (ln11 * 10)], [ln11 = 10 * 10; ln12 = 0], [ln11 = ln11 * 10; ln12 = ln12]))) + 1
  ebb exits:  [80]
  ebb succs:  [80]
  1 paths to exit 80
  [78 79]
  1 loop paths
  [78]
  1 post loop exit paths
  [79]
ebb entry:  80
  ebb type:   block
  ebb blocks: [80]
  ebb cost:   1
  ebb exits:  [81]
  ebb succs:  [81]
ebb entry:  81
  ebb type:   block
  ebb blocks: [81 82 83 84 85]
  ebb cost:   65
  ebb exits:  [86 89 122]
  ebb succs:  [122 89 86]
ebb entry:  86
  ebb type:   loop
  ebb blocks: [86 87]
  ebb cost:   (11 * (N([ln12], [(ln12 + 1) != 8], [ln12 = (((((select(pn3 < 0, pn3, 6)) - (select((pn5 || 32) == 102, 0, 0))) - (((select(pn3 < 0, pn3, 6)) != 0) && ((pn5 || 32) == 103))) + 9216) - ((((((select(pn3 < 0, pn3, 6)) - (select((pn5 || 32) == 102, 0, 0))) - (((select(pn3 < 0, pn3, 6)) != 0) && ((pn5 || 32) == 103))) + 9216) /s 9) * 9)) + 1], [ln12 = ln12 + 1]))) + 1
  ebb exits:  [88]
  ebb succs:  [88]
  1 paths to exit 88
  [86 87]
  1 loop paths
  [86]
  1 post loop exit paths
  [87]
ebb entry:  88
  ebb type:   block
  ebb blocks: [88]
  ebb cost:   1
  ebb exits:  [89]
  ebb succs:  [89]
ebb entry:  89
  ebb type:   block
  ebb blocks: [89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109]
  ebb cost:   110
  ebb exits:  [110 116 121]
  ebb succs:  [121 116 110]
ebb entry:  110
  ebb type:   loop
  ebb blocks: [110 111 112 113 114]
  ebb cost:   (list_max([
  22 * (N([], [(0 + 1) > 999999999], [], []));
  29 * (N([], [(0 + 1) > 999999999], [], []))
])) + (list_max([1; 1]))
  ebb exits:  [115]
  ebb succs:  [115]
  2 paths to exit 115
  [110 111 113 114]
  [110 111 112 113 114]
  2 loop paths
  [110 111 113]  [110 111 112 113]
  2 post loop exit paths
  [114]  [114]
ebb entry:  115
  ebb type:   block
  ebb blocks: [115]
  ebb cost:   1
  ebb exits:  [116]
  ebb succs:  [116]
ebb entry:  116
  ebb type:   block
  ebb blocks: [116 117]
  ebb cost:   17
  ebb exits:  [118 121]
  ebb succs:  [121 118]
ebb entry:  118
  ebb type:   loop
  ebb blocks: [118 119]
  ebb cost:   (11 * (N([ln11; ln12], [ln12 >= (ln11 * 10)], [ln11 = 0; ln12 = 0], [ln11 = ln11 * 10; ln12 = ln12]))) + 1
  ebb exits:  [120]
  ebb succs:  [120]
  1 paths to exit 120
  [118 119]
  1 loop paths
  [118]
  1 post loop exit paths
  [119]
ebb entry:  120
  ebb type:   block
  ebb blocks: [120]
  ebb cost:   1
  ebb exits:  [121]
  ebb succs:  [121]
ebb entry:  121
  ebb type:   block
  ebb blocks: [121]
  ebb cost:   11
  ebb exits:  [122]
  ebb succs:  [122]
ebb entry:  122
  ebb type:   block
  ebb blocks: [122 123]
  ebb cost:   2
  ebb exits:  [124]
  ebb succs:  [124]
ebb entry:  124
  ebb type:   loop
  ebb blocks: [124 125 126]
  ebb cost:   (13 * (N([m[0]], [i32.eqz(m[0])], [m[0] = m[0]], [m[0] = m[0]]))) + 1
  ebb exits:  [127 128]
  ebb succs:  [128 127]
  1 paths to exit 127
  [124 125 126]
  1 paths to exit 128
  [124]
  1 loop paths
  [124 125]
  1 post loop exit paths
  [126]
ebb entry:  127
  ebb type:   block
  ebb blocks: [127]
  ebb cost:   1
  ebb exits:  [128]
  ebb succs:  [128]
ebb entry:  128
  ebb type:   block
  ebb blocks: [128 129 130 131 132 133 134 135 136 137 138]
  ebb cost:   59
  ebb exits:  [139 142 147]
  ebb succs:  [147 142 139]
ebb entry:  139
  ebb type:   loop
  ebb blocks: [139 140]
  ebb cost:   (13 * (N([ln12; ln21], [i32.eqz(ln21 rem_u (ln12 * 10))], [ln12 = 0; ln21 = 0], [ln12 = ln12 * 10; ln21 = ln21]))) + 1
  ebb exits:  [141]
  ebb succs:  [141]
  1 paths to exit 141
  [139 140]
  1 loop paths
  [139]
  1 post loop exit paths
  [140]
ebb entry:  141
  ebb type:   block
  ebb blocks: [141]
  ebb cost:   5
  ebb exits:  [142]
  ebb succs:  [142]
ebb entry:  142
  ebb type:   block
  ebb blocks: [142 143 144 145 146]
  ebb cost:   38
  ebb exits:  [147]
  ebb succs:  [147]
ebb entry:  147
  ebb type:   block
  ebb blocks: [147 148 149 150 151 152 153 154 155 156]
  ebb cost:   48
  ebb exits:  [157 160 162 268]
  ebb succs:  [268 162 160 157]
ebb entry:  157
  ebb type:   loop
  ebb blocks: [157 158]
  ebb cost:   (12 * (N([ln10; ln13], [(ln13 - (ln10 + -1)) < 2], [ln10 = 0; ln13 = 0], [ln10 = ln10 + -1; ln13 = ln13]))) + 1
  ebb exits:  [159]
  ebb succs:  [159]
  1 paths to exit 159
  [157 158]
  1 loop paths
  [157]
  1 post loop exit paths
  [158]
ebb entry:  159
  ebb type:   block
  ebb blocks: [159]
  ebb cost:   1
  ebb exits:  [160]
  ebb succs:  [160]
ebb entry:  160
  ebb type:   block
  ebb blocks: [160 161]
  ebb cost:   28
  ebb exits:  [162 268]
  ebb succs:  [268 162]
ebb entry:  162
  ebb type:   block
  ebb blocks: [162 163 164 165 166 167 168]
  ebb cost:   61
  ebb exits:  [169 201 268]
  ebb succs:  [268 201 169]
ebb entry:  169
  ebb type:   loop
  ebb blocks: [169 170 171 172 173 174 175 176 177 178 179 180 181 182]
  ebb cost:   (list_max([
  (28 + (list_sum([|f34|; |f39|]))) * (N([ln17; ln18], [(ln18 + 4) <= ln17], [ln17 = 0; ln18 = 0], [ln17 = ln17; ln18 = ln18 + 4]));
  (34 + (list_sum([|f34|; |f39|]))) * (N([ln17; ln18], [(ln18 + 4) <= ln17], [ln17 = 0; ln18 = 0], [ln17 = ln17; ln18 = ln18 + 4]));
  (30 + (list_sum([|f34|; |f39|]))) * (N([ln17; ln18], [(ln18 + 4) <= ln17], [ln17 = 0; ln18 = 0], [ln17 = ln17; ln18 = ln18 + 4]));
  (44 + (list_sum([|f34|; |f39|]))) * (N([ln17; ln18], [(ln18 + 4) <= ln17], [ln17 = 0; ln18 = 0], [ln17 = ln17; ln18 = ln18 + 4]))
])) + (list_max([1; 1; 1; 1]))
  ebb exits:  [183 270]
  ebb succs:  []
  4 paths to exit 183
  [169 170 171 179 181 182]
  [169 170 171 179 180 181 182]
  [169 170 171 172 181 182]
  [169 170 171 172 173 174 175 181 182]
  0 paths to exit 270

  4 loop paths
  [169 170 171 179 181]  [169 170 171 179 180 181]  [169 170 171 172 181]  [169 170 171 172 173 174 175 181]
  4 post loop exit paths
  [182]  [182]  [182]  [182]
nested ebbs:
  ebb entry:  169
    ebb type:   block
    ebb blocks: [169 170 171 172 173]
    ebb cost:   18
    ebb exits:  [174 179 181]
    ebb succs:  [181 179 174 181 179 174]
  ebb entry:  174
    ebb type:   loop
    ebb blocks: [174 175 176]
    ebb cost:   (12 * (N([ln10; ln6], [(ln10 + -1) > (ln6 + 16)], [ln10 = 0; ln6 = 0], [ln10 = ln10 + -1; ln6 = ln6]))) + 1
    ebb exits:  [181]
    ebb succs:  [181 181]
    1 paths to exit 181
    [174 175]
    1 loop paths
    [174]
    1 post loop exit paths
    [175]
  ebb entry:  177
    ebb type:   block
    ebb blocks: [177 178]
    ebb cost:   1
    ebb exits:  [179 270]
    ebb succs:  [270 179 179]
  ebb entry:  179
    ebb type:   block
    ebb blocks: [179 180]
    ebb cost:   10
    ebb exits:  [181]
    ebb succs:  [181 181]
  ebb entry:  181
    ebb type:   block
    ebb blocks: [181 182]
    ebb cost:   14
    ebb exits:  [169 183]
    ebb succs:  [183 169 169]
ebb entry:  183
  ebb type:   block
  ebb blocks: [183 184 185 186 187 188]
  ebb cost:   18
  ebb exits:  [189 225]
  ebb succs:  [225 189]
ebb entry:  189
  ebb type:   loop
  ebb blocks: [189 190 191 192 193 194 195 196 197 198]
  ebb cost:   (list_max([
  (39 + (list_sum([|f34|; |f39|]))) * (N([ln15], [ln15 > 9], [ln15 = 0], [ln15 = ln15 + -9]));
  (54 + (list_sum([|f34|; |f39|]))) * (N([ln15], [ln15 > 9], [ln15 = 0], [ln15 = ln15 + -9]))
])) + (list_max([1; 1]))
  ebb exits:  [226]
  ebb succs:  []
  4 paths to exit 226
  [189 190 195 196 197]
  [189 190 195]
  [189 190 191 192 193 194 195 196 197]
  [189 190 191 192 193 194 195]
  2 loop paths
  [189 190 195 196]  [189 190 191 192 193 194 195 196]
  2 post loop exit paths
  [197]  [197]
nested ebbs:
  ebb entry:  189
    ebb type:   block
    ebb blocks: [189 190 191]
    ebb cost:   12
    ebb exits:  [192 195]
    ebb succs:  [195 192 195 192]
  ebb entry:  192
    ebb type:   loop
    ebb blocks: [192 193]
    ebb cost:   (12 * (N([ln10; ln6], [(ln10 + -1) > (ln6 + 16)], [ln10 = 0; ln6 = 0], [ln10 = ln10 + -1; ln6 = ln6]))) + 1
    ebb exits:  [194]
    ebb succs:  [194 194]
    1 paths to exit 194
    [192 193]
    1 loop paths
    [192]
    1 post loop exit paths
    [193]
  ebb entry:  194
    ebb type:   block
    ebb blocks: [194]
    ebb cost:   1
    ebb exits:  [195]
    ebb succs:  [195 195]
  ebb entry:  195
    ebb type:   block
    ebb blocks: [195 196 197 198]
    ebb cost:   29
    ebb exits:  [189 226]
    ebb succs:  [226 189 189]
ebb entry:  199
  ebb type:   block
  ebb blocks: [199 200]
  ebb cost:   1
  ebb exits:  [201 270]
  ebb succs:  [270 201]
ebb entry:  201
  ebb type:   block
  ebb blocks: [201 202 203]
  ebb cost:   29
  ebb exits:  [204 223]
  ebb succs:  [223 204]
ebb entry:  204
  ebb type:   loop
  ebb blocks: [204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221]
  ebb cost:   (list_max([
  (55 + (list_sum([|f34|; |f39|]))) * (N([ln15; pn3; rn0], [(ln15 - (pn3 - (rn0 + 1))) > -1], [ln15 = 0; pn3 = pn3; rn0 = rn0], [ln15 = ln15 - (pn3 - (rn0 + 1)); pn3 = pn3; rn0 = rn0]));
  (60 + (list_sum([|f34|; |f39|]))) * (N([ln15; pn3; rn0], [(ln15 - (pn3 - (rn0 + 1))) > -1], [ln15 = 0; pn3 = pn3; rn0 = rn0], [ln15 = ln15 - (pn3 - (rn0 + 1)); pn3 = pn3; rn0 = rn0]));
  (48 + (list_sum([|f34|; |f39|]))) * (N([ln15; pn3; rn0], [(ln15 - (pn3 - rn0)) > -1], [ln15 = 0; pn3 = pn3; rn0 = rn0], [ln15 = ln15 - (pn3 - rn0); pn3 = pn3; rn0 = rn0]));
  (62 + (list_sum([|f34|; |f39|]))) * (N([ln15; pn3; rn0], [(ln15 - (pn3 - (rn0 + -1))) > -1], [ln15 = 0; pn3 = pn3; rn0 = rn0], [ln15 = ln15 - (pn3 - (rn0 + -1)); pn3 = pn3; rn0 = rn0]));
  (61 + (list_sum([|f34|; |f39|]))) * (N([ln15; ln17; pn3], [(ln15 - (pn3 - (ln17 + 1))) > -1], [ln15 = 0; ln17 = 0; pn3 = pn3], [ln15 = ln15 - (pn3 - (ln17 + 1)); ln17 = ln17; pn3 = pn3]));
  (66 + (list_sum([|f34|; |f39|]))) * (N([ln15; ln17; pn3], [(ln15 - (pn3 - (ln17 + 1))) > -1], [ln15 = 0; ln17 = 0; pn3 = pn3], [ln15 = ln15 - (pn3 - (ln17 + 1)); ln17 = ln17; pn3 = pn3]));
  (54 + (list_sum([|f34|; |f39|]))) * (N([ln15; ln17; pn3], [(ln15 - (pn3 - ln17)) > -1], [ln15 = 0; ln17 = 0; pn3 = pn3], [ln15 = ln15 - (pn3 - ln17); ln17 = ln17; pn3 = pn3]));
  (68 + (list_sum([|f34|; |f39|]))) * (N([ln15; ln17; pn3], [(ln15 - (pn3 - (ln17 + -1))) > -1], [ln15 = 0; ln17 = 0; pn3 = pn3], [ln15 = ln15 - (pn3 - (ln17 + -1)); ln17 = ln17; pn3 = pn3]))
])) + (list_max([1; 1; 1; 1; 1; 1; 1; 1]))
  ebb exits:  [222 223 270]
  ebb succs:  []
  8 paths to exit 222
  [204 205 207 208 209 217 219 220 221]
  [204 205 207 208 209 217 218 219 220 221]
  [204 205 207 208 209 210 219 220 221]
  [204 205 207 208 209 210 211 212 213 219 220 221]
  [204 205 206 207 208 209 217 219 220 221]
  [204 205 206 207 208 209 217 218 219 220 221]
  [204 205 206 207 208 209 210 219 220 221]
  [204 205 206 207 208 209 210 211 212 213 219 220 221]
  8 paths to exit 223
  [204 205 207 208 209 217 219]
  [204 205 207 208 209 217 218 219]
  [204 205 207 208 209 210 219]
  [204 205 207 208 209 210 211 212 213 219]
  [204 205 206 207 208 209 217 219]
  [204 205 206 207 208 209 217 218 219]
  [204 205 206 207 208 209 210 219]
  [204 205 206 207 208 209 210 211 212 213 219]
  0 paths to exit 270

  8 loop paths
  [204 205 207 208 209 217 219 220]  [204 205 207 208 209 217 218 219 220]  [204 205 207 208 209 210 219 220]  [204 205 207 208 209 210 211 212 213 219 220]  [204 205 206 207 208 209 217 219 220]  [204 205 206 207 208 209 217 218 219 220]  [204 205 206 207 208 209 210 219 220]  [204 205 206 207 208 209 210 211 212 213 219 220]
  8 post loop exit paths
  [221]  [221]  [221]  [221]  [221]  [221]  [221]  [221]
nested ebbs:
  ebb entry:  204
    ebb type:   block
    ebb blocks: [204 205 206 207 208 209 210 211]
    ebb cost:   28
    ebb exits:  [212 217 219]
    ebb succs:  [219 217 212 219 217 212]
  ebb entry:  212
    ebb type:   loop
    ebb blocks: [212 213 214]
    ebb cost:   (12 * (N([ln10; ln6], [(ln10 + -1) > (ln6 + 16)], [ln10 = 0; ln6 = 0], [ln10 = ln10 + -1; ln6 = ln6]))) + 1
    ebb exits:  [219]
    ebb succs:  [219 219]
    1 paths to exit 219
    [212 213]
    1 loop paths
    [212]
    1 post loop exit paths
    [213]
  ebb entry:  215
    ebb type:   block
    ebb blocks: [215 216]
    ebb cost:   1
    ebb exits:  [217 270]
    ebb succs:  [270 217 217]
  ebb entry:  217
    ebb type:   block
    ebb blocks: [217 218]
    ebb cost:   18
    ebb exits:  [219]
    ebb succs:  [219 219]
  ebb entry:  219
    ebb type:   block
    ebb blocks: [219 220 221]
    ebb cost:   28
    ebb exits:  [204 222 223]
    ebb succs:  [223 222 204 204]
ebb entry:  222
  ebb type:   block
  ebb blocks: [222]
  ebb cost:   1
  ebb exits:  [223]
  ebb succs:  [223]
ebb entry:  223
  ebb type:   block
  ebb blocks: [223 224]
  ebb cost:   15
  ebb exits:  [225 227]
  ebb succs:  [227 225]
ebb entry:  225
  ebb type:   block
  ebb blocks: [225]
  ebb cost:   3
  ebb exits:  [226]
  ebb succs:  [226]
ebb entry:  226
  ebb type:   block
  ebb blocks: [226]
  ebb cost:   9
  ebb exits:  [227]
  ebb succs:  [227]
ebb entry:  227
  ebb type:   block
  ebb blocks: [227 228]
  ebb cost:   16
  ebb exits:  [229 268]
  ebb succs:  [268 229]
ebb entry:  229
  ebb type:   block
  ebb blocks: [229 230 231]
  ebb cost:   22
  ebb exits:  [232 239]
  ebb succs:  [239 232]
ebb entry:  232
  ebb type:   loop
  ebb blocks: [232 233]
  ebb cost:   (9 * (N([ln10], [ln10 + -1], [ln10 = 0], [ln10 = ln10 + -1]))) + 1
  ebb exits:  [234]
  ebb succs:  [234]
  1 paths to exit 234
  [232 233]
  1 loop paths
  [232]
  1 post loop exit paths
  [233]
ebb entry:  234
  ebb type:   block
  ebb blocks: [234 235 236 237 238]
  ebb cost:   15
  ebb exits:  [239]
  ebb succs:  [239]
ebb entry:  239
  ebb type:   block
  ebb blocks: [239 240 241 242]
  ebb cost:   64
  ebb exits:  [243]
  ebb succs:  [243]
ebb entry:  243
  ebb type:   loop
  ebb blocks: [243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258]
  ebb cost:   (list_max([
  44 * (N([pF1], [((pF1 - (f64.convert_i32_s(-2147483648))) * 16.) != 0.], [pF1 = pF1], [pF1 = (pF1 - (f64.convert_i32_s(-2147483648))) * 16.]));
  55 * (N([pF1], [((pF1 - (f64.convert_i32_s(-2147483648))) * 16.) != 0.], [pF1 = pF1], [pF1 = (pF1 - (f64.convert_i32_s(-2147483648))) * 16.]));
  59 * (N([pF1], [((pF1 - (f64.convert_i32_s(-2147483648))) * 16.) != 0.], [pF1 = pF1], [pF1 = (pF1 - (f64.convert_i32_s(-2147483648))) * 16.]));
  55 * (N([pF1], [((pF1 - (f64.convert_i32_s(-2147483648))) * 16.) != 0.], [pF1 = pF1], [pF1 = (pF1 - (f64.convert_i32_s(-2147483648))) * 16.]));
  64 * (N([pF1], [((pF1 - (f64.convert_i32_s(-2147483648))) * 16.) != 0.], [pF1 = pF1], [pF1 = (pF1 - (f64.convert_i32_s(-2147483648))) * 16.]));
  45 * (N([pF1], [((pF1 - (f64.convert_i32_s(i32.trunc_f64_s(pF1)))) * 16.) != 0.], [pF1 = pF1], [pF1 = (pF1 - (f64.convert_i32_s(i32.trunc_f64_s(pF1)))) * 16.]));
  56 * (N([pF1], [((pF1 - (f64.convert_i32_s(i32.trunc_f64_s(pF1)))) * 16.) != 0.], [pF1 = pF1], [pF1 = (pF1 - (f64.convert_i32_s(i32.trunc_f64_s(pF1)))) * 16.]));
  60 * (N([pF1], [((pF1 - (f64.convert_i32_s(i32.trunc_f64_s(pF1)))) * 16.) != 0.], [pF1 = pF1], [pF1 = (pF1 - (f64.convert_i32_s(i32.trunc_f64_s(pF1)))) * 16.]));
  56 * (N([pF1], [((pF1 - (f64.convert_i32_s(i32.trunc_f64_s(pF1)))) * 16.) != 0.], [pF1 = pF1], [pF1 = (pF1 - (f64.convert_i32_s(i32.trunc_f64_s(pF1)))) * 16.]));
  65 * (N([pF1], [((pF1 - (f64.convert_i32_s(i32.trunc_f64_s(pF1)))) * 16.) != 0.], [pF1 = pF1], [pF1 = (pF1 - (f64.convert_i32_s(i32.trunc_f64_s(pF1)))) * 16.]))
])) + (list_max([1; 1; 1; 1; 1; 1; 1; 1; 1; 1]))
  ebb exits:  [259]
  ebb succs:  [259]
  10 paths to exit 259
  [243 244 245 248 249 250 257 258]
  [243 244 245 248 249 250 251 252 256 257 258]
  [243 244 245 248 249 250 251 252 253 256 257 258]
  [243 244 245 248 249 250 251 252 253 254 257 258]
  [243 244 245 248 249 250 251 252 253 254 255 256 257 258]
  [243 244 245 246 249 250 257 258]
  [243 244 245 246 249 250 251 252 256 257 258]
  [243 244 245 246 249 250 251 252 253 256 257 258]
  [243 244 245 246 249 250 251 252 253 254 257 258]
  [243 244 245 246 249 250 251 252 253 254 255 256 257 258]
  10 loop paths
  [243 244 245 248 249 250 257]  [243 244 245 248 249 250 251 252 256 257]  [243 244 245 248 249 250 251 252 253 256 257]  [243 244 245 248 249 250 251 252 253 254 257]  [243 244 245 248 249 250 251 252 253 254 255 256 257]  [243 244 245 246 249 250 257]  [243 244 245 246 249 250 251 252 256 257]  [243 244 245 246 249 250 251 252 253 256 257]  [243 244 245 246 249 250 251 252 253 254 257]  [243 244 245 246 249 250 251 252 253 254 255 256 257]
  10 post loop exit paths
  [258]  [258]  [258]  [258]  [258]  [258]  [258]  [258]  [258]  [258]
ebb entry:  259
  ebb type:   block
  ebb blocks: [259 260 261 262 263 264 265 266 267]
  ebb cost:   93
  ebb exits:  [268]
  ebb succs:  [268]
ebb entry:  268
  ebb type:   block
  ebb blocks: [268 269]
  ebb cost:   6
  ebb exits:  [269]
  ebb succs:  []
ebb entry:  270
  ebb type:   block
  ebb blocks: [270]
  ebb cost:   0
  ebb exits:  []
  ebb succs:  []
