ebb entry:  0
  ebb type:   block
  ebb blocks: [0 1 2 3 4 5 6 7 8 9 10 11]
  ebb cost:   23
  ebb exits:  [12 21 70]
  ebb succs:  [12 21 70]
ebb entry:  12
  ebb type:   loop
  ebb blocks: [12 13 14]
  ebb cost:   ((15 + |f16|) * (N([m[1]], [m[1]], [m[1]], [m[1]]))) + 1
  ebb exits:  [15 17]
  ebb succs:  [15 17]
  1 paths to exit 15
  [12 13 14]
  1 paths to exit 17
  [12]
  1 loop paths
  [12 13]
  1 post loop exit paths
  [14]
ebb entry:  15
  ebb type:   block
  ebb blocks: [15 16]
  ebb cost:   3
  ebb exits:  [17 21]
  ebb succs:  [17 21]
ebb entry:  17
  ebb type:   block
  ebb blocks: [17 18 19 20]
  ebb cost:   20
  ebb exits:  [21]
  ebb succs:  [21]
ebb entry:  21
  ebb type:   block
  ebb blocks: [21 22 23 24 25 26 27 28 29 30 31 32 33]
  ebb cost:   42
  ebb exits:  [34]
  ebb succs:  [34]
ebb entry:  34
  ebb type:   loop
  ebb blocks: [34 35 36 37 38 39 40 41 42 43 44 45 46 47 48]
  ebb cost:   (list_max([
  (75 + |f48|) * (N([lN11; lN12; m[0]], [not((lN12 * lN11) > (((i64.extend_i32_u(m[0] + -87)) & 255) xor -1))], [i64.extend_i32_u(select(pn2, 10, pn2)); 0; m[0]], [lN11; (lN12 * lN11) + ((i64.extend_i32_u(m[0] + -87)) & 255); m[0]]));
  (66 + |f48|) * (N([lN11; lN12; m[0]], [not((lN12 * lN11) > (((i64.extend_i32_u(m[0] + -87)) & 255) xor -1))], [i64.extend_i32_u(select(pn2, 10, pn2)); 0; m[0]], [lN11; lN12; m[0]]));
  (53 + |f48|) * (N([m[8]], [not(m[8] != 0)], [m[8]], [m[8]]));
  (83 + |f48|) * (N([lN11; lN12; m[0]], [not((lN12 * lN11) > (((i64.extend_i32_u(m[0] + -55)) & 255) xor -1))], [i64.extend_i32_u(select(pn2, 10, pn2)); 0; m[0]], [lN11; (lN12 * lN11) + ((i64.extend_i32_u(m[0] + -55)) & 255); m[0]]));
  (74 + |f48|) * (N([lN11; lN12; m[0]], [not((lN12 * lN11) > (((i64.extend_i32_u(m[0] + -55)) & 255) xor -1))], [i64.extend_i32_u(select(pn2, 10, pn2)); 0; m[0]], [lN11; lN12; m[0]]));
  (61 + |f48|) * (N([m[8]], [not(m[8] != 0)], [m[8]], [m[8]]));
  (61 + |f48|) * (N([lN11; lN12; m[0]], [not((lN12 * lN11) > (((i64.extend_i32_u(m[0] + -48)) & 255) xor -1))], [i64.extend_i32_u(select(pn2, 10, pn2)); 0; m[0]], [lN11; (lN12 * lN11) + ((i64.extend_i32_u(m[0] + -48)) & 255); m[0]]));
  (52 + |f48|) * (N([lN11; lN12; m[0]], [not((lN12 * lN11) > (((i64.extend_i32_u(m[0] + -48)) & 255) xor -1))], [i64.extend_i32_u(select(pn2, 10, pn2)); 0; m[0]], [lN11; lN12; m[0]]));
  (39 + |f48|) * (N([m[8]], [not(m[8] != 0)], [m[8]], [m[8]]))
])) + Empty
  ebb exits:  [49 50]
  ebb succs:  [49 50]
  0 paths to exit 49

  4 paths to exit 50
  [34 35 42]
  [34 35 36 37 40 41 42]
  [34 35 36 37 40]
  [34 35 36 37 38 42]
  9 loop paths
  [34 35 42 43 44 47]  [34 35 42 43 44 45 47]  [34 35 42 43 44 45 46 47]  [34 35 36 37 40 41 42 43 44 47]  [34 35 36 37 40 41 42 43 44 45 47]  [34 35 36 37 40 41 42 43 44 45 46 47]  [34 35 36 37 38 42 43 44 47]  [34 35 36 37 38 42 43 44 45 47]  [34 35 36 37 38 42 43 44 45 46 47]
ebb entry:  49
  ebb type:   block
  ebb blocks: [49]
  ebb cost:   1
  ebb exits:  [50]
  ebb succs:  [50]
ebb entry:  50
  ebb type:   block
  ebb blocks: [50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69]
  ebb cost:   51
  ebb exits:  [70]
  ebb succs:  [70]
ebb entry:  70
  ebb type:   block
  ebb blocks: [70 71]
  ebb cost:   6
  ebb exits:  [71]
  ebb succs:  []
ebb costs:
[0]: 23
[12]: (((15 + |f16|) * N([m[1]], [m[1]], [m[1]], [m[1]])) + 1)
[15]: 3
[17]: 20
[21]: 42
[34]: (list_max(((75 + |f48|) * N([lN11; lN12; m[0]], [not(((lN12 * lN11) > ((i64.extend_i32_u((m[0] + -87)) & 255) xor -1)))], [i64.extend_i32_uselect(pn2, 10, pn2); 0; m[0]], [lN11; ((lN12 * lN11) + (i64.extend_i32_u(m[0] + -87) & 255)); m[0]])), ((66 + |f48|) * N([lN11; lN12; m[0]], [not(((lN12 * lN11) > ((i64.extend_i32_u((m[0] + -87)) & 255) xor -1)))], [i64.extend_i32_uselect(pn2, 10, pn2); 0; m[0]], [lN11; lN12; m[0]])), ((53 + |f48|) * N([m[8]], [not((m[8] != 0))], [m[8]], [m[8]])), ((83 + |f48|) * N([lN11; lN12; m[0]], [not(((lN12 * lN11) > ((i64.extend_i32_u((m[0] + -55)) & 255) xor -1)))], [i64.extend_i32_uselect(pn2, 10, pn2); 0; m[0]], [lN11; ((lN12 * lN11) + (i64.extend_i32_u(m[0] + -55) & 255)); m[0]])), ((74 + |f48|) * N([lN11; lN12; m[0]], [not(((lN12 * lN11) > ((i64.extend_i32_u((m[0] + -55)) & 255) xor -1)))], [i64.extend_i32_uselect(pn2, 10, pn2); 0; m[0]], [lN11; lN12; m[0]])), ((61 + |f48|) * N([m[8]], [not((m[8] != 0))], [m[8]], [m[8]])), ((61 + |f48|) * N([lN11; lN12; m[0]], [not(((lN12 * lN11) > ((i64.extend_i32_u((m[0] + -48)) & 255) xor -1)))], [i64.extend_i32_uselect(pn2, 10, pn2); 0; m[0]], [lN11; ((lN12 * lN11) + (i64.extend_i32_u(m[0] + -48) & 255)); m[0]])), ((52 + |f48|) * N([lN11; lN12; m[0]], [not(((lN12 * lN11) > ((i64.extend_i32_u((m[0] + -48)) & 255) xor -1)))], [i64.extend_i32_uselect(pn2, 10, pn2); 0; m[0]], [lN11; lN12; m[0]])), ((39 + |f48|) * N([m[8]], [not((m[8] != 0))], [m[8]], [m[8]]))) + Empty)
[49]: 1
[50]: 51
[70]: 6
9 ebb paths found
[0 70]
[0 21 34 50 70]
[0 21 34 49 50 70]
[0 12 17 21 34 50 70]
[0 12 17 21 34 49 50 70]
[0 12 15 21 34 50 70]
[0 12 15 21 34 49 50 70]
[0 12 15 17 21 34 50 70]
[0 12 15 17 21 34 49 50 70]
