ebb entry:  0
  ebb type:   block
  ebb blocks: [0 1 2 3 4 5 6]
  ebb cost:   26
  ebb exits:  [7 21 22 25]
  ebb succs:  [25 22 21 7]
  1 paths to exit 7
  [0 1 2 3 4 5 6]
  2 paths to exit 21
  [0 1 2 3 4 5 6]
  [0 1 2 3 4 5]
  1 paths to exit 22
  [0 1 2 3]
  1 paths to exit 25
  [0 1]
ebb entry:  7
  ebb type:   block
  ebb blocks: [7]
  ebb cost:   1
  ebb exits:  [8]
  ebb succs:  [8]
  1 paths to exit 8
  [7]
ebb entry:  8
  ebb type:   loop
  ebb blocks: [8 9 10 11 12 13 14 15 16 17 18]
  ebb cost:   (81 * I(not((i32.load@(((ln3 + ln6) - (((i32.load@((ln3 + ln6) - 4)) + ((i32.load@((ln3 + ln6) - 4)) shr_s 31)) xor ((i32.load@((ln3 + ln6) - 4)) shr_s 31))) - 4)) > 0), ln6 = ((g1 + 4203908));ln3 = ((g1 + 4203908));ln6 = ((g1 + 4203908));ln3 = ((g1 + 4203908));ln6 = ((g1 + 4203908));ln3 = ((g1 + 4203908));ln6 = ((g1 + 4203908));ln3 = ((g1 + 4203908)), ln6 = (ln2);ln3 = (ln2);ln6 = (ln2);ln3 = (ln2);ln6 = (ln2);ln3 = (ln2);ln6 = (ln2);ln3 = (ln2))) + 0
  ebb exits:  [19 22]
  ebb succs:  [22 19]
  0 paths to exit 19

  6 paths to exit 22
  [8 9 10 11 13 14 15 16]
  [8 9 10 11 13 14 15]
  [8 9 10 11 13 14]
  [8 9 10 11 12 14 15 16]
  [8 9 10 11 12 14 15]
  [8 9 10 11 12 14]
  2 loop paths
  [8 9 10 11 13 14 15 16 17]  [8 9 10 11 12 14 15 16 17]
  ebb entry:  8
    ebb type:   block
    ebb blocks: [8]
    ebb cost:   25
    ebb exits:  [9]
    ebb succs:  [9]
    2 paths to exit 9
    [8 9]
    [8]
  ebb entry:  9
    ebb type:   loop
    ebb blocks: [9 10]
    ebb cost:   (20 * I((ln1 - (((i32.load@(ln1 - 4)) + ((i32.load@(ln1 - 4)) shr_s 31)) xor ((i32.load@(ln1 - 4)) shr_s 31))) > pn0, pn0 = pn0;ln1 = (ln3 + ln6) - (((((ln3 + ln6) - 4)) + ((((ln3 + ln6) - 4)) shr_s 31)) xor ((((ln3 + ln6) - 4)) shr_s 31));ln1 = (ln3 + ln6) - (((((ln3 + ln6) - 4)) + ((((ln3 + ln6) - 4)) shr_s 31)) xor ((((ln3 + ln6) - 4)) shr_s 31));ln1 = (ln3 + ln6) - (((((ln3 + ln6) - 4)) + ((((ln3 + ln6) - 4)) shr_s 31)) xor ((((ln3 + ln6) - 4)) shr_s 31));ln1 = (ln3 + ln6) - (((((ln3 + ln6) - 4)) + ((((ln3 + ln6) - 4)) shr_s 31)) xor ((((ln3 + ln6) - 4)) shr_s 31)), pn0 = pn0;ln1 = ln1 - ((((ln1 - 4)) + (((ln1 - 4)) shr_s 31)) xor (((ln1 - 4)) shr_s 31));ln1 = ln1 - ((((ln1 - 4)) + (((ln1 - 4)) shr_s 31)) xor (((ln1 - 4)) shr_s 31));ln1 = ln1 - ((((ln1 - 4)) + (((ln1 - 4)) shr_s 31)) xor (((ln1 - 4)) shr_s 31));ln1 = ln1 - ((((ln1 - 4)) + (((ln1 - 4)) shr_s 31)) xor (((ln1 - 4)) shr_s 31)))) + 1
    ebb exits:  [11]
    ebb succs:  [11]
    1 paths to exit 11
    [9 10]
    1 loop paths
    [9]
    1 post loop exit paths
    [10]
  ebb entry:  11
    ebb type:   block
    ebb blocks: [11 12 13 14 15 16 17 18]
    ebb cost:   39
    ebb exits:  [8 19 22]
    ebb succs:  [8]
    0 paths to exit 8

    0 paths to exit 19

    6 paths to exit 22
    [11 13 14 15 16]
    [11 13 14 15]
    [11 13 14]
    [11 12 14 15 16]
    [11 12 14 15]
    [11 12 14]
ebb entry:  19
  ebb type:   block
  ebb blocks: [19 20]
  ebb cost:   1
  ebb exits:  [21 29]
  ebb succs:  [29 21]
  0 paths to exit 21

  1 paths to exit 29
  [19]
ebb entry:  21
  ebb type:   block
  ebb blocks: [21]
  ebb cost:   3
  ebb exits:  [22]
  ebb succs:  [22]
  1 paths to exit 22
  [21]
ebb entry:  22
  ebb type:   block
  ebb blocks: [22 23 24]
  ebb cost:   18
  ebb exits:  [25 26 28]
  ebb succs:  [28 26 25]
  0 paths to exit 25

  1 paths to exit 26
  [22]
  1 paths to exit 28
  [22 23]
ebb entry:  25
  ebb type:   block
  ebb blocks: [25]
  ebb cost:   3
  ebb exits:  [26]
  ebb succs:  [26]
  1 paths to exit 26
  [25]
ebb entry:  26
  ebb type:   block
  ebb blocks: [26 27]
  ebb cost:   1
  ebb exits:  [27]
  ebb succs:  []
  1 paths to exit 27
  [26]
ebb entry:  28
  ebb type:   block
  ebb blocks: [28]
  ebb cost:   0
  ebb exits:  []
  ebb succs:  []
ebb entry:  29
  ebb type:   block
  ebb blocks: [29]
  ebb cost:   0
  ebb exits:  []
  ebb succs:  []
