ebb entry:  0
  ebb type:   block
  ebb blocks: [0 1 2]
  ebb cost:   list_max([22; 22])
  ebb exits:  [3 30]
  ebb succs:  [30 3]
  1 paths to exit 3
  [0 1 2]
  1 paths to exit 30
  [0 1 2]
ebb entry:  3
  ebb type:   block
  ebb blocks: [3]
  ebb cost:   3
  ebb exits:  [4]
  ebb succs:  [4]
  1 paths to exit 4
  [3]
ebb entry:  4
  ebb type:   loop
  ebb blocks: [4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27]
  ebb cost:   (list_max([[64 + (list_max([|f312|; |f567|]))*I(not((ln8 - rn0) < 1), rn0 = rn0;ln8 = ((pn1)) - rn0, rn0 = rn0;ln8 = ln8 - rn0); 72 + (list_max([|f312|; |f567|]))*I(not((ln8 - rn0) < 1), rn0 = rn0;ln8 = ((pn1)) - rn0, rn0 = rn0;ln8 = ln8 - rn0); 77 + (list_max([|f312|; |f567|]))*I(not((ln8 - rn0) < 1), rn0 = rn0;ln8 = ((pn1)) - rn0, rn0 = rn0;ln8 = ln8 - rn0); 85 + (list_max([|f312|; |f567|]))*I(not((ln8 - rn0) < 1), rn0 = rn0;ln8 = ((pn1)) - rn0, rn0 = rn0;ln8 = ln8 - rn0); 95 + (list_max([|f246|; |f312|; |f523|]))*I(not(((ln8 - rn0) - rn0) < 1), rn0 = rn0;rn0 = rn0;ln8 = ((pn1)) - rn0, rn0 = rn0;rn0 = rn0;ln8 = (ln8 - rn0) - rn0); 103 + (list_max([|f246|; |f312|; |f523|]))*I(not(((ln8 - rn0) - rn0) < 1), rn0 = rn0;rn0 = rn0;ln8 = ((pn1)) - rn0, rn0 = rn0;rn0 = rn0;ln8 = (ln8 - rn0) - rn0); 91 + (list_max([|f312|; |f523|]))*I(not(((ln8 - (i32.load@(pn0))) - rn0) < 1), rn0 = rn0;pn0 = pn0;ln8 = ((pn1)) - rn0, rn0 = rn0;pn0 = pn0;ln8 = (ln8 - ((pn0))) - rn0); 99 + (list_max([|f312|; |f523|]))*I(not(((ln8 - (i32.load@(pn0))) - rn0) < 1), rn0 = rn0;pn0 = pn0;ln8 = ((pn1)) - rn0, rn0 = rn0;pn0 = pn0;ln8 = (ln8 - ((pn0))) - rn0); 59 + |f312|*I(not((ln8 - (i32.load@(pn4 + ((ln6 - ln5) shl 2)))) < 1), ln5 = rn0;ln6 = ((g0 - 16)) + 1;pn4 = pn4;ln8 = ((pn1)) - rn0, ln5 = (pn0);ln6 = ((ln7)) + 1;pn4 = pn4;ln8 = ln8 - ((pn4 + ((ln6 - ln5) shl 2)))); 75 + (list_max([|f312|; |f567|]))*I(not((ln8 - rn0) < 1), rn0 = rn0;ln8 = ((pn1)) - rn0, rn0 = rn0;ln8 = ln8 - rn0); 83 + (list_max([|f312|; |f567|]))*I(not((ln8 - rn0) < 1), rn0 = rn0;ln8 = ((pn1)) - rn0, rn0 = rn0;ln8 = ln8 - rn0); 88 + (list_max([|f312|; |f567|]))*I(not((ln8 - rn0) < 1), rn0 = rn0;ln8 = ((pn1)) - rn0, rn0 = rn0;ln8 = ln8 - rn0); 96 + (list_max([|f312|; |f567|]))*I(not((ln8 - rn0) < 1), rn0 = rn0;ln8 = ((pn1)) - rn0, rn0 = rn0;ln8 = ln8 - rn0); 106 + (list_max([|f246|; |f312|; |f523|]))*I(not(((ln8 - rn0) - rn0) < 1), rn0 = rn0;rn0 = rn0;ln8 = ((pn1)) - rn0, rn0 = rn0;rn0 = rn0;ln8 = (ln8 - rn0) - rn0); 114 + (list_max([|f246|; |f312|; |f523|]))*I(not(((ln8 - rn0) - rn0) < 1), rn0 = rn0;rn0 = rn0;ln8 = ((pn1)) - rn0, rn0 = rn0;rn0 = rn0;ln8 = (ln8 - rn0) - rn0); 102 + (list_max([|f312|; |f523|]))*I(not(((ln8 - (i32.load@(pn0))) - rn0) < 1), rn0 = rn0;pn0 = pn0;ln8 = ((pn1)) - rn0, rn0 = rn0;pn0 = pn0;ln8 = (ln8 - ((pn0))) - rn0); 110 + (list_max([|f312|; |f523|]))*I(not(((ln8 - (i32.load@(pn0))) - rn0) < 1), rn0 = rn0;pn0 = pn0;ln8 = ((pn1)) - rn0, rn0 = rn0;pn0 = pn0;ln8 = (ln8 - ((pn0))) - rn0)]])) + 
  ebb exits:  [28 30 31 36]
  ebb succs:  [36 31 30 28]
  0 paths to exit 28

  34 paths to exit 30
  [4 5 8 9 10 19 20 22 23 24]
  [4 5 8 9 10 19 20 22]
  [4 5 8 9 10 19 20 21 22 23 24]
  [4 5 8 9 10 19 20 21 22]
  [4 5 8 9 10 11 19 20 22 23 24]
  [4 5 8 9 10 11 19 20 22]
  [4 5 8 9 10 11 19 20 21 22 23 24]
  [4 5 8 9 10 11 19 20 21 22]
  [4 5 8 9 10 11 12 13 16 17 20 22 23 24]
  [4 5 8 9 10 11 12 13 16 17 20 22]
  [4 5 8 9 10 11 12 13 16 17 20 21 22 23 24]
  [4 5 8 9 10 11 12 13 16 17 20 21 22]
  [4 5 8 9 10 11 12 13 14 17 20 22 23 24]
  [4 5 8 9 10 11 12 13 14 17 20 22]
  [4 5 8 9 10 11 12 13 14 17 20 21 22 23 24]
  [4 5 8 9 10 11 12 13 14 17 20 21 22]
  [4 5 6 22 23 24]
  [4 5 6 22]
  [4 5 6 7 8 9 10 19 20 22 23 24]
  [4 5 6 7 8 9 10 19 20 22]
  [4 5 6 7 8 9 10 19 20 21 22 23 24]
  [4 5 6 7 8 9 10 19 20 21 22]
  [4 5 6 7 8 9 10 11 19 20 22 23 24]
  [4 5 6 7 8 9 10 11 19 20 22]
  [4 5 6 7 8 9 10 11 19 20 21 22 23 24]
  [4 5 6 7 8 9 10 11 19 20 21 22]
  [4 5 6 7 8 9 10 11 12 13 16 17 20 22 23 24]
  [4 5 6 7 8 9 10 11 12 13 16 17 20 22]
  [4 5 6 7 8 9 10 11 12 13 16 17 20 21 22 23 24]
  [4 5 6 7 8 9 10 11 12 13 16 17 20 21 22]
  [4 5 6 7 8 9 10 11 12 13 14 17 20 22 23 24]
  [4 5 6 7 8 9 10 11 12 13 14 17 20 22]
  [4 5 6 7 8 9 10 11 12 13 14 17 20 21 22 23 24]
  [4 5 6 7 8 9 10 11 12 13 14 17 20 21 22]
  17 paths to exit 31
  [4 5 8 9 10 19 20 22 23]
  [4 5 8 9 10 19 20 21 22 23]
  [4 5 8 9 10 11 19 20 22 23]
  [4 5 8 9 10 11 19 20 21 22 23]
  [4 5 8 9 10 11 12 13 16 17 20 22 23]
  [4 5 8 9 10 11 12 13 16 17 20 21 22 23]
  [4 5 8 9 10 11 12 13 14 17 20 22 23]
  [4 5 8 9 10 11 12 13 14 17 20 21 22 23]
  [4 5 6 22 23]
  [4 5 6 7 8 9 10 19 20 22 23]
  [4 5 6 7 8 9 10 19 20 21 22 23]
  [4 5 6 7 8 9 10 11 19 20 22 23]
  [4 5 6 7 8 9 10 11 19 20 21 22 23]
  [4 5 6 7 8 9 10 11 12 13 16 17 20 22 23]
  [4 5 6 7 8 9 10 11 12 13 16 17 20 21 22 23]
  [4 5 6 7 8 9 10 11 12 13 14 17 20 22 23]
  [4 5 6 7 8 9 10 11 12 13 14 17 20 21 22 23]
  0 paths to exit 36

  17 loop paths
  [4 5 8 9 10 19 20 22 23 24 25]  [4 5 8 9 10 19 20 21 22 23 24 25]  [4 5 8 9 10 11 19 20 22 23 24 25]  [4 5 8 9 10 11 19 20 21 22 23 24 25]  [4 5 8 9 10 11 12 13 16 17 20 22 23 24 25]  [4 5 8 9 10 11 12 13 16 17 20 21 22 23 24 25]  [4 5 8 9 10 11 12 13 14 17 20 22 23 24 25]  [4 5 8 9 10 11 12 13 14 17 20 21 22 23 24 25]  [4 5 6 22 23 24 25]  [4 5 6 7 8 9 10 19 20 22 23 24 25]  [4 5 6 7 8 9 10 19 20 21 22 23 24 25]  [4 5 6 7 8 9 10 11 19 20 22 23 24 25]  [4 5 6 7 8 9 10 11 19 20 21 22 23 24 25]  [4 5 6 7 8 9 10 11 12 13 16 17 20 22 23 24 25]  [4 5 6 7 8 9 10 11 12 13 16 17 20 21 22 23 24 25]  [4 5 6 7 8 9 10 11 12 13 14 17 20 22 23 24 25]  [4 5 6 7 8 9 10 11 12 13 14 17 20 21 22 23 24 25]
ebb entry:  28
  ebb type:   block
  ebb blocks: [28 29]
  ebb cost:   1
  ebb exits:  [30 36]
  ebb succs:  [36 30]
  0 paths to exit 30

  1 paths to exit 36
  [28]
ebb entry:  30
  ebb type:   block
  ebb blocks: [30]
  ebb cost:   28 + (list_max([|f403|; |f486|]))
  ebb exits:  [31]
  ebb succs:  [31]
  1 paths to exit 31
  [30]
ebb entry:  31
  ebb type:   block
  ebb blocks: [31 32 33 34 35]
  ebb cost:   list_max([33 + |f403|; 30 + |f403|])
  ebb exits:  [35]
  ebb succs:  []
  2 paths to exit 35
  [31 33 34]
  [31 32 34]
ebb entry:  36
  ebb type:   block
  ebb blocks: [36]
  ebb cost:   
  ebb exits:  []
  ebb succs:  []
