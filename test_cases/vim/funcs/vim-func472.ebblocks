ebb entry:  0
  ebb type:   block
  ebb blocks: [0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23]
  ebb cost:   list_max([82; 95 + |f1052|; 86 + |f328|; 86; 99 + |f1052|; 90 + |f328|; 76; 70; 89 + |f1052|; 83 + |f1052|; 80 + |f328|; 74 + |f328|; 42; 27; 80; 74; 93 + |f1052|; 87 + |f1052|; 84 + |f328|; 78 + |f328|; 46; 31; 85; 98 + |f1052|; 83 + |f1052|; 89 + |f328|; 74 + |f328|; 89; 102 + |f1052|; 87 + |f1052|; 93 + |f328|; 78 + |f328|])
  ebb exits:  [24 33 35]
  ebb succs:  [35 33 24]
  6 paths to exit 24
  [0 2 3 4 5 6 7 8 9 10 11 15 19 20 21]
  [0 2 3 4 5 6 7 8 9 10 11 15 16 19 20 21]
  [0 2 3 4 5 6 7 8 9 10 11 12 19 20 21]
  [0 1 2 3 4 5 6 7 8 9 10 11 15 19 20 21]
  [0 1 2 3 4 5 6 7 8 9 10 11 15 16 19 20 21]
  [0 1 2 3 4 5 6 7 8 9 10 11 12 19 20 21]
  16 paths to exit 33
  [0 2 3 4 5 6 7 8 9 10 11 15 19 20]
  [0 2 3 4 5 6 7 8 9 10 11 15 19]
  [0 2 3 4 5 6 7 8 9 10 11 15 16 19 20]
  [0 2 3 4 5 6 7 8 9 10 11 15 16 19]
  [0 2 3 4 5 6 7 8 9 10 11 12 19 20]
  [0 2 3 4 5 6 7 8 9 10 11 12 19]
  [0 2 3 4 5 6 7 8 9]
  [0 2 3 4 5 6 7 8]
  [0 1 2 3 4 5 6 7 8 9 10 11 15 19 20]
  [0 1 2 3 4 5 6 7 8 9 10 11 15 19]
  [0 1 2 3 4 5 6 7 8 9 10 11 15 16 19 20]
  [0 1 2 3 4 5 6 7 8 9 10 11 15 16 19]
  [0 1 2 3 4 5 6 7 8 9 10 11 12 19 20]
  [0 1 2 3 4 5 6 7 8 9 10 11 12 19]
  [0 1 2 3 4 5 6 7 8 9]
  [0 1 2 3 4 5 6 7 8]
  10 paths to exit 35
  [0 2 3 4 5 6 7 8 9 10 11 15 19 20 21 22]
  [0 2 3 4 5 6 7 8 9 10 11 15 16 19 20 21 22]
  [0 2 3 4 5 6 7 8 9 10 11 15 16 17]
  [0 2 3 4 5 6 7 8 9 10 11 12 19 20 21 22]
  [0 2 3 4 5 6 7 8 9 10 11 12 13]
  [0 1 2 3 4 5 6 7 8 9 10 11 15 19 20 21 22]
  [0 1 2 3 4 5 6 7 8 9 10 11 15 16 19 20 21 22]
  [0 1 2 3 4 5 6 7 8 9 10 11 15 16 17]
  [0 1 2 3 4 5 6 7 8 9 10 11 12 19 20 21 22]
  [0 1 2 3 4 5 6 7 8 9 10 11 12 13]
ebb entry:  24
  ebb type:   block
  ebb blocks: [24]
  ebb cost:   1
  ebb exits:  [25]
  ebb succs:  [25]
  1 paths to exit 25
  [24]
ebb entry:  25
  ebb type:   loop
  ebb blocks: [25 26 27 28 29 30]
  ebb cost:   21*I(((i32.load8_u@(ln8 + (ln9 + 1))) + -48) <= 9, ln9 = 1 + 1;ln8 = select(((pn0)) == 45, pn0, pn0 + 1), ln9 = ln9 + 1;ln8 = ln8) + (list_max([1; 3]))
  ebb exits:  [31 33 37]
  ebb succs:  [37 33 31]
  1 paths to exit 31
  [25 26 29 30]
  1 paths to exit 33
  [25]
  1 paths to exit 37
  [25 26 27]
  1 loop paths
  [25 26 29]
  2 post loop exit paths
  [30]  [27]
ebb entry:  31
  ebb type:   block
  ebb blocks: [31 32]
  ebb cost:   3
  ebb exits:  [33 35]
  ebb succs:  [35 33]
  0 paths to exit 33

  1 paths to exit 35
  [31]
ebb entry:  33
  ebb type:   block
  ebb blocks: [33 34]
  ebb cost:   3
  ebb exits:  [35 37]
  ebb succs:  [37 35]
  0 paths to exit 35

  1 paths to exit 37
  [33]
ebb entry:  35
  ebb type:   block
  ebb blocks: [35 36]
  ebb cost:   list_max([7; 6])
  ebb exits:  [37 39]
  ebb succs:  [39 37]
  1 paths to exit 37
  [35 36]
  1 paths to exit 39
  [35]
ebb entry:  37
  ebb type:   block
  ebb blocks: [37 38]
  ebb cost:   list_max([7; 6])
  ebb exits:  [39 57]
  ebb succs:  [57 39]
  1 paths to exit 39
  [37 38]
  1 paths to exit 57
  [37]
ebb entry:  39
  ebb type:   block
  ebb blocks: [39]
  ebb cost:   list_max([13; 13])
  ebb exits:  [40 129]
  ebb succs:  [129 40]
  1 paths to exit 40
  [39]
  1 paths to exit 129
  [39]
ebb entry:  40
  ebb type:   block
  ebb blocks: [40]
  ebb cost:   5
  ebb exits:  [41]
  ebb succs:  [41]
  1 paths to exit 41
  [40]
ebb entry:  41
  ebb type:   loop
  ebb blocks: [41 42 43 44 45 46 47 48 49 50 51 52 53 54]
  ebb cost:   (list_max([[46*I(((i32.load8_u@(ln8 + 1)) && 254) == 48, ln8 = (select(((pn0)) == 45, pn0, pn0 + 1)) + 1, ln8 = ln8 + 1); 51*I(((i32.load8_u@(ln8 + 1)) && 254) == 48, ln8 = (select(((pn0)) == 45, pn0, pn0 + 1)) + 1, ln8 = ln8 + 1); 58*I(((i32.load8_u@(ln8 + 1)) && 254) == 48, ln8 = (select(((pn0)) == 45, pn0, pn0 + 1)) + 1, ln8 = ln8 + 1); 66*I(((i32.load8_u@(ln8 + 2)) && 254) == 48, ln8 = (select(((pn0)) == 45, pn0, pn0 + 1)) + 1, ln8 = ln8 + 2)]])) + (list_max([1; 1; 1; 1; 5]))
  ebb exits:  [55 129]
  ebb succs:  [129 55]
  4 paths to exit 55
  [41 44 45 46 52 53 54]
  [41 44 45 46 47 52 53 54]
  [41 44 45 46 47 48 52 53 54]
  [41 44 45 46 47 48 49 50 53 54]
  2 paths to exit 129
  [41 44 45 46 47 48 49]
  [41 42]
  4 loop paths
  [41 44 45 46 52 53]  [41 44 45 46 47 52 53]  [41 44 45 46 47 48 52 53]  [41 44 45 46 47 48 49 50 53]
  5 post loop exit paths
  [54]  [54]  [54]  [54]  [42]
ebb entry:  55
  ebb type:   block
  ebb blocks: [55 56]
  ebb cost:   1
  ebb exits:  [57 129]
  ebb succs:  [129 57]
  0 paths to exit 57

  1 paths to exit 129
  [55]
ebb entry:  57
  ebb type:   block
  ebb blocks: [57 58 59 60]
  ebb cost:   list_max([22; 14; 22])
  ebb exits:  [61 80 127]
  ebb succs:  [127 80 61]
  1 paths to exit 61
  [57 58 59 60]
  1 paths to exit 80
  [57 58 59]
  1 paths to exit 127
  [57 58 59 60]
ebb entry:  61
  ebb type:   block
  ebb blocks: [61]
  ebb cost:   7
  ebb exits:  [62]
  ebb succs:  [62]
  1 paths to exit 62
  [61]
ebb entry:  62
  ebb type:   loop
  ebb blocks: [62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77]
  ebb cost:   (list_max([[46*I(((i32.load8_u@(ln8 + 1)) && 248) == 48, ln8 = select(((pn0)) == 45, pn0, pn0 + 1), ln8 = ln8 + 1); 51*I(((i32.load8_u@(ln8 + 1)) && 248) == 48, ln8 = select(((pn0)) == 45, pn0, pn0 + 1), ln8 = ln8 + 1); 58*I(((i32.load8_u@(ln8 + 1)) && 248) == 48, ln8 = select(((pn0)) == 45, pn0, pn0 + 1), ln8 = ln8 + 1); 66*I(((i32.load8_u@(ln8 + 2)) && 248) == 48, ln8 = select(((pn0)) == 45, pn0, pn0 + 1), ln8 = ln8 + 2)]])) + (list_max([2; 2; 2; 2; 3; 3]))
  ebb exits:  [78 129]
  ebb succs:  [129 78]
  5 paths to exit 78
  [62 65 66 67 68 74 75 76 77]
  [62 65 66 67 68 69 74 75 76 77]
  [62 65 66 67 68 69 70 74 75 76 77]
  [62 65 66 67 68 69 70 71 75 76 77]
  [62 65 66 67 68 69 70 71 72 77]
  1 paths to exit 129
  [62 63]
  4 loop paths
  [62 65 66 67 68 74 75]  [62 65 66 67 68 69 74 75]  [62 65 66 67 68 69 70 74 75]  [62 65 66 67 68 69 70 71 75]
  6 post loop exit paths
  [76 77]  [76 77]  [76 77]  [76 77]  [72 77]  [63]
ebb entry:  78
  ebb type:   block
  ebb blocks: [78 79]
  ebb cost:   3
  ebb exits:  [80 129]
  ebb succs:  [129 80]
  0 paths to exit 80

  1 paths to exit 129
  [78]
ebb entry:  80
  ebb type:   block
  ebb blocks: [80 81]
  ebb cost:   list_max([19; 9; 19])
  ebb exits:  [82 106 127]
  ebb succs:  [127 106 82]
  1 paths to exit 82
  [80 81]
  1 paths to exit 106
  [80]
  1 paths to exit 127
  [80 81]
ebb entry:  82
  ebb type:   block
  ebb blocks: [82]
  ebb cost:   7
  ebb exits:  [83]
  ebb succs:  [83]
  1 paths to exit 83
  [82]
ebb entry:  83
  ebb type:   loop
  ebb blocks: [83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103]
  ebb cost:   (list_max([[45*I(((i32.load8_u@(ln8 + 1)) + -48) < 10, ln8 = (select(((pn0)) == 45, pn0, pn0 + 1)) + 1, ln8 = ln8 + 1); 50*I(((i32.load8_u@(ln8 + 1)) + -48) < 10, ln8 = (select(((pn0)) == 45, pn0, pn0 + 1)) + 1, ln8 = ln8 + 1); 57*I(((i32.load8_u@(ln8 + 1)) + -48) < 10, ln8 = (select(((pn0)) == 45, pn0, pn0 + 1)) + 1, ln8 = ln8 + 1); 65*I(((i32.load8_u@(ln8 + 2)) + -48) < 10, ln8 = (select(((pn0)) == 45, pn0, pn0 + 1)) + 1, ln8 = ln8 + 2); 47*I(((i32.load8_u@(ln8 + 1)) + -48) < 10, ln8 = (select(((pn0)) == 45, pn0, pn0 + 1)) + 1, ln8 = ln8 + 1); 52*I(((i32.load8_u@(ln8 + 1)) + -48) < 10, ln8 = (select(((pn0)) == 45, pn0, pn0 + 1)) + 1, ln8 = ln8 + 1); 59*I(((i32.load8_u@(ln8 + 1)) + -48) < 10, ln8 = (select(((pn0)) == 45, pn0, pn0 + 1)) + 1, ln8 = ln8 + 1); 67*I(((i32.load8_u@(ln8 + 2)) + -48) < 10, ln8 = (select(((pn0)) == 45, pn0, pn0 + 1)) + 1, ln8 = ln8 + 2); 56*I(((i32.load8_u@(ln8 + 1)) + -48) < 10, ln8 = (select(((pn0)) == 45, pn0, pn0 + 1)) + 1, ln8 = ln8 + 1); 61*I(((i32.load8_u@(ln8 + 1)) + -48) < 10, ln8 = (select(((pn0)) == 45, pn0, pn0 + 1)) + 1, ln8 = ln8 + 1); 68*I(((i32.load8_u@(ln8 + 1)) + -48) < 10, ln8 = (select(((pn0)) == 45, pn0, pn0 + 1)) + 1, ln8 = ln8 + 1); 76*I(((i32.load8_u@(ln8 + 2)) + -48) < 10, ln8 = (select(((pn0)) == 45, pn0, pn0 + 1)) + 1, ln8 = ln8 + 2)]])) + (list_max([2; 2; 2; 1; 2; 2; 2; 2; 1; 2; 2; 2; 2; 1; 2; 3; 3; 3]))
  ebb exits:  [104 129]
  ebb succs:  [129 104]
  15 paths to exit 104
  [83 84 87 88 91 92 93 94 100 101 102 103]
  [83 84 87 88 91 92 93 94 95 100 101 102 103]
  [83 84 87 88 91 92 93 94 95 96 100 101 102 103]
  [83 84 87 88 91 92 93 94 95 96 97 103]
  [83 84 87 88 91 92 93 94 95 96 97 98 101 102 103]
  [83 84 85 88 91 92 93 94 100 101 102 103]
  [83 84 85 88 91 92 93 94 95 100 101 102 103]
  [83 84 85 88 91 92 93 94 95 96 100 101 102 103]
  [83 84 85 88 91 92 93 94 95 96 97 103]
  [83 84 85 88 91 92 93 94 95 96 97 98 101 102 103]
  [83 84 85 86 87 88 91 92 93 94 100 101 102 103]
  [83 84 85 86 87 88 91 92 93 94 95 100 101 102 103]
  [83 84 85 86 87 88 91 92 93 94 95 96 100 101 102 103]
  [83 84 85 86 87 88 91 92 93 94 95 96 97 103]
  [83 84 85 86 87 88 91 92 93 94 95 96 97 98 101 102 103]
  3 paths to exit 129
  [83 84 87 88 89]
  [83 84 85 88 89]
  [83 84 85 86 87 88 89]
  12 loop paths
  [83 84 87 88 91 92 93 94 100 101]  [83 84 87 88 91 92 93 94 95 100 101]  [83 84 87 88 91 92 93 94 95 96 100 101]  [83 84 87 88 91 92 93 94 95 96 97 98 101]  [83 84 85 88 91 92 93 94 100 101]  [83 84 85 88 91 92 93 94 95 100 101]  [83 84 85 88 91 92 93 94 95 96 100 101]  [83 84 85 88 91 92 93 94 95 96 97 98 101]  [83 84 85 86 87 88 91 92 93 94 100 101]  [83 84 85 86 87 88 91 92 93 94 95 100 101]  [83 84 85 86 87 88 91 92 93 94 95 96 100 101]  [83 84 85 86 87 88 91 92 93 94 95 96 97 98 101]
  18 post loop exit paths
  [102 103]  [102 103]  [102 103]  [103]  [102 103]  [102 103]  [102 103]  [102 103]  [103]  [102 103]  [102 103]  [102 103]  [102 103]  [103]  [102 103]  [89]  [89]  [89]
ebb entry:  104
  ebb type:   block
  ebb blocks: [104 105]
  ebb cost:   3
  ebb exits:  [106 129]
  ebb succs:  [129 106]
  0 paths to exit 106

  1 paths to exit 129
  [104]
ebb entry:  106
  ebb type:   block
  ebb blocks: [106]
  ebb cost:   list_max([11 + |f328|; 11 + |f328|])
  ebb exits:  [107 128]
  ebb succs:  [128 107]
  1 paths to exit 107
  [106]
  1 paths to exit 128
  [106]
ebb entry:  107
  ebb type:   block
  ebb blocks: [107]
  ebb cost:   6
  ebb exits:  [108]
  ebb succs:  [108]
  1 paths to exit 108
  [107]
ebb entry:  108
  ebb type:   loop
  ebb blocks: [108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124]
  ebb cost:   (list_max([[36 + |f328|*I(rn0, rn0 = rn0, rn0 = rn0); 41 + |f328|*I(rn0, rn0 = rn0, rn0 = rn0); 46 + |f328|*I(rn0, rn0 = rn0, rn0 = rn0); 54 + |f328|*I(rn0, rn0 = rn0, rn0 = rn0); 42 + (list_max([|f328|; |f786|]))*I(rn0, rn0 = rn0, rn0 = rn0); 47 + (list_max([|f328|; |f786|]))*I(rn0, rn0 = rn0, rn0 = rn0); 52 + (list_max([|f328|; |f786|]))*I(rn0, rn0 = rn0, rn0 = rn0); 60 + (list_max([|f328|; |f786|]))*I(rn0, rn0 = rn0, rn0 = rn0)]])) + (list_max([1; 1; 1; 1; 1; 1; 1; 1; 5; 5]))
  ebb exits:  [125 129]
  ebb succs:  [129 125]
  8 paths to exit 125
  [108 110 111 114 115 116 122 123 124]
  [108 110 111 114 115 116 117 122 123 124]
  [108 110 111 114 115 116 117 118 122 123 124]
  [108 110 111 114 115 116 117 118 119 120 123 124]
  [108 109 111 114 115 116 122 123 124]
  [108 109 111 114 115 116 117 122 123 124]
  [108 109 111 114 115 116 117 118 122 123 124]
  [108 109 111 114 115 116 117 118 119 120 123 124]
  4 paths to exit 129
  [108 110 111 114 115 116 117 118 119]
  [108 110 111 112]
  [108 109 111 114 115 116 117 118 119]
  [108 109 111 112]
  8 loop paths
  [108 110 111 114 115 116 122 123]  [108 110 111 114 115 116 117 122 123]  [108 110 111 114 115 116 117 118 122 123]  [108 110 111 114 115 116 117 118 119 120 123]  [108 109 111 114 115 116 122 123]  [108 109 111 114 115 116 117 122 123]  [108 109 111 114 115 116 117 118 122 123]  [108 109 111 114 115 116 117 118 119 120 123]
  10 post loop exit paths
  [124]  [124]  [124]  [124]  [124]  [124]  [124]  [124]  [112]  [112]
ebb entry:  125
  ebb type:   block
  ebb blocks: [125 126]
  ebb cost:   1
  ebb exits:  [127 129]
  ebb succs:  [129 127]
  0 paths to exit 127

  1 paths to exit 129
  [125]
ebb entry:  127
  ebb type:   block
  ebb blocks: [127]
  ebb cost:   2
  ebb exits:  [128]
  ebb succs:  [128]
  1 paths to exit 128
  [127]
ebb entry:  128
  ebb type:   block
  ebb blocks: [128]
  ebb cost:   2
  ebb exits:  [129]
  ebb succs:  [129]
  1 paths to exit 129
  [128]
ebb entry:  129
  ebb type:   block
  ebb blocks: [129 130 131 132 133 134 135 136 137 138 139 140 141 142]
  ebb cost:   list_max([21; 25; 48; 52; 27; 31; 54; 58; 25; 29; 52; 56; 31; 35; 58; 62; 28; 38; 42; 65; 69; 44; 48; 71; 75; 42; 46; 69; 73; 48; 52; 75; 79])
  ebb exits:  [142]
  ebb succs:  []
  33 paths to exit 142
  [129 130 133 135 137 139 141]
  [129 130 133 135 137 139 140 141]
  [129 130 133 135 137 138 139 141]
  [129 130 133 135 137 138 139 140 141]
  [129 130 133 135 136 137 139 141]
  [129 130 133 135 136 137 139 140 141]
  [129 130 133 135 136 137 138 139 141]
  [129 130 133 135 136 137 138 139 140 141]
  [129 130 133 134 135 137 139 141]
  [129 130 133 134 135 137 139 140 141]
  [129 130 133 134 135 137 138 139 141]
  [129 130 133 134 135 137 138 139 140 141]
  [129 130 133 134 135 136 137 139 141]
  [129 130 133 134 135 136 137 139 140 141]
  [129 130 133 134 135 136 137 138 139 141]
  [129 130 133 134 135 136 137 138 139 140 141]
  [129 130 131 141]
  [129 130 131 132 133 135 137 139 141]
  [129 130 131 132 133 135 137 139 140 141]
  [129 130 131 132 133 135 137 138 139 141]
  [129 130 131 132 133 135 137 138 139 140 141]
  [129 130 131 132 133 135 136 137 139 141]
  [129 130 131 132 133 135 136 137 139 140 141]
  [129 130 131 132 133 135 136 137 138 139 141]
  [129 130 131 132 133 135 136 137 138 139 140 141]
  [129 130 131 132 133 134 135 137 139 141]
  [129 130 131 132 133 134 135 137 139 140 141]
  [129 130 131 132 133 134 135 137 138 139 141]
  [129 130 131 132 133 134 135 137 138 139 140 141]
  [129 130 131 132 133 134 135 136 137 139 141]
  [129 130 131 132 133 134 135 136 137 139 140 141]
  [129 130 131 132 133 134 135 136 137 138 139 141]
  [129 130 131 132 133 134 135 136 137 138 139 140 141]
