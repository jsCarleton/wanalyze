ebb entry:  0
  ebb type:   block
  ebb blocks: [0 1 2 3 4 5 6 7 8 9]
  ebb cost:   list_max([48; 54 + |f105|; 44; 48; 54 + |f105|; 44; 35 + |f105|; 18])
  ebb exits:  [10 19 20]
  ebb succs:  [20 19 10]
  3 paths to exit 10
  [0 1 2 3 6 9]
  [0 1 2 3 6 7 8 9]
  [0 1 2 3 4 9]
  3 paths to exit 19
  [0 1 2 3 6 9]
  [0 1 2 3 6 7 8 9]
  [0 1 2 3 4 9]
  2 paths to exit 20
  [0 1 2 3 6 7]
  [0 1]
ebb entry:  10
  ebb type:   block
  ebb blocks: [10]
  ebb cost:   3
  ebb exits:  [11]
  ebb succs:  [11]
  1 paths to exit 11
  [10]
ebb entry:  11
  ebb type:   loop
  ebb blocks: [11 12 13 14 15 16 17]
  ebb cost:   (list_max([[35*I(i32.load@(ln6 + (((((ln5 shr_u 5) + (ln8 * 5)) + 1) && ln7) shl 3)), ln7 = (pn0);ln8 = (pn2 + ((((pn0)) && pn2) * 5)) + 1;ln5 = pn2;ln6 = (pn0), ln7 = ln7;ln8 = ((ln5 shr_u 5) + (ln8 * 5)) + 1;ln5 = ln5 shr_u 5;ln6 = ln6); 40*I(i32.load@(ln6 + (((((ln5 shr_u 5) + (ln8 * 5)) + 1) && ln7) shl 3)), ln7 = (pn0);ln8 = (pn2 + ((((pn0)) && pn2) * 5)) + 1;ln5 = pn2;ln6 = (pn0), ln7 = ln7;ln8 = ((ln5 shr_u 5) + (ln8 * 5)) + 1;ln5 = ln5 shr_u 5;ln6 = ln6); 46 + |f105|*I(i32.load@(ln6 + (((((ln5 shr_u 5) + (ln8 * 5)) + 1) && ln7) shl 3)), ln7 = (pn0);ln8 = (pn2 + ((((pn0)) && pn2) * 5)) + 1;ln5 = pn2;ln6 = (pn0), ln7 = ln7;ln8 = ((ln5 shr_u 5) + (ln8 * 5)) + 1;ln5 = ln5 shr_u 5;ln6 = ln6)]])) + (list_max([1; 1; 1]))
  ebb exits:  [18 20]
  ebb succs:  [20 18]
  3 paths to exit 18
  [11 12 16 17]
  [11 12 13 16 17]
  [11 12 13 14 15 16 17]
  1 paths to exit 20
  [11 12 13 14]
  3 loop paths
  [11 12 16]  [11 12 13 16]  [11 12 13 14 15 16]
  3 post loop exit paths
  [17]  [17]  [17]
ebb entry:  18
  ebb type:   block
  ebb blocks: [18]
  ebb cost:   1
  ebb exits:  [19]
  ebb succs:  [19]
  1 paths to exit 19
  [18]
ebb entry:  19
  ebb type:   block
  ebb blocks: [19]
  ebb cost:   6
  ebb exits:  [20]
  ebb succs:  [20]
  1 paths to exit 20
  [19]
ebb entry:  20
  ebb type:   block
  ebb blocks: [20 21]
  ebb cost:   2
  ebb exits:  [21]
  ebb succs:  []
  1 paths to exit 21
  [20]
