ebb entry:  0
  ebb type:   block
  ebb blocks: [0 1 2 3 4 5 6 7 8 9 10 11 12 13]
  ebb cost:   list_max([32; 38 + |f2055|; 36 + |f96|; 42 + (list_max([|f96|; |f2055|])); 32; 38 + |f2055|; 36 + |f96|; 42 + (list_max([|f96|; |f2055|])); 27; 33 + |f2055|; 31 + |f96|; 37 + (list_max([|f96|; |f2055|])); 47 + |f106|; 53 + (list_max([|f106|; |f2055|])); 51 + (list_max([|f96|; |f106|])); 57 + (list_max([|f96|; |f106|; |f2055|])); 21 + |f2055|; 25 + (list_max([|f96|; |f2055|]))])
  ebb exits:  [14 29 33 37 78]
  ebb succs:  [78 37 33 29 14]
  4 paths to exit 14
  [0 2 3 6 7 10 11 12 13]
  [0 2 3 4 5 6 7 10 11 12 13]
  [0 1 2 3 6 7 10 11 12 13]
  [0 1 2 3 4 5 6 7 10 11 12 13]
  4 paths to exit 29
  [0 2 3 6 7 10 11 12 13]
  [0 2 3 4 5 6 7 10 11 12 13]
  [0 1 2 3 6 7 10 11 12 13]
  [0 1 2 3 4 5 6 7 10 11 12 13]
  4 paths to exit 33
  [0 2 3 6 7 10 11]
  [0 2 3 4 5 6 7 10 11]
  [0 1 2 3 6 7 10 11]
  [0 1 2 3 4 5 6 7 10 11]
  4 paths to exit 37
  [0 2 3 6 7 8]
  [0 2 3 4 5 6 7 8]
  [0 1 2 3 6 7 8]
  [0 1 2 3 4 5 6 7 8]
  2 paths to exit 78
  [0 2 3 4]
  [0 1 2 3 4]
ebb entry:  14
  ebb type:   block
  ebb blocks: [14]
  ebb cost:   list_max([17; 1])
  ebb exits:  [15]
  ebb succs:  [15]
  2 paths to exit 15
  [14 15]
  [14]
ebb entry:  15
  ebb type:   loop
  ebb blocks: [15 16]
  ebb cost:   16*I(((i32.load@(215940)) + ln3) < pn1, pn1 = pn1;ln3 = rn0 + ln3, pn1 = pn1;ln3 = rn0 + ln3) + 1
  ebb exits:  [17]
  ebb succs:  [17]
  1 paths to exit 17
  [15 16]
  1 loop paths
  [15]
  1 post loop exit paths
  [16]
ebb entry:  17
  ebb type:   block
  ebb blocks: [17 18 19 20]
  ebb cost:   list_max([9; 14])
  ebb exits:  [21 26]
  ebb succs:  [26 21]
  1 paths to exit 21
  [17 18]
  1 paths to exit 26
  [17 18 19]
ebb entry:  21
  ebb type:   block
  ebb blocks: [21]
  ebb cost:   1
  ebb exits:  [22]
  ebb succs:  [22]
  1 paths to exit 22
  [21]
ebb entry:  22
  ebb type:   loop
  ebb blocks: [22 23 24]
  ebb cost:   29*I((i32.load@(224708)) > (ln3 + (i32.load@(215940))), ln3 = ((224712)) + rn0, ln3 = ln3 + rn0) + 1
  ebb exits:  [25 26]
  ebb succs:  [26 25]
  1 paths to exit 25
  [22 23 24]
  1 paths to exit 26
  [22]
  1 loop paths
  [22 23]
  1 post loop exit paths
  [24]
ebb entry:  25
  ebb type:   block
  ebb blocks: [25]
  ebb cost:   1
  ebb exits:  [26]
  ebb succs:  [26]
  1 paths to exit 26
  [25]
ebb entry:  26
  ebb type:   block
  ebb blocks: [26 27 28]
  ebb cost:   list_max([3; 4])
  ebb exits:  [29 31 36]
  ebb succs:  [36 31 29]
  0 paths to exit 29

  1 paths to exit 31
  [26]
  1 paths to exit 36
  [26 27]
ebb entry:  29
  ebb type:   block
  ebb blocks: [29 30]
  ebb cost:   list_max([9; 8])
  ebb exits:  [31 36]
  ebb succs:  [36 31]
  1 paths to exit 31
  [29 30]
  1 paths to exit 36
  [29]
ebb entry:  31
  ebb type:   block
  ebb blocks: [31 32]
  ebb cost:   8
  ebb exits:  [33 37]
  ebb succs:  [37 33]
  0 paths to exit 33

  1 paths to exit 37
  [31]
ebb entry:  33
  ebb type:   block
  ebb blocks: [33 34 35]
  ebb cost:   list_max([14; 10])
  ebb exits:  [36 37]
  ebb succs:  [37 36]
  0 paths to exit 36

  2 paths to exit 37
  [33 34]
  [33]
ebb entry:  36
  ebb type:   block
  ebb blocks: [36]
  ebb cost:   29 + |f106|
  ebb exits:  [37]
  ebb succs:  [37]
  1 paths to exit 37
  [36]
ebb entry:  37
  ebb type:   block
  ebb blocks: [37 38 39 40]
  ebb cost:   list_max([35 + (list_max([|f106|; |f152|; |f169|])); 35 + (list_max([|f106|; |f152|; |f169|])); 32 + (list_max([|f106|; |f152|])); 20 + |f106|])
  ebb exits:  [41 48 52]
  ebb succs:  [52 48 41]
  1 paths to exit 41
  [37 38 39 40]
  1 paths to exit 48
  [37 38 39 40]
  2 paths to exit 52
  [37 38 39]
  [37 38]
ebb entry:  41
  ebb type:   block
  ebb blocks: [41]
  ebb cost:   1
  ebb exits:  [42]
  ebb succs:  [42]
  1 paths to exit 42
  [41]
ebb entry:  42
  ebb type:   loop
  ebb blocks: [42 43 44 45 46]
  ebb cost:   42 + (list_max([|f152|; |f169|]))*I(rn0, rn0 = rn0, rn0 = rn0) + (list_max([1; 2]))
  ebb exits:  [47]
  ebb succs:  [47]
  2 paths to exit 47
  [42 43 46]
  [42 43 44 45 46]
  1 loop paths
  [42 43 44]
  2 post loop exit paths
  [46]  [45 46]
ebb entry:  47
  ebb type:   block
  ebb blocks: [47]
  ebb cost:   3
  ebb exits:  [49]
  ebb succs:  [49]
  1 paths to exit 49
  [47]
ebb entry:  48
  ebb type:   block
  ebb blocks: [48]
  ebb cost:   2
  ebb exits:  [49]
  ebb succs:  [49]
  1 paths to exit 49
  [48]
ebb entry:  49
  ebb type:   block
  ebb blocks: [49 50 51]
  ebb cost:   list_max([38 + |f203|; 25 + |f203|; 1])
  ebb exits:  [52]
  ebb succs:  [52]
  3 paths to exit 52
  [49 50 51]
  [49 50]
  [49]
ebb entry:  52
  ebb type:   block
  ebb blocks: [52 53 54 55 56 57 58 59 60 61 62 63 64]
  ebb cost:   list_max([15; 28; 18; 31; 45 + (list_max([|f213|; |f860|; |f1007|])); 58 + (list_max([|f213|; |f860|; |f1007|])); 47 + (list_max([|f860|; |f1007|])); 60 + (list_max([|f860|; |f1007|])); 50 + (list_max([|f213|; |f860|; |f1007|])); 63 + (list_max([|f213|; |f860|; |f1007|])); 15; 28; 18; 31; 45 + (list_max([|f213|; |f860|; |f1007|])); 58 + (list_max([|f213|; |f860|; |f1007|])); 47 + (list_max([|f860|; |f1007|])); 60 + (list_max([|f860|; |f1007|])); 50 + (list_max([|f213|; |f860|; |f1007|])); 63 + (list_max([|f213|; |f860|; |f1007|]))])
  ebb exits:  [65 78]
  ebb succs:  [78 65]
  10 paths to exit 65
  [52 53 61 62 64]
  [52 53 61 62 63 64]
  [52 53 54 61 62 64]
  [52 53 54 61 62 63 64]
  [52 53 54 55 56 59 60 61 62 64]
  [52 53 54 55 56 59 60 61 62 63 64]
  [52 53 54 55 56 57 60 61 62 64]
  [52 53 54 55 56 57 60 61 62 63 64]
  [52 53 54 55 56 57 58 59 60 61 62 64]
  [52 53 54 55 56 57 58 59 60 61 62 63 64]
  10 paths to exit 78
  [52 53 61 62 64]
  [52 53 61 62 63 64]
  [52 53 54 61 62 64]
  [52 53 54 61 62 63 64]
  [52 53 54 55 56 59 60 61 62 64]
  [52 53 54 55 56 59 60 61 62 63 64]
  [52 53 54 55 56 57 60 61 62 64]
  [52 53 54 55 56 57 60 61 62 63 64]
  [52 53 54 55 56 57 58 59 60 61 62 64]
  [52 53 54 55 56 57 58 59 60 61 62 63 64]
ebb entry:  65
  ebb type:   block
  ebb blocks: [65]
  ebb cost:   6
  ebb exits:  [66]
  ebb succs:  [66]
  1 paths to exit 66
  [65]
ebb entry:  66
  ebb type:   loop
  ebb blocks: [66 67 68 69 70 71 72 73 74 75 76]
  ebb cost:   (list_max([[65 + |f1226|*I(pn1 > ((((i32.load@(224700)) + (i32.load@(224712))) + ln4) + 1), ln4 = (select((rn0 + -1) > (pn1 + (0 xor -1)), rn0 + -1, ((224700)) + ((224712)))) + 0;pn1 = pn1, ln4 = ((select((rn0 + -1) > (pn1 + (ln4 xor -1)), rn0 + -1, ((224700)) + ((224712)))) + ln4) + 1;pn1 = pn1); 36 + |f1226|*I(pn1 > (ln4 + 1), ln4 = (select((rn0 + -1) > (pn1 + (0 xor -1)), rn0 + -1, ((224700)) + ((224712)))) + 0;pn1 = pn1, ln4 = ln4 + 1;pn1 = pn1); 69 + |f1226|*I(pn1 > ((((i32.load@(224700)) + (i32.load@(224712))) + ln4) + 1), ln4 = (select((rn0 + -1) > (pn1 + (0 xor -1)), rn0 + -1, ((224700)) + ((224712)))) + 0;pn1 = pn1, ln4 = ((select((rn0 + -1) > (pn1 + (ln4 xor -1)), rn0 + -1, ((224700)) + ((224712)))) + ln4) + 1;pn1 = pn1); 40 + |f1226|*I(pn1 > (ln4 + 1), ln4 = (select((rn0 + -1) > (pn1 + (0 xor -1)), rn0 + -1, ((224700)) + ((224712)))) + 0;pn1 = pn1, ln4 = ln4 + 1;pn1 = pn1); 70 + (list_max([|f1226|; |f2054|]))*I(pn1 > ((((i32.load@(224700)) + (i32.load@(224712))) + ln4) + 1), ln4 = (select((rn0 + -1) > (pn1 + (0 xor -1)), rn0 + -1, ((224700)) + ((224712)))) + 0;pn1 = pn1, ln4 = ((select((rn0 + -1) > (pn1 + (ln4 xor -1)), rn0 + -1, ((224700)) + ((224712)))) + ln4) + 1;pn1 = pn1); 41 + (list_max([|f1226|; |f2054|]))*I(pn1 > (ln4 + 1), ln4 = (select((rn0 + -1) > (pn1 + (0 xor -1)), rn0 + -1, ((224700)) + ((224712)))) + 0;pn1 = pn1, ln4 = ln4 + 1;pn1 = pn1); 74 + (list_max([|f1226|; |f2054|]))*I(pn1 > ((((i32.load@(224700)) + (i32.load@(224712))) + ln4) + 1), ln4 = (select((rn0 + -1) > (pn1 + (0 xor -1)), rn0 + -1, ((224700)) + ((224712)))) + 0;pn1 = pn1, ln4 = ((select((rn0 + -1) > (pn1 + (ln4 xor -1)), rn0 + -1, ((224700)) + ((224712)))) + ln4) + 1;pn1 = pn1); 45 + (list_max([|f1226|; |f2054|]))*I(pn1 > (ln4 + 1), ln4 = (select((rn0 + -1) > (pn1 + (0 xor -1)), rn0 + -1, ((224700)) + ((224712)))) + 0;pn1 = pn1, ln4 = ln4 + 1;pn1 = pn1)]])) + (list_max([1; 1; 1; 1; 1; 1; 1; 1]))
  ebb exits:  [77]
  ebb succs:  [77]
  8 paths to exit 77
  [66 68 70 71 74 75 76]
  [66 68 70 71 72 75 76]
  [66 68 69 70 71 74 75 76]
  [66 68 69 70 71 72 75 76]
  [66 67 68 70 71 74 75 76]
  [66 67 68 70 71 72 75 76]
  [66 67 68 69 70 71 74 75 76]
  [66 67 68 69 70 71 72 75 76]
  8 loop paths
  [66 68 70 71 74 75]  [66 68 70 71 72 75]  [66 68 69 70 71 74 75]  [66 68 69 70 71 72 75]  [66 67 68 70 71 74 75]  [66 67 68 70 71 72 75]  [66 67 68 69 70 71 74 75]  [66 67 68 69 70 71 72 75]
  8 post loop exit paths
  [76]  [76]  [76]  [76]  [76]  [76]  [76]  [76]
ebb entry:  77
  ebb type:   block
  ebb blocks: [77]
  ebb cost:   1
  ebb exits:  [78]
  ebb succs:  [78]
  1 paths to exit 78
  [77]
ebb entry:  78
  ebb type:   block
  ebb blocks: [78 79 80 81]
  ebb cost:   list_max([3; 5 + |f1045|])
  ebb exits:  [81]
  ebb succs:  []
  2 paths to exit 81
  [78 80]
  [78 79 80]
