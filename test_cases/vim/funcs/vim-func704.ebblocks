ebb entry:  0
  ebb type:   block
  ebb blocks: [0 1 2 3 4 5 6 7]
  ebb cost:   list_max([14; 19 + (list_max([|f152|; |f169|])); 23 + (list_max([|f137|; |f152|; |f169|])); 23 + |f1311|; 28 + (list_max([|f152|; |f169|; |f1311|])); 32 + (list_max([|f137|; |f152|; |f169|; |f1311|])); 14; 19 + (list_max([|f152|; |f169|])); 23 + (list_max([|f137|; |f152|; |f169|])); 23 + |f1311|; 28 + (list_max([|f152|; |f169|; |f1311|])); 32 + (list_max([|f137|; |f152|; |f169|; |f1311|]))])
  ebb exits:  [8 38]
  ebb succs:  [38 8]
  6 paths to exit 8
  [0 2 3 6 7]
  [0 2 3 4 6 7]
  [0 2 3 4 5 6 7]
  [0 1 2 3 6 7]
  [0 1 2 3 4 6 7]
  [0 1 2 3 4 5 6 7]
  6 paths to exit 38
  [0 2 3 6 7]
  [0 2 3 4 6 7]
  [0 2 3 4 5 6 7]
  [0 1 2 3 6 7]
  [0 1 2 3 4 6 7]
  [0 1 2 3 4 5 6 7]
ebb entry:  8
  ebb type:   block
  ebb blocks: [8]
  ebb cost:   3
  ebb exits:  [9]
  ebb succs:  [9]
  1 paths to exit 9
  [8]
ebb entry:  9
  ebb type:   loop
  ebb blocks: [9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35]
  ebb cost:   (list_max([[52 + (list_max([|f96|; |f137|; |f896|]))*I((pn1 + -1) > 0, pn1 = pn1 + -1, pn1 = pn1 + -1); 59 + (list_max([|f96|; |f137|; |f896|; |f1307|]))*I((pn1 + -1) > 0, pn1 = pn1 + -1, pn1 = pn1 + -1); 36 + |f896|*I((pn1 + -1) > 0, pn1 = pn1 + -1, pn1 = pn1 + -1); 61 + (list_max([|f96|; |f137|; |f896|]))*I((pn1 + -1) > 0, pn1 = pn1 + -1, pn1 = pn1 + -1); 68 + (list_max([|f96|; |f137|; |f896|; |f1307|]))*I((pn1 + -1) > 0, pn1 = pn1 + -1, pn1 = pn1 + -1); 45 + |f896|*I((pn1 + -1) > 0, pn1 = pn1 + -1, pn1 = pn1 + -1); 65 + (list_max([|f96|; |f137|; |f896|]))*I((pn1 + -1) > 0, pn1 = pn1 + -1, pn1 = pn1 + -1); 72 + (list_max([|f96|; |f137|; |f896|; |f1307|]))*I((pn1 + -1) > 0, pn1 = pn1 + -1, pn1 = pn1 + -1); 49 + |f896|*I((pn1 + -1) > 0, pn1 = pn1 + -1, pn1 = pn1 + -1); 66 + (list_max([|f137|; |f259|; |f444|; |f541|]))*I((pn1 - (i32.load@(215940))) > 0, pn1 = pn1 + -1, pn1 = pn1 - rn0); 73 + (list_max([|f137|; |f259|; |f444|; |f541|; |f1307|]))*I((pn1 - (i32.load@(215940))) > 0, pn1 = pn1 + -1, pn1 = pn1 - rn0); 52 + |f259|*I((pn1 - (i32.load@(215940))) > 0, pn1 = pn1 + -1, pn1 = pn1 - rn0); 56 + (list_max([|f96|; |f137|; |f896|; |f970|]))*I((pn1 + -1) > 0, pn1 = pn1 + -1, pn1 = pn1 + -1); 63 + (list_max([|f96|; |f137|; |f896|; |f970|; |f1307|]))*I((pn1 + -1) > 0, pn1 = pn1 + -1, pn1 = pn1 + -1); 40 + (list_max([|f896|; |f970|]))*I((pn1 + -1) > 0, pn1 = pn1 + -1, pn1 = pn1 + -1); 60 + (list_max([|f96|; |f137|; |f896|; |f970|]))*I((pn1 + -1) > 0, pn1 = pn1 + -1, pn1 = pn1 + -1); 67 + (list_max([|f96|; |f137|; |f896|; |f970|; |f1307|]))*I((pn1 + -1) > 0, pn1 = pn1 + -1, pn1 = pn1 + -1); 44 + (list_max([|f896|; |f970|]))*I((pn1 + -1) > 0, pn1 = pn1 + -1, pn1 = pn1 + -1); 61 + (list_max([|f137|; |f259|; |f444|; |f541|; |f970|]))*I((pn1 - rn0) > 0, rn0 = rn0;pn1 = pn1 + -1, rn0 = rn0;pn1 = pn1 - rn0); 68 + (list_max([|f137|; |f259|; |f444|; |f541|; |f970|; |f1307|]))*I((pn1 - rn0) > 0, rn0 = rn0;pn1 = pn1 + -1, rn0 = rn0;pn1 = pn1 - rn0); 47 + (list_max([|f259|; |f970|]))*I((pn1 - rn0) > 0, rn0 = rn0;pn1 = pn1 + -1, rn0 = rn0;pn1 = pn1 - rn0)]])) + (list_max([1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1]))
  ebb exits:  [36]
  ebb succs:  [36]
  21 paths to exit 36
  [9 10 11 12 15 28 31 33 34 35]
  [9 10 11 12 15 28 31 32 33 34 35]
  [9 10 11 12 15 28 29 34 35]
  [9 10 11 12 15 16 17 28 31 33 34 35]
  [9 10 11 12 15 16 17 28 31 32 33 34 35]
  [9 10 11 12 15 16 17 28 29 34 35]
  [9 10 11 12 15 16 17 18 28 31 33 34 35]
  [9 10 11 12 15 16 17 18 28 31 32 33 34 35]
  [9 10 11 12 15 16 17 18 28 29 34 35]
  [9 10 11 12 15 16 17 18 19 20 23 25 26 34 35]
  [9 10 11 12 15 16 17 18 19 20 23 24 25 26 34 35]
  [9 10 11 12 15 16 17 18 19 20 21 26 34 35]
  [9 10 11 12 13 17 28 31 33 34 35]
  [9 10 11 12 13 17 28 31 32 33 34 35]
  [9 10 11 12 13 17 28 29 34 35]
  [9 10 11 12 13 17 18 28 31 33 34 35]
  [9 10 11 12 13 17 18 28 31 32 33 34 35]
  [9 10 11 12 13 17 18 28 29 34 35]
  [9 10 11 12 13 17 18 19 20 23 25 26 34 35]
  [9 10 11 12 13 17 18 19 20 23 24 25 26 34 35]
  [9 10 11 12 13 17 18 19 20 21 26 34 35]
  21 loop paths
  [9 10 11 12 15 28 31 33 34]  [9 10 11 12 15 28 31 32 33 34]  [9 10 11 12 15 28 29 34]  [9 10 11 12 15 16 17 28 31 33 34]  [9 10 11 12 15 16 17 28 31 32 33 34]  [9 10 11 12 15 16 17 28 29 34]  [9 10 11 12 15 16 17 18 28 31 33 34]  [9 10 11 12 15 16 17 18 28 31 32 33 34]  [9 10 11 12 15 16 17 18 28 29 34]  [9 10 11 12 15 16 17 18 19 20 23 25 26 34]  [9 10 11 12 15 16 17 18 19 20 23 24 25 26 34]  [9 10 11 12 15 16 17 18 19 20 21 26 34]  [9 10 11 12 13 17 28 31 33 34]  [9 10 11 12 13 17 28 31 32 33 34]  [9 10 11 12 13 17 28 29 34]  [9 10 11 12 13 17 18 28 31 33 34]  [9 10 11 12 13 17 18 28 31 32 33 34]  [9 10 11 12 13 17 18 28 29 34]  [9 10 11 12 13 17 18 19 20 23 25 26 34]  [9 10 11 12 13 17 18 19 20 23 24 25 26 34]  [9 10 11 12 13 17 18 19 20 21 26 34]
  21 post loop exit paths
  [35]  [35]  [35]  [35]  [35]  [35]  [35]  [35]  [35]  [35]  [35]  [35]  [35]  [35]  [35]  [35]  [35]  [35]  [35]  [35]  [35]
ebb entry:  36
  ebb type:   block
  ebb blocks: [36 37]
  ebb cost:   list_max([11 + |f1307|; 4])
  ebb exits:  [38]
  ebb succs:  [38]
  2 paths to exit 38
  [36 37]
  [36]
ebb entry:  38
  ebb type:   block
  ebb blocks: [38 39]
  ebb cost:   2
  ebb exits:  [39]
  ebb succs:  []
  1 paths to exit 39
  [38]
