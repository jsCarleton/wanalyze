ebb entry:  0
  ebb type:   block
  ebb blocks: [0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20]
  ebb cost:   list_max([58 + (list_max([|f714|; |f850|; |f1738|])); 68 + (list_max([|f714|; |f850|; |f1738|])); 68 + (list_max([|f206|; |f714|; |f850|; |f1738|])); 78 + (list_max([|f206|; |f714|; |f850|; |f1738|])); 46 + |f714|; 56 + |f714|; 56 + (list_max([|f206|; |f714|])); 66 + (list_max([|f206|; |f714|])); 58 + (list_max([|f714|; |f850|; |f1738|])); 68 + (list_max([|f714|; |f850|; |f1738|])); 68 + (list_max([|f206|; |f714|; |f850|; |f1738|])); 78 + (list_max([|f206|; |f714|; |f850|; |f1738|])); 46 + |f714|; 56 + |f714|; 56 + (list_max([|f206|; |f714|])); 66 + (list_max([|f206|; |f714|])); 38 + (list_max([|f850|; |f1738|])); 26; 51 + (list_max([|f206|; |f714|; |f850|; |f1738|])); 39 + (list_max([|f206|; |f714|])); 14 + |f1738|; 30 + (list_max([|f98|; |f850|; |f1738|]))])
  ebb exits:  [21 37 61 127 131 134]
  ebb succs:  [134 131 127 61 37 21]
  8 paths to exit 21
  [0 1 2 3 4 7 8 11 12 13 14 17 19 20]
  [0 1 2 3 4 7 8 11 12 13 14 17 18 19 20]
  [0 1 2 3 4 7 8 11 12 13 14 15 16 17 19 20]
  [0 1 2 3 4 7 8 11 12 13 14 15 16 17 18 19 20]
  [0 1 2 3 4 5 11 12 13 14 17 19 20]
  [0 1 2 3 4 5 11 12 13 14 17 18 19 20]
  [0 1 2 3 4 5 11 12 13 14 15 16 17 19 20]
  [0 1 2 3 4 5 11 12 13 14 15 16 17 18 19 20]
  8 paths to exit 37
  [0 1 2 3 4 7 8 11 12 13 14 17 19 20]
  [0 1 2 3 4 7 8 11 12 13 14 17 18 19 20]
  [0 1 2 3 4 7 8 11 12 13 14 15 16 17 19 20]
  [0 1 2 3 4 7 8 11 12 13 14 15 16 17 18 19 20]
  [0 1 2 3 4 5 11 12 13 14 17 19 20]
  [0 1 2 3 4 5 11 12 13 14 17 18 19 20]
  [0 1 2 3 4 5 11 12 13 14 15 16 17 19 20]
  [0 1 2 3 4 5 11 12 13 14 15 16 17 18 19 20]
  2 paths to exit 61
  [0 1 2 3 4 7 8 11 12 13]
  [0 1 2 3 4 5 11 12 13]
  2 paths to exit 127
  [0 1 2 3 4 7 8 11 12 13 14 15]
  [0 1 2 3 4 5 11 12 13 14 15]
  1 paths to exit 131
  [0 1 2 3 4 7]
  1 paths to exit 134
  [0 1 2 3 4 7 8 9]
ebb entry:  21
  ebb type:   block
  ebb blocks: [21]
  ebb cost:   1
  ebb exits:  [22]
  ebb succs:  [22]
  1 paths to exit 22
  [21]
ebb entry:  22
  ebb type:   loop
  ebb blocks: [22 23 24 25 26 27 28 29 30 31 32 33 34 35]
  ebb cost:   (list_max([[37 + (list_max([|f714|; |f1076|]))*I((i32.load@(i32.load@(241700))) > rn0, rn0 = rn0, rn0 = rn0); 30 + (list_max([|f714|; |f1737|]))*I((i32.load@(i32.load@(241700))) > rn0, rn0 = rn0, rn0 = rn0); 25 + (list_max([|f714|; |f1076|]))*I((i32.load@(i32.load@(241700))) > rn0, rn0 = rn0, rn0 = rn0)]])) + (list_max([1; 1; 1]))
  ebb exits:  [36 37]
  ebb succs:  [37 36]
  3 paths to exit 36
  [22 23 24 27 30 31 32 33 34 35]
  [22 23 24 27 28 34 35]
  [22 23 24 25 34 35]
  1 paths to exit 37
  [22]
  3 loop paths
  [22 23 24 27 30 31 32 33 34]  [22 23 24 27 28 34]  [22 23 24 25 34]
  3 post loop exit paths
  [35]  [35]  [35]
  ebb entry:  22
    ebb type:   block
    ebb blocks: [22 23 24 25 26 27 28 29]
    ebb cost:   list_max([16; 23 + |f1737|; 18 + |f1076|; 5])
    ebb exits:  [30 34 37]
    ebb succs:  [34 30]
    1 paths to exit 30
    [22 23 24 27]
    2 paths to exit 34
    [22 23 24 27 28]
    [22 23 24 25]
    1 paths to exit 37
    [22]
  ebb entry:  30
    ebb type:   block
    ebb blocks: [30]
    ebb cost:   list_max([6; 1])
    ebb exits:  [31]
    ebb succs:  [31]
    2 paths to exit 31
    [30 31]
    [30]
  ebb entry:  31
    ebb type:   loop
    ebb blocks: [31 32]
    ebb cost:   5*I(i32.load@(pn3), pn3 = (((ln5))), pn3 = (pn3)) + 1
    ebb exits:  [33]
    ebb succs:  [33]
    1 paths to exit 33
    [31 32]
    1 loop paths
    [31]
    1 post loop exit paths
    [32]
  ebb entry:  33
    ebb type:   block
    ebb blocks: [33]
    ebb cost:   7 + |f1076|
    ebb exits:  [34]
    ebb succs:  [34]
    1 paths to exit 34
    [33]
  ebb entry:  34
    ebb type:   block
    ebb blocks: [34 35]
    ebb cost:   list_max([7 + |f714|; 8 + |f714|])
    ebb exits:  [22 36]
    ebb succs:  [22]
    1 paths to exit 22
    [34]
    1 paths to exit 36
    [34 35]
ebb entry:  36
  ebb type:   block
  ebb blocks: [36]
  ebb cost:   1
  ebb exits:  [37]
  ebb succs:  [37]
  1 paths to exit 37
  [36]
ebb entry:  37
  ebb type:   block
  ebb blocks: [37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60]
  ebb cost:   list_max([136 + (list_max([|f106|; |f216|; |f762|])); 140 + (list_max([|f106|; |f216|; |f762|])); 142 + (list_max([|f106|; |f216|; |f762|])); 146 + (list_max([|f106|; |f216|; |f762|])); 145 + (list_max([|f106|; |f216|; |f393|; |f762|])); 149 + (list_max([|f106|; |f216|; |f393|; |f762|])); 143 + (list_max([|f106|; |f216|; |f762|])); 147 + (list_max([|f106|; |f216|; |f762|])); 149 + (list_max([|f106|; |f216|; |f762|])); 153 + (list_max([|f106|; |f216|; |f762|])); 152 + (list_max([|f106|; |f216|; |f393|; |f762|])); 156 + (list_max([|f106|; |f216|; |f393|; |f762|])); 148 + (list_max([|f106|; |f216|; |f762|])); 152 + (list_max([|f106|; |f216|; |f762|])); 154 + (list_max([|f106|; |f216|; |f762|])); 158 + (list_max([|f106|; |f216|; |f762|])); 157 + (list_max([|f106|; |f216|; |f393|; |f762|])); 161 + (list_max([|f106|; |f216|; |f393|; |f762|])); 155 + (list_max([|f106|; |f216|; |f762|])); 159 + (list_max([|f106|; |f216|; |f762|])); 161 + (list_max([|f106|; |f216|; |f762|])); 165 + (list_max([|f106|; |f216|; |f762|])); 164 + (list_max([|f106|; |f216|; |f393|; |f762|])); 168 + (list_max([|f106|; |f216|; |f393|; |f762|])); 152 + (list_max([|f106|; |f216|; |f762|])); 156 + (list_max([|f106|; |f216|; |f762|])); 158 + (list_max([|f106|; |f216|; |f762|])); 162 + (list_max([|f106|; |f216|; |f762|])); 161 + (list_max([|f106|; |f216|; |f393|; |f762|])); 165 + (list_max([|f106|; |f216|; |f393|; |f762|])); 159 + (list_max([|f106|; |f216|; |f762|])); 163 + (list_max([|f106|; |f216|; |f762|])); 165 + (list_max([|f106|; |f216|; |f762|])); 169 + (list_max([|f106|; |f216|; |f762|])); 168 + (list_max([|f106|; |f216|; |f393|; |f762|])); 172 + (list_max([|f106|; |f216|; |f393|; |f762|])); 152 + (list_max([|f106|; |f216|; |f762|])); 156 + (list_max([|f106|; |f216|; |f762|])); 158 + (list_max([|f106|; |f216|; |f762|])); 162 + (list_max([|f106|; |f216|; |f762|])); 161 + (list_max([|f106|; |f216|; |f393|; |f762|])); 165 + (list_max([|f106|; |f216|; |f393|; |f762|])); 159 + (list_max([|f106|; |f216|; |f762|])); 163 + (list_max([|f106|; |f216|; |f762|])); 165 + (list_max([|f106|; |f216|; |f762|])); 169 + (list_max([|f106|; |f216|; |f762|])); 168 + (list_max([|f106|; |f216|; |f393|; |f762|])); 172 + (list_max([|f106|; |f216|; |f393|; |f762|])); 156 + (list_max([|f106|; |f216|; |f762|])); 160 + (list_max([|f106|; |f216|; |f762|])); 162 + (list_max([|f106|; |f216|; |f762|])); 166 + (list_max([|f106|; |f216|; |f762|])); 165 + (list_max([|f106|; |f216|; |f393|; |f762|])); 169 + (list_max([|f106|; |f216|; |f393|; |f762|])); 163 + (list_max([|f106|; |f216|; |f762|])); 167 + (list_max([|f106|; |f216|; |f762|])); 169 + (list_max([|f106|; |f216|; |f762|])); 173 + (list_max([|f106|; |f216|; |f762|])); 172 + (list_max([|f106|; |f216|; |f393|; |f762|])); 176 + (list_max([|f106|; |f216|; |f393|; |f762|])); 12; 17 + |f1076|])
  ebb exits:  [61 99 133]
  ebb succs:  [133 99 61]
  0 paths to exit 61

  60 paths to exit 99
  [37 43 44 50 51 53 54 57 59]
  [37 43 44 50 51 53 54 57 58 59]
  [37 43 44 50 51 53 54 55 57 59]
  [37 43 44 50 51 53 54 55 57 58 59]
  [37 43 44 50 51 53 54 55 56 57 59]
  [37 43 44 50 51 53 54 55 56 57 58 59]
  [37 43 44 50 51 52 53 54 57 59]
  [37 43 44 50 51 52 53 54 57 58 59]
  [37 43 44 50 51 52 53 54 55 57 59]
  [37 43 44 50 51 52 53 54 55 57 58 59]
  [37 43 44 50 51 52 53 54 55 56 57 59]
  [37 43 44 50 51 52 53 54 55 56 57 58 59]
  [37 43 44 45 47 51 53 54 57 59]
  [37 43 44 45 47 51 53 54 57 58 59]
  [37 43 44 45 47 51 53 54 55 57 59]
  [37 43 44 45 47 51 53 54 55 57 58 59]
  [37 43 44 45 47 51 53 54 55 56 57 59]
  [37 43 44 45 47 51 53 54 55 56 57 58 59]
  [37 43 44 45 47 51 52 53 54 57 59]
  [37 43 44 45 47 51 52 53 54 57 58 59]
  [37 43 44 45 47 51 52 53 54 55 57 59]
  [37 43 44 45 47 51 52 53 54 55 57 58 59]
  [37 43 44 45 47 51 52 53 54 55 56 57 59]
  [37 43 44 45 47 51 52 53 54 55 56 57 58 59]
  [37 43 44 45 47 48 51 53 54 57 59]
  [37 43 44 45 47 48 51 53 54 57 58 59]
  [37 43 44 45 47 48 51 53 54 55 57 59]
  [37 43 44 45 47 48 51 53 54 55 57 58 59]
  [37 43 44 45 47 48 51 53 54 55 56 57 59]
  [37 43 44 45 47 48 51 53 54 55 56 57 58 59]
  [37 43 44 45 47 48 51 52 53 54 57 59]
  [37 43 44 45 47 48 51 52 53 54 57 58 59]
  [37 43 44 45 47 48 51 52 53 54 55 57 59]
  [37 43 44 45 47 48 51 52 53 54 55 57 58 59]
  [37 43 44 45 47 48 51 52 53 54 55 56 57 59]
  [37 43 44 45 47 48 51 52 53 54 55 56 57 58 59]
  [37 43 44 45 46 47 51 53 54 57 59]
  [37 43 44 45 46 47 51 53 54 57 58 59]
  [37 43 44 45 46 47 51 53 54 55 57 59]
  [37 43 44 45 46 47 51 53 54 55 57 58 59]
  [37 43 44 45 46 47 51 53 54 55 56 57 59]
  [37 43 44 45 46 47 51 53 54 55 56 57 58 59]
  [37 43 44 45 46 47 51 52 53 54 57 59]
  [37 43 44 45 46 47 51 52 53 54 57 58 59]
  [37 43 44 45 46 47 51 52 53 54 55 57 59]
  [37 43 44 45 46 47 51 52 53 54 55 57 58 59]
  [37 43 44 45 46 47 51 52 53 54 55 56 57 59]
  [37 43 44 45 46 47 51 52 53 54 55 56 57 58 59]
  [37 43 44 45 46 47 48 51 53 54 57 59]
  [37 43 44 45 46 47 48 51 53 54 57 58 59]
  [37 43 44 45 46 47 48 51 53 54 55 57 59]
  [37 43 44 45 46 47 48 51 53 54 55 57 58 59]
  [37 43 44 45 46 47 48 51 53 54 55 56 57 59]
  [37 43 44 45 46 47 48 51 53 54 55 56 57 58 59]
  [37 43 44 45 46 47 48 51 52 53 54 57 59]
  [37 43 44 45 46 47 48 51 52 53 54 57 58 59]
  [37 43 44 45 46 47 48 51 52 53 54 55 57 59]
  [37 43 44 45 46 47 48 51 52 53 54 55 57 58 59]
  [37 43 44 45 46 47 48 51 52 53 54 55 56 57 59]
  [37 43 44 45 46 47 48 51 52 53 54 55 56 57 58 59]
  2 paths to exit 133
  [37 38 40 41]
  [37 38 39 41]
ebb entry:  61
  ebb type:   block
  ebb blocks: [61 62 63 64]
  ebb cost:   list_max([13 + (list_max([|f714|; |f2420|])); 13 + (list_max([|f714|; |f2420|])); 9 + |f714|; 4 + |f714|])
  ebb exits:  [65 98 133]
  ebb succs:  [133 98 65]
  1 paths to exit 65
  [61 62 63 64]
  2 paths to exit 98
  [61 62 63 64]
  [61 62 63]
  1 paths to exit 133
  [61]
ebb entry:  65
  ebb type:   block
  ebb blocks: [65]
  ebb cost:   8
  ebb exits:  [66]
  ebb succs:  [66]
  1 paths to exit 66
  [65]
ebb entry:  66
  ebb type:   loop
  ebb blocks: [66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96]
  ebb cost:   (list_max([[40*I(i32.load@(pn3), pn3 = rn0, pn3 = (pn3)); 45*I(i32.load@(pn3), pn3 = rn0, pn3 = (pn3)); 42*I(i32.load@(pn3), pn3 = rn0, pn3 = (pn3)); 49*I(i32.load@(pn3), pn3 = rn0, pn3 = (pn3)); 49*I(i32.load@(pn3), pn3 = rn0, pn3 = (pn3)); 54*I(i32.load@(pn3), pn3 = rn0, pn3 = (pn3)); 51*I(i32.load@(pn3), pn3 = rn0, pn3 = (pn3)); 58*I(i32.load@(pn3), pn3 = rn0, pn3 = (pn3)); 46*I(i32.load@(pn3), pn3 = rn0, pn3 = (pn3)); 51*I(i32.load@(pn3), pn3 = rn0, pn3 = (pn3)); 48*I(i32.load@(pn3), pn3 = rn0, pn3 = (pn3)); 55*I(i32.load@(pn3), pn3 = rn0, pn3 = (pn3))]])) + (list_max([1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 17; 14; 8; 40 + |f1736|; 37 + |f1736|; 31 + |f1736|; 17; 14; 8; 40 + |f1736|; 37 + |f1736|; 31 + |f1736|; 17; 14; 8; 40 + |f1736|; 37 + |f1736|; 31 + |f1736|]))
  ebb exits:  [97 98 133]
  ebb succs:  [133 98 97]
  12 paths to exit 97
  [66 67 74 75 76 77 82 94 95 96]
  [66 67 74 75 76 77 82 83 94 95 96]
  [66 67 74 75 76 77 78 94 95 96]
  [66 67 74 75 76 77 78 79 80 94 95 96]
  [66 67 68 70 71 76 77 82 94 95 96]
  [66 67 68 70 71 76 77 82 83 94 95 96]
  [66 67 68 70 71 76 77 78 94 95 96]
  [66 67 68 70 71 76 77 78 79 80 94 95 96]
  [66 67 68 69 71 76 77 82 94 95 96]
  [66 67 68 69 71 76 77 82 83 94 95 96]
  [66 67 68 69 71 76 77 78 94 95 96]
  [66 67 68 69 71 76 77 78 79 80 94 95 96]
  18 paths to exit 98
  [66 67 74 75 76 77 82 94]
  [66 67 74 75 76 77 82 83 94]
  [66 67 74 75 76 77 78 94]
  [66 67 74 75 76 77 78 79 80 94]
  [66 67 74 75 76 77 78 79]
  [66 67 74]
  [66 67 68 70 71 76 77 82 94]
  [66 67 68 70 71 76 77 82 83 94]
  [66 67 68 70 71 76 77 78 94]
  [66 67 68 70 71 76 77 78 79 80 94]
  [66 67 68 70 71 76 77 78 79]
  [66 67 68 70 71 72]
  [66 67 68 69 71 76 77 82 94]
  [66 67 68 69 71 76 77 82 83 94]
  [66 67 68 69 71 76 77 78 94]
  [66 67 68 69 71 76 77 78 79 80 94]
  [66 67 68 69 71 76 77 78 79]
  [66 67 68 69 71 72]
  18 paths to exit 133
  [66 67 74 75 76 77 82 83 84 86 89 92]
  [66 67 74 75 76 77 82 83 84 86 89 90]
  [66 67 74 75 76 77 82 83 84 86 87]
  [66 67 74 75 76 77 82 83 84 85 86 89 92]
  [66 67 74 75 76 77 82 83 84 85 86 89 90]
  [66 67 74 75 76 77 82 83 84 85 86 87]
  [66 67 68 70 71 76 77 82 83 84 86 89 92]
  [66 67 68 70 71 76 77 82 83 84 86 89 90]
  [66 67 68 70 71 76 77 82 83 84 86 87]
  [66 67 68 70 71 76 77 82 83 84 85 86 89 92]
  [66 67 68 70 71 76 77 82 83 84 85 86 89 90]
  [66 67 68 70 71 76 77 82 83 84 85 86 87]
  [66 67 68 69 71 76 77 82 83 84 86 89 92]
  [66 67 68 69 71 76 77 82 83 84 86 89 90]
  [66 67 68 69 71 76 77 82 83 84 86 87]
  [66 67 68 69 71 76 77 82 83 84 85 86 89 92]
  [66 67 68 69 71 76 77 82 83 84 85 86 89 90]
  [66 67 68 69 71 76 77 82 83 84 85 86 87]
  12 loop paths
  [66 67 74 75 76 77 82 94 95]  [66 67 74 75 76 77 82 83 94 95]  [66 67 74 75 76 77 78 94 95]  [66 67 74 75 76 77 78 79 80 94 95]  [66 67 68 70 71 76 77 82 94 95]  [66 67 68 70 71 76 77 82 83 94 95]  [66 67 68 70 71 76 77 78 94 95]  [66 67 68 70 71 76 77 78 79 80 94 95]  [66 67 68 69 71 76 77 82 94 95]  [66 67 68 69 71 76 77 82 83 94 95]  [66 67 68 69 71 76 77 78 94 95]  [66 67 68 69 71 76 77 78 79 80 94 95]
  32 post loop exit paths
  [96]  [96]  [96]  [96]  [96]  [96]  [96]  [96]  [96]  [96]  [96]  [96]  [72]  [72]  [84 86 89 92]  [84 86 89 90]  [84 86 87]  [84 85 86 89 92]  [84 85 86 89 90]  [84 85 86 87]  [84 86 89 92]  [84 86 89 90]  [84 86 87]  [84 85 86 89 92]  [84 85 86 89 90]  [84 85 86 87]  [84 86 89 92]  [84 86 89 90]  [84 86 87]  [84 85 86 89 92]  [84 85 86 89 90]  [84 85 86 87]
ebb entry:  97
  ebb type:   block
  ebb blocks: [97]
  ebb cost:   1
  ebb exits:  [98]
  ebb succs:  [98]
  1 paths to exit 98
  [97]
ebb entry:  98
  ebb type:   block
  ebb blocks: [98]
  ebb cost:   2 + |f1736|
  ebb exits:  [99]
  ebb succs:  [99]
  1 paths to exit 99
  [98]
ebb entry:  99
  ebb type:   block
  ebb blocks: [99 100 101 102 103 104 105 106 107 108 109 110 111]
  ebb cost:   list_max([59 + |f206|; 55 + |f206|; 47 + |f206|; 46 + |f206|; 42 + |f206|; 34 + |f206|; 59 + |f206|; 55 + |f206|; 47 + |f206|; 6 + |f206|])
  ebb exits:  [112 123 126 127]
  ebb succs:  [127 126 123 112]
  3 paths to exit 112
  [99 100 101 104 107 108 109 110 111]
  [99 100 101 104 105 108 109 110 111]
  [99 100 101 102 108 109 110 111]
  3 paths to exit 123
  [99 100 101 104 107 108 109 110]
  [99 100 101 104 105 108 109 110]
  [99 100 101 102 108 109 110]
  3 paths to exit 126
  [99 100 101 104 107 108 109 110 111]
  [99 100 101 104 105 108 109 110 111]
  [99 100 101 102 108 109 110 111]
  1 paths to exit 127
  [99]
ebb entry:  112
  ebb type:   block
  ebb blocks: [112]
  ebb cost:   1
  ebb exits:  [113]
  ebb succs:  [113]
  1 paths to exit 113
  [112]
ebb entry:  113
  ebb type:   loop
  ebb blocks: [113 114 115 116 117 118 119 120]
  ebb cost:   24 + (list_max([|f488|; |f1360|]))*I((ln4 + 1) != ln8, ln8 = (pn0 xor -1) + pn1;ln4 = 0, ln8 = ln8;ln4 = ln4 + 1) + (list_max([1; 4 + |f912|; 4 + |f912|]))
  ebb exits:  [121 127 131]
  ebb succs:  [131 127 121]
  1 paths to exit 121
  [113 116 119 120]
  1 paths to exit 127
  [113 116 117]
  1 paths to exit 131
  [113 114]
  1 loop paths
  [113 116 119]
  3 post loop exit paths
  [120]  [117]  [114]
ebb entry:  121
  ebb type:   block
  ebb blocks: [121 122]
  ebb cost:   1
  ebb exits:  [123 124]
  ebb succs:  [124 123]
  0 paths to exit 123

  1 paths to exit 124
  [121]
ebb entry:  123
  ebb type:   block
  ebb blocks: [123]
  ebb cost:   4
  ebb exits:  [124]
  ebb succs:  [124]
  1 paths to exit 124
  [123]
ebb entry:  124
  ebb type:   block
  ebb blocks: [124 125]
  ebb cost:   19
  ebb exits:  [126 133]
  ebb succs:  [133 126]
  0 paths to exit 126

  1 paths to exit 133
  [124]
ebb entry:  126
  ebb type:   block
  ebb blocks: [126]
  ebb cost:   4 + |f912|
  ebb exits:  [127]
  ebb succs:  [127]
  1 paths to exit 127
  [126]
ebb entry:  127
  ebb type:   block
  ebb blocks: [127 128 129 130]
  ebb cost:   list_max([14 + (list_max([|f521|; |f1489|])); 15 + |f1489|])
  ebb exits:  [131 134]
  ebb succs:  [134 131]
  1 paths to exit 131
  [127 130]
  1 paths to exit 134
  [127 128]
ebb entry:  131
  ebb type:   block
  ebb blocks: [131 132]
  ebb cost:   3
  ebb exits:  [133 134]
  ebb succs:  [134 133]
  0 paths to exit 133

  1 paths to exit 134
  [131]
ebb entry:  133
  ebb type:   block
  ebb blocks: [133]
  ebb cost:   3
  ebb exits:  [134]
  ebb succs:  [134]
  1 paths to exit 134
  [133]
ebb entry:  134
  ebb type:   block
  ebb blocks: [134 135]
  ebb cost:   6
  ebb exits:  [135]
  ebb succs:  []
  1 paths to exit 135
  [134]
