ebb entry:  0
  ebb type:   block
  ebb blocks: [0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36]
  ebb cost:   1006 + |f11|
  ebb exits:  [37 57 104 390]
  ebb succs:  [390 104 57 37]
ebb entry:  37
  ebb type:   block
  ebb blocks: [37]
  ebb cost:   73
  ebb exits:  [38]
  ebb succs:  [38]
ebb entry:  38
  ebb type:   loop
  ebb blocks: [38 39 40 41 42 43 44]
  ebb cost:   (list_max([
  28 * (I([ln2], [i32.eqz(i32.load@(ln2))], [ln2 = (select(pn0 < 11, (pn0 + 11) && -8, 16)) shr_u 3], [ln2 = (0)]));
  34 * (I([ln2], [not(i32.eqz(i32.load@(ln2)))], [ln2 = (select(pn0 < 11, (pn0 + 11) && -8, 16)) shr_u 3], [ln2 = (0)]))
])) + 1
  ebb exits:  [45]
  ebb succs:  [45]
  1 paths to exit 45
  [38 39 40 44]
  2 loop paths
  [38 39 42]  [38 39 40 41 42]
  1 post loop exit paths
  [44]
ebb entry:  45
  ebb type:   block
  ebb blocks: [45 46 47 48 49 50]
  ebb cost:   52
  ebb exits:  [51 165 364]
  ebb succs:  [364 165 51]
ebb entry:  51
  ebb type:   block
  ebb blocks: [51]
  ebb cost:   11
  ebb exits:  [52]
  ebb succs:  [52]
ebb entry:  52
  ebb type:   loop
  ebb blocks: [52 53 54]
  ebb cost:   (list_max([
  18 * (I([pn0], [i32.load@(pn0 + 20)], [pn0 = (((((((((((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u 5) && 8) || ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) || ((((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u (((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u 5) && 8)) shr_u 2) && 4)) || (((((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u (((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u 5) && 8)) shr_u ((((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u (((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u 5) && 8)) shr_u 2) && 4)) shr_u 1) && 2)) || ((((((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u (((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u 5) && 8)) shr_u ((((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u (((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u 5) && 8)) shr_u 2) && 4)) shr_u (((((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u (((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u 5) && 8)) shr_u ((((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u (((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u 5) && 8)) shr_u 2) && 4)) shr_u 1) && 2)) shr_u 1) && 1)) + (((((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u (((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u 5) && 8)) shr_u ((((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u (((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u 5) && 8)) shr_u 2) && 4)) shr_u (((((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u (((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u 5) && 8)) shr_u ((((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u (((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u 5) && 8)) shr_u 2) && 4)) shr_u 1) && 2)) shr_u ((((((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u (((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u 5) && 8)) shr_u ((((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u (((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u 5) && 8)) shr_u 2) && 4)) shr_u (((((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u (((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u 5) && 8)) shr_u ((((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u (((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u 5) && 8)) shr_u 2) && 4)) shr_u 1) && 2)) shr_u 1) && 1))) shl 2) + 15496))], [pn0 = (pn0)]));
  10 * (I([pn0], [i32.load@(pn0 + 20)], [pn0 = (((((((((((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u 5) && 8) || ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) || ((((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u (((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u 5) && 8)) shr_u 2) && 4)) || (((((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u (((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u 5) && 8)) shr_u ((((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u (((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u 5) && 8)) shr_u 2) && 4)) shr_u 1) && 2)) || ((((((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u (((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u 5) && 8)) shr_u ((((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u (((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u 5) && 8)) shr_u 2) && 4)) shr_u (((((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u (((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u 5) && 8)) shr_u ((((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u (((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u 5) && 8)) shr_u 2) && 4)) shr_u 1) && 2)) shr_u 1) && 1)) + (((((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u (((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u 5) && 8)) shr_u ((((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u (((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u 5) && 8)) shr_u 2) && 4)) shr_u (((((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u (((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u 5) && 8)) shr_u ((((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u (((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u 5) && 8)) shr_u 2) && 4)) shr_u 1) && 2)) shr_u ((((((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u (((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u 5) && 8)) shr_u ((((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u (((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u 5) && 8)) shr_u 2) && 4)) shr_u (((((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u (((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u 5) && 8)) shr_u ((((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u (((((((15196)) && (0 - ((15196)))) - 1) shr_u ((((((15196)) && (0 - ((15196)))) - 1) shr_u 12) && 16)) shr_u 5) && 8)) shr_u 2) && 4)) shr_u 1) && 2)) shr_u 1) && 1))) shl 2) + 15496))], [pn0 = (pn0 + 20)]))
])) + 1
  ebb exits:  [55]
  ebb succs:  [55]
  1 paths to exit 55
  [52 53 54]
  2 loop paths
  [52 53]  [52]
  1 post loop exit paths
  [54]
ebb entry:  55
  ebb type:   block
  ebb blocks: [55 56]
  ebb cost:   5
  ebb exits:  [57 364]
  ebb succs:  [364 57]
ebb entry:  57
  ebb type:   block
  ebb blocks: [57 58 59 60 61 62 63 64 65 66 67 68]
  ebb cost:   298
  ebb exits:  [69 78 104]
  ebb succs:  [104 78 69]
ebb entry:  69
  ebb type:   block
  ebb blocks: [69]
  ebb cost:   17
  ebb exits:  [70]
  ebb succs:  [70]
ebb entry:  70
  ebb type:   loop
  ebb blocks: [70 71 72 73 74 75 76]
  ebb cost:   (list_max([
  37 * (I([ln1; ln2], [i32.load@(ln2 + ((ln1 shr_u 29) && 4))], [ln1 = 0; ln2 = ((0 shl 2) + 15496)], [ln1 = 0 shl 1; ln2 = (0 + ((0 shr_u 29) && 4))]));
  42 * (I([ln1; ln2], [i32.load@(ln2 + ((ln1 shr_u 29) && 4))], [ln1 = 0; ln2 = ((0 shl 2) + 15496)], [ln1 = 0 shl 1; ln2 = (0 + ((0 shr_u 29) && 4))]))
])) + (list_max([1; 1; 5]))
  ebb exits:  [77 83]
  ebb succs:  [83 77]
  2 paths to exit 77
  [70 71 75 76]
  [70 71 72 75 76]
  1 paths to exit 83
  [70 71 72 73]
  2 loop paths
  [70 71 75]  [70 71 72 75]
  3 post loop exit paths
  [76]  [76]  [73]
ebb entry:  77
  ebb type:   block
  ebb blocks: [77]
  ebb cost:   6
  ebb exits:  [78]
  ebb succs:  [78]
ebb entry:  78
  ebb type:   block
  ebb blocks: [78 79 80 81 82]
  ebb cost:   136
  ebb exits:  [83 90 104]
  ebb succs:  [104 90 83]
ebb entry:  83
  ebb type:   block
  ebb blocks: [83]
  ebb cost:   25
  ebb exits:  [84]
  ebb succs:  [84]
ebb entry:  84
  ebb type:   loop
  ebb blocks: [84 85 86 87 88]
  ebb cost:   (list_max([
  29 * (I([pn0], [i32.load@(pn0)], [pn0 = select((((0 shl 2) + 15496)), 0, select(((((0 shl 2) + 15496))) == (((((0 shl 2) + 15496)) + (((((pn0 + 11) && -8) shl (select(0 == 31, 25 - (0 shr_u 1), 0))) shr_u 29) && 4))), (((0 shl 2) + 15496)), 0))], [pn0 = (pn0)]));
  28 * (I([pn0], [i32.load@(pn0)], [pn0 = select((((0 shl 2) + 15496)), 0, select(((((0 shl 2) + 15496))) == (((((0 shl 2) + 15496)) + (((((pn0 + 11) && -8) shl (select(0 == 31, 25 - (0 shr_u 1), 0))) shr_u 29) && 4))), (((0 shl 2) + 15496)), 0))], [pn0 = (pn0)]))
])) + (list_max([1; 1]))
  ebb exits:  [89]
  ebb succs:  [89]
  2 paths to exit 89
  [84 86 87 88]
  [84 85 87 88]
  2 loop paths
  [84 86 87]  [84 85 87]
  2 post loop exit paths
  [88]  [88]
ebb entry:  89
  ebb type:   block
  ebb blocks: [89]
  ebb cost:   4
  ebb exits:  [90]
  ebb succs:  [90]
ebb entry:  90
  ebb type:   block
  ebb blocks: [90 91 92 93 94 95 96 97]
  ebb cost:   62
  ebb exits:  [98 104 167 322]
  ebb succs:  [322 167 104 98]
ebb entry:  98
  ebb type:   block
  ebb blocks: [98]
  ebb cost:   11
  ebb exits:  [99]
  ebb succs:  [99]
ebb entry:  99
  ebb type:   loop
  ebb blocks: [99 100 101]
  ebb cost:   (list_max([
  18 * (I([pn0], [i32.load@(pn0 + 20)], [pn0 = (0)], [pn0 = (pn0)]));
  10 * (I([pn0], [i32.load@(pn0 + 20)], [pn0 = (0)], [pn0 = (pn0 + 20)]))
])) + 1
  ebb exits:  [102]
  ebb succs:  [102]
  1 paths to exit 102
  [99 100 101]
  2 loop paths
  [99 100]  [99]
  1 post loop exit paths
  [101]
ebb entry:  102
  ebb type:   block
  ebb blocks: [102 103]
  ebb cost:   5
  ebb exits:  [104 322]
  ebb succs:  [322 104]
ebb entry:  104
  ebb type:   block
  ebb blocks: [104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128]
  ebb cost:   694 + |f11|
  ebb exits:  [129 136 172 390]
  ebb succs:  [390 172 136 129]
ebb entry:  129
  ebb type:   block
  ebb blocks: [129]
  ebb cost:   9
  ebb exits:  [130]
  ebb succs:  [130]
ebb entry:  130
  ebb type:   loop
  ebb blocks: [130 131 132 133 134]
  ebb cost:   (list_max([
  10 * (I([pn0], [i32.load@(pn0)], [pn0 = 0], [pn0 = (pn0)]));
  18 * (I([pn0], [i32.load@(pn0)], [pn0 = 0], [pn0 = (pn0)]))
])) + (list_max([1; 1]))
  ebb exits:  [135 148]
  ebb succs:  [148 135]
  2 paths to exit 135
  [130 133 134]
  [130 131 132 133 134]
  1 paths to exit 148
  [130 131]
  2 loop paths
  [130 133]  [130 131 132 133]
  2 post loop exit paths
  [134]  [134]
ebb entry:  135
  ebb type:   block
  ebb blocks: [135]
  ebb cost:   7 + |f11|
  ebb exits:  [136]
  ebb succs:  [136]
ebb entry:  136
  ebb type:   block
  ebb blocks: [136 137 138 139 140 141 142 143 144 145 146 147]
  ebb cost:   150 + |f11|
  ebb exits:  [148 151 171 178]
  ebb succs:  [178 171 151 148]
ebb entry:  148
  ebb type:   block
  ebb blocks: [148 149 150]
  ebb cost:   66 + |f11|
  ebb exits:  [151 169 171]
  ebb succs:  [171 169 151]
ebb entry:  151
  ebb type:   block
  ebb blocks: [151 152 153 154 155 156 157 158 159 160 161 162 163 164]
  ebb cost:   88 + |f11|
  ebb exits:  [165 171 178]
  ebb succs:  [178 171 165]
ebb entry:  165
  ebb type:   block
  ebb blocks: [165 166]
  ebb cost:   4
  ebb exits:  [167 364]
  ebb succs:  [364 167]
ebb entry:  167
  ebb type:   block
  ebb blocks: [167 168]
  ebb cost:   4
  ebb exits:  [169 322]
  ebb succs:  [322 169]
ebb entry:  169
  ebb type:   block
  ebb blocks: [169 170]
  ebb cost:   56 + |f11|
  ebb exits:  [171 178]
  ebb succs:  [178 171]
ebb entry:  171
  ebb type:   block
  ebb blocks: [171]
  ebb cost:   11
  ebb exits:  [172]
  ebb succs:  [172]
ebb entry:  172
  ebb type:   block
  ebb blocks: [172 173 174 175 176 177]
  ebb cost:   423 + |f11|
  ebb exits:  [178 320]
  ebb succs:  [320 178]
ebb entry:  178
  ebb type:   block
  ebb blocks: [178 179 180 181 182 183]
  ebb cost:   33
  ebb exits:  [184 190]
  ebb succs:  [190 184]
ebb entry:  184
  ebb type:   block
  ebb blocks: [184]
  ebb cost:   13
  ebb exits:  [185]
  ebb succs:  [185]
ebb entry:  185
  ebb type:   loop
  ebb blocks: [185 186 187]
  ebb cost:   (14 * (I([pn0], [i32.load@(pn0)], [pn0 = pn0], [pn0 = (pn0)]))) + 1
  ebb exits:  [188 197]
  ebb succs:  [197 188]
  1 paths to exit 188
  [185 186 187]
  1 paths to exit 197
  [185]
  1 loop paths
  [185 186]
  1 post loop exit paths
  [187]
ebb entry:  188
  ebb type:   block
  ebb blocks: [188 189]
  ebb cost:   6
  ebb exits:  [190 202]
  ebb succs:  [202 190]
ebb entry:  190
  ebb type:   block
  ebb blocks: [190 191]
  ebb cost:   33
  ebb exits:  [192]
  ebb succs:  [192]
ebb entry:  192
  ebb type:   block
  ebb blocks: [192]
  ebb cost:   42
  ebb exits:  [193]
  ebb succs:  [193]
ebb entry:  193
  ebb type:   loop
  ebb blocks: [193 194]
  ebb cost:   (23 * (I([pn0], [(pn0 + 1) != 32], [pn0 = pn0], [pn0 = pn0 + 1]))) + 1
  ebb exits:  [195]
  ebb succs:  [195]
  1 paths to exit 195
  [193 194]
  1 loop paths
  [193]
  1 post loop exit paths
  [194]
ebb entry:  195
  ebb type:   block
  ebb blocks: [195 196]
  ebb cost:   48
  ebb exits:  [197 317]
  ebb succs:  [317 197]
ebb entry:  197
  ebb type:   block
  ebb blocks: [197 198 199 200 201]
  ebb cost:   349
  ebb exits:  [202 317]
  ebb succs:  [317 202]
ebb entry:  202
  ebb type:   block
  ebb blocks: [202 203 204 205 206 207 208 209]
  ebb cost:   22
  ebb exits:  [210]
  ebb succs:  [210]
ebb entry:  210
  ebb type:   block
  ebb blocks: [210]
  ebb cost:   6
  ebb exits:  [211]
  ebb succs:  [211]
ebb entry:  211
  ebb type:   loop
  ebb blocks: [211 212 213 214 215]
  ebb cost:   (9 * (I([pn0], [i32.load@(pn0)], [pn0 = pn0], [pn0 = (pn0)]))) + (list_max([1; 1]))
  ebb exits:  [216 218]
  ebb succs:  [218 216]
  1 paths to exit 216
  [211 215]
  1 paths to exit 218
  [211 212 213]
  1 loop paths
  [211 212]
  2 post loop exit paths
  [215]  [213]
ebb entry:  216
  ebb type:   block
  ebb blocks: [216 217]
  ebb cost:   59
  ebb exits:  [218 226]
  ebb succs:  [226 218]
ebb entry:  218
  ebb type:   block
  ebb blocks: [218]
  ebb cost:   9
  ebb exits:  [219]
  ebb succs:  [219]
ebb entry:  219
  ebb type:   loop
  ebb blocks: [219 220 221 222 223]
  ebb cost:   list_max([
  10 * (I([ln4; pn0], [ln4 >= (i32.load@(pn0))], [ln4 = 0; pn0 = pn0], [ln4 = 0; pn0 = (pn0)]));
  19 * (I([ln4; pn0], [not(((i32.load@(pn0)) + (i32.load@(pn0))) > ln4)], [ln4 = 0; pn0 = pn0], [ln4 = 0; pn0 = (pn0)]))
])
  ebb exits:  [288]
  ebb succs:  [288]
  1 paths to exit 288
  [219 220]
  2 loop paths
  [219 222]  [219 220 221 222]
ebb entry:  224
  ebb type:   block
  ebb blocks: [224 225]
  ebb cost:   1
  ebb exits:  [226 392]
  ebb succs:  [392 226]
ebb entry:  226
  ebb type:   block
  ebb blocks: [226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248]
  ebb cost:   358
  ebb exits:  [249 254 266 267 314]
  ebb succs:  [314 267 266 254 249]
ebb entry:  249
  ebb type:   block
  ebb blocks: [249]
  ebb cost:   11
  ebb exits:  [250]
  ebb succs:  [250]
ebb entry:  250
  ebb type:   loop
  ebb blocks: [250 251 252]
  ebb cost:   (list_max([
  18 * (I([ln3], [i32.load@(ln3 + 20)], [ln3 = 0], [ln3 = (0)]));
  10 * (I([ln3], [i32.load@(ln3 + 20)], [ln3 = 0], [ln3 = (0 + 20)]))
])) + 1
  ebb exits:  [253]
  ebb succs:  [253]
  1 paths to exit 253
  [250 251 252]
  2 loop paths
  [250 251]  [250]
  1 post loop exit paths
  [252]
ebb entry:  253
  ebb type:   block
  ebb blocks: [253]
  ebb cost:   7
  ebb exits:  [254]
  ebb succs:  [254]
ebb entry:  254
  ebb type:   block
  ebb blocks: [254 255 256 257 258 259 260 261 262 263 264 265]
  ebb cost:   68
  ebb exits:  [266]
  ebb succs:  [266]
ebb entry:  266
  ebb type:   block
  ebb blocks: [266]
  ebb cost:   30
  ebb exits:  [267]
  ebb succs:  [267]
ebb entry:  267
  ebb type:   block
  ebb blocks: [267 268 269 270 271 272 273 274 275 276 277 278 279 280]
  ebb cost:   166
  ebb exits:  [281 286 314]
  ebb succs:  [314 286 281]
ebb entry:  281
  ebb type:   block
  ebb blocks: [281]
  ebb cost:   25
  ebb exits:  [282]
  ebb succs:  [282]
ebb entry:  282
  ebb type:   loop
  ebb blocks: [282 283 284]
  ebb cost:   (25 * (I([ln1; pn0], [i32.load@(ln1 + ((pn0 shr_u 29) && 4))], [ln1 = 0; pn0 = pn0], [ln1 = (0 + ((pn0 shr_u 29) && 4)); pn0 = pn0 shl 1]))) + 1
  ebb exits:  [285 313]
  ebb succs:  [313 285]
  1 paths to exit 285
  [282 283 284]
  1 paths to exit 313
  [282]
  1 loop paths
  [282 283]
  1 post loop exit paths
  [284]
ebb entry:  285
  ebb type:   block
  ebb blocks: [285]
  ebb cost:   14
  ebb exits:  [286]
  ebb succs:  [286]
ebb entry:  286
  ebb type:   block
  ebb blocks: [286 287]
  ebb cost:   12
  ebb exits:  [288 314]
  ebb succs:  [314 288]
ebb entry:  288
  ebb type:   block
  ebb blocks: [288]
  ebb cost:   110
  ebb exits:  [289]
  ebb succs:  [289]
ebb entry:  289
  ebb type:   loop
  ebb blocks: [289 290]
  ebb cost:   (15 * (I([ln5; pn0], [(pn0 + 8) < ln5], [ln5 = 0; pn0 = pn0], [ln5 = 0; pn0 = pn0 + 4]))) + 1
  ebb exits:  [291]
  ebb succs:  [291]
  1 paths to exit 291
  [289 290]
  1 loop paths
  [289]
  1 post loop exit paths
  [290]
ebb entry:  291
  ebb type:   block
  ebb blocks: [291 292 293 294 295 296 297 298 299 300 301 302 303 304 305]
  ebb cost:   173
  ebb exits:  [306 311 317]
  ebb succs:  [317 311 306]
ebb entry:  306
  ebb type:   block
  ebb blocks: [306]
  ebb cost:   25
  ebb exits:  [307]
  ebb succs:  [307]
ebb entry:  307
  ebb type:   loop
  ebb blocks: [307 308 309]
  ebb cost:   (25 * (I([ln1; pn0], [i32.load@(ln1 + ((pn0 shr_u 29) && 4))], [ln1 = 0; pn0 = pn0], [ln1 = (0 + ((pn0 shr_u 29) && 4)); pn0 = pn0 shl 1]))) + 1
  ebb exits:  [310 316]
  ebb succs:  [316 310]
  1 paths to exit 310
  [307 308 309]
  1 paths to exit 316
  [307]
  1 loop paths
  [307 308]
  1 post loop exit paths
  [309]
ebb entry:  310
  ebb type:   block
  ebb blocks: [310]
  ebb cost:   14
  ebb exits:  [311]
  ebb succs:  [311]
ebb entry:  311
  ebb type:   block
  ebb blocks: [311 312]
  ebb cost:   13
  ebb exits:  [313 317]
  ebb succs:  [317 313]
ebb entry:  313
  ebb type:   block
  ebb blocks: [313]
  ebb cost:   23
  ebb exits:  [314]
  ebb succs:  [314]
ebb entry:  314
  ebb type:   block
  ebb blocks: [314 315]
  ebb cost:   11
  ebb exits:  [316 390]
  ebb succs:  [390 316]
ebb entry:  316
  ebb type:   block
  ebb blocks: [316]
  ebb cost:   24
  ebb exits:  [317]
  ebb succs:  [317]
ebb entry:  317
  ebb type:   block
  ebb blocks: [317 318 319]
  ebb cost:   41
  ebb exits:  [320 390]
  ebb succs:  [390 320]
ebb entry:  320
  ebb type:   block
  ebb blocks: [320 321]
  ebb cost:   12
  ebb exits:  [322 390]
  ebb succs:  [390 322]
ebb entry:  322
  ebb type:   block
  ebb blocks: [322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353]
  ebb cost:   231
  ebb exits:  [354 359 362]
  ebb succs:  [362 359 354]
ebb entry:  354
  ebb type:   block
  ebb blocks: [354]
  ebb cost:   25
  ebb exits:  [355]
  ebb succs:  [355]
ebb entry:  355
  ebb type:   loop
  ebb blocks: [355 356 357]
  ebb cost:   (25 * (I([ln7; pn0], [i32.load@(ln7 + ((pn0 shr_u 29) && 4))], [ln7 = 0; pn0 = pn0], [ln7 = (0 + ((pn0 shr_u 29) && 4)); pn0 = pn0 shl 1]))) + 1
  ebb exits:  [358 361]
  ebb succs:  [361 358]
  1 paths to exit 358
  [355 356 357]
  1 paths to exit 361
  [355]
  1 loop paths
  [355 356]
  1 post loop exit paths
  [357]
ebb entry:  358
  ebb type:   block
  ebb blocks: [358]
  ebb cost:   14
  ebb exits:  [359]
  ebb succs:  [359]
ebb entry:  359
  ebb type:   block
  ebb blocks: [359 360]
  ebb cost:   15
  ebb exits:  [361 362]
  ebb succs:  [362 361]
ebb entry:  361
  ebb type:   block
  ebb blocks: [361]
  ebb cost:   23
  ebb exits:  [362]
  ebb succs:  [362]
ebb entry:  362
  ebb type:   block
  ebb blocks: [362 363]
  ebb cost:   11
  ebb exits:  [364 390]
  ebb succs:  [390 364]
ebb entry:  364
  ebb type:   block
  ebb blocks: [364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389]
  ebb cost:   143
  ebb exits:  [390]
  ebb succs:  [390]
ebb entry:  390
  ebb type:   block
  ebb blocks: [390 391]
  ebb cost:   6
  ebb exits:  [391]
  ebb succs:  []
ebb entry:  392
  ebb type:   block
  ebb blocks: [392]
  ebb cost:   0
  ebb exits:  []
  ebb succs:  []
