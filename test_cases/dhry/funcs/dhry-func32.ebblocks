ebb entry:  0
  ebb type:   block
  ebb blocks: [0 1 2 3]
  ebb cost:   23
  ebb exits:  [4]
  ebb succs:  [4]
ebb entry:  4
  ebb type:   block
  ebb blocks: [4]
  ebb cost:   7
  ebb exits:  [5]
  ebb succs:  [5]
ebb entry:  5
  ebb type:   loop
  ebb blocks: [5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273]
  ebb cost:   list_max([
  (82 + |f33|) * (I([ln7], [((i32.load@(ln7)) + 1) - (i32.load@(ln7))], [ln7 = gn0 - 80], [ln7 = 0]));
  (370 + (list_sum([|f29|; |f33|]))) * (I([ln7], [((i32.load@(ln7)) + 1) - (i32.load@(ln7))], [ln7 = gn0 - 80], [ln7 = 0]));
  (437 + (list_sum([|f29|; |f33|]))) * (I([ln7], [((i32.load@(ln7)) + 1) - (i32.load@(ln7))], [ln7 = gn0 - 80], [ln7 = 0]));
  (442 + (list_sum([|f29|; |f33|]))) * (I([ln7], [((i32.load@(ln7)) + 1) - (i32.load@(ln7))], [ln7 = gn0 - 80], [ln7 = 0]));
  (442 + (list_sum([|f29|; |f33|]))) * (I([ln7], [((i32.load@(ln7)) + 1) - (i32.load@(ln7))], [ln7 = gn0 - 80], [ln7 = 0]));
  (443 + (list_sum([|f29|; |f33|]))) * (I([ln7], [((i32.load@(ln7)) + 1) - (i32.load@(ln7))], [ln7 = gn0 - 80], [ln7 = 0]));
  (442 + (list_sum([|f29|; |f33|]))) * (I([ln7], [((i32.load@(ln7)) + 1) - (i32.load@(ln7))], [ln7 = gn0 - 80], [ln7 = 0]));
  (442 + (list_sum([|f29|; |f33|]))) * (I([ln7], [((i32.load@(ln7)) + 1) - (i32.load@(ln7))], [ln7 = gn0 - 80], [ln7 = 0]));
  (442 + (list_sum([|f29|; |f33|]))) * (I([ln7], [((i32.load@(ln7)) + 1) - (i32.load@(ln7))], [ln7 = gn0 - 80], [ln7 = 0]));
  (443 + (list_sum([|f29|; |f33|]))) * (I([ln7], [((i32.load@(ln7)) + 1) - (i32.load@(ln7))], [ln7 = gn0 - 80], [ln7 = 0]));
  (556 + (list_sum([|f29|; |f33|; |f37|; |f42|]))) * (I([ln7], [((i32.load@(ln7)) + 1) - (i32.load@(ln7))], [ln7 = gn0 - 80], [ln7 = 0]));
  (451 + (list_sum([|f29|; |f33|]))) * (I([ln7], [((i32.load@(ln7)) + 1) - (i32.load@(ln7))], [ln7 = gn0 - 80], [ln7 = 0]));
  (631 + (list_sum([|f29|; |f33|; |f37|]))) * (I([ln7], [((i32.load@(ln7)) + 1) - (i32.load@(ln7))], [ln7 = gn0 - 80], [ln7 = 0]))
])
  ebb exits:  [274 276 277 278 279 281]
  ebb succs:  [281 279 278 277 276 274]
  unknown number of paths to exit 274
  unknown number of paths to exit 276
  unknown number of paths to exit 277
  unknown number of paths to exit 278
  unknown number of paths to exit 279
  unknown number of paths to exit 281
  13 loop paths
  [5 6 7 8 9 10 11 12 13 16 17 18 19 20 21 22 23 24 25]  [5 6 7 8 9 10 11 12 13 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 34 35 36 37 38 39 40 41 42 43 44 45 46 52 53 57 58 59 60 61 62 63 64 71 74 75 76 77 78 79 80 81 82 83 90]  [5 6 7 8 9 10 11 12 13 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 34 35 36 37 38 39 40 41 42 43 44 45 46 52 53 57 58 59 60 61 62 63 64 71 74 75 76 77 78 79 80 81 82 83 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 118 119 120 121 122 123 124 125]  [5 6 7 8 9 10 11 12 13 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 34 35 36 37 38 39 40 41 42 43 44 45 46 52 53 57 58 59 60 61 62 63 64 71 74 75 76 77 78 79 80 81 82 83 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 118 119 120 121 122 123 124 125 127]  [5 6 7 8 9 10 11 12 13 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 34 35 36 37 38 39 40 41 42 43 44 45 46 52 53 57 58 59 60 61 62 63 64 71 74 75 76 77 78 79 80 81 82 83 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 118 119 120 121 122 123 124 125 129]  [5 6 7 8 9 10 11 12 13 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 34 35 36 37 38 39 40 41 42 43 44 45 46 52 53 57 58 59 60 61 62 63 64 71 74 75 76 77 78 79 80 81 82 83 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 118 119 120 121 122 123 124 125 131]  [5 6 7 8 9 10 11 12 13 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 34 35 36 37 38 39 40 41 42 43 44 45 46 52 53 57 58 59 60 61 62 63 64 71 74 75 76 77 78 79 80 81 82 83 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 118 119 120 121 122 123 124 125 133]  [5 6 7 8 9 10 11 12 13 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 34 35 36 37 38 39 40 41 42 43 44 45 46 52 53 57 58 59 60 61 62 63 64 71 74 75 76 77 78 79 80 81 82 83 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 118 119 120 121 122 123 124 125 135]  [5 6 7 8 9 10 11 12 13 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 34 35 36 37 38 39 40 41 42 43 44 45 46 52 53 57 58 59 60 61 62 63 64 71 74 75 76 77 78 79 80 81 82 83 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 118 119 120 121 122 123 124 125 137]  [5 6 7 8 9 10 11 12 13 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 34 35 36 37 38 39 40 41 42 43 44 45 46 52 53 57 58 59 60 61 62 63 64 71 74 75 76 77 78 79 80 81 82 83 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 118 119 120 121 122 123 124 125 139]  [5 6 7 8 9 10 11 12 13 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 34 35 36 37 38 39 40 41 42 43 44 45 46 52 53 57 58 59 60 61 62 63 64 71 74 75 76 77 78 79 80 81 82 83 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 110 111 217 218 219 220 221 222 223 224 225 230 231 234 235 236 237 238 239 240]  [5 6 7 8 9 10 11 12 13 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 34 35 36 37 38 39 40 41 42 43 44 45 46 52 53 57 58 59 60 61 62 63 64 71 74 75 76 77 78 79 80 81 82 83 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 110 111 242 243]  [5 6 7 8 9 10 11 12 13 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 34 35 36 37 38 39 40 41 42 43 44 45 46 52 53 57 58 59 60 61 62 63 64 71 74 75 76 77 78 79 80 81 82 83 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 209 210 269 270 271]
nested ebbs:
  ebb entry:  5
    ebb type:   block
    ebb blocks: [5 6 7 8 9]
    ebb cost:   582
    ebb exits:  [10 252 276]
    ebb succs:  [252 10]
  ebb entry:  10
    ebb type:   block
    ebb blocks: [10]
    ebb cost:   2
    ebb exits:  [11]
    ebb succs:  [11]
  ebb entry:  11
    ebb type:   loop
    ebb blocks: [11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249]
    ebb cost:   24 * (I([ln12], [not((ln12 && 255) != 37)], [ln12 = ((0))], [ln12 = (pn1)]))
    ebb exits:  [5 267 269 273 276 277 278]
    ebb succs:  [273 269 267 5]
    0 paths to exit 5

    unknown number of paths to exit 267
    unknown number of paths to exit 269
    unknown number of paths to exit 273
    unknown number of paths to exit 276
    unknown number of paths to exit 277
    unknown number of paths to exit 278
    1 loop paths
    [11 12 13 16 248]
nested ebbs:
    ebb entry:  11
      ebb type:   block
      ebb blocks: [11 12 13 14 15 16]
      ebb cost:   51
      ebb exits:  [17 22 248]
      ebb succs:  [248 22 17]
    ebb entry:  17
      ebb type:   block
      ebb blocks: [17]
      ebb cost:   8
      ebb exits:  [18]
      ebb succs:  [18]
    ebb entry:  18
      ebb type:   loop
      ebb blocks: [18 19 20]
      ebb cost:   (24 * (I([pn1], [(i32.load8_u@(pn1)) == 37], [pn1 = pn1], [pn1 = pn1 + 2]))) + 1
      ebb exits:  [21 22]
      ebb succs:  [22 21]
      1 paths to exit 21
      [18 19 20]
      1 paths to exit 22
      [18]
      1 loop paths
      [18 19]
      1 post loop exit paths
      [20]
    ebb entry:  21
      ebb type:   block
      ebb blocks: [21]
      ebb cost:   11
      ebb exits:  [22]
      ebb succs:  [22]
    ebb entry:  22
      ebb type:   block
      ebb blocks: [22 23 24 25 26 27 28 29 30 31 32 33 34]
      ebb cost:   519
      ebb exits:  [5 35 40 276]
      ebb succs:  [40 35]
    ebb entry:  35
      ebb type:   block
      ebb blocks: [35]
      ebb cost:   20
      ebb exits:  [36]
      ebb succs:  [36]
    ebb entry:  36
      ebb type:   loop
      ebb blocks: [36 37 38]
      ebb cost:   (28 * (I([pn1], [(1 shl ((i32.load8_s@(pn1)) - 32)) && 75913], [pn1 = ((0)) + 1], [pn1 = pn1 + 1]))) + 1
      ebb exits:  [39 40]
      ebb succs:  [40 39]
      1 paths to exit 39
      [36 37 38]
      1 paths to exit 40
      [36]
      1 loop paths
      [36 37]
      1 post loop exit paths
      [38]
    ebb entry:  39
      ebb type:   block
      ebb blocks: [39]
      ebb cost:   2
      ebb exits:  [40]
      ebb succs:  [40]
    ebb entry:  40
      ebb type:   block
      ebb blocks: [40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73]
      ebb cost:   410
      ebb exits:  [74 267 276]
      ebb succs:  [74]
    ebb entry:  74
      ebb type:   block
      ebb blocks: [74]
      ebb cost:   13
      ebb exits:  [75]
      ebb succs:  [75]
    ebb entry:  75
      ebb type:   loop
      ebb blocks: [75 76 77]
      ebb cost:   (36 * (I([ln8; pn1], [((i32.load8_u@(((i32.load8_s@(pn1)) + (ln8 * 58)) + 2447)) - 1) < 8], [ln8 = 0; pn1 = (0)], [ln8 = ((((pn1)) + (0 * 58)) + 2447); pn1 = pn1 + 1]))) + 1
      ebb exits:  [78 277]
      ebb succs:  [78]
      1 paths to exit 78
      [75 76 77]
      1 paths to exit 277
      [75]
      1 loop paths
      [75 76]
      1 post loop exit paths
      [77]
    ebb entry:  78
      ebb type:   block
      ebb blocks: [78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142]
      ebb cost:   262
      ebb exits:  [5 143 147 151 159 166 175 212 217 242 246 269 273 277]
      ebb succs:  [246 242 217 212 175 166 159 151 147 143]
    ebb entry:  143
      ebb type:   block
      ebb blocks: [143]
      ebb cost:   25
      ebb exits:  [144]
      ebb succs:  [144]
    ebb entry:  144
      ebb type:   loop
      ebb blocks: [144 145]
      ebb cost:   (24 * (I([lN24], [lN24 > 15], [lN24 = (0)], [lN24 = 0 shr_u 4]))) + 1
      ebb exits:  [146]
      ebb succs:  [146]
      1 paths to exit 146
      [144 145]
      1 loop paths
      [144]
      1 post loop exit paths
      [145]
    ebb entry:  146
      ebb type:   block
      ebb blocks: [146]
      ebb cost:   7
      ebb exits:  [147]
      ebb succs:  [147]
    ebb entry:  147
      ebb type:   block
      ebb blocks: [147 148 149 150]
      ebb cost:   27
      ebb exits:  [151 167]
      ebb succs:  [167 151]
    ebb entry:  151
      ebb type:   block
      ebb blocks: [151]
      ebb cost:   39
      ebb exits:  [152 156]
      ebb succs:  [156 152]
    ebb entry:  152
      ebb type:   block
      ebb blocks: [152]
      ebb cost:   22
      ebb exits:  [153]
      ebb succs:  [153]
    ebb entry:  153
      ebb type:   loop
      ebb blocks: [153 154]
      ebb cost:   (21 * (I([lN24], [lN24 > 7], [lN24 = 0], [lN24 = 0 shr_u 3]))) + 1
      ebb exits:  [155]
      ebb succs:  [155]
      1 paths to exit 155
      [153 154]
      1 loop paths
      [153]
      1 post loop exit paths
      [154]
    ebb entry:  155
      ebb type:   block
      ebb blocks: [155]
      ebb cost:   8
      ebb exits:  [156]
      ebb succs:  [156]
    ebb entry:  156
      ebb type:   block
      ebb blocks: [156 157 158]
      ebb cost:   27
      ebb exits:  [159 167]
      ebb succs:  [167 159]
    ebb entry:  159
      ebb type:   block
      ebb blocks: [159 160 161 162 163 164 165]
      ebb cost:   24
      ebb exits:  [166]
      ebb succs:  [166]
    ebb entry:  166
      ebb type:   block
      ebb blocks: [166]
      ebb cost:   13
      ebb exits:  [167]
      ebb succs:  [167]
    ebb entry:  167
      ebb type:   block
      ebb blocks: [167 168 169 170 171 172 173 174]
      ebb cost:   55
      ebb exits:  [175 269 276]
      ebb succs:  [175]
    ebb entry:  175
      ebb type:   block
      ebb blocks: [175 176 177 178 179 180]
      ebb cost:   57
      ebb exits:  [181 187]
      ebb succs:  [187 181]
    ebb entry:  181
      ebb type:   block
      ebb blocks: [181]
      ebb cost:   5
      ebb exits:  [182]
      ebb succs:  [182]
    ebb entry:  182
      ebb type:   loop
      ebb blocks: [182 183 184 185]
      ebb cost:   (21 * (I([ln8], [ln8 - 1], [ln8 = 0], [ln8 = 0 - 1]))) + 1
      ebb exits:  [186 187 189]
      ebb succs:  [189 187 186]
      1 paths to exit 186
      [182 183 184 185]
      1 paths to exit 187
      [182 183]
      1 paths to exit 189
      [182]
      1 loop paths
      [182 183 184]
      1 post loop exit paths
      [185]
    ebb entry:  186
      ebb type:   block
      ebb blocks: [186]
      ebb cost:   4
      ebb exits:  [187]
      ebb succs:  [187]
    ebb entry:  187
      ebb type:   block
      ebb blocks: [187 188]
      ebb cost:   64
      ebb exits:  [189 205]
      ebb succs:  [205 189]
    ebb entry:  189
      ebb type:   block
      ebb blocks: [189 190 191 192]
      ebb cost:   39
      ebb exits:  [193 198]
      ebb succs:  [198 193]
    ebb entry:  193
      ebb type:   block
      ebb blocks: [193]
      ebb cost:   13
      ebb exits:  [194]
      ebb succs:  [194]
    ebb entry:  194
      ebb type:   loop
      ebb blocks: [194 195 196]
      ebb cost:   (23 * (I([ln8], [(ln8 - 4) > 3], [ln8 = 0], [ln8 = 0 - 4]))) + 1
      ebb exits:  [197 200]
      ebb succs:  [200 197]
      1 paths to exit 197
      [194 195 196]
      1 paths to exit 200
      [194]
      1 loop paths
      [194 195]
      1 post loop exit paths
      [196]
    ebb entry:  197
      ebb type:   block
      ebb blocks: [197]
      ebb cost:   4
      ebb exits:  [198]
      ebb succs:  [198]
    ebb entry:  198
      ebb type:   block
      ebb blocks: [198 199]
      ebb cost:   24
      ebb exits:  [200 205]
      ebb succs:  [205 200]
    ebb entry:  200
      ebb type:   block
      ebb blocks: [200]
      ebb cost:   6
      ebb exits:  [201]
      ebb succs:  [201]
    ebb entry:  201
      ebb type:   loop
      ebb blocks: [201 202 203]
      ebb cost:   (15 * (I([ln8], [ln8 - 1], [ln8 = 0], [ln8 = 0 - 1]))) + 1
      ebb exits:  [204 206]
      ebb succs:  [206 204]
      1 paths to exit 204
      [201 202 203]
      1 paths to exit 206
      [201]
      1 loop paths
      [201 202]
      1 post loop exit paths
      [203]
    ebb entry:  204
      ebb type:   block
      ebb blocks: [204]
      ebb cost:   3
      ebb exits:  [205]
      ebb succs:  [205]
    ebb entry:  205
      ebb type:   block
      ebb blocks: [205]
      ebb cost:   16
      ebb exits:  [206]
      ebb succs:  [206]
    ebb entry:  206
      ebb type:   block
      ebb blocks: [206 207 208 209 210 211]
      ebb cost:   40
      ebb exits:  [212 269 276]
      ebb succs:  [212]
    ebb entry:  212
      ebb type:   block
      ebb blocks: [212 213 214 215 216]
      ebb cost:   114
      ebb exits:  [217 218 240]
      ebb succs:  [240 218 217]
    ebb entry:  217
      ebb type:   block
      ebb blocks: [217]
      ebb cost:   22
      ebb exits:  [218]
      ebb succs:  [218]
    ebb entry:  218
      ebb type:   block
      ebb blocks: [218]
      ebb cost:   5
      ebb exits:  [219]
      ebb succs:  [219]
    ebb entry:  219
      ebb type:   block
      ebb blocks: [219]
      ebb cost:   6
      ebb exits:  [220]
      ebb succs:  [220]
    ebb entry:  220
      ebb type:   loop
      ebb blocks: [220 221 222 223 224 225 226 227]
      ebb cost:   ((33 + |f42|) * (I([ln10; pn1; rn0], [ln10 > (pn1 + rn0)], [ln10 = 0; pn1 = pn1; rn0 = rn0], [ln10 = 0; pn1 = pn1 + rn0; rn0 = rn0]))) + (list_max([1; 1; 1]))
      ebb exits:  [228 230]
      ebb succs:  [230 228]
      2 paths to exit 228
      [220 221 222 227]
      [220 221 222 223 227]
      2 paths to exit 230
      [220 221 222 223 224 225]
      [220]
      1 loop paths
      [220 221 222 223 224]
      3 post loop exit paths
      [227]      [227]      [225]
    ebb entry:  228
      ebb type:   block
      ebb blocks: [228 229]
      ebb cost:   16
      ebb exits:  [230 278]
      ebb succs:  [230]
    ebb entry:  230
      ebb type:   block
      ebb blocks: [230 231 232 233]
      ebb cost:   70
      ebb exits:  [234 240 277]
      ebb succs:  [240 234]
    ebb entry:  234
      ebb type:   block
      ebb blocks: [234]
      ebb cost:   11
      ebb exits:  [235]
      ebb succs:  [235]
    ebb entry:  235
      ebb type:   loop
      ebb blocks: [235 236 237 238]
      ebb cost:   ((31 + (list_sum([|f33|; |f42|]))) * (I([ln9; pn1; rn0], [pn1 > (rn0 + ln9)], [ln9 = 0; pn1 = pn1; rn0 = rn0], [ln9 = rn0 + 0; pn1 = pn1; rn0 = rn0]))) + 1
      ebb exits:  [239 240]
      ebb succs:  [240 239]
      1 paths to exit 239
      [235 236 237 238]
      2 paths to exit 240
      [235 236]
      [235]
      1 loop paths
      [235 236 237]
      1 post loop exit paths
      [238]
    ebb entry:  239
      ebb type:   block
      ebb blocks: [239]
      ebb cost:   17
      ebb exits:  [240]
      ebb succs:  [240]
    ebb entry:  240
      ebb type:   block
      ebb blocks: [240 241]
      ebb cost:   0
      ebb exits:  [5 242]
      ebb succs:  [242]
    ebb entry:  242
      ebb type:   block
      ebb blocks: [242 243 244 245]
      ebb cost:   27
      ebb exits:  [5 246 276 277]
      ebb succs:  [246]
    ebb entry:  246
      ebb type:   block
      ebb blocks: [246 247]
      ebb cost:   26
      ebb exits:  [248 269]
      ebb succs:  [248]
    ebb entry:  248
      ebb type:   block
      ebb blocks: [248 249]
      ebb cost:   0
      ebb exits:  [11]
      ebb succs:  [11]
  ebb entry:  250
    ebb type:   block
    ebb blocks: [250 251]
    ebb cost:   1
    ebb exits:  [252 281]
    ebb succs:  [252]
  ebb entry:  252
    ebb type:   block
    ebb blocks: [252 253]
    ebb cost:   47
    ebb exits:  [254 273 279]
    ebb succs:  [273 254]
  ebb entry:  254
    ebb type:   block
    ebb blocks: [254]
    ebb cost:   11
    ebb exits:  [255]
    ebb succs:  [255]
  ebb entry:  255
    ebb type:   loop
    ebb blocks: [255 256 257 258 259]
    ebb cost:   ((26 + |f35|) * (I([pn1], [(pn1 + 1) != 10], [pn1 = pn1], [pn1 = pn1 + 1]))) + (list_max([1; 1]))
    ebb exits:  [260 279]
    ebb succs:  [260]
    1 paths to exit 260
    [255 259]
    1 paths to exit 279
    [255 256 257]
    1 loop paths
    [255 256]
    2 post loop exit paths
    [259]    [257]
  ebb entry:  260
    ebb type:   block
    ebb blocks: [260]
    ebb cost:   30
    ebb exits:  [261 279]
    ebb succs:  [261]
  ebb entry:  261
    ebb type:   block
    ebb blocks: [261]
    ebb cost:   8
    ebb exits:  [262]
    ebb succs:  [262]
  ebb entry:  262
    ebb type:   loop
    ebb blocks: [262 263 264]
    ebb cost:   (14 * (I([pn1], [(pn1 + 1) != 10], [pn1 = pn1], [pn1 = pn1 + 1]))) + 1
    ebb exits:  [265 267]
    ebb succs:  [267 265]
    1 paths to exit 265
    [262 263 264]
    1 paths to exit 267
    [262]
    1 loop paths
    [262 263]
    1 post loop exit paths
    [264]
  ebb entry:  265
    ebb type:   block
    ebb blocks: [265 266]
    ebb cost:   7
    ebb exits:  [267 279]
    ebb succs:  [267]
  ebb entry:  267
    ebb type:   block
    ebb blocks: [267 268]
    ebb cost:   7
    ebb exits:  [269 277]
    ebb succs:  [269]
  ebb entry:  269
    ebb type:   block
    ebb blocks: [269 270 271 272]
    ebb cost:   34
    ebb exits:  [5 273 276 277]
    ebb succs:  [273 5]
  ebb entry:  273
    ebb type:   block
    ebb blocks: [273]
    ebb cost:   4
    ebb exits:  [274]
    ebb succs:  []
ebb entry:  274
  ebb type:   block
  ebb blocks: [274 275]
  ebb cost:   9
  ebb exits:  [276 279]
  ebb succs:  [279 276]
ebb entry:  276
  ebb type:   block
  ebb blocks: [276]
  ebb cost:   7
  ebb exits:  [277]
  ebb succs:  [277]
ebb entry:  277
  ebb type:   block
  ebb blocks: [277]
  ebb cost:   7
  ebb exits:  [278]
  ebb succs:  [278]
ebb entry:  278
  ebb type:   block
  ebb blocks: [278]
  ebb cost:   9
  ebb exits:  [279]
  ebb succs:  [279]
ebb entry:  279
  ebb type:   block
  ebb blocks: [279 280]
  ebb cost:   6
  ebb exits:  [280]
  ebb succs:  []
ebb entry:  281
  ebb type:   block
  ebb blocks: [281]
  ebb cost:   0
  ebb exits:  []
  ebb succs:  []
