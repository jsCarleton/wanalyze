ebb costs:
[0]: 224
[38]: (list_max((28 * N([m[16]], [i32.eqz(m[16])], [m[16]], [m[16]])), (34 * N([m[20]], [not(i32.eqz(m[20]))], [m[20]], [m[20]]))) + 1)
[45]: 28
[52]: (list_max((18 * N([m[0]], [m[0]], [m[0]], [m[0]])), (10 * N([m[0]], [m[0]], [m[0]], [m[0]]))) + 1)
[55]: 4
[57]: 118
[70]: (list_max((37 * N([m[16]], [m[16]], [m[16]], [m[16]])), (42 * N([m[16]], [m[16]], [m[16]], [m[16]]))) + list_max(1, 1, 5))
[77]: 1
[78]: 89
[84]: (list_max((29 * N([m[20]], [m[20]], [m[20]], [m[20]])), (28 * N([m[16]], [m[16]], [m[16]], [m[16]]))) + list_max(1, 1))
[89]: 1
[90]: 38
[99]: (list_max((18 * N([m[0]], [m[0]], [m[0]], [m[0]])), (10 * N([m[0]], [m[0]], [m[0]], [m[0]]))) + 1)
[102]: 4
[104]: 89
[130]: (list_max((10 * N([m[8]], [m[8]], [m[8]], [m[8]])), (18 * N([m[8]], [m[8]], [m[8]], [m[8]]))) + list_max(1, 1))
[135]: 1
[136]: 63
[148]: 22
[151]: 38
[165]: 3
[167]: 3
[169]: 5
[171]: 7
[172]: 32
[178]: 26
[185]: ((14 * N([m[8]], [m[8]], [m[8]], [m[8]])) + 1)
[188]: 1
[190]: 33
[193]: ((23 * N([pn0], [((pn0 + 1) != 32)], [pn0], [(pn0 + 1)])) + 1)
[195]: 42
[197]: 61
[202]: 22
[211]: ((9 * N([m[8]], [m[8]], [m[8]], [m[8]])) + list_max(1, 1))
[216]: 10
[219]: (list_max((10 * N([ln4; m[0]], [(ln4 >= m[0])], [0; m[0]], [ln4; m[0]])), (19 * N([ln4; m[0]; m[4]], [not(((m[0] + m[4]) > ln4))], [0; m[0]; m[4]], [ln4; m[0]; m[4]]))) + Empty)
[224]: 1
[226]: 103
[250]: (list_max((18 * N([m[0]], [m[0]], [m[0]], [m[0]])), (10 * N([m[0]], [m[0]], [m[0]], [m[0]]))) + 1)
[253]: 4
[254]: 57
[266]: 11
[267]: 121
[282]: ((25 * N([m[16]], [m[16]], [m[16]], [m[16]])) + 1)
[285]: 7
[286]: 7
[289]: ((15 * N([ln5; pn0], [((pn0 + 8) < ln5)], [0; pn0], [ln5; (pn0 + 4)])) + 1)
[291]: 127
[307]: ((25 * N([m[16]], [m[16]], [m[16]], [m[16]])) + 1)
[310]: 7
[311]: 7
[313]: 18
[314]: 5
[316]: 18
[317]: 35
[320]: 6
[322]: 186
[355]: ((25 * N([m[16]], [m[16]], [m[16]], [m[16]])) + 1)
[358]: 4
[359]: 10
[361]: 18
[362]: 5
[364]: 137
[390]: 6
[392]: 0
0 ebb paths found
|f16| = Inf
