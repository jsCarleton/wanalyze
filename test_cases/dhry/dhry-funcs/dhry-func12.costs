ebb costs:
[0]: 26
[7]: ((20 * N([ln3; pn2], [((pn2 + 1) < ln3)], [(pn0 + pn2); pn0], [ln3; (pn2 + 1)])) + 1)
[10]: 1
[12]: 15
[16]: ((27 * N([ln4; pn2], [((pn2 + 4) <= ln4)], [((pn0 + pn2) - 4); (pn0 + 4)], [ln4; (pn2 + 4)])) + 1)
[18]: 1
[20]: 3
[22]: 3
[23]: 16
[27]: ((75 * N([ln4; pn2], [((pn2 - -64) <= ln4)], [(((pn0 + pn2) && -4) + -64); (pn0 - -64)], [ln4; (pn2 - -64)])) + 1)
[29]: 1
[30]: 5
[32]: ((15 * N([pn0; pn2], [((pn2 + 4) < pn0)], [((pn0 + pn2) && -4); (pn0 + 4)], [pn0; (pn2 + 4)])) + 1)
[34]: 1
[35]: 5
[37]: ((15 * N([ln3; pn2], [((pn2 + 1) != ln3)], [(pn0 + pn2); (pn0 + 1)], [ln3; (pn2 + 1)])) + 1)
[39]: 1
[40]: 1
68 ebb paths found
[0 22 23 30 35 40]
[0 22 23 30 35 37 39 40]
[0 22 23 30 32 34 35 40]
[0 22 23 30 32 34 35 37 39 40]
[0 22 23 27 29 30 35 40]
[0 22 23 27 29 30 35 37 39 40]
[0 22 23 27 29 30 32 34 35 40]
[0 22 23 27 29 30 32 34 35 37 39 40]
[0 12 20 35 40]
[0 12 20 35 37 39 40]
[0 12 20 22 23 30 35 40]
[0 12 20 22 23 30 35 37 39 40]
[0 12 20 22 23 30 32 34 35 40]
[0 12 20 22 23 30 32 34 35 37 39 40]
[0 12 20 22 23 27 29 30 35 40]
[0 12 20 22 23 27 29 30 35 37 39 40]
[0 12 20 22 23 27 29 30 32 34 35 40]
[0 12 20 22 23 27 29 30 32 34 35 37 39 40]
[0 12 16 18 35 40]
[0 12 16 18 35 37 39 40]
[0 12 16 18 20 35 40]
[0 12 16 18 20 35 37 39 40]
[0 12 16 18 20 22 23 30 35 40]
[0 12 16 18 20 22 23 30 35 37 39 40]
[0 12 16 18 20 22 23 30 32 34 35 40]
[0 12 16 18 20 22 23 30 32 34 35 37 39 40]
[0 12 16 18 20 22 23 27 29 30 35 40]
[0 12 16 18 20 22 23 27 29 30 35 37 39 40]
[0 12 16 18 20 22 23 27 29 30 32 34 35 40]
[0 12 16 18 20 22 23 27 29 30 32 34 35 37 39 40]
[0 7 23 30 35 40]
[0 7 23 30 35 37 39 40]
[0 7 23 30 32 34 35 40]
[0 7 23 30 32 34 35 37 39 40]
[0 7 23 27 29 30 35 40]
[0 7 23 27 29 30 35 37 39 40]
[0 7 23 27 29 30 32 34 35 40]
[0 7 23 27 29 30 32 34 35 37 39 40]
[0 7 10 23 30 35 40]
[0 7 10 23 30 35 37 39 40]
[0 7 10 23 30 32 34 35 40]
[0 7 10 23 30 32 34 35 37 39 40]
[0 7 10 23 27 29 30 35 40]
[0 7 10 23 27 29 30 35 37 39 40]
[0 7 10 23 27 29 30 32 34 35 40]
[0 7 10 23 27 29 30 32 34 35 37 39 40]
[0 7 10 12 20 35 40]
[0 7 10 12 20 35 37 39 40]
[0 7 10 12 20 22 23 30 35 40]
[0 7 10 12 20 22 23 30 35 37 39 40]
[0 7 10 12 20 22 23 30 32 34 35 40]
[0 7 10 12 20 22 23 30 32 34 35 37 39 40]
[0 7 10 12 20 22 23 27 29 30 35 40]
[0 7 10 12 20 22 23 27 29 30 35 37 39 40]
[0 7 10 12 20 22 23 27 29 30 32 34 35 40]
[0 7 10 12 20 22 23 27 29 30 32 34 35 37 39 40]
[0 7 10 12 16 18 35 40]
[0 7 10 12 16 18 35 37 39 40]
[0 7 10 12 16 18 20 35 40]
[0 7 10 12 16 18 20 35 37 39 40]
[0 7 10 12 16 18 20 22 23 30 35 40]
[0 7 10 12 16 18 20 22 23 30 35 37 39 40]
[0 7 10 12 16 18 20 22 23 30 32 34 35 40]
[0 7 10 12 16 18 20 22 23 30 32 34 35 37 39 40]
[0 7 10 12 16 18 20 22 23 27 29 30 35 40]
[0 7 10 12 16 18 20 22 23 27 29 30 35 37 39 40]
[0 7 10 12 16 18 20 22 23 27 29 30 32 34 35 40]
[0 7 10 12 16 18 20 22 23 27 29 30 32 34 35 37 39 40]
|f12| = list_max([
  list_sum(26, 3, 16, 5, 5, 1);
  list_sum([
    26;
    3;
    16;
    5;
    5;
    (15 * (N([ln3; pn2], [(pn2 + 1) != ln3], [pn0 + pn2; pn0 + 1], [ln3; pn2 + 1]))) + 1;
    1;
    1
  ]);
  list_sum([
    26;
    3;
    16;
    5;
    (15 * (N([pn0; pn2], [(pn2 + 4) < pn0], [(pn0 + pn2) && -4; pn0 + 4], [pn0; pn2 + 4]))) + 1;
    1;
    5;
    1
  ]);
  list_sum([
    26;
    3;
    16;
    5;
    (15 * (N([pn0; pn2], [(pn2 + 4) < pn0], [(pn0 + pn2) && -4; pn0 + 4], [pn0; pn2 + 4]))) + 1;
    1;
    5;
    (15 * (N([ln3; pn2], [(pn2 + 1) != ln3], [pn0 + pn2; pn0 + 1], [ln3; pn2 + 1]))) + 1;
    1;
    1
  ]);
  list_sum([
    26;
    3;
    16;
    (75 * (N([ln4; pn2], [(pn2 - -64) <= ln4], [((pn0 + pn2) && -4) + -64; pn0 - -64], [ln4; pn2 - -64]))) + 1;
    1;
    5;
    5;
    1
  ]);
  list_sum([
    26;
    3;
    16;
    (75 * (N([ln4; pn2], [(pn2 - -64) <= ln4], [((pn0 + pn2) && -4) + -64; pn0 - -64], [ln4; pn2 - -64]))) + 1;
    1;
    5;
    5;
    (15 * (N([ln3; pn2], [(pn2 + 1) != ln3], [pn0 + pn2; pn0 + 1], [ln3; pn2 + 1]))) + 1;
    1;
    1
  ]);
  list_sum([
    26;
    3;
    16;
    (75 * (N([ln4; pn2], [(pn2 - -64) <= ln4], [((pn0 + pn2) && -4) + -64; pn0 - -64], [ln4; pn2 - -64]))) + 1;
    1;
    5;
    (15 * (N([pn0; pn2], [(pn2 + 4) < pn0], [(pn0 + pn2) && -4; pn0 + 4], [pn0; pn2 + 4]))) + 1;
    1;
    5;
    1
  ]);
  list_sum([
    26;
    3;
    16;
    (75 * (N([ln4; pn2], [(pn2 - -64) <= ln4], [((pn0 + pn2) && -4) + -64; pn0 - -64], [ln4; pn2 - -64]))) + 1;
    1;
    5;
    (15 * (N([pn0; pn2], [(pn2 + 4) < pn0], [(pn0 + pn2) && -4; pn0 + 4], [pn0; pn2 + 4]))) + 1;
    1;
    5;
    (15 * (N([ln3; pn2], [(pn2 + 1) != ln3], [pn0 + pn2; pn0 + 1], [ln3; pn2 + 1]))) + 1;
    1;
    1
  ]);
  list_sum(26, 15, 3, 5, 1);
  list_sum([
    26;
    15;
    3;
    5;
    (15 * (N([ln3; pn2], [(pn2 + 1) != ln3], [pn0 + pn2; pn0 + 1], [ln3; pn2 + 1]))) + 1;
    1;
    1
  ]);
  list_sum(26, 15, 3, 3, 16, 5, 5, 1);
  list_sum([
    26;
    15;
    3;
    3;
    16;
    5;
    5;
    (15 * (N([ln3; pn2], [(pn2 + 1) != ln3], [pn0 + pn2; pn0 + 1], [ln3; pn2 + 1]))) + 1;
    1;
    1
  ]);
  list_sum([
    26;
    15;
    3;
    3;
    16;
    5;
    (15 * (N([pn0; pn2], [(pn2 + 4) < pn0], [(pn0 + pn2) && -4; pn0 + 4], [pn0; pn2 + 4]))) + 1;
    1;
    5;
    1
  ]);
  list_sum([
    26;
    15;
    3;
    3;
    16;
    5;
    (15 * (N([pn0; pn2], [(pn2 + 4) < pn0], [(pn0 + pn2) && -4; pn0 + 4], [pn0; pn2 + 4]))) + 1;
    1;
    5;
    (15 * (N([ln3; pn2], [(pn2 + 1) != ln3], [pn0 + pn2; pn0 + 1], [ln3; pn2 + 1]))) + 1;
    1;
    1
  ]);
  list_sum([
    26;
    15;
    3;
    3;
    16;
    (75 * (N([ln4; pn2], [(pn2 - -64) <= ln4], [((pn0 + pn2) && -4) + -64; pn0 - -64], [ln4; pn2 - -64]))) + 1;
    1;
    5;
    5;
    1
  ]);
  list_sum([
    26;
    15;
    3;
    3;
    16;
    (75 * (N([ln4; pn2], [(pn2 - -64) <= ln4], [((pn0 + pn2) && -4) + -64; pn0 - -64], [ln4; pn2 - -64]))) + 1;
    1;
    5;
    5;
    (15 * (N([ln3; pn2], [(pn2 + 1) != ln3], [pn0 + pn2; pn0 + 1], [ln3; pn2 + 1]))) + 1;
    1;
    1
  ]);
  list_sum([
    26;
    15;
    3;
    3;
    16;
    (75 * (N([ln4; pn2], [(pn2 - -64) <= ln4], [((pn0 + pn2) && -4) + -64; pn0 - -64], [ln4; pn2 - -64]))) + 1;
    1;
    5;
    (15 * (N([pn0; pn2], [(pn2 + 4) < pn0], [(pn0 + pn2) && -4; pn0 + 4], [pn0; pn2 + 4]))) + 1;
    1;
    5;
    1
  ]);
  list_sum([
    26;
    15;
    3;
    3;
    16;
    (75 * (N([ln4; pn2], [(pn2 - -64) <= ln4], [((pn0 + pn2) && -4) + -64; pn0 - -64], [ln4; pn2 - -64]))) + 1;
    1;
    5;
    (15 * (N([pn0; pn2], [(pn2 + 4) < pn0], [(pn0 + pn2) && -4; pn0 + 4], [pn0; pn2 + 4]))) + 1;
    1;
    5;
    (15 * (N([ln3; pn2], [(pn2 + 1) != ln3], [pn0 + pn2; pn0 + 1], [ln3; pn2 + 1]))) + 1;
    1;
    1
  ]);
  list_sum([
    26;
    15;
    (27 * (N([ln4; pn2], [(pn2 + 4) <= ln4], [(pn0 + pn2) - 4; pn0 + 4], [ln4; pn2 + 4]))) + 1;
    1;
    5;
    1
  ]);
  list_sum([
    26;
    15;
    (27 * (N([ln4; pn2], [(pn2 + 4) <= ln4], [(pn0 + pn2) - 4; pn0 + 4], [ln4; pn2 + 4]))) + 1;
    1;
    5;
    (15 * (N([ln3; pn2], [(pn2 + 1) != ln3], [pn0 + pn2; pn0 + 1], [ln3; pn2 + 1]))) + 1;
    1;
    1
  ]);
  list_sum([
    26;
    15;
    (27 * (N([ln4; pn2], [(pn2 + 4) <= ln4], [(pn0 + pn2) - 4; pn0 + 4], [ln4; pn2 + 4]))) + 1;
    1;
    3;
    5;
    1
  ]);
  list_sum([
    26;
    15;
    (27 * (N([ln4; pn2], [(pn2 + 4) <= ln4], [(pn0 + pn2) - 4; pn0 + 4], [ln4; pn2 + 4]))) + 1;
    1;
    3;
    5;
    (15 * (N([ln3; pn2], [(pn2 + 1) != ln3], [pn0 + pn2; pn0 + 1], [ln3; pn2 + 1]))) + 1;
    1;
    1
  ]);
  list_sum([
    26;
    15;
    (27 * (N([ln4; pn2], [(pn2 + 4) <= ln4], [(pn0 + pn2) - 4; pn0 + 4], [ln4; pn2 + 4]))) + 1;
    1;
    3;
    3;
    16;
    5;
    5;
    1
  ]);
  list_sum([
    26;
    15;
    (27 * (N([ln4; pn2], [(pn2 + 4) <= ln4], [(pn0 + pn2) - 4; pn0 + 4], [ln4; pn2 + 4]))) + 1;
    1;
    3;
    3;
    16;
    5;
    5;
    (15 * (N([ln3; pn2], [(pn2 + 1) != ln3], [pn0 + pn2; pn0 + 1], [ln3; pn2 + 1]))) + 1;
    1;
    1
  ]);
  list_sum([
    26;
    15;
    (27 * (N([ln4; pn2], [(pn2 + 4) <= ln4], [(pn0 + pn2) - 4; pn0 + 4], [ln4; pn2 + 4]))) + 1;
    1;
    3;
    3;
    16;
    5;
    (15 * (N([pn0; pn2], [(pn2 + 4) < pn0], [(pn0 + pn2) && -4; pn0 + 4], [pn0; pn2 + 4]))) + 1;
    1;
    5;
    1
  ]);
  list_sum([
    26;
    15;
    (27 * (N([ln4; pn2], [(pn2 + 4) <= ln4], [(pn0 + pn2) - 4; pn0 + 4], [ln4; pn2 + 4]))) + 1;
    1;
    3;
    3;
    16;
    5;
    (15 * (N([pn0; pn2], [(pn2 + 4) < pn0], [(pn0 + pn2) && -4; pn0 + 4], [pn0; pn2 + 4]))) + 1;
    1;
    5;
    (15 * (N([ln3; pn2], [(pn2 + 1) != ln3], [pn0 + pn2; pn0 + 1], [ln3; pn2 + 1]))) + 1;
    1;
    1
  ]);
  list_sum([
    26;
    15;
    (27 * (N([ln4; pn2], [(pn2 + 4) <= ln4], [(pn0 + pn2) - 4; pn0 + 4], [ln4; pn2 + 4]))) + 1;
    1;
    3;
    3;
    16;
    (75 * (N([ln4; pn2], [(pn2 - -64) <= ln4], [((pn0 + pn2) && -4) + -64; pn0 - -64], [ln4; pn2 - -64]))) + 1;
    1;
    5;
    5;
    1
  ]);
  list_sum([
    26;
    15;
    (27 * (N([ln4; pn2], [(pn2 + 4) <= ln4], [(pn0 + pn2) - 4; pn0 + 4], [ln4; pn2 + 4]))) + 1;
    1;
    3;
    3;
    16;
    (75 * (N([ln4; pn2], [(pn2 - -64) <= ln4], [((pn0 + pn2) && -4) + -64; pn0 - -64], [ln4; pn2 - -64]))) + 1;
    1;
    5;
    5;
    (15 * (N([ln3; pn2], [(pn2 + 1) != ln3], [pn0 + pn2; pn0 + 1], [ln3; pn2 + 1]))) + 1;
    1;
    1
  ]);
  list_sum([
    26;
    15;
    (27 * (N([ln4; pn2], [(pn2 + 4) <= ln4], [(pn0 + pn2) - 4; pn0 + 4], [ln4; pn2 + 4]))) + 1;
    1;
    3;
    3;
    16;
    (75 * (N([ln4; pn2], [(pn2 - -64) <= ln4], [((pn0 + pn2) && -4) + -64; pn0 - -64], [ln4; pn2 - -64]))) + 1;
    1;
    5;
    (15 * (N([pn0; pn2], [(pn2 + 4) < pn0], [(pn0 + pn2) && -4; pn0 + 4], [pn0; pn2 + 4]))) + 1;
    1;
    5;
    1
  ]);
  list_sum([
    26;
    15;
    (27 * (N([ln4; pn2], [(pn2 + 4) <= ln4], [(pn0 + pn2) - 4; pn0 + 4], [ln4; pn2 + 4]))) + 1;
    1;
    3;
    3;
    16;
    (75 * (N([ln4; pn2], [(pn2 - -64) <= ln4], [((pn0 + pn2) && -4) + -64; pn0 - -64], [ln4; pn2 - -64]))) + 1;
    1;
    5;
    (15 * (N([pn0; pn2], [(pn2 + 4) < pn0], [(pn0 + pn2) && -4; pn0 + 4], [pn0; pn2 + 4]))) + 1;
    1;
    5;
    (15 * (N([ln3; pn2], [(pn2 + 1) != ln3], [pn0 + pn2; pn0 + 1], [ln3; pn2 + 1]))) + 1;
    1;
    1
  ]);
  list_sum([
    26;
    (20 * (N([ln3; pn2], [(pn2 + 1) < ln3], [pn0 + pn2; pn0], [ln3; pn2 + 1]))) + 1;
    16;
    5;
    5;
    1
  ]);
  list_sum([
    26;
    (20 * (N([ln3; pn2], [(pn2 + 1) < ln3], [pn0 + pn2; pn0], [ln3; pn2 + 1]))) + 1;
    16;
    5;
    5;
    (15 * (N([ln3; pn2], [(pn2 + 1) != ln3], [pn0 + pn2; pn0 + 1], [ln3; pn2 + 1]))) + 1;
    1;
    1
  ]);
  list_sum([
    26;
    (20 * (N([ln3; pn2], [(pn2 + 1) < ln3], [pn0 + pn2; pn0], [ln3; pn2 + 1]))) + 1;
    16;
    5;
    (15 * (N([pn0; pn2], [(pn2 + 4) < pn0], [(pn0 + pn2) && -4; pn0 + 4], [pn0; pn2 + 4]))) + 1;
    1;
    5;
    1
  ]);
  list_sum([
    26;
    (20 * (N([ln3; pn2], [(pn2 + 1) < ln3], [pn0 + pn2; pn0], [ln3; pn2 + 1]))) + 1;
    16;
    5;
    (15 * (N([pn0; pn2], [(pn2 + 4) < pn0], [(pn0 + pn2) && -4; pn0 + 4], [pn0; pn2 + 4]))) + 1;
    1;
    5;
    (15 * (N([ln3; pn2], [(pn2 + 1) != ln3], [pn0 + pn2; pn0 + 1], [ln3; pn2 + 1]))) + 1;
    1;
    1
  ]);
  list_sum([
    26;
    (20 * (N([ln3; pn2], [(pn2 + 1) < ln3], [pn0 + pn2; pn0], [ln3; pn2 + 1]))) + 1;
    16;
    (75 * (N([ln4; pn2], [(pn2 - -64) <= ln4], [((pn0 + pn2) && -4) + -64; pn0 - -64], [ln4; pn2 - -64]))) + 1;
    1;
    5;
    5;
    1
  ]);
  list_sum([
    26;
    (20 * (N([ln3; pn2], [(pn2 + 1) < ln3], [pn0 + pn2; pn0], [ln3; pn2 + 1]))) + 1;
    16;
    (75 * (N([ln4; pn2], [(pn2 - -64) <= ln4], [((pn0 + pn2) && -4) + -64; pn0 - -64], [ln4; pn2 - -64]))) + 1;
    1;
    5;
    5;
    (15 * (N([ln3; pn2], [(pn2 + 1) != ln3], [pn0 + pn2; pn0 + 1], [ln3; pn2 + 1]))) + 1;
    1;
    1
  ]);
  list_sum([
    26;
    (20 * (N([ln3; pn2], [(pn2 + 1) < ln3], [pn0 + pn2; pn0], [ln3; pn2 + 1]))) + 1;
    16;
    (75 * (N([ln4; pn2], [(pn2 - -64) <= ln4], [((pn0 + pn2) && -4) + -64; pn0 - -64], [ln4; pn2 - -64]))) + 1;
    1;
    5;
    (15 * (N([pn0; pn2], [(pn2 + 4) < pn0], [(pn0 + pn2) && -4; pn0 + 4], [pn0; pn2 + 4]))) + 1;
    1;
    5;
    1
  ]);
  list_sum([
    26;
    (20 * (N([ln3; pn2], [(pn2 + 1) < ln3], [pn0 + pn2; pn0], [ln3; pn2 + 1]))) + 1;
    16;
    (75 * (N([ln4; pn2], [(pn2 - -64) <= ln4], [((pn0 + pn2) && -4) + -64; pn0 - -64], [ln4; pn2 - -64]))) + 1;
    1;
    5;
    (15 * (N([pn0; pn2], [(pn2 + 4) < pn0], [(pn0 + pn2) && -4; pn0 + 4], [pn0; pn2 + 4]))) + 1;
    1;
    5;
    (15 * (N([ln3; pn2], [(pn2 + 1) != ln3], [pn0 + pn2; pn0 + 1], [ln3; pn2 + 1]))) + 1;
    1;
    1
  ]);
  list_sum([
    26;
    (20 * (N([ln3; pn2], [(pn2 + 1) < ln3], [pn0 + pn2; pn0], [ln3; pn2 + 1]))) + 1;
    1;
    16;
    5;
    5;
    1
  ]);
  list_sum([
    26;
    (20 * (N([ln3; pn2], [(pn2 + 1) < ln3], [pn0 + pn2; pn0], [ln3; pn2 + 1]))) + 1;
    1;
    16;
    5;
    5;
    (15 * (N([ln3; pn2], [(pn2 + 1) != ln3], [pn0 + pn2; pn0 + 1], [ln3; pn2 + 1]))) + 1;
    1;
    1
  ]);
  list_sum([
    26;
    (20 * (N([ln3; pn2], [(pn2 + 1) < ln3], [pn0 + pn2; pn0], [ln3; pn2 + 1]))) + 1;
    1;
    16;
    5;
    (15 * (N([pn0; pn2], [(pn2 + 4) < pn0], [(pn0 + pn2) && -4; pn0 + 4], [pn0; pn2 + 4]))) + 1;
    1;
    5;
    1
  ]);
  list_sum([
    26;
    (20 * (N([ln3; pn2], [(pn2 + 1) < ln3], [pn0 + pn2; pn0], [ln3; pn2 + 1]))) + 1;
    1;
    16;
    5;
    (15 * (N([pn0; pn2], [(pn2 + 4) < pn0], [(pn0 + pn2) && -4; pn0 + 4], [pn0; pn2 + 4]))) + 1;
    1;
    5;
    (15 * (N([ln3; pn2], [(pn2 + 1) != ln3], [pn0 + pn2; pn0 + 1], [ln3; pn2 + 1]))) + 1;
    1;
    1
  ]);
  list_sum([
    26;
    (20 * (N([ln3; pn2], [(pn2 + 1) < ln3], [pn0 + pn2; pn0], [ln3; pn2 + 1]))) + 1;
    1;
    16;
    (75 * (N([ln4; pn2], [(pn2 - -64) <= ln4], [((pn0 + pn2) && -4) + -64; pn0 - -64], [ln4; pn2 - -64]))) + 1;
    1;
    5;
    5;
    1
  ]);
  list_sum([
    26;
    (20 * (N([ln3; pn2], [(pn2 + 1) < ln3], [pn0 + pn2; pn0], [ln3; pn2 + 1]))) + 1;
    1;
    16;
    (75 * (N([ln4; pn2], [(pn2 - -64) <= ln4], [((pn0 + pn2) && -4) + -64; pn0 - -64], [ln4; pn2 - -64]))) + 1;
    1;
    5;
    5;
    (15 * (N([ln3; pn2], [(pn2 + 1) != ln3], [pn0 + pn2; pn0 + 1], [ln3; pn2 + 1]))) + 1;
    1;
    1
  ]);
  list_sum([
    26;
    (20 * (N([ln3; pn2], [(pn2 + 1) < ln3], [pn0 + pn2; pn0], [ln3; pn2 + 1]))) + 1;
    1;
    16;
    (75 * (N([ln4; pn2], [(pn2 - -64) <= ln4], [((pn0 + pn2) && -4) + -64; pn0 - -64], [ln4; pn2 - -64]))) + 1;
    1;
    5;
    (15 * (N([pn0; pn2], [(pn2 + 4) < pn0], [(pn0 + pn2) && -4; pn0 + 4], [pn0; pn2 + 4]))) + 1;
    1;
    5;
    1
  ]);
  list_sum([
    26;
    (20 * (N([ln3; pn2], [(pn2 + 1) < ln3], [pn0 + pn2; pn0], [ln3; pn2 + 1]))) + 1;
    1;
    16;
    (75 * (N([ln4; pn2], [(pn2 - -64) <= ln4], [((pn0 + pn2) && -4) + -64; pn0 - -64], [ln4; pn2 - -64]))) + 1;
    1;
    5;
    (15 * (N([pn0; pn2], [(pn2 + 4) < pn0], [(pn0 + pn2) && -4; pn0 + 4], [pn0; pn2 + 4]))) + 1;
    1;
    5;
    (15 * (N([ln3; pn2], [(pn2 + 1) != ln3], [pn0 + pn2; pn0 + 1], [ln3; pn2 + 1]))) + 1;
    1;
    1
  ]);
  list_sum([
    26;
    (20 * (N([ln3; pn2], [(pn2 + 1) < ln3], [pn0 + pn2; pn0], [ln3; pn2 + 1]))) + 1;
    1;
    15;
    3;
    5;
    1
  ]);
  list_sum([
    26;
    (20 * (N([ln3; pn2], [(pn2 + 1) < ln3], [pn0 + pn2; pn0], [ln3; pn2 + 1]))) + 1;
    1;
    15;
    3;
    5;
    (15 * (N([ln3; pn2], [(pn2 + 1) != ln3], [pn0 + pn2; pn0 + 1], [ln3; pn2 + 1]))) + 1;
    1;
    1
  ]);
  list_sum([
    26;
    (20 * (N([ln3; pn2], [(pn2 + 1) < ln3], [pn0 + pn2; pn0], [ln3; pn2 + 1]))) + 1;
    1;
    15;
    3;
    3;
    16;
    5;
    5;
    1
  ]);
  list_sum([
    26;
    (20 * (N([ln3; pn2], [(pn2 + 1) < ln3], [pn0 + pn2; pn0], [ln3; pn2 + 1]))) + 1;
    1;
    15;
    3;
    3;
    16;
    5;
    5;
    (15 * (N([ln3; pn2], [(pn2 + 1) != ln3], [pn0 + pn2; pn0 + 1], [ln3; pn2 + 1]))) + 1;
    1;
    1
  ]);
  list_sum([
    26;
    (20 * (N([ln3; pn2], [(pn2 + 1) < ln3], [pn0 + pn2; pn0], [ln3; pn2 + 1]))) + 1;
    1;
    15;
    3;
    3;
    16;
    5;
    (15 * (N([pn0; pn2], [(pn2 + 4) < pn0], [(pn0 + pn2) && -4; pn0 + 4], [pn0; pn2 + 4]))) + 1;
    1;
    5;
    1
  ]);
  list_sum([
    26;
    (20 * (N([ln3; pn2], [(pn2 + 1) < ln3], [pn0 + pn2; pn0], [ln3; pn2 + 1]))) + 1;
    1;
    15;
    3;
    3;
    16;
    5;
    (15 * (N([pn0; pn2], [(pn2 + 4) < pn0], [(pn0 + pn2) && -4; pn0 + 4], [pn0; pn2 + 4]))) + 1;
    1;
    5;
    (15 * (N([ln3; pn2], [(pn2 + 1) != ln3], [pn0 + pn2; pn0 + 1], [ln3; pn2 + 1]))) + 1;
    1;
    1
  ]);
  list_sum([
    26;
    (20 * (N([ln3; pn2], [(pn2 + 1) < ln3], [pn0 + pn2; pn0], [ln3; pn2 + 1]))) + 1;
    1;
    15;
    3;
    3;
    16;
    (75 * (N([ln4; pn2], [(pn2 - -64) <= ln4], [((pn0 + pn2) && -4) + -64; pn0 - -64], [ln4; pn2 - -64]))) + 1;
    1;
    5;
    5;
    1
  ]);
  list_sum([
    26;
    (20 * (N([ln3; pn2], [(pn2 + 1) < ln3], [pn0 + pn2; pn0], [ln3; pn2 + 1]))) + 1;
    1;
    15;
    3;
    3;
    16;
    (75 * (N([ln4; pn2], [(pn2 - -64) <= ln4], [((pn0 + pn2) && -4) + -64; pn0 - -64], [ln4; pn2 - -64]))) + 1;
    1;
    5;
    5;
    (15 * (N([ln3; pn2], [(pn2 + 1) != ln3], [pn0 + pn2; pn0 + 1], [ln3; pn2 + 1]))) + 1;
    1;
    1
  ]);
  list_sum([
    26;
    (20 * (N([ln3; pn2], [(pn2 + 1) < ln3], [pn0 + pn2; pn0], [ln3; pn2 + 1]))) + 1;
    1;
    15;
    3;
    3;
    16;
    (75 * (N([ln4; pn2], [(pn2 - -64) <= ln4], [((pn0 + pn2) && -4) + -64; pn0 - -64], [ln4; pn2 - -64]))) + 1;
    1;
    5;
    (15 * (N([pn0; pn2], [(pn2 + 4) < pn0], [(pn0 + pn2) && -4; pn0 + 4], [pn0; pn2 + 4]))) + 1;
    1;
    5;
    1
  ]);
  list_sum([
    26;
    (20 * (N([ln3; pn2], [(pn2 + 1) < ln3], [pn0 + pn2; pn0], [ln3; pn2 + 1]))) + 1;
    1;
    15;
    3;
    3;
    16;
    (75 * (N([ln4; pn2], [(pn2 - -64) <= ln4], [((pn0 + pn2) && -4) + -64; pn0 - -64], [ln4; pn2 - -64]))) + 1;
    1;
    5;
    (15 * (N([pn0; pn2], [(pn2 + 4) < pn0], [(pn0 + pn2) && -4; pn0 + 4], [pn0; pn2 + 4]))) + 1;
    1;
    5;
    (15 * (N([ln3; pn2], [(pn2 + 1) != ln3], [pn0 + pn2; pn0 + 1], [ln3; pn2 + 1]))) + 1;
    1;
    1
  ]);
  list_sum([
    26;
    (20 * (N([ln3; pn2], [(pn2 + 1) < ln3], [pn0 + pn2; pn0], [ln3; pn2 + 1]))) + 1;
    1;
    15;
    (27 * (N([ln4; pn2], [(pn2 + 4) <= ln4], [(pn0 + pn2) - 4; pn0 + 4], [ln4; pn2 + 4]))) + 1;
    1;
    5;
    1
  ]);
  list_sum([
    26;
    (20 * (N([ln3; pn2], [(pn2 + 1) < ln3], [pn0 + pn2; pn0], [ln3; pn2 + 1]))) + 1;
    1;
    15;
    (27 * (N([ln4; pn2], [(pn2 + 4) <= ln4], [(pn0 + pn2) - 4; pn0 + 4], [ln4; pn2 + 4]))) + 1;
    1;
    5;
    (15 * (N([ln3; pn2], [(pn2 + 1) != ln3], [pn0 + pn2; pn0 + 1], [ln3; pn2 + 1]))) + 1;
    1;
    1
  ]);
  list_sum([
    26;
    (20 * (N([ln3; pn2], [(pn2 + 1) < ln3], [pn0 + pn2; pn0], [ln3; pn2 + 1]))) + 1;
    1;
    15;
    (27 * (N([ln4; pn2], [(pn2 + 4) <= ln4], [(pn0 + pn2) - 4; pn0 + 4], [ln4; pn2 + 4]))) + 1;
    1;
    3;
    5;
    1
  ]);
  list_sum([
    26;
    (20 * (N([ln3; pn2], [(pn2 + 1) < ln3], [pn0 + pn2; pn0], [ln3; pn2 + 1]))) + 1;
    1;
    15;
    (27 * (N([ln4; pn2], [(pn2 + 4) <= ln4], [(pn0 + pn2) - 4; pn0 + 4], [ln4; pn2 + 4]))) + 1;
    1;
    3;
    5;
    (15 * (N([ln3; pn2], [(pn2 + 1) != ln3], [pn0 + pn2; pn0 + 1], [ln3; pn2 + 1]))) + 1;
    1;
    1
  ]);
  list_sum([
    26;
    (20 * (N([ln3; pn2], [(pn2 + 1) < ln3], [pn0 + pn2; pn0], [ln3; pn2 + 1]))) + 1;
    1;
    15;
    (27 * (N([ln4; pn2], [(pn2 + 4) <= ln4], [(pn0 + pn2) - 4; pn0 + 4], [ln4; pn2 + 4]))) + 1;
    1;
    3;
    3;
    16;
    5;
    5;
    1
  ]);
  list_sum([
    26;
    (20 * (N([ln3; pn2], [(pn2 + 1) < ln3], [pn0 + pn2; pn0], [ln3; pn2 + 1]))) + 1;
    1;
    15;
    (27 * (N([ln4; pn2], [(pn2 + 4) <= ln4], [(pn0 + pn2) - 4; pn0 + 4], [ln4; pn2 + 4]))) + 1;
    1;
    3;
    3;
    16;
    5;
    5;
    (15 * (N([ln3; pn2], [(pn2 + 1) != ln3], [pn0 + pn2; pn0 + 1], [ln3; pn2 + 1]))) + 1;
    1;
    1
  ]);
  list_sum([
    26;
    (20 * (N([ln3; pn2], [(pn2 + 1) < ln3], [pn0 + pn2; pn0], [ln3; pn2 + 1]))) + 1;
    1;
    15;
    (27 * (N([ln4; pn2], [(pn2 + 4) <= ln4], [(pn0 + pn2) - 4; pn0 + 4], [ln4; pn2 + 4]))) + 1;
    1;
    3;
    3;
    16;
    5;
    (15 * (N([pn0; pn2], [(pn2 + 4) < pn0], [(pn0 + pn2) && -4; pn0 + 4], [pn0; pn2 + 4]))) + 1;
    1;
    5;
    1
  ]);
  list_sum([
    26;
    (20 * (N([ln3; pn2], [(pn2 + 1) < ln3], [pn0 + pn2; pn0], [ln3; pn2 + 1]))) + 1;
    1;
    15;
    (27 * (N([ln4; pn2], [(pn2 + 4) <= ln4], [(pn0 + pn2) - 4; pn0 + 4], [ln4; pn2 + 4]))) + 1;
    1;
    3;
    3;
    16;
    5;
    (15 * (N([pn0; pn2], [(pn2 + 4) < pn0], [(pn0 + pn2) && -4; pn0 + 4], [pn0; pn2 + 4]))) + 1;
    1;
    5;
    (15 * (N([ln3; pn2], [(pn2 + 1) != ln3], [pn0 + pn2; pn0 + 1], [ln3; pn2 + 1]))) + 1;
    1;
    1
  ]);
  list_sum([
    26;
    (20 * (N([ln3; pn2], [(pn2 + 1) < ln3], [pn0 + pn2; pn0], [ln3; pn2 + 1]))) + 1;
    1;
    15;
    (27 * (N([ln4; pn2], [(pn2 + 4) <= ln4], [(pn0 + pn2) - 4; pn0 + 4], [ln4; pn2 + 4]))) + 1;
    1;
    3;
    3;
    16;
    (75 * (N([ln4; pn2], [(pn2 - -64) <= ln4], [((pn0 + pn2) && -4) + -64; pn0 - -64], [ln4; pn2 - -64]))) + 1;
    1;
    5;
    5;
    1
  ]);
  list_sum([
    26;
    (20 * (N([ln3; pn2], [(pn2 + 1) < ln3], [pn0 + pn2; pn0], [ln3; pn2 + 1]))) + 1;
    1;
    15;
    (27 * (N([ln4; pn2], [(pn2 + 4) <= ln4], [(pn0 + pn2) - 4; pn0 + 4], [ln4; pn2 + 4]))) + 1;
    1;
    3;
    3;
    16;
    (75 * (N([ln4; pn2], [(pn2 - -64) <= ln4], [((pn0 + pn2) && -4) + -64; pn0 - -64], [ln4; pn2 - -64]))) + 1;
    1;
    5;
    5;
    (15 * (N([ln3; pn2], [(pn2 + 1) != ln3], [pn0 + pn2; pn0 + 1], [ln3; pn2 + 1]))) + 1;
    1;
    1
  ]);
  list_sum([
    26;
    (20 * (N([ln3; pn2], [(pn2 + 1) < ln3], [pn0 + pn2; pn0], [ln3; pn2 + 1]))) + 1;
    1;
    15;
    (27 * (N([ln4; pn2], [(pn2 + 4) <= ln4], [(pn0 + pn2) - 4; pn0 + 4], [ln4; pn2 + 4]))) + 1;
    1;
    3;
    3;
    16;
    (75 * (N([ln4; pn2], [(pn2 - -64) <= ln4], [((pn0 + pn2) && -4) + -64; pn0 - -64], [ln4; pn2 - -64]))) + 1;
    1;
    5;
    (15 * (N([pn0; pn2], [(pn2 + 4) < pn0], [(pn0 + pn2) && -4; pn0 + 4], [pn0; pn2 + 4]))) + 1;
    1;
    5;
    1
  ]);
  list_sum([
    26;
    (20 * (N([ln3; pn2], [(pn2 + 1) < ln3], [pn0 + pn2; pn0], [ln3; pn2 + 1]))) + 1;
    1;
    15;
    (27 * (N([ln4; pn2], [(pn2 + 4) <= ln4], [(pn0 + pn2) - 4; pn0 + 4], [ln4; pn2 + 4]))) + 1;
    1;
    3;
    3;
    16;
    (75 * (N([ln4; pn2], [(pn2 - -64) <= ln4], [((pn0 + pn2) && -4) + -64; pn0 - -64], [ln4; pn2 - -64]))) + 1;
    1;
    5;
    (15 * (N([pn0; pn2], [(pn2 + 4) < pn0], [(pn0 + pn2) && -4; pn0 + 4], [pn0; pn2 + 4]))) + 1;
    1;
    5;
    (15 * (N([ln3; pn2], [(pn2 + 1) != ln3], [pn0 + pn2; pn0 + 1], [ln3; pn2 + 1]))) + 1;
    1;
    1
  ])
])
