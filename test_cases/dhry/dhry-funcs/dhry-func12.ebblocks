ebb entry:  0
  ebb type:   block
  ebb blocks: [0 1 2 3 4 5 6]
  ebb cost:   26
  ebb exits:  [7 12 22]
  ebb succs:  [7 12 22]
ebb entry:  7
  ebb type:   loop
  ebb blocks: [7 8 9]
  ebb cost:   (20 * (N([ln3; pn2], [(pn2 + 1) < ln3], [pn0 + pn2; pn0], [ln3; pn2 + 1]))) + 1
  ebb exits:  [10 23]
  ebb succs:  [10 23]
  1 paths to exit 10
  [7 8 9]
  1 paths to exit 23
  [7]
  1 loop paths
  [7 8]
  1 post loop exit paths
  [9]
ebb entry:  10
  ebb type:   block
  ebb blocks: [10 11]
  ebb cost:   1
  ebb exits:  [12 23]
  ebb succs:  [12 23]
ebb entry:  12
  ebb type:   block
  ebb blocks: [12 13 14 15]
  ebb cost:   15
  ebb exits:  [16 20]
  ebb succs:  [16 20]
ebb entry:  16
  ebb type:   loop
  ebb blocks: [16 17]
  ebb cost:   (27 * (N([ln4; pn2], [(pn2 + 4) <= ln4], [(pn0 + pn2) - 4; pn0 + 4], [ln4; pn2 + 4]))) + 1
  ebb exits:  [18]
  ebb succs:  [18]
  1 paths to exit 18
  [16 17]
  1 loop paths
  [16]
  1 post loop exit paths
  [17]
ebb entry:  18
  ebb type:   block
  ebb blocks: [18 19]
  ebb cost:   1
  ebb exits:  [20 35]
  ebb succs:  [20 35]
ebb entry:  20
  ebb type:   block
  ebb blocks: [20 21]
  ebb cost:   3
  ebb exits:  [22 35]
  ebb succs:  [22 35]
ebb entry:  22
  ebb type:   block
  ebb blocks: [22]
  ebb cost:   3
  ebb exits:  [23]
  ebb succs:  [23]
ebb entry:  23
  ebb type:   block
  ebb blocks: [23 24 25 26]
  ebb cost:   16
  ebb exits:  [27 30]
  ebb succs:  [27 30]
ebb entry:  27
  ebb type:   loop
  ebb blocks: [27 28]
  ebb cost:   (75 * (N([ln4; pn2], [(pn2 - -64) <= ln4], [((pn0 + pn2) & -4) + -64; pn0 - -64], [ln4; pn2 - -64]))) + 1
  ebb exits:  [29]
  ebb succs:  [29]
  1 paths to exit 29
  [27 28]
  1 loop paths
  [27]
  1 post loop exit paths
  [28]
ebb entry:  29
  ebb type:   block
  ebb blocks: [29]
  ebb cost:   1
  ebb exits:  [30]
  ebb succs:  [30]
ebb entry:  30
  ebb type:   block
  ebb blocks: [30 31]
  ebb cost:   5
  ebb exits:  [32 35]
  ebb succs:  [32 35]
ebb entry:  32
  ebb type:   loop
  ebb blocks: [32 33]
  ebb cost:   (15 * (N([pn0; pn2], [(pn2 + 4) < pn0], [(pn0 + pn2) & -4; pn0 + 4], [pn0; pn2 + 4]))) + 1
  ebb exits:  [34]
  ebb succs:  [34]
  1 paths to exit 34
  [32 33]
  1 loop paths
  [32]
  1 post loop exit paths
  [33]
ebb entry:  34
  ebb type:   block
  ebb blocks: [34]
  ebb cost:   1
  ebb exits:  [35]
  ebb succs:  [35]
ebb entry:  35
  ebb type:   block
  ebb blocks: [35 36]
  ebb cost:   5
  ebb exits:  [37 40]
  ebb succs:  [37 40]
ebb entry:  37
  ebb type:   loop
  ebb blocks: [37 38]
  ebb cost:   (15 * (N([ln3; pn2], [(pn2 + 1) != ln3], [pn0 + pn2; pn0 + 1], [ln3; pn2 + 1]))) + 1
  ebb exits:  [39]
  ebb succs:  [39]
  1 paths to exit 39
  [37 38]
  1 loop paths
  [37]
  1 post loop exit paths
  [38]
ebb entry:  39
  ebb type:   block
  ebb blocks: [39]
  ebb cost:   1
  ebb exits:  [40]
  ebb succs:  [40]
ebb entry:  40
  ebb type:   block
  ebb blocks: [40 41]
  ebb cost:   1
  ebb exits:  [41]
  ebb succs:  []
ebb costs:
[0]: 26
[7]: ((20 * N([ln3; pn2], [((pn2 + 1) < ln3)], [(pn0 + pn2); pn0], [ln3; (pn2 + 1)])) + 1)
[10]: 1
[12]: 15
[16]: ((27 * N([ln4; pn2], [((pn2 + 4) <= ln4)], [((pn0 + pn2) - 4); (pn0 + 4)], [ln4; (pn2 + 4)])) + 1)
[18]: 1
[20]: 3
[22]: 3
[23]: 16
[27]: ((75 * N([ln4; pn2], [((pn2 - -64) <= ln4)], [(((pn0 + pn2) & -4) + -64); (pn0 - -64)], [ln4; (pn2 - -64)])) + 1)
[29]: 1
[30]: 5
[32]: ((15 * N([pn0; pn2], [((pn2 + 4) < pn0)], [((pn0 + pn2) & -4); (pn0 + 4)], [pn0; (pn2 + 4)])) + 1)
[34]: 1
[35]: 5
[37]: ((15 * N([ln3; pn2], [((pn2 + 1) != ln3)], [(pn0 + pn2); (pn0 + 1)], [ln3; (pn2 + 1)])) + 1)
[39]: 1
[40]: 1
68 ebb paths found
[0 22 23 30 35 40]
[0 22 23 30 35 37 39 40]
[0 22 23 30 32 34 35 40]
[0 22 23 30 32 34 35 37 39 40]
[0 22 23 27 29 30 35 40]
[0 22 23 27 29 30 35 37 39 40]
[0 22 23 27 29 30 32 34 35 40]
[0 22 23 27 29 30 32 34 35 37 39 40]
[0 12 20 35 40]
[0 12 20 35 37 39 40]
[0 12 20 22 23 30 35 40]
[0 12 20 22 23 30 35 37 39 40]
[0 12 20 22 23 30 32 34 35 40]
[0 12 20 22 23 30 32 34 35 37 39 40]
[0 12 20 22 23 27 29 30 35 40]
[0 12 20 22 23 27 29 30 35 37 39 40]
[0 12 20 22 23 27 29 30 32 34 35 40]
[0 12 20 22 23 27 29 30 32 34 35 37 39 40]
[0 12 16 18 35 40]
[0 12 16 18 35 37 39 40]
[0 12 16 18 20 35 40]
[0 12 16 18 20 35 37 39 40]
[0 12 16 18 20 22 23 30 35 40]
[0 12 16 18 20 22 23 30 35 37 39 40]
[0 12 16 18 20 22 23 30 32 34 35 40]
[0 12 16 18 20 22 23 30 32 34 35 37 39 40]
[0 12 16 18 20 22 23 27 29 30 35 40]
[0 12 16 18 20 22 23 27 29 30 35 37 39 40]
[0 12 16 18 20 22 23 27 29 30 32 34 35 40]
[0 12 16 18 20 22 23 27 29 30 32 34 35 37 39 40]
[0 7 23 30 35 40]
[0 7 23 30 35 37 39 40]
[0 7 23 30 32 34 35 40]
[0 7 23 30 32 34 35 37 39 40]
[0 7 23 27 29 30 35 40]
[0 7 23 27 29 30 35 37 39 40]
[0 7 23 27 29 30 32 34 35 40]
[0 7 23 27 29 30 32 34 35 37 39 40]
[0 7 10 23 30 35 40]
[0 7 10 23 30 35 37 39 40]
[0 7 10 23 30 32 34 35 40]
[0 7 10 23 30 32 34 35 37 39 40]
[0 7 10 23 27 29 30 35 40]
[0 7 10 23 27 29 30 35 37 39 40]
[0 7 10 23 27 29 30 32 34 35 40]
[0 7 10 23 27 29 30 32 34 35 37 39 40]
[0 7 10 12 20 35 40]
[0 7 10 12 20 35 37 39 40]
[0 7 10 12 20 22 23 30 35 40]
[0 7 10 12 20 22 23 30 35 37 39 40]
[0 7 10 12 20 22 23 30 32 34 35 40]
[0 7 10 12 20 22 23 30 32 34 35 37 39 40]
[0 7 10 12 20 22 23 27 29 30 35 40]
[0 7 10 12 20 22 23 27 29 30 35 37 39 40]
[0 7 10 12 20 22 23 27 29 30 32 34 35 40]
[0 7 10 12 20 22 23 27 29 30 32 34 35 37 39 40]
[0 7 10 12 16 18 35 40]
[0 7 10 12 16 18 35 37 39 40]
[0 7 10 12 16 18 20 35 40]
[0 7 10 12 16 18 20 35 37 39 40]
[0 7 10 12 16 18 20 22 23 30 35 40]
[0 7 10 12 16 18 20 22 23 30 35 37 39 40]
[0 7 10 12 16 18 20 22 23 30 32 34 35 40]
[0 7 10 12 16 18 20 22 23 30 32 34 35 37 39 40]
[0 7 10 12 16 18 20 22 23 27 29 30 35 40]
[0 7 10 12 16 18 20 22 23 27 29 30 35 37 39 40]
[0 7 10 12 16 18 20 22 23 27 29 30 32 34 35 40]
[0 7 10 12 16 18 20 22 23 27 29 30 32 34 35 37 39 40]
