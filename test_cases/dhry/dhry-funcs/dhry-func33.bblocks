                          br    target
index start   end nesting dest  labels type        succ/pred
    0     0     3     0   3            if          s=[1 3] p=[]
    1     3     5     1                return      s=[29] p=[0]
    2     5     6     0                end         s=[3] p=[]
    3     6     7     0   27           block       s=[4] p=[2 0]
    4     7     8     1   26           block       s=[5] p=[3]
    5     8    10     2   24           if          s=[6 23] p=[4]
    6    10    14     3              1 br_if       s=[7 26] p=[5]
    7    14    15     3   22           block       s=[8] p=[6]
    8    15    20     4   12           if          s=[9 12] p=[7]
    9    20    26     5              3 br_if       s=[10 26] p=[8]
   10    26    27     5              1 br          s=[22] p=[9]
   11    27    28     4                end         s=[12] p=[]
   12    28    32     4   15           if          s=[13 15] p=[11 8]
   13    32    48     5              4 br          s=[27] p=[12]
   14    48    49     4                end         s=[15] p=[]
   15    49    60     4   18           if          s=[16 18] p=[14 12]
   16    60    85     5              4 br          s=[27] p=[15]
   17    85    86     4                end         s=[18] p=[]
   18    86    92     4   21           if          s=[19 21] p=[17 15]
   19    92   126     5              4 br          s=[27] p=[18]
   20   126   127     4                end         s=[21] p=[]
   21   127   128     3                end         s=[22] p=[20 18]
   22   128   133     2                else        s=[24] p=[21 10]
   23   133   135     2                end         s=[24] p=[5]
   24   135   136     2              1 br          s=[27] p=[23 22]
   25   136   137     1                end         s=[26] p=[]
   26   137   142     0                end         s=[27] p=[25 9 6]
   27   142   143    -1                end         s=[28] p=[26 24 19 16 13]
   28    -1    -1    -1                exit end    s=[] p=[27]
   29    -1    -1    -1                exit return s=[] p=[1]
