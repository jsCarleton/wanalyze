|f32| = list_max([
  466;
  list_sum([
    481;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    463;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    467;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    474;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    456;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    437;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    465;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    447;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    451;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    458;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    440;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    421;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    313;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    477;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    459;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    463;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    470;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    452;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    433;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    461;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    443;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    447;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    454;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    436;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    417;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    309;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    420;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    402;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    406;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    413;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    395;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    376;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    404;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    386;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    390;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    397;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    379;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    360;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    252;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    401;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    383;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    387;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    394;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    376;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    357;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    234;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    233;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    167;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    454;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    436;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    440;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    447;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    429;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    410;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    438;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    420;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    424;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    431;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    413;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    394;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    286;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    450;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    432;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    436;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    443;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    425;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    406;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    434;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    416;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    420;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    427;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    409;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    390;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    282;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    393;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    375;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    379;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    386;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    368;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    349;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    377;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    359;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    363;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    370;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    352;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    333;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    225;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    374;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    356;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    360;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    367;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    349;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    330;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    207;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    206;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    477;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    459;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    463;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    470;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    452;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    433;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    461;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    443;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    447;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    454;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    436;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    417;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    309;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    473;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    455;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    459;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    457;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    439;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    443;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    416;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    398;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    402;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    400;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    382;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    386;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    397;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    379;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    383;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    450;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    432;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    436;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    443;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    425;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    406;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    434;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    416;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    420;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    427;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    409;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    390;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    282;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    446;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    428;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    432;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    430;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    412;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    416;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    389;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    371;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    375;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    373;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    355;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    359;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    370;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    352;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    356;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    420;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    402;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    406;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    413;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    395;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    376;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    404;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    386;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    390;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    397;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    379;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    360;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    252;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    416;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    398;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    402;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    400;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    382;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    386;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    359;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    341;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    345;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    343;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    325;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    329;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    340;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    322;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    326;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    393;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    375;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    379;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    386;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    368;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    349;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    377;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    359;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    363;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    370;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    352;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    333;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    225;
    (list_max([
      10 * (N([m[0]], [m[0]], [m[0]], [m[0]]));
      18 * (N([m[0]], [m[0]], [m[0]], [m[0]]))
    ])) + 1
  ]);
  list_sum([
    389;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    371;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    375;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    373;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    355;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    359;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    332;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    314;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    318;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    316;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    298;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    302;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    313;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    295;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ]);
  list_sum([
    299;
    (27 * (N([m[0]], [m[0]], [m[0] & -8], [m[0]]))) + 1
  ])
])
