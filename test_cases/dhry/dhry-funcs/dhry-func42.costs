ebb costs:
[0]: 20
[6]: ((22 * N([pn2], [(pn2 - 1)], [pn2], [(pn2 - 1)])) + 1)
[10]: 1
[11]: 4
[13]: 20
[18]: ((25 * N([pn2], [((pn2 - 4) > 3)], [pn2], [(pn2 - 4)])) + 1)
[21]: 1
[22]: 9
[25]: ((14 * N([pn2], [(pn2 - 1)], [pn2], [(pn2 - 1)])) + list_max(1, 2))
[30]: 1
[31]: 2
[33]: 0
27 ebb paths found
[0 11 31]
[0 11 13 22 31]
[0 11 13 22 25 33]
[0 11 13 22 25 30 31]
[0 11 13 18 21 22 31]
[0 11 13 18 21 22 25 33]
[0 11 13 18 21 22 25 30 31]
[0 6 13 22 31]
[0 6 13 22 25 33]
[0 6 13 22 25 30 31]
[0 6 13 18 21 22 31]
[0 6 13 18 21 22 25 33]
[0 6 13 18 21 22 25 30 31]
[0 6 11 31]
[0 6 11 13 22 31]
[0 6 11 13 22 25 33]
[0 6 11 13 22 25 30 31]
[0 6 11 13 18 21 22 31]
[0 6 11 13 18 21 22 25 33]
[0 6 11 13 18 21 22 25 30 31]
[0 6 10 11 31]
[0 6 10 11 13 22 31]
[0 6 10 11 13 22 25 33]
[0 6 10 11 13 22 25 30 31]
[0 6 10 11 13 18 21 22 31]
[0 6 10 11 13 18 21 22 25 33]
[0 6 10 11 13 18 21 22 25 30 31]
|f42| = list_max([
  list_sum(20, 4, 2);
  list_sum(20, 4, 20, 9, 2);
  list_sum([
    20;
    4;
    20;
    9;
    (14 * (N([pn2], [pn2 - 1], [pn2], [pn2 - 1]))) + (list_max(1, 2));
    0
  ]);
  list_sum([
    20;
    4;
    20;
    9;
    (14 * (N([pn2], [pn2 - 1], [pn2], [pn2 - 1]))) + (list_max(1, 2));
    1;
    2
  ]);
  list_sum([
    20;
    4;
    20;
    (25 * (N([pn2], [(pn2 - 4) > 3], [pn2], [pn2 - 4]))) + 1;
    1;
    9;
    2
  ]);
  list_sum([
    20;
    4;
    20;
    (25 * (N([pn2], [(pn2 - 4) > 3], [pn2], [pn2 - 4]))) + 1;
    1;
    9;
    (14 * (N([pn2], [pn2 - 1], [pn2], [pn2 - 1]))) + (list_max(1, 2));
    0
  ]);
  list_sum([
    20;
    4;
    20;
    (25 * (N([pn2], [(pn2 - 4) > 3], [pn2], [pn2 - 4]))) + 1;
    1;
    9;
    (14 * (N([pn2], [pn2 - 1], [pn2], [pn2 - 1]))) + (list_max(1, 2));
    1;
    2
  ]);
  list_sum([
    20;
    (22 * (N([pn2], [pn2 - 1], [pn2], [pn2 - 1]))) + 1;
    20;
    9;
    2
  ]);
  list_sum([
    20;
    (22 * (N([pn2], [pn2 - 1], [pn2], [pn2 - 1]))) + 1;
    20;
    9;
    (14 * (N([pn2], [pn2 - 1], [pn2], [pn2 - 1]))) + (list_max(1, 2));
    0
  ]);
  list_sum([
    20;
    (22 * (N([pn2], [pn2 - 1], [pn2], [pn2 - 1]))) + 1;
    20;
    9;
    (14 * (N([pn2], [pn2 - 1], [pn2], [pn2 - 1]))) + (list_max(1, 2));
    1;
    2
  ]);
  list_sum([
    20;
    (22 * (N([pn2], [pn2 - 1], [pn2], [pn2 - 1]))) + 1;
    20;
    (25 * (N([pn2], [(pn2 - 4) > 3], [pn2], [pn2 - 4]))) + 1;
    1;
    9;
    2
  ]);
  list_sum([
    20;
    (22 * (N([pn2], [pn2 - 1], [pn2], [pn2 - 1]))) + 1;
    20;
    (25 * (N([pn2], [(pn2 - 4) > 3], [pn2], [pn2 - 4]))) + 1;
    1;
    9;
    (14 * (N([pn2], [pn2 - 1], [pn2], [pn2 - 1]))) + (list_max(1, 2));
    0
  ]);
  list_sum([
    20;
    (22 * (N([pn2], [pn2 - 1], [pn2], [pn2 - 1]))) + 1;
    20;
    (25 * (N([pn2], [(pn2 - 4) > 3], [pn2], [pn2 - 4]))) + 1;
    1;
    9;
    (14 * (N([pn2], [pn2 - 1], [pn2], [pn2 - 1]))) + (list_max(1, 2));
    1;
    2
  ]);
  list_sum([
    20;
    (22 * (N([pn2], [pn2 - 1], [pn2], [pn2 - 1]))) + 1;
    4;
    2
  ]);
  list_sum([
    20;
    (22 * (N([pn2], [pn2 - 1], [pn2], [pn2 - 1]))) + 1;
    4;
    20;
    9;
    2
  ]);
  list_sum([
    20;
    (22 * (N([pn2], [pn2 - 1], [pn2], [pn2 - 1]))) + 1;
    4;
    20;
    9;
    (14 * (N([pn2], [pn2 - 1], [pn2], [pn2 - 1]))) + (list_max(1, 2));
    0
  ]);
  list_sum([
    20;
    (22 * (N([pn2], [pn2 - 1], [pn2], [pn2 - 1]))) + 1;
    4;
    20;
    9;
    (14 * (N([pn2], [pn2 - 1], [pn2], [pn2 - 1]))) + (list_max(1, 2));
    1;
    2
  ]);
  list_sum([
    20;
    (22 * (N([pn2], [pn2 - 1], [pn2], [pn2 - 1]))) + 1;
    4;
    20;
    (25 * (N([pn2], [(pn2 - 4) > 3], [pn2], [pn2 - 4]))) + 1;
    1;
    9;
    2
  ]);
  list_sum([
    20;
    (22 * (N([pn2], [pn2 - 1], [pn2], [pn2 - 1]))) + 1;
    4;
    20;
    (25 * (N([pn2], [(pn2 - 4) > 3], [pn2], [pn2 - 4]))) + 1;
    1;
    9;
    (14 * (N([pn2], [pn2 - 1], [pn2], [pn2 - 1]))) + (list_max(1, 2));
    0
  ]);
  list_sum([
    20;
    (22 * (N([pn2], [pn2 - 1], [pn2], [pn2 - 1]))) + 1;
    4;
    20;
    (25 * (N([pn2], [(pn2 - 4) > 3], [pn2], [pn2 - 4]))) + 1;
    1;
    9;
    (14 * (N([pn2], [pn2 - 1], [pn2], [pn2 - 1]))) + (list_max(1, 2));
    1;
    2
  ]);
  list_sum([
    20;
    (22 * (N([pn2], [pn2 - 1], [pn2], [pn2 - 1]))) + 1;
    1;
    4;
    2
  ]);
  list_sum([
    20;
    (22 * (N([pn2], [pn2 - 1], [pn2], [pn2 - 1]))) + 1;
    1;
    4;
    20;
    9;
    2
  ]);
  list_sum([
    20;
    (22 * (N([pn2], [pn2 - 1], [pn2], [pn2 - 1]))) + 1;
    1;
    4;
    20;
    9;
    (14 * (N([pn2], [pn2 - 1], [pn2], [pn2 - 1]))) + (list_max(1, 2));
    0
  ]);
  list_sum([
    20;
    (22 * (N([pn2], [pn2 - 1], [pn2], [pn2 - 1]))) + 1;
    1;
    4;
    20;
    9;
    (14 * (N([pn2], [pn2 - 1], [pn2], [pn2 - 1]))) + (list_max(1, 2));
    1;
    2
  ]);
  list_sum([
    20;
    (22 * (N([pn2], [pn2 - 1], [pn2], [pn2 - 1]))) + 1;
    1;
    4;
    20;
    (25 * (N([pn2], [(pn2 - 4) > 3], [pn2], [pn2 - 4]))) + 1;
    1;
    9;
    2
  ]);
  list_sum([
    20;
    (22 * (N([pn2], [pn2 - 1], [pn2], [pn2 - 1]))) + 1;
    1;
    4;
    20;
    (25 * (N([pn2], [(pn2 - 4) > 3], [pn2], [pn2 - 4]))) + 1;
    1;
    9;
    (14 * (N([pn2], [pn2 - 1], [pn2], [pn2 - 1]))) + (list_max(1, 2));
    0
  ]);
  list_sum([
    20;
    (22 * (N([pn2], [pn2 - 1], [pn2], [pn2 - 1]))) + 1;
    1;
    4;
    20;
    (25 * (N([pn2], [(pn2 - 4) > 3], [pn2], [pn2 - 4]))) + 1;
    1;
    9;
    (14 * (N([pn2], [pn2 - 1], [pn2], [pn2 - 1]))) + (list_max(1, 2));
    1;
    2
  ])
])
