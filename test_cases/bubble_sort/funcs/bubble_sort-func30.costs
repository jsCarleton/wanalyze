|f30| = list_max([list_sum([list_max([26; 29; 26; 17; 12 + |f2|]); 3; 20*I((pn2 + 1) < ln3, ln3 = pn0 + pn2;pn2 = pn0 + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; 1; list_max([15; 15; 8]); list_max([76; 1]); 75*I((pn2 + 64) <= ln5, ln5 = ((pn0 + pn2) && -4) + -64;pn2 = (pn0 + 1) + 64, ln5 = ln5;pn2 = pn2 + 64) + 1; 1; list_max([4; 4]); list_max([16; 1]); 15*I((pn2 + 4) < ln4, ln4 = (pn0 + pn2) && -4;pn2 = (pn0 + 1) + 4, ln4 = ln4;pn2 = pn2 + 4) + 1; 1; list_max([13; 16; 8]); list_max([30; 3]); 27*I((pn2 + 4) <= ln4, ln4 = (pn0 + pn2) + -4;pn2 = pn0 + 4, ln4 = ln4;pn2 = pn2 + 4) + 1; 1; list_max([5; 5]); list_max([16; 1]); 15*I((pn2 + 1) != ln3, ln3 = pn0 + pn2;pn2 = (pn0 + 4) + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; 1; 2]); list_sum([list_max([26; 29; 26; 17; 12 + |f2|]); 3; 20*I((pn2 + 1) < ln3, ln3 = pn0 + pn2;pn2 = pn0 + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; 1; list_max([15; 15; 8]); list_max([76; 1]); 75*I((pn2 + 64) <= ln5, ln5 = ((pn0 + pn2) && -4) + -64;pn2 = (pn0 + 1) + 64, ln5 = ln5;pn2 = pn2 + 64) + 1; 1; list_max([4; 4]); list_max([16; 1]); 15*I((pn2 + 4) < ln4, ln4 = (pn0 + pn2) && -4;pn2 = (pn0 + 1) + 4, ln4 = ln4;pn2 = pn2 + 4) + 1; 1; list_max([13; 16; 8]); list_max([30; 3]); 27*I((pn2 + 4) <= ln4, ln4 = (pn0 + pn2) + -4;pn2 = pn0 + 4, ln4 = ln4;pn2 = pn2 + 4) + 1; 1; list_max([5; 5]); 2]); list_sum([list_max([26; 29; 26; 17; 12 + |f2|]); 3; 20*I((pn2 + 1) < ln3, ln3 = pn0 + pn2;pn2 = pn0 + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; 1; list_max([15; 15; 8]); list_max([76; 1]); 75*I((pn2 + 64) <= ln5, ln5 = ((pn0 + pn2) && -4) + -64;pn2 = (pn0 + 1) + 64, ln5 = ln5;pn2 = pn2 + 64) + 1; 1; list_max([4; 4]); list_max([16; 1]); 15*I((pn2 + 4) < ln4, ln4 = (pn0 + pn2) && -4;pn2 = (pn0 + 1) + 4, ln4 = ln4;pn2 = pn2 + 4) + 1; 1; list_max([13; 16; 8]); list_max([5; 5]); list_max([16; 1]); 15*I((pn2 + 1) != ln3, ln3 = pn0 + pn2;pn2 = (pn0 + 4) + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; 1; 2]); list_sum([list_max([26; 29; 26; 17; 12 + |f2|]); 3; 20*I((pn2 + 1) < ln3, ln3 = pn0 + pn2;pn2 = pn0 + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; 1; list_max([15; 15; 8]); list_max([76; 1]); 75*I((pn2 + 64) <= ln5, ln5 = ((pn0 + pn2) && -4) + -64;pn2 = (pn0 + 1) + 64, ln5 = ln5;pn2 = pn2 + 64) + 1; 1; list_max([4; 4]); list_max([16; 1]); 15*I((pn2 + 4) < ln4, ln4 = (pn0 + pn2) && -4;pn2 = (pn0 + 1) + 4, ln4 = ln4;pn2 = pn2 + 4) + 1; 1; list_max([13; 16; 8]); list_max([5; 5]); 2]); list_sum([list_max([26; 29; 26; 17; 12 + |f2|]); 3; 20*I((pn2 + 1) < ln3, ln3 = pn0 + pn2;pn2 = pn0 + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; 1; list_max([15; 15; 8]); list_max([76; 1]); 75*I((pn2 + 64) <= ln5, ln5 = ((pn0 + pn2) && -4) + -64;pn2 = (pn0 + 1) + 64, ln5 = ln5;pn2 = pn2 + 64) + 1; 1; list_max([4; 4]); list_max([16; 1]); 15*I((pn2 + 4) < ln4, ln4 = (pn0 + pn2) && -4;pn2 = (pn0 + 1) + 4, ln4 = ln4;pn2 = pn2 + 4) + 1; 1; ]); list_sum([list_max([26; 29; 26; 17; 12 + |f2|]); 3; 20*I((pn2 + 1) < ln3, ln3 = pn0 + pn2;pn2 = pn0 + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; 1; list_max([15; 15; 8]); list_max([76; 1]); 75*I((pn2 + 64) <= ln5, ln5 = ((pn0 + pn2) && -4) + -64;pn2 = (pn0 + 1) + 64, ln5 = ln5;pn2 = pn2 + 64) + 1; 1; list_max([4; 4]); list_max([16; 1]); 15*I((pn2 + 4) < ln4, ln4 = (pn0 + pn2) && -4;pn2 = (pn0 + 1) + 4, ln4 = ln4;pn2 = pn2 + 4) + 1; list_max([5; 5]); list_max([16; 1]); 15*I((pn2 + 1) != ln3, ln3 = pn0 + pn2;pn2 = (pn0 + 4) + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; 1; 2]); list_sum([list_max([26; 29; 26; 17; 12 + |f2|]); 3; 20*I((pn2 + 1) < ln3, ln3 = pn0 + pn2;pn2 = pn0 + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; 1; list_max([15; 15; 8]); list_max([76; 1]); 75*I((pn2 + 64) <= ln5, ln5 = ((pn0 + pn2) && -4) + -64;pn2 = (pn0 + 1) + 64, ln5 = ln5;pn2 = pn2 + 64) + 1; 1; list_max([4; 4]); list_max([16; 1]); 15*I((pn2 + 4) < ln4, ln4 = (pn0 + pn2) && -4;pn2 = (pn0 + 1) + 4, ln4 = ln4;pn2 = pn2 + 4) + 1; list_max([5; 5]); 2]); list_sum([list_max([26; 29; 26; 17; 12 + |f2|]); 3; 20*I((pn2 + 1) < ln3, ln3 = pn0 + pn2;pn2 = pn0 + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; 1; list_max([15; 15; 8]); list_max([76; 1]); 75*I((pn2 + 64) <= ln5, ln5 = ((pn0 + pn2) && -4) + -64;pn2 = (pn0 + 1) + 64, ln5 = ln5;pn2 = pn2 + 64) + 1; 1; list_max([4; 4]); list_max([5; 5]); list_max([16; 1]); 15*I((pn2 + 1) != ln3, ln3 = pn0 + pn2;pn2 = (pn0 + 4) + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; 1; 2]); list_sum([list_max([26; 29; 26; 17; 12 + |f2|]); 3; 20*I((pn2 + 1) < ln3, ln3 = pn0 + pn2;pn2 = pn0 + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; 1; list_max([15; 15; 8]); list_max([76; 1]); 75*I((pn2 + 64) <= ln5, ln5 = ((pn0 + pn2) && -4) + -64;pn2 = (pn0 + 1) + 64, ln5 = ln5;pn2 = pn2 + 64) + 1; 1; list_max([4; 4]); list_max([5; 5]); 2]); list_sum([list_max([26; 29; 26; 17; 12 + |f2|]); 3; 20*I((pn2 + 1) < ln3, ln3 = pn0 + pn2;pn2 = pn0 + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; 1; list_max([15; 15; 8]); list_max([4; 4]); list_max([16; 1]); 15*I((pn2 + 4) < ln4, ln4 = (pn0 + pn2) && -4;pn2 = (pn0 + 1) + 4, ln4 = ln4;pn2 = pn2 + 4) + 1; 1; list_max([13; 16; 8]); list_max([30; 3]); 27*I((pn2 + 4) <= ln4, ln4 = (pn0 + pn2) + -4;pn2 = pn0 + 4, ln4 = ln4;pn2 = pn2 + 4) + 1; 1; list_max([5; 5]); list_max([16; 1]); 15*I((pn2 + 1) != ln3, ln3 = pn0 + pn2;pn2 = (pn0 + 4) + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; 1; 2]); list_sum([list_max([26; 29; 26; 17; 12 + |f2|]); 3; 20*I((pn2 + 1) < ln3, ln3 = pn0 + pn2;pn2 = pn0 + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; 1; list_max([15; 15; 8]); list_max([4; 4]); list_max([16; 1]); 15*I((pn2 + 4) < ln4, ln4 = (pn0 + pn2) && -4;pn2 = (pn0 + 1) + 4, ln4 = ln4;pn2 = pn2 + 4) + 1; 1; list_max([13; 16; 8]); list_max([30; 3]); 27*I((pn2 + 4) <= ln4, ln4 = (pn0 + pn2) + -4;pn2 = pn0 + 4, ln4 = ln4;pn2 = pn2 + 4) + 1; 1; list_max([5; 5]); 2]); list_sum([list_max([26; 29; 26; 17; 12 + |f2|]); 3; 20*I((pn2 + 1) < ln3, ln3 = pn0 + pn2;pn2 = pn0 + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; 1; list_max([15; 15; 8]); list_max([4; 4]); list_max([16; 1]); 15*I((pn2 + 4) < ln4, ln4 = (pn0 + pn2) && -4;pn2 = (pn0 + 1) + 4, ln4 = ln4;pn2 = pn2 + 4) + 1; 1; list_max([13; 16; 8]); list_max([5; 5]); list_max([16; 1]); 15*I((pn2 + 1) != ln3, ln3 = pn0 + pn2;pn2 = (pn0 + 4) + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; 1; 2]); list_sum([list_max([26; 29; 26; 17; 12 + |f2|]); 3; 20*I((pn2 + 1) < ln3, ln3 = pn0 + pn2;pn2 = pn0 + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; 1; list_max([15; 15; 8]); list_max([4; 4]); list_max([16; 1]); 15*I((pn2 + 4) < ln4, ln4 = (pn0 + pn2) && -4;pn2 = (pn0 + 1) + 4, ln4 = ln4;pn2 = pn2 + 4) + 1; 1; list_max([13; 16; 8]); list_max([5; 5]); 2]); list_sum([list_max([26; 29; 26; 17; 12 + |f2|]); 3; 20*I((pn2 + 1) < ln3, ln3 = pn0 + pn2;pn2 = pn0 + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; 1; list_max([15; 15; 8]); list_max([4; 4]); list_max([16; 1]); 15*I((pn2 + 4) < ln4, ln4 = (pn0 + pn2) && -4;pn2 = (pn0 + 1) + 4, ln4 = ln4;pn2 = pn2 + 4) + 1; 1; ]); list_sum([list_max([26; 29; 26; 17; 12 + |f2|]); 3; 20*I((pn2 + 1) < ln3, ln3 = pn0 + pn2;pn2 = pn0 + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; 1; list_max([15; 15; 8]); list_max([4; 4]); list_max([16; 1]); 15*I((pn2 + 4) < ln4, ln4 = (pn0 + pn2) && -4;pn2 = (pn0 + 1) + 4, ln4 = ln4;pn2 = pn2 + 4) + 1; list_max([5; 5]); list_max([16; 1]); 15*I((pn2 + 1) != ln3, ln3 = pn0 + pn2;pn2 = (pn0 + 4) + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; 1; 2]); list_sum([list_max([26; 29; 26; 17; 12 + |f2|]); 3; 20*I((pn2 + 1) < ln3, ln3 = pn0 + pn2;pn2 = pn0 + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; 1; list_max([15; 15; 8]); list_max([4; 4]); list_max([16; 1]); 15*I((pn2 + 4) < ln4, ln4 = (pn0 + pn2) && -4;pn2 = (pn0 + 1) + 4, ln4 = ln4;pn2 = pn2 + 4) + 1; list_max([5; 5]); 2]); list_sum([list_max([26; 29; 26; 17; 12 + |f2|]); 3; 20*I((pn2 + 1) < ln3, ln3 = pn0 + pn2;pn2 = pn0 + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; 1; list_max([15; 15; 8]); list_max([4; 4]); list_max([5; 5]); list_max([16; 1]); 15*I((pn2 + 1) != ln3, ln3 = pn0 + pn2;pn2 = (pn0 + 4) + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; 1; 2]); list_sum([list_max([26; 29; 26; 17; 12 + |f2|]); 3; 20*I((pn2 + 1) < ln3, ln3 = pn0 + pn2;pn2 = pn0 + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; 1; list_max([15; 15; 8]); list_max([4; 4]); list_max([5; 5]); 2]); list_sum([list_max([26; 29; 26; 17; 12 + |f2|]); 3; 20*I((pn2 + 1) < ln3, ln3 = pn0 + pn2;pn2 = pn0 + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; list_max([15; 15; 8]); list_max([76; 1]); 75*I((pn2 + 64) <= ln5, ln5 = ((pn0 + pn2) && -4) + -64;pn2 = (pn0 + 1) + 64, ln5 = ln5;pn2 = pn2 + 64) + 1; 1; list_max([4; 4]); list_max([16; 1]); 15*I((pn2 + 4) < ln4, ln4 = (pn0 + pn2) && -4;pn2 = (pn0 + 1) + 4, ln4 = ln4;pn2 = pn2 + 4) + 1; 1; list_max([13; 16; 8]); list_max([30; 3]); 27*I((pn2 + 4) <= ln4, ln4 = (pn0 + pn2) + -4;pn2 = pn0 + 4, ln4 = ln4;pn2 = pn2 + 4) + 1; 1; list_max([5; 5]); list_max([16; 1]); 15*I((pn2 + 1) != ln3, ln3 = pn0 + pn2;pn2 = (pn0 + 4) + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; 1; 2]); list_sum([list_max([26; 29; 26; 17; 12 + |f2|]); 3; 20*I((pn2 + 1) < ln3, ln3 = pn0 + pn2;pn2 = pn0 + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; list_max([15; 15; 8]); list_max([76; 1]); 75*I((pn2 + 64) <= ln5, ln5 = ((pn0 + pn2) && -4) + -64;pn2 = (pn0 + 1) + 64, ln5 = ln5;pn2 = pn2 + 64) + 1; 1; list_max([4; 4]); list_max([16; 1]); 15*I((pn2 + 4) < ln4, ln4 = (pn0 + pn2) && -4;pn2 = (pn0 + 1) + 4, ln4 = ln4;pn2 = pn2 + 4) + 1; 1; list_max([13; 16; 8]); list_max([30; 3]); 27*I((pn2 + 4) <= ln4, ln4 = (pn0 + pn2) + -4;pn2 = pn0 + 4, ln4 = ln4;pn2 = pn2 + 4) + 1; 1; list_max([5; 5]); 2]); list_sum([list_max([26; 29; 26; 17; 12 + |f2|]); 3; 20*I((pn2 + 1) < ln3, ln3 = pn0 + pn2;pn2 = pn0 + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; list_max([15; 15; 8]); list_max([76; 1]); 75*I((pn2 + 64) <= ln5, ln5 = ((pn0 + pn2) && -4) + -64;pn2 = (pn0 + 1) + 64, ln5 = ln5;pn2 = pn2 + 64) + 1; 1; list_max([4; 4]); list_max([16; 1]); 15*I((pn2 + 4) < ln4, ln4 = (pn0 + pn2) && -4;pn2 = (pn0 + 1) + 4, ln4 = ln4;pn2 = pn2 + 4) + 1; 1; list_max([13; 16; 8]); list_max([5; 5]); list_max([16; 1]); 15*I((pn2 + 1) != ln3, ln3 = pn0 + pn2;pn2 = (pn0 + 4) + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; 1; 2]); list_sum([list_max([26; 29; 26; 17; 12 + |f2|]); 3; 20*I((pn2 + 1) < ln3, ln3 = pn0 + pn2;pn2 = pn0 + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; list_max([15; 15; 8]); list_max([76; 1]); 75*I((pn2 + 64) <= ln5, ln5 = ((pn0 + pn2) && -4) + -64;pn2 = (pn0 + 1) + 64, ln5 = ln5;pn2 = pn2 + 64) + 1; 1; list_max([4; 4]); list_max([16; 1]); 15*I((pn2 + 4) < ln4, ln4 = (pn0 + pn2) && -4;pn2 = (pn0 + 1) + 4, ln4 = ln4;pn2 = pn2 + 4) + 1; 1; list_max([13; 16; 8]); list_max([5; 5]); 2]); list_sum([list_max([26; 29; 26; 17; 12 + |f2|]); 3; 20*I((pn2 + 1) < ln3, ln3 = pn0 + pn2;pn2 = pn0 + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; list_max([15; 15; 8]); list_max([76; 1]); 75*I((pn2 + 64) <= ln5, ln5 = ((pn0 + pn2) && -4) + -64;pn2 = (pn0 + 1) + 64, ln5 = ln5;pn2 = pn2 + 64) + 1; 1; list_max([4; 4]); list_max([16; 1]); 15*I((pn2 + 4) < ln4, ln4 = (pn0 + pn2) && -4;pn2 = (pn0 + 1) + 4, ln4 = ln4;pn2 = pn2 + 4) + 1; 1; ]); list_sum([list_max([26; 29; 26; 17; 12 + |f2|]); 3; 20*I((pn2 + 1) < ln3, ln3 = pn0 + pn2;pn2 = pn0 + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; list_max([15; 15; 8]); list_max([76; 1]); 75*I((pn2 + 64) <= ln5, ln5 = ((pn0 + pn2) && -4) + -64;pn2 = (pn0 + 1) + 64, ln5 = ln5;pn2 = pn2 + 64) + 1; 1; list_max([4; 4]); list_max([16; 1]); 15*I((pn2 + 4) < ln4, ln4 = (pn0 + pn2) && -4;pn2 = (pn0 + 1) + 4, ln4 = ln4;pn2 = pn2 + 4) + 1; list_max([5; 5]); list_max([16; 1]); 15*I((pn2 + 1) != ln3, ln3 = pn0 + pn2;pn2 = (pn0 + 4) + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; 1; 2]); list_sum([list_max([26; 29; 26; 17; 12 + |f2|]); 3; 20*I((pn2 + 1) < ln3, ln3 = pn0 + pn2;pn2 = pn0 + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; list_max([15; 15; 8]); list_max([76; 1]); 75*I((pn2 + 64) <= ln5, ln5 = ((pn0 + pn2) && -4) + -64;pn2 = (pn0 + 1) + 64, ln5 = ln5;pn2 = pn2 + 64) + 1; 1; list_max([4; 4]); list_max([16; 1]); 15*I((pn2 + 4) < ln4, ln4 = (pn0 + pn2) && -4;pn2 = (pn0 + 1) + 4, ln4 = ln4;pn2 = pn2 + 4) + 1; list_max([5; 5]); 2]); list_sum([list_max([26; 29; 26; 17; 12 + |f2|]); 3; 20*I((pn2 + 1) < ln3, ln3 = pn0 + pn2;pn2 = pn0 + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; list_max([15; 15; 8]); list_max([76; 1]); 75*I((pn2 + 64) <= ln5, ln5 = ((pn0 + pn2) && -4) + -64;pn2 = (pn0 + 1) + 64, ln5 = ln5;pn2 = pn2 + 64) + 1; 1; list_max([4; 4]); list_max([5; 5]); list_max([16; 1]); 15*I((pn2 + 1) != ln3, ln3 = pn0 + pn2;pn2 = (pn0 + 4) + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; 1; 2]); list_sum([list_max([26; 29; 26; 17; 12 + |f2|]); 3; 20*I((pn2 + 1) < ln3, ln3 = pn0 + pn2;pn2 = pn0 + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; list_max([15; 15; 8]); list_max([76; 1]); 75*I((pn2 + 64) <= ln5, ln5 = ((pn0 + pn2) && -4) + -64;pn2 = (pn0 + 1) + 64, ln5 = ln5;pn2 = pn2 + 64) + 1; 1; list_max([4; 4]); list_max([5; 5]); 2]); list_sum([list_max([26; 29; 26; 17; 12 + |f2|]); 3; 20*I((pn2 + 1) < ln3, ln3 = pn0 + pn2;pn2 = pn0 + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; list_max([15; 15; 8]); list_max([4; 4]); list_max([16; 1]); 15*I((pn2 + 4) < ln4, ln4 = (pn0 + pn2) && -4;pn2 = (pn0 + 1) + 4, ln4 = ln4;pn2 = pn2 + 4) + 1; 1; list_max([13; 16; 8]); list_max([30; 3]); 27*I((pn2 + 4) <= ln4, ln4 = (pn0 + pn2) + -4;pn2 = pn0 + 4, ln4 = ln4;pn2 = pn2 + 4) + 1; 1; list_max([5; 5]); list_max([16; 1]); 15*I((pn2 + 1) != ln3, ln3 = pn0 + pn2;pn2 = (pn0 + 4) + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; 1; 2]); list_sum([list_max([26; 29; 26; 17; 12 + |f2|]); 3; 20*I((pn2 + 1) < ln3, ln3 = pn0 + pn2;pn2 = pn0 + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; list_max([15; 15; 8]); list_max([4; 4]); list_max([16; 1]); 15*I((pn2 + 4) < ln4, ln4 = (pn0 + pn2) && -4;pn2 = (pn0 + 1) + 4, ln4 = ln4;pn2 = pn2 + 4) + 1; 1; list_max([13; 16; 8]); list_max([30; 3]); 27*I((pn2 + 4) <= ln4, ln4 = (pn0 + pn2) + -4;pn2 = pn0 + 4, ln4 = ln4;pn2 = pn2 + 4) + 1; 1; list_max([5; 5]); 2]); list_sum([list_max([26; 29; 26; 17; 12 + |f2|]); 3; 20*I((pn2 + 1) < ln3, ln3 = pn0 + pn2;pn2 = pn0 + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; list_max([15; 15; 8]); list_max([4; 4]); list_max([16; 1]); 15*I((pn2 + 4) < ln4, ln4 = (pn0 + pn2) && -4;pn2 = (pn0 + 1) + 4, ln4 = ln4;pn2 = pn2 + 4) + 1; 1; list_max([13; 16; 8]); list_max([5; 5]); list_max([16; 1]); 15*I((pn2 + 1) != ln3, ln3 = pn0 + pn2;pn2 = (pn0 + 4) + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; 1; 2]); list_sum([list_max([26; 29; 26; 17; 12 + |f2|]); 3; 20*I((pn2 + 1) < ln3, ln3 = pn0 + pn2;pn2 = pn0 + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; list_max([15; 15; 8]); list_max([4; 4]); list_max([16; 1]); 15*I((pn2 + 4) < ln4, ln4 = (pn0 + pn2) && -4;pn2 = (pn0 + 1) + 4, ln4 = ln4;pn2 = pn2 + 4) + 1; 1; list_max([13; 16; 8]); list_max([5; 5]); 2]); list_sum([list_max([26; 29; 26; 17; 12 + |f2|]); 3; 20*I((pn2 + 1) < ln3, ln3 = pn0 + pn2;pn2 = pn0 + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; list_max([15; 15; 8]); list_max([4; 4]); list_max([16; 1]); 15*I((pn2 + 4) < ln4, ln4 = (pn0 + pn2) && -4;pn2 = (pn0 + 1) + 4, ln4 = ln4;pn2 = pn2 + 4) + 1; 1; ]); list_sum([list_max([26; 29; 26; 17; 12 + |f2|]); 3; 20*I((pn2 + 1) < ln3, ln3 = pn0 + pn2;pn2 = pn0 + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; list_max([15; 15; 8]); list_max([4; 4]); list_max([16; 1]); 15*I((pn2 + 4) < ln4, ln4 = (pn0 + pn2) && -4;pn2 = (pn0 + 1) + 4, ln4 = ln4;pn2 = pn2 + 4) + 1; list_max([5; 5]); list_max([16; 1]); 15*I((pn2 + 1) != ln3, ln3 = pn0 + pn2;pn2 = (pn0 + 4) + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; 1; 2]); list_sum([list_max([26; 29; 26; 17; 12 + |f2|]); 3; 20*I((pn2 + 1) < ln3, ln3 = pn0 + pn2;pn2 = pn0 + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; list_max([15; 15; 8]); list_max([4; 4]); list_max([16; 1]); 15*I((pn2 + 4) < ln4, ln4 = (pn0 + pn2) && -4;pn2 = (pn0 + 1) + 4, ln4 = ln4;pn2 = pn2 + 4) + 1; list_max([5; 5]); 2]); list_sum([list_max([26; 29; 26; 17; 12 + |f2|]); 3; 20*I((pn2 + 1) < ln3, ln3 = pn0 + pn2;pn2 = pn0 + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; list_max([15; 15; 8]); list_max([4; 4]); list_max([5; 5]); list_max([16; 1]); 15*I((pn2 + 1) != ln3, ln3 = pn0 + pn2;pn2 = (pn0 + 4) + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; 1; 2]); list_sum([list_max([26; 29; 26; 17; 12 + |f2|]); 3; 20*I((pn2 + 1) < ln3, ln3 = pn0 + pn2;pn2 = pn0 + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; list_max([15; 15; 8]); list_max([4; 4]); list_max([5; 5]); 2]); list_sum([list_max([26; 29; 26; 17; 12 + |f2|]); list_max([15; 15; 8]); list_max([76; 1]); 75*I((pn2 + 64) <= ln5, ln5 = ((pn0 + pn2) && -4) + -64;pn2 = (pn0 + 1) + 64, ln5 = ln5;pn2 = pn2 + 64) + 1; 1; list_max([4; 4]); list_max([16; 1]); 15*I((pn2 + 4) < ln4, ln4 = (pn0 + pn2) && -4;pn2 = (pn0 + 1) + 4, ln4 = ln4;pn2 = pn2 + 4) + 1; 1; list_max([13; 16; 8]); list_max([30; 3]); 27*I((pn2 + 4) <= ln4, ln4 = (pn0 + pn2) + -4;pn2 = pn0 + 4, ln4 = ln4;pn2 = pn2 + 4) + 1; 1; list_max([5; 5]); list_max([16; 1]); 15*I((pn2 + 1) != ln3, ln3 = pn0 + pn2;pn2 = (pn0 + 4) + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; 1; 2]); list_sum([list_max([26; 29; 26; 17; 12 + |f2|]); list_max([15; 15; 8]); list_max([76; 1]); 75*I((pn2 + 64) <= ln5, ln5 = ((pn0 + pn2) && -4) + -64;pn2 = (pn0 + 1) + 64, ln5 = ln5;pn2 = pn2 + 64) + 1; 1; list_max([4; 4]); list_max([16; 1]); 15*I((pn2 + 4) < ln4, ln4 = (pn0 + pn2) && -4;pn2 = (pn0 + 1) + 4, ln4 = ln4;pn2 = pn2 + 4) + 1; 1; list_max([13; 16; 8]); list_max([30; 3]); 27*I((pn2 + 4) <= ln4, ln4 = (pn0 + pn2) + -4;pn2 = pn0 + 4, ln4 = ln4;pn2 = pn2 + 4) + 1; 1; list_max([5; 5]); 2]); list_sum([list_max([26; 29; 26; 17; 12 + |f2|]); list_max([15; 15; 8]); list_max([76; 1]); 75*I((pn2 + 64) <= ln5, ln5 = ((pn0 + pn2) && -4) + -64;pn2 = (pn0 + 1) + 64, ln5 = ln5;pn2 = pn2 + 64) + 1; 1; list_max([4; 4]); list_max([16; 1]); 15*I((pn2 + 4) < ln4, ln4 = (pn0 + pn2) && -4;pn2 = (pn0 + 1) + 4, ln4 = ln4;pn2 = pn2 + 4) + 1; 1; list_max([13; 16; 8]); list_max([5; 5]); list_max([16; 1]); 15*I((pn2 + 1) != ln3, ln3 = pn0 + pn2;pn2 = (pn0 + 4) + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; 1; 2]); list_sum([list_max([26; 29; 26; 17; 12 + |f2|]); list_max([15; 15; 8]); list_max([76; 1]); 75*I((pn2 + 64) <= ln5, ln5 = ((pn0 + pn2) && -4) + -64;pn2 = (pn0 + 1) + 64, ln5 = ln5;pn2 = pn2 + 64) + 1; 1; list_max([4; 4]); list_max([16; 1]); 15*I((pn2 + 4) < ln4, ln4 = (pn0 + pn2) && -4;pn2 = (pn0 + 1) + 4, ln4 = ln4;pn2 = pn2 + 4) + 1; 1; list_max([13; 16; 8]); list_max([5; 5]); 2]); list_sum([list_max([26; 29; 26; 17; 12 + |f2|]); list_max([15; 15; 8]); list_max([76; 1]); 75*I((pn2 + 64) <= ln5, ln5 = ((pn0 + pn2) && -4) + -64;pn2 = (pn0 + 1) + 64, ln5 = ln5;pn2 = pn2 + 64) + 1; 1; list_max([4; 4]); list_max([16; 1]); 15*I((pn2 + 4) < ln4, ln4 = (pn0 + pn2) && -4;pn2 = (pn0 + 1) + 4, ln4 = ln4;pn2 = pn2 + 4) + 1; 1; ]); list_sum([list_max([26; 29; 26; 17; 12 + |f2|]); list_max([15; 15; 8]); list_max([76; 1]); 75*I((pn2 + 64) <= ln5, ln5 = ((pn0 + pn2) && -4) + -64;pn2 = (pn0 + 1) + 64, ln5 = ln5;pn2 = pn2 + 64) + 1; 1; list_max([4; 4]); list_max([16; 1]); 15*I((pn2 + 4) < ln4, ln4 = (pn0 + pn2) && -4;pn2 = (pn0 + 1) + 4, ln4 = ln4;pn2 = pn2 + 4) + 1; list_max([5; 5]); list_max([16; 1]); 15*I((pn2 + 1) != ln3, ln3 = pn0 + pn2;pn2 = (pn0 + 4) + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; 1; 2]); list_sum([list_max([26; 29; 26; 17; 12 + |f2|]); list_max([15; 15; 8]); list_max([76; 1]); 75*I((pn2 + 64) <= ln5, ln5 = ((pn0 + pn2) && -4) + -64;pn2 = (pn0 + 1) + 64, ln5 = ln5;pn2 = pn2 + 64) + 1; 1; list_max([4; 4]); list_max([16; 1]); 15*I((pn2 + 4) < ln4, ln4 = (pn0 + pn2) && -4;pn2 = (pn0 + 1) + 4, ln4 = ln4;pn2 = pn2 + 4) + 1; list_max([5; 5]); 2]); list_sum([list_max([26; 29; 26; 17; 12 + |f2|]); list_max([15; 15; 8]); list_max([76; 1]); 75*I((pn2 + 64) <= ln5, ln5 = ((pn0 + pn2) && -4) + -64;pn2 = (pn0 + 1) + 64, ln5 = ln5;pn2 = pn2 + 64) + 1; 1; list_max([4; 4]); list_max([5; 5]); list_max([16; 1]); 15*I((pn2 + 1) != ln3, ln3 = pn0 + pn2;pn2 = (pn0 + 4) + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; 1; 2]); list_sum([list_max([26; 29; 26; 17; 12 + |f2|]); list_max([15; 15; 8]); list_max([76; 1]); 75*I((pn2 + 64) <= ln5, ln5 = ((pn0 + pn2) && -4) + -64;pn2 = (pn0 + 1) + 64, ln5 = ln5;pn2 = pn2 + 64) + 1; 1; list_max([4; 4]); list_max([5; 5]); 2]); list_sum([list_max([26; 29; 26; 17; 12 + |f2|]); list_max([15; 15; 8]); list_max([4; 4]); list_max([16; 1]); 15*I((pn2 + 4) < ln4, ln4 = (pn0 + pn2) && -4;pn2 = (pn0 + 1) + 4, ln4 = ln4;pn2 = pn2 + 4) + 1; 1; list_max([13; 16; 8]); list_max([30; 3]); 27*I((pn2 + 4) <= ln4, ln4 = (pn0 + pn2) + -4;pn2 = pn0 + 4, ln4 = ln4;pn2 = pn2 + 4) + 1; 1; list_max([5; 5]); list_max([16; 1]); 15*I((pn2 + 1) != ln3, ln3 = pn0 + pn2;pn2 = (pn0 + 4) + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; 1; 2]); list_sum([list_max([26; 29; 26; 17; 12 + |f2|]); list_max([15; 15; 8]); list_max([4; 4]); list_max([16; 1]); 15*I((pn2 + 4) < ln4, ln4 = (pn0 + pn2) && -4;pn2 = (pn0 + 1) + 4, ln4 = ln4;pn2 = pn2 + 4) + 1; 1; list_max([13; 16; 8]); list_max([30; 3]); 27*I((pn2 + 4) <= ln4, ln4 = (pn0 + pn2) + -4;pn2 = pn0 + 4, ln4 = ln4;pn2 = pn2 + 4) + 1; 1; list_max([5; 5]); 2]); list_sum([list_max([26; 29; 26; 17; 12 + |f2|]); list_max([15; 15; 8]); list_max([4; 4]); list_max([16; 1]); 15*I((pn2 + 4) < ln4, ln4 = (pn0 + pn2) && -4;pn2 = (pn0 + 1) + 4, ln4 = ln4;pn2 = pn2 + 4) + 1; 1; list_max([13; 16; 8]); list_max([5; 5]); list_max([16; 1]); 15*I((pn2 + 1) != ln3, ln3 = pn0 + pn2;pn2 = (pn0 + 4) + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; 1; 2]); list_sum([list_max([26; 29; 26; 17; 12 + |f2|]); list_max([15; 15; 8]); list_max([4; 4]); list_max([16; 1]); 15*I((pn2 + 4) < ln4, ln4 = (pn0 + pn2) && -4;pn2 = (pn0 + 1) + 4, ln4 = ln4;pn2 = pn2 + 4) + 1; 1; list_max([13; 16; 8]); list_max([5; 5]); 2]); list_sum([list_max([26; 29; 26; 17; 12 + |f2|]); list_max([15; 15; 8]); list_max([4; 4]); list_max([16; 1]); 15*I((pn2 + 4) < ln4, ln4 = (pn0 + pn2) && -4;pn2 = (pn0 + 1) + 4, ln4 = ln4;pn2 = pn2 + 4) + 1; 1; ]); list_sum([list_max([26; 29; 26; 17; 12 + |f2|]); list_max([15; 15; 8]); list_max([4; 4]); list_max([16; 1]); 15*I((pn2 + 4) < ln4, ln4 = (pn0 + pn2) && -4;pn2 = (pn0 + 1) + 4, ln4 = ln4;pn2 = pn2 + 4) + 1; list_max([5; 5]); list_max([16; 1]); 15*I((pn2 + 1) != ln3, ln3 = pn0 + pn2;pn2 = (pn0 + 4) + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; 1; 2]); list_sum([list_max([26; 29; 26; 17; 12 + |f2|]); list_max([15; 15; 8]); list_max([4; 4]); list_max([16; 1]); 15*I((pn2 + 4) < ln4, ln4 = (pn0 + pn2) && -4;pn2 = (pn0 + 1) + 4, ln4 = ln4;pn2 = pn2 + 4) + 1; list_max([5; 5]); 2]); list_sum([list_max([26; 29; 26; 17; 12 + |f2|]); list_max([15; 15; 8]); list_max([4; 4]); list_max([5; 5]); list_max([16; 1]); 15*I((pn2 + 1) != ln3, ln3 = pn0 + pn2;pn2 = (pn0 + 4) + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; 1; 2]); list_sum([list_max([26; 29; 26; 17; 12 + |f2|]); list_max([15; 15; 8]); list_max([4; 4]); list_max([5; 5]); 2]); list_sum([list_max([26; 29; 26; 17; 12 + |f2|]); list_max([13; 16; 8]); list_max([30; 3]); 27*I((pn2 + 4) <= ln4, ln4 = (pn0 + pn2) + -4;pn2 = pn0 + 4, ln4 = ln4;pn2 = pn2 + 4) + 1; 1; list_max([5; 5]); list_max([16; 1]); 15*I((pn2 + 1) != ln3, ln3 = pn0 + pn2;pn2 = (pn0 + 4) + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; 1; 2]); list_sum([list_max([26; 29; 26; 17; 12 + |f2|]); list_max([13; 16; 8]); list_max([30; 3]); 27*I((pn2 + 4) <= ln4, ln4 = (pn0 + pn2) + -4;pn2 = pn0 + 4, ln4 = ln4;pn2 = pn2 + 4) + 1; 1; list_max([5; 5]); 2]); list_sum([list_max([26; 29; 26; 17; 12 + |f2|]); list_max([13; 16; 8]); list_max([5; 5]); list_max([16; 1]); 15*I((pn2 + 1) != ln3, ln3 = pn0 + pn2;pn2 = (pn0 + 4) + 1, ln3 = ln3;pn2 = pn2 + 1) + 1; 1; 2]); list_sum([list_max([26; 29; 26; 17; 12 + |f2|]); list_max([13; 16; 8]); list_max([5; 5]); 2]); list_sum([list_max([26; 29; 26; 17; 12 + |f2|]); ])])
