bubble_sort
module bubble_sort.wasm 

function 5 
function 6 Loop: [6 7 9]
OK
((ln5 + 1) != ln4)
ln4;ln5
ln4 = (pn0 + -1);ln5 = 0
ln4 = ln4;ln5 = (ln5 + 1)
Loop: [6 7 8 9]
OK
((ln5 + 1) != ln4)
ln4;ln5
ln4 = (pn0 + -1);ln5 = 0
ln4 = ln4;ln5 = (ln5 + 1)
Loop: [3 4 12]
OK
((ln2 + 1) != ln3)
ln2;ln3
ln2 = 0;ln3 = (pn0 + -1)
ln2 = (ln2 + 1);ln3 = ln3
Loop: [3 4 5 6 7 9 10 11 12]
OK
((ln2 + 1) != ln3)
ln2;ln3
ln2 = 0;ln3 = (pn0 + -1)
ln2 = (ln2 + 1);ln3 = ln3
Loop: [3 4 5 6 7 8 9 10 11 12]
OK
((ln2 + 1) != ln3)
ln2;ln3
ln2 = 0;ln3 = (pn0 + -1)
ln2 = (ln2 + 1);ln3 = ln3

function 7 Loop: [3]
OK
((ln3 + 1) != ln4)
ln3;ln4
ln3 = (0 + 1);ln4 = R(28, 27, i32, 10, ((gn0 - 16) + 12), 12)
ln3 = (ln3 + 1);ln4 = ln4
Loop: [12 13 15]
OK
((ln3 + 1) != ln7)
ln3;ln7
ln3 = 0;ln7 = (R(28, 27, i32, 10, ((gn0 - 16) + 12), 12) + -1)
ln3 = (ln3 + 1);ln7 = ln7
Loop: [12 13 14 15]
OK
((ln3 + 1) != ln7)
ln3;ln7
ln3 = 0;ln7 = (R(28, 27, i32, 10, ((gn0 - 16) + 12), 12) + -1)
ln3 = (ln3 + 1);ln7 = ln7
Loop: [9 10 18]
OK
((ln5 + 1) != ln6)
ln5;ln6
ln5 = 0;ln6 = (R(28, 27, i32, 10, ((gn0 - 16) + 12), 12) + -1)
ln5 = (ln5 + 1);ln6 = ln6
Loop: [9 10 11 12 13 15 16 17 18]
OK
((ln5 + 1) != ln6)
ln5;ln6
ln5 = 0;ln6 = (R(28, 27, i32, 10, ((gn0 - 16) + 12), 12) + -1)
ln5 = (ln5 + 1);ln6 = ln6
Loop: [9 10 11 12 13 14 15 16 17 18]
OK
((ln5 + 1) != ln6)
ln5;ln6
ln5 = 0;ln6 = (R(28, 27, i32, 10, ((gn0 - 16) + 12), 12) + -1)
ln5 = (ln5 + 1);ln6 = ln6

function 8 
function 9 
function 10 
function 11 Loop: [3]
OK
((ln0 + -4) > 0)
ln0
ln0 = (0 + -4)
ln0 = (ln0 + -4)

function 12 
function 13 
function 14 
function 15 
function 16 
function 17 
function 18 
function 19 
function 20 
function 21 
function 22 
function 23 Loop: [9 10 11 14]
Function
i32.eqz(R(52, 0, i32, R(4, 0, i32, (ln3 + 12), (ln7 - (m[12] > m[4])), (ln4 + ((m[12] > m[4]) shl 3)), m[60])))
ln3;ln4;ln7;m[12];m[4];m[60]
ln3 = (gn0 - 32);ln4 = ((gn0 - 32) + 16);ln7 = 2;m[12] = m[12];m[4] = m[4];m[60] = m[60]
ln3 = ln3;ln4 = (m[12] + ((ln4 > m[4]) shl 3));ln7 = (ln7 - (ln4 > m[4]));m[12] = m[12];m[4] = m[4];m[60] = m[60]

function 24 
function 25 
function 26 
function 27 Loop: [12 13]
OK
m[1]
m[1]
m[1] = m[1]
m[1] = m[1]
Loop: [34 35 39 40 41 44]
OK
not((m[8] != 0))
m[8]
m[8] = m[8]
m[8] = m[8]
Loop: [34 35 39 40 41 42 44]
Constraint complex
not(((lN12 * lN11) > (i64.extend_i32_u((-48 + m[0])) xor -1)))
lN11;lN12;m[0]
lN11 = i64.extend_i32_uselect(pn2, 10, pn2);lN12 = 0;m[0] = m[0]
lN11 = lN11;lN12 = lN12;m[0] = m[0]
Loop: [34 35 39 40 41 42 43 44]
Constraint complex
not(((lN12 * lN11) > (i64.extend_i32_u((-48 + m[0])) xor -1)))
lN11;lN12;m[0]
lN11 = i64.extend_i32_uselect(pn2, 10, pn2);lN12 = 0;m[0] = m[0]
lN11 = lN11;lN12 = ((lN12 * lN11) + i64.extend_i32_u(-48 + m[0]));m[0] = m[0]
Loop: [34 35 36 39 40 41 44]
OK
not((m[8] != 0))
m[8]
m[8] = m[8]
m[8] = m[8]
Loop: [34 35 36 39 40 41 42 44]
Constraint complex
not(((lN12 * lN11) > (i64.extend_i32_u((-87 + m[0])) xor -1)))
lN11;lN12;m[0]
lN11 = i64.extend_i32_uselect(pn2, 10, pn2);lN12 = 0;m[0] = m[0]
lN11 = lN11;lN12 = lN12;m[0] = m[0]
Loop: [34 35 36 39 40 41 42 43 44]
Constraint complex
not(((lN12 * lN11) > (i64.extend_i32_u((-87 + m[0])) xor -1)))
lN11;lN12;m[0]
lN11 = i64.extend_i32_uselect(pn2, 10, pn2);lN12 = 0;m[0] = m[0]
lN11 = lN11;lN12 = ((lN12 * lN11) + i64.extend_i32_u(-87 + m[0]));m[0] = m[0]
Loop: [34 35 36 37 38 39 40 41 44]
OK
not((m[8] != 0))
m[8]
m[8] = m[8]
m[8] = m[8]
Loop: [34 35 36 37 38 39 40 41 42 44]
Constraint complex
not(((lN12 * lN11) > (i64.extend_i32_u((-55 + m[0])) xor -1)))
lN11;lN12;m[0]
lN11 = i64.extend_i32_uselect(pn2, 10, pn2);lN12 = 0;m[0] = m[0]
lN11 = lN11;lN12 = lN12;m[0] = m[0]
Loop: [34 35 36 37 38 39 40 41 42 43 44]
Constraint complex
not(((lN12 * lN11) > (i64.extend_i32_u((-55 + m[0])) xor -1)))
lN11;lN12;m[0]
lN11 = i64.extend_i32_uselect(pn2, 10, pn2);lN12 = 0;m[0] = m[0]
lN11 = lN11;lN12 = ((lN12 * lN11) + i64.extend_i32_u(-55 + m[0]));m[0] = m[0]

function 28 
function 29 Loop: [9]
OK
((pn2 + -32) > 31)
pn2
pn2 = ((((pn2 - ((0 - pn0) & 3)) & -4) - (((pn0 + ((0 - pn0) & 3)) & 4) | 24)) + -32)
pn2 = (pn2 + -32)

function 30 
function 31 
function 32 
function 33 
function 34 Loop: [3]
OK
m[56]
m[56]
m[56] = m[56]
m[56] = m[56]

function 35 
function 36 
function 37 
function 38 Loop: [6 7 8]
OK
(pn2 + -1)
pn2
pn2 = pn2
pn2 = (pn2 + -1)
Loop: [18 19]
OK
((pn2 + -4) > 3)
pn2
pn2 = pn2
pn2 = (pn2 + -4)
Loop: [25 26 29]
OK
(pn2 + -1)
pn2
pn2 = pn2
pn2 = (pn2 + -1)

function 39 
function 40 Loop: [8 9]
OK
((pn2 + 1) < ln3)
ln3;pn2
ln3 = (pn0 + pn2);pn2 = pn0
ln3 = ln3;pn2 = (pn2 + 1)
Loop: [18]
OK
((pn2 + 4) <= ln4)
ln4;pn2
ln4 = ((pn0 + pn2) + -4);pn2 = (pn0 + 4)
ln4 = ln4;pn2 = (pn2 + 4)
Loop: [30]
OK
((pn2 + 64) <= ln5)
ln5;pn2
ln5 = (((pn0 + pn2) & -4) + -64);pn2 = (pn0 + 64)
ln5 = ln5;pn2 = (pn2 + 64)
Loop: [35]
OK
((pn2 + 4) < ln4)
ln4;pn2
ln4 = ((pn0 + pn2) & -4);pn2 = (pn0 + 4)
ln4 = ln4;pn2 = (pn2 + 4)
Loop: [41]
OK
((pn2 + 1) != ln3)
ln3;pn2
ln3 = (pn0 + pn2);pn2 = (pn0 + 1)
ln3 = ln3;pn2 = (pn2 + 1)

function 41 Loop: [15 16 19]
OK
(m[0] != 10)
m[0]
m[0] = m[0]
m[0] = m[0]

function 42 
function 43 Loop: [21 22 25]
OK
(m[2] == 37)
m[2]
m[2] = m[2]
m[2] = m[2]
Loop: [44 45]
Constraint complex
((1 shl (m[1] + -32)) & 75913)
m[1]
m[1] = m[1]
m[1] = m[1]
Loop: [92 93]
OK
((m[0] + -1) < 8)
m[0]
m[0] = m[0]
m[0] = m[0]
Loop: [205 206 207 208 209]
Function
(ln20 > (R(58, 0, i32, m[0], (ln7 + 4)) + ln12))
ln12;ln20;ln7;m[0]
ln12 = 0;ln20 = 0;ln7 = 0;m[0] = m[0]
ln12 = (R(58, 8, i32, m[0], (ln7 + 4)) + ln12);ln20 = ln20;ln7 = ln7;m[0] = m[0]
Loop: [221 222 223]
Function
((R(58, 0, i32, m[0], (ln7 + 4)) + ln15) < ln12)
ln12;ln15;ln7;m[0]
ln12 = 0;ln15 = 0;ln7 = 0;m[0] = m[0]
ln12 = ln12;ln15 = (R(58, 8, i32, m[0], (ln7 + 4)) + ln15);ln7 = ln7;m[0] = m[0]
Loop: [13 14 15 16 19 239]
Constraint complex
not(((ln14 & 255) != 37))
ln14
ln14 = m[0]
ln14 = m[1]
Loop: [247 248]
OK
((ln12 + 1) != 10)
ln12
ln12 = 0
ln12 = (ln12 + 1)
Loop: [255 256 257]
OK
not(((ln12 + 1) == 10))
ln12
ln12 = 0
ln12 = (ln12 + 1)
Loop: [5 6 7 8 9 10 11 12 13 14 15 16 19 20 21 22 25 26 27 28 29 30 31 32]
OK
((pn1 + 1) - pn1)
pn1
pn1 = pn1
pn1 = (pn1 + 2)
Loop: [5 6 7 8 9 10 11 12 13 14 15 16 19 20 21 22 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 42 43 44 45 46 47 48 49 50 51 52 53 54 55 63 64 68 69 70 73 74 75 76 77 78 79 87 90 91 92 93 94 95 96 97 98 99 100 101 102 109]
OK
((pn1 + 1) - pn1)
pn1
pn1 = pn1
pn1 = ((((((pn1 + 2) + 3) + 1) + 3) + 4) + 1)
Loop: [5 6 7 8 9 10 11 12 13 14 15 16 19 20 21 22 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 42 43 44 45 46 47 48 49 50 51 52 53 54 55 63 64 68 69 70 73 74 75 76 77 78 79 87 90 91 92 93 94 95 96 97 98 99 100 101 102 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 137 138 139 140 141 142 143 144]
OK
((pn1 + 1) - pn1)
pn1
pn1 = pn1
pn1 = ((((((pn1 + 2) + 3) + 1) + 3) + 4) + 1)
Loop: [5 6 7 8 9 10 11 12 13 14 15 16 19 20 21 22 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 42 43 44 45 46 47 48 49 50 51 52 53 54 55 63 64 68 69 70 73 74 75 76 77 78 79 87 90 91 92 93 94 95 96 97 98 99 100 101 102 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 137 138 139 140 141 142 143 144 146]
OK
((pn1 + 1) - pn1)
pn1
pn1 = pn1
pn1 = ((((((pn1 + 2) + 3) + 1) + 3) + 4) + 1)
Loop: [5 6 7 8 9 10 11 12 13 14 15 16 19 20 21 22 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 42 43 44 45 46 47 48 49 50 51 52 53 54 55 63 64 68 69 70 73 74 75 76 77 78 79 87 90 91 92 93 94 95 96 97 98 99 100 101 102 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 137 138 139 140 141 142 143 144 148]
OK
((pn1 + 1) - pn1)
pn1
pn1 = pn1
pn1 = ((((((pn1 + 2) + 3) + 1) + 3) + 4) + 1)
Loop: [5 6 7 8 9 10 11 12 13 14 15 16 19 20 21 22 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 42 43 44 45 46 47 48 49 50 51 52 53 54 55 63 64 68 69 70 73 74 75 76 77 78 79 87 90 91 92 93 94 95 96 97 98 99 100 101 102 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 137 138 139 140 141 142 143 144 150]
OK
((pn1 + 1) - pn1)
pn1
pn1 = pn1
pn1 = ((((((pn1 + 2) + 3) + 1) + 3) + 4) + 1)
Loop: [5 6 7 8 9 10 11 12 13 14 15 16 19 20 21 22 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 42 43 44 45 46 47 48 49 50 51 52 53 54 55 63 64 68 69 70 73 74 75 76 77 78 79 87 90 91 92 93 94 95 96 97 98 99 100 101 102 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 137 138 139 140 141 142 143 144 152]
OK
((pn1 + 1) - pn1)
pn1
pn1 = pn1
pn1 = ((((((pn1 + 2) + 3) + 1) + 3) + 4) + 1)
Loop: [5 6 7 8 9 10 11 12 13 14 15 16 19 20 21 22 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 42 43 44 45 46 47 48 49 50 51 52 53 54 55 63 64 68 69 70 73 74 75 76 77 78 79 87 90 91 92 93 94 95 96 97 98 99 100 101 102 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 137 138 139 140 141 142 143 144 154]
OK
((pn1 + 1) - pn1)
pn1
pn1 = pn1
pn1 = ((((((pn1 + 2) + 3) + 1) + 3) + 4) + 1)
Loop: [5 6 7 8 9 10 11 12 13 14 15 16 19 20 21 22 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 42 43 44 45 46 47 48 49 50 51 52 53 54 55 63 64 68 69 70 73 74 75 76 77 78 79 87 90 91 92 93 94 95 96 97 98 99 100 101 102 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 137 138 139 140 141 142 143 144 156]
OK
((pn1 + 1) - pn1)
pn1
pn1 = pn1
pn1 = ((((((pn1 + 2) + 3) + 1) + 3) + 4) + 1)
Loop: [5 6 7 8 9 10 11 12 13 14 15 16 19 20 21 22 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 42 43 44 45 46 47 48 49 50 51 52 53 54 55 63 64 68 69 70 73 74 75 76 77 78 79 87 90 91 92 93 94 95 96 97 98 99 100 101 102 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 137 138 139 140 141 142 143 144 158]
OK
((pn1 + 1) - pn1)
pn1
pn1 = pn1
pn1 = ((((((pn1 + 2) + 3) + 1) + 3) + 4) + 1)
Loop: [5 6 7 8 9 10 11 12 13 14 15 16 19 20 21 22 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 42 43 44 45 46 47 48 49 50 51 52 53 54 55 63 64 68 69 70 73 74 75 76 77 78 79 87 90 91 92 93 94 95 96 97 98 99 100 101 102 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 129 130 202 203 204 205 206 207 208 209 210 215 216 217 220 221 222 223 224 225 226]
OK
((pn1 + 1) - pn1)
pn1
pn1 = pn1
pn1 = ((((((pn1 + 2) + 3) + 1) + 3) + 4) + 1)
Loop: [5 6 7 8 9 10 11 12 13 14 15 16 19 20 21 22 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 42 43 44 45 46 47 48 49 50 51 52 53 54 55 63 64 68 69 70 73 74 75 76 77 78 79 87 90 91 92 93 94 95 96 97 98 99 100 101 102 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 129 130 228 229 230 231 232]
OK
((pn1 + 1) - pn1)
pn1
pn1 = pn1
pn1 = ((((((pn1 + 2) + 3) + 1) + 3) + 4) + 1)
Loop: [5 6 7 8 9 10 11 12 13 14 15 16 19 20 21 22 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 42 43 44 45 46 47 48 49 50 51 52 53 54 55 63 64 68 69 70 73 74 75 76 77 78 79 87 90 91 92 93 94 95 96 97 98 99 100 101 102 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 160 161 162 163 178 179 180 181 182 183 184 187 263 264 265 266]
OK
((pn1 + 1) - pn1)
pn1
pn1 = pn1
pn1 = ((((((pn1 + 2) + 3) + 1) + 3) + 4) + 1)

function 44 
function 45 Loop: [5 6 8]
Function
R(37, 0, i32, m[1])
m[1]
m[1] = m[1]
m[1] = m[1]
Loop: [5 6 7 8]
Function
R(37, 0, i32, m[1])
m[1]
m[1] = m[1]
m[1] = m[1]

function 46 
function 47 Loop: [3]
OK
(pN0 > 15)
pN0
pN0 = (pN0 shr_u 4)
pN0 = (pN0 shr_u 4)

function 48 Loop: [3]
OK
(pN0 > 7)
pN0
pN0 = (pN0 shr_u 3)
pN0 = (pN0 shr_u 3)

function 49 Loop: [6]
OK
(pN0 > 42949672959)
pN0
pN0 = (pN0 /u 10)
pN0 = (pN0 /u 10)
Loop: [12]
OK
(ln3 > 9)
ln3
ln3 = (i32.wrap_i64(pN0 /u 10) /u 10)
ln3 = (ln3 /u 10)

function 50 Loop: [6]
OK
((pn3 + -256) > 255)
pn3
pn3 = ((pn2 - pn3) + -256)
pn3 = (pn3 + -256)

function 51 
function 52 
function 53 
function 54 
function 55 
function 56 
function 57 
function 58 
function 59 Loop: [46 47 50]
OK
not(m[16])
m[16]
m[16] = m[16]
m[16] = m[16]
Loop: [46 47 48 49 50]
OK
not(i32.eqz(m[0]))
m[0]
m[0] = m[0]
m[0] = m[0]
Loop: [63 64]
OK
m[0]
m[0]
m[0] = m[0]
m[0] = m[0]
Loop: [63]
OK
m[0]
m[0]
m[0] = m[0]
m[0] = m[0]
Loop: [82 83 87]
OK
m[0]
m[0]
m[0] = m[0]
m[0] = m[0]
Loop: [82 83 84 87]
OK
m[0]
m[0]
m[0] = m[0]
m[0] = m[0]
Loop: [97 98 100]
OK
m[16]
m[16]
m[16] = m[16]
m[16] = m[16]
Loop: [97 98 99 100]
OK
m[0]
m[0]
m[0] = m[0]
m[0] = m[0]
Loop: [114 115]
OK
m[0]
m[0]
m[0] = m[0]
m[0] = m[0]
Loop: [114]
OK
m[0]
m[0]
m[0] = m[0]
m[0] = m[0]
Loop: [151 152 155]
OK
m[8]
m[8]
m[8] = m[8]
m[8] = m[8]
Loop: [151 152 153 154 155]
OK
m[8]
m[8]
m[8] = m[8]
m[8] = m[8]
Loop: [213 214]
OK
m[8]
m[8]
m[8] = m[8]
m[8] = m[8]
Loop: [226]
OK
((pn0 + 1) != 32)
pn0
pn0 = pn0
pn0 = (pn0 + 1)
Loop: [246 247]
OK
m[8]
m[8]
m[8] = m[8]
m[8] = m[8]
Loop: [255 256 259]
OK
not((m[0] > ln4))
ln4;m[0]
ln4 = 0;m[0] = m[0]
ln4 = ln4;m[0] = m[0]
Loop: [255 256 257 258 259]
OK
not(((m[0] + m[4]) > ln4))
ln4;m[0];m[4]
ln4 = 0;m[0] = m[0];m[4] = m[4]
ln4 = ln4;m[0] = m[0];m[4] = m[4]
Loop: [293 294]
OK
m[0]
m[0]
m[0] = m[0]
m[0] = m[0]
Loop: [293]
OK
m[0]
m[0]
m[0] = m[0]
m[0] = m[0]
Loop: [331 332]
OK
m[0]
m[0]
m[0] = m[0]
m[0] = m[0]
Loop: [338]
OK
((pn0 + 8) < ln5)
ln5;pn0
ln5 = 0;pn0 = pn0
ln5 = ln5;pn0 = (pn0 + 4)
Loop: [360 361]
OK
m[0]
m[0]
m[0] = m[0]
m[0] = m[0]
Loop: [415 416]
OK
m[0]
m[0]
m[0] = m[0]
m[0] = m[0]
ebb path explosion

function 60 
function 61 
function 62 
function 63 
function 64 
done
lines of code: 7210
# of functions: 60
# of loops: 50
# functions with loops: 17
# functions with too many paths: 1

