**** New file: test_cases/global.wasm


Section type: 1
Type section
reading section: 
vector length: 4section has 4 entries left
vector length: 0vector length: 1f32 updating, before:0
rt1 len:0 rt2 len:1
section has 3 entries left
vector length: 0vector length: 1i64 updating, before:1
rt1 len:0 rt2 len:1
section has 2 entries left
vector length: 1f32 vector length: 0updating, before:2
rt1 len:1 rt2 len:0
section has 1 entries left
vector length: 1i64 vector length: 0updating, before:3
rt1 len:1 rt2 len:0
section has 0 entries left


Section type: 2
Import section
reading section: 
vector length: 4section has 4 entries left
name length 0 name length 9const f32 global f32 const section has 3 entries left
name length 0 name length 9const i64 global i64 const section has 2 entries left
name length 0 name length 7var f32 global f32 var section has 1 entries left
name length 0 name length 7var i64 global i64 var section has 0 entries left


Section type: 3
Function section
reading section: 
vector length: 12section has 12 entries left
Index: 0 section has 11 entries left
Index: 1 section has 10 entries left
Index: 0 section has 9 entries left
Index: 1 section has 8 entries left
Index: 0 section has 7 entries left
Index: 1 section has 6 entries left
Index: 0 section has 5 entries left
Index: 1 section has 4 entries left
Index: 2 section has 3 entries left
Index: 3 section has 2 entries left
Index: 2 section has 1 entries left
Index: 3 section has 0 entries left


Section type: 6
Global section
reading section: 
vector length: 4section has 4 entries left
f32 const f32.const 0.000000 end section has 3 entries left
i64 const i64.const 6 end section has 2 entries left
f32 var f32.const 0.000000 end section has 1 entries left
i64 var i64.const 8 end section has 0 entries left


Section type: 7
Export section
reading section: 
vector length: 16section has 16 entries left
name length 9const f32 global Index: 4 section has 15 entries left
name length 9const i64 global Index: 5 section has 14 entries left
name length 7var f32 global Index: 6 section has 13 entries left
name length 7var i64 global Index: 7 section has 12 entries left
name length 20get const f32 import funcIndex: 0 section has 11 entries left
name length 20get const i64 import funcIndex: 1 section has 10 entries left
name length 18get var f32 import funcIndex: 2 section has 9 entries left
name length 18get var i64 import funcIndex: 3 section has 8 entries left
name length 20get const f32 export funcIndex: 4 section has 7 entries left
name length 20get const i64 export funcIndex: 5 section has 6 entries left
name length 18get var f32 export funcIndex: 6 section has 5 entries left
name length 18get var i64 export funcIndex: 7 section has 4 entries left
name length 18set var f32 import funcIndex: 8 section has 3 entries left
name length 18set var i64 import funcIndex: 9 section has 2 entries left
name length 18set var f32 export funcIndex: 10 section has 1 entries left
name length 18set var f64 export funcIndex: 11 section has 0 entries left


Section type: 10
Code section
reading section: 
vector length: 12section has 12 entries left
vector length: 0
global.get 
end section has 11 entries left
vector length: 0
global.get 
end section has 10 entries left
vector length: 0
global.get 
end section has 9 entries left
vector length: 0
global.get 
end section has 8 entries left
vector length: 0
global.get 
end section has 7 entries left
vector length: 0
global.get 
end section has 6 entries left
vector length: 0
global.get 
end section has 5 entries left
vector length: 0
global.get 
end section has 4 entries left
vector length: 0
local.get 
global.set 
end section has 3 entries left
vector length: 0
local.get 
global.set 
end section has 2 entries left
vector length: 0
local.get 
global.set 
end section has 1 entries left
vector length: 0
local.get 
global.set 
end section has 0 entries left


Section type: -1
1Module: test_cases/global.wasm
(module
  (type (;0;) (func (result f32)))
  (type (;1;) (func (result i64)))
  (type (;2;) (func (param f32)))
  (type (;3;) (func (param i64)))
  (func (;0;) (type 0) (result f32)
    global.get 0
    end
  )
  (func (;1;) (type 1) (result i64)
    global.get 1
    end
  )
  (func (;2;) (type 0) (result f32)
    global.get 2
    end
  )
  (func (;3;) (type 1) (result i64)
    global.get 3
    end
  )
  (func (;4;) (type 0) (result f32)
    global.get 4
    end
  )
  (func (;5;) (type 1) (result i64)
    global.get 5
    end
  )
  (func (;6;) (type 0) (result f32)
    global.get 6
    end
  )
  (func (;7;) (type 1) (result i64)
    global.get 7
    end
  )
  (func (;8;) (type 2) (param f32)
    local.get 0
    global.set 2
    end
  )
  (func (;9;) (type 3) (param i64)
    local.get 0
    global.set 3
    end
  )
  (func (;10;) (type 2) (param f32)
    local.get 0
    global.set 6
    end
  )
  (func (;11;) (type 3) (param i64)
    local.get 0
    global.set 7
    end
  )
)Success!
**** New file: test_cases/callback.wasm


Section type: 1
Type section
reading section: 
vector length: 3section has 3 entries left
vector length: 1i32 vector length: 1i32 updating, before:0
rt1 len:1 rt2 len:1
section has 2 entries left
vector length: 0vector length: 1i32 updating, before:1
rt1 len:0 rt2 len:1
section has 1 entries left
vector length: 2i32 i32 vector length: 1i32 updating, before:2
rt1 len:2 rt2 len:1
section has 0 entries left


Section type: 2
Import section
reading section: 
vector length: 2section has 2 entries left
name length 0 name length 5print func Index: 0 section has 1 entries left
name length 0 name length 7closure func Index: 1 section has 0 entries left


Section type: 3
Function section
reading section: 
vector length: 1section has 1 entries left
Index: 2 section has 0 entries left


Section type: 7
Export section
reading section: 
vector length: 1section has 1 entries left
name length 3run funcIndex: 2 section has 0 entries left


Section type: 10
Code section
reading section: 
vector length: 1section has 1 entries left
vector length: 0
local.get 
local.get 
i32.add 
call 
call 
i32.add 
end section has 0 entries left


Section type: -1
1Module: test_cases/callback.wasm
(module
  (type (;0;) (func (param i32)(result i32)))
  (type (;1;) (func (result i32)))
  (type (;2;) (func (param i32)(param i32)(result i32)))
  (func (;0;) (type 2) (param i32)(param i32)(result i32)
    local.get 0
    local.get 1
    i32.add
    call 0
    call 1
    i32.add
    end
  )
)Success!
**** New file: test_cases/example.wasm


Section type: 1
Type section
reading section: 
vector length: 1section has 1 entries left
vector length: 0vector length: 0updating, before:0
rt1 len:0 rt2 len:0
section has 0 entries left


Section type: 3
Function section
reading section: 
vector length: 1section has 1 entries left
Index: 0 section has 0 entries left


Section type: 8
Start section
Index: 0 

Section type: 10
Code section
reading section: 
vector length: 1section has 1 entries left
vector length: 0
unreachable 
end section has 0 entries left


Section type: -1
1Module: test_cases/example.wasm
(module
  (type (;0;) (func ))
  (func (;0;) (type 0) 
    unreachable
    end
  )
)Success!
**** New file: test_cases/finalize.wasm


Section type: 1
Type section
reading section: 
vector length: 1section has 1 entries left
vector length: 0vector length: 0updating, before:0
rt1 len:0 rt2 len:0
section has 0 entries left


Section type: 3
Function section
reading section: 
vector length: 3section has 3 entries left
Index: 0 section has 2 entries left
Index: 0 section has 1 entries left
Index: 0 section has 0 entries left


Section type: 7
Export section
reading section: 
vector length: 3section has 3 entries left
name length 1f funcIndex: 0 section has 2 entries left
name length 1g funcIndex: 1 section has 1 entries left
name length 1h funcIndex: 2 section has 0 entries left


Section type: 10
Code section
reading section: 
vector length: 3section has 3 entries left
vector length: 0
end section has 2 entries left
vector length: 0
end section has 1 entries left
vector length: 0
end section has 0 entries left


Section type: -1
1Module: test_cases/finalize.wasm
(module
  (type (;0;) (func ))
  (func (;0;) (type 0) 
    end
  )
  (func (;1;) (type 0) 
    end
  )
  (func (;2;) (type 0) 
    end
  )
)Success!
**** New file: test_cases/hello.wasm


Section type: 1
Type section
reading section: 
vector length: 1section has 1 entries left
vector length: 0vector length: 0updating, before:0
rt1 len:0 rt2 len:0
section has 0 entries left


Section type: 2
Import section
reading section: 
vector length: 1section has 1 entries left
name length 0 name length 5hello func Index: 0 section has 0 entries left


Section type: 3
Function section
reading section: 
vector length: 1section has 1 entries left
Index: 0 section has 0 entries left


Section type: 7
Export section
reading section: 
vector length: 1section has 1 entries left
name length 3run funcIndex: 1 section has 0 entries left


Section type: 10
Code section
reading section: 
vector length: 1section has 1 entries left
vector length: 0
call 
end section has 0 entries left


Section type: -1
1Module: test_cases/hello.wasm
(module
  (type (;0;) (func ))
  (func (;0;) (type 0) 
    call 0
    end
  )
)Success!
**** New file: test_cases/hostref.wasm


Section type: 1
Type section
reading section: 
vector length: 5section has 5 entries left
vector length: 1externref vector length: 1externref updating, before:0
rt1 len:1 rt2 len:1
section has 4 entries left
vector length: 1externref vector length: 0updating, before:1
rt1 len:1 rt2 len:0
section has 3 entries left
vector length: 0vector length: 1externref updating, before:2
rt1 len:0 rt2 len:1
section has 2 entries left
vector length: 2i32 externref vector length: 0updating, before:3
rt1 len:2 rt2 len:0
section has 1 entries left
vector length: 1i32 vector length: 1externref updating, before:4
rt1 len:1 rt2 len:1
section has 0 entries left


Section type: 2
Import section
reading section: 
vector length: 1section has 1 entries left
name length 0 name length 1f func Index: 0 section has 0 entries left


Section type: 3
Function section
reading section: 
vector length: 5section has 5 entries left
Index: 1 section has 4 entries left
Index: 2 section has 3 entries left
Index: 3 section has 2 entries left
Index: 4 section has 1 entries left
Index: 0 section has 0 entries left


Section type: 4
Table section
reading section: 
vector length: 1section has 1 entries left
externreflower: 10, no uppersection has 0 entries left


Section type: 6
Global section
reading section: 
vector length: 1section has 1 entries left
externref var ref.null end section has 0 entries left


Section type: 7
Export section
reading section: 
vector length: 7section has 7 entries left
name length 6global global Index: 0 section has 6 entries left
name length 5table tableIndex: 0 section has 5 entries left
name length 10global.set funcIndex: 1 section has 4 entries left
name length 10global.get funcIndex: 2 section has 3 entries left
name length 9table.set funcIndex: 3 section has 2 entries left
name length 9table.get funcIndex: 4 section has 1 entries left
name length 9func.call funcIndex: 5 section has 0 entries left


Section type: 10
Code section
reading section: 
vector length: 5section has 5 entries left
vector length: 0
local.get 
global.set 
end section has 4 entries left
vector length: 0
global.get 
end section has 3 entries left
vector length: 0
local.get 
local.get 
table.set 
end section has 2 entries left
vector length: 0
local.get 
table.get 
end section has 1 entries left
vector length: 0
local.get 
call 
end section has 0 entries left


Section type: -1
1Module: test_cases/hostref.wasm
(module
  (type (;0;) (func (param externref)(result externref)))
  (type (;1;) (func (param externref)))
  (type (;2;) (func (result externref)))
  (type (;3;) (func (param i32)(param externref)))
  (type (;4;) (func (param i32)(result externref)))
  (func (;0;) (type 1) (param externref)
    local.get 0
    global.set 0
    end
  )
  (func (;1;) (type 2) (result externref)
    global.get 0
    end
  )
  (func (;2;) (type 3) (param i32)(param externref)
    local.get 0
    local.get 1
    table.set 0
    end
  )
  (func (;3;) (type 4) (param i32)(result externref)
    local.get 0
    table.get 0
    end
  )
  (func (;4;) (type 0) (param externref)(result externref)
    local.get 0
    call 0
    end
  )
)Success!
**** New file: test_cases/memory.wasm


Section type: 1
Type section
reading section: 
vector length: 3section has 3 entries left
vector length: 0vector length: 1i32 updating, before:0
rt1 len:0 rt2 len:1
section has 2 entries left
vector length: 1i32 vector length: 1i32 updating, before:1
rt1 len:1 rt2 len:1
section has 1 entries left
vector length: 2i32 i32 vector length: 0updating, before:2
rt1 len:2 rt2 len:0
section has 0 entries left


Section type: 3
Function section
reading section: 
vector length: 3section has 3 entries left
Index: 0 section has 2 entries left
Index: 1 section has 1 entries left
Index: 2 section has 0 entries left


Section type: 5
Memory sectionreading section: 
vector length: 1section has 1 entries left
lower: 3, upper: 2section has 0 entries left


Section type: 7
Export section
reading section: 
vector length: 4section has 4 entries left
name length 6memory mem Index: 0 section has 3 entries left
name length 4size funcIndex: 0 section has 2 entries left
name length 4load funcIndex: 1 section has 1 entries left
name length 5store funcIndex: 2 section has 0 entries left


Section type: 10
Code section
reading section: 
vector length: 3section has 3 entries left
vector length: 0
memory.size 
unreachable 
end section has 2 entries left
vector length: 0
local.get 
i32.load8_s 
end section has 1 entries left
vector length: 0
local.get 
local.get 
i32.store8 
end section has 0 entries left


Section type: 11
Data section
reading section: 
vector length: 1section has 1 entries left
data section type 0
i32.const 4096 end vector length: 41 2 3 4 section has 0 entries left


Section type: -1
1Module: test_cases/memory.wasm
(module
  (type (;0;) (func (result i32)))
  (type (;1;) (func (param i32)(result i32)))
  (type (;2;) (func (param i32)(param i32)))
  (func (;0;) (type 0) (result i32)
    memory.size
    unreachable
    end
  )
  (func (;1;) (type 1) (param i32)(result i32)
    local.get 0
    i32.load8_s align: 0 offset: 0
    end
  )
  (func (;2;) (type 2) (param i32)(param i32)
    local.get 0
    local.get 1
    i32.store8 align: 0 offset: 0
    end
  )
)Success!
**** New file: test_cases/multi.wasm


Section type: 1
Type section
reading section: 
vector length: 1section has 1 entries left
vector length: 4i32 i64 i64 i32 vector length: 4i32 i64 i64 i32 updating, before:0
rt1 len:4 rt2 len:4
section has 0 entries left


Section type: 2
Import section
reading section: 
vector length: 1section has 1 entries left
name length 0 name length 1f func Index: 0 section has 0 entries left


Section type: 3
Function section
reading section: 
vector length: 1section has 1 entries left
Index: 0 section has 0 entries left


Section type: 7
Export section
reading section: 
vector length: 1section has 1 entries left
name length 1g funcIndex: 1 section has 0 entries left


Section type: 10
Code section
reading section: 
vector length: 1section has 1 entries left
vector length: 0
local.get 
local.get 
local.get 
local.get 
call 
end section has 0 entries left


Section type: -1
1Module: test_cases/multi.wasm
(module
  (type (;0;) (func (param i32)(param i64)(param i64)(param i32)(result i32)(result i64)(result i64)(result i32)))
  (func (;0;) (type 0) (param i32)(param i64)(param i64)(param i32)(result i32)(result i64)(result i64)(result i32)
    local.get 0
    local.get 2
    local.get 1
    local.get 3
    call 0
    end
  )
)Success!
**** New file: test_cases/reflect.wasm


Section type: 1
Type section
reading section: 
vector length: 1section has 1 entries left
vector length: 3i32 f64 f32 vector length: 1i32 updating, before:0
rt1 len:3 rt2 len:1
section has 0 entries left


Section type: 3
Function section
reading section: 
vector length: 1section has 1 entries left
Index: 0 section has 0 entries left


Section type: 4
Table section
reading section: 
vector length: 1section has 1 entries left
funcreflower: 50, upper: 0section has 0 entries left


Section type: 5
Memory sectionreading section: 
vector length: 1section has 1 entries left
lower: 1, no uppersection has 0 entries left


Section type: 6
Global section
reading section: 
vector length: 1section has 1 entries left
f64 const f64.const 0.000000 end section has 0 entries left


Section type: 7
Export section
reading section: 
vector length: 4section has 4 entries left
name length 4func funcIndex: 0 section has 3 entries left
name length 6global global Index: 0 section has 2 entries left
name length 5table tableIndex: 0 section has 1 entries left
name length 6memory mem Index: 0 section has 0 entries left


Section type: 10
Code section
reading section: 
vector length: 1section has 1 entries left
vector length: 0
unreachable 
end section has 0 entries left


Section type: -1
1Module: test_cases/reflect.wasm
(module
  (type (;0;) (func (param i32)(param f64)(param f32)(result i32)))
  (func (;0;) (type 0) (param i32)(param f64)(param f32)(result i32)
    unreachable
    end
  )
)Success!
**** New file: test_cases/serialize.wasm


Section type: 1
Type section
reading section: 
vector length: 1section has 1 entries left
vector length: 0vector length: 0updating, before:0
rt1 len:0 rt2 len:0
section has 0 entries left


Section type: 2
Import section
reading section: 
vector length: 1section has 1 entries left
name length 0 name length 5hello func Index: 0 section has 0 entries left


Section type: 3
Function section
reading section: 
vector length: 1section has 1 entries left
Index: 0 section has 0 entries left


Section type: 7
Export section
reading section: 
vector length: 1section has 1 entries left
name length 3run funcIndex: 1 section has 0 entries left


Section type: 10
Code section
reading section: 
vector length: 1section has 1 entries left
vector length: 0
call 
end section has 0 entries left


Section type: -1
1Module: test_cases/serialize.wasm
(module
  (type (;0;) (func ))
  (func (;0;) (type 0) 
    call 0
    end
  )
)Success!
**** New file: test_cases/start.wasm


Section type: 1
Type section
reading section: 
vector length: 1section has 1 entries left
vector length: 0vector length: 0updating, before:0
rt1 len:0 rt2 len:0
section has 0 entries left


Section type: 3
Function section
reading section: 
vector length: 1section has 1 entries left
Index: 0 section has 0 entries left


Section type: 8
Start section
Index: 0 

Section type: 10
Code section
reading section: 
vector length: 1section has 1 entries left
vector length: 0
unreachable 
end section has 0 entries left


Section type: -1
1Module: test_cases/start.wasm
(module
  (type (;0;) (func ))
  (func (;0;) (type 0) 
    unreachable
    end
  )
)Success!
**** New file: test_cases/table.wasm


Section type: 1
Type section
reading section: 
vector length: 2section has 2 entries left
vector length: 2i32 i32 vector length: 1i32 updating, before:0
rt1 len:2 rt2 len:1
section has 1 entries left
vector length: 1i32 vector length: 1i32 updating, before:1
rt1 len:1 rt2 len:1
section has 0 entries left


Section type: 3
Function section
reading section: 
vector length: 3section has 3 entries left
Index: 0 section has 2 entries left
Index: 1 section has 1 entries left
Index: 1 section has 0 entries left


Section type: 4
Table section
reading section: 
vector length: 1section has 1 entries left
funcreflower: 10, upper: 2section has 0 entries left


Section type: 7
Export section
reading section: 
vector length: 4section has 4 entries left
name length 5table tableIndex: 0 section has 3 entries left
name length 13call_indirect funcIndex: 0 section has 2 entries left
name length 1f funcIndex: 1 section has 1 entries left
name length 1g funcIndex: 2 section has 0 entries left


Section type: 9
Element section
reading section: 
vector length: 1section has 1 entries left
i32.const 1 end Index: 1 section has 0 entries left


Section type: 10
Code section
reading section: 
vector length: 3section has 3 entries left
vector length: 0
local.get 
local.get 
call_indirect 
end section has 2 entries left
vector length: 0
local.get 
end section has 1 entries left
vector length: 0
i32.const 
end section has 0 entries left


Section type: -1
1Module: test_cases/table.wasm
(module
  (type (;0;) (func (param i32)(param i32)(result i32)))
  (type (;1;) (func (param i32)(result i32)))
  (func (;0;) (type 0) (param i32)(param i32)(result i32)
    local.get 0
    local.get 1
    call_indirect 0 1
    end
  )
  (func (;1;) (type 1) (param i32)(result i32)
    local.get 0
    end
  )
  (func (;2;) (type 1) (param i32)(result i32)
    i32.const 666
    end
  )
)Success!
**** New file: test_cases/threads.wasm


Section type: 1
Type section
reading section: 
vector length: 2section has 2 entries left
vector length: 1i32 vector length: 0updating, before:0
rt1 len:1 rt2 len:0
section has 1 entries left
vector length: 0vector length: 0updating, before:1
rt1 len:0 rt2 len:0
section has 0 entries left


Section type: 2
Import section
reading section: 
vector length: 2section has 2 entries left
name length 0 name length 5hello func Index: 0 section has 1 entries left
name length 0 name length 2id global i32 const section has 0 entries left


Section type: 3
Function section
reading section: 
vector length: 1section has 1 entries left
Index: 1 section has 0 entries left


Section type: 7
Export section
reading section: 
vector length: 1section has 1 entries left
name length 3run funcIndex: 1 section has 0 entries left


Section type: 10
Code section
reading section: 
vector length: 1section has 1 entries left
vector length: 0
global.get 
call 
end section has 0 entries left


Section type: -1
1Module: test_cases/threads.wasm
(module
  (type (;0;) (func (param i32)))
  (type (;1;) (func ))
  (func (;0;) (type 1) 
    global.get 0
    call 0
    end
  )
)Success!
**** New file: test_cases/trap.wasm


Section type: 1
Type section
reading section: 
vector length: 1section has 1 entries left
vector length: 0vector length: 1i32 updating, before:0
rt1 len:0 rt2 len:1
section has 0 entries left


Section type: 2
Import section
reading section: 
vector length: 1section has 1 entries left
name length 0 name length 8callback func Index: 0 section has 0 entries left


Section type: 3
Function section
reading section: 
vector length: 2section has 2 entries left
Index: 0 section has 1 entries left
Index: 0 section has 0 entries left


Section type: 7
Export section
reading section: 
vector length: 2section has 2 entries left
name length 8callback funcIndex: 1 section has 1 entries left
name length 11unreachable funcIndex: 2 section has 0 entries left


Section type: 10
Code section
reading section: 
vector length: 2section has 2 entries left
vector length: 0
call 
end section has 1 entries left
vector length: 0
unreachable 
i32.const 
end section has 0 entries left


Section type: -1
1Module: test_cases/trap.wasm
(module
  (type (;0;) (func (result i32)))
  (func (;0;) (type 0) (result i32)
    call 0
    end
  )
  (func (;1;) (type 0) (result i32)
    unreachable
    i32.const 1
    end
  )
)Success!
